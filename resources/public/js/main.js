if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}

/**
 * React v0.12.2
 */
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.React=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule React
 */

"use strict";

var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var EventPluginUtils = _dereq_("./EventPluginUtils");
var ReactChildren = _dereq_("./ReactChildren");
var ReactComponent = _dereq_("./ReactComponent");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactDOM = _dereq_("./ReactDOM");
var ReactDOMComponent = _dereq_("./ReactDOMComponent");
var ReactDefaultInjection = _dereq_("./ReactDefaultInjection");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactMount = _dereq_("./ReactMount");
var ReactMultiChild = _dereq_("./ReactMultiChild");
var ReactPerf = _dereq_("./ReactPerf");
var ReactPropTypes = _dereq_("./ReactPropTypes");
var ReactServerRendering = _dereq_("./ReactServerRendering");
var ReactTextComponent = _dereq_("./ReactTextComponent");

var assign = _dereq_("./Object.assign");
var deprecated = _dereq_("./deprecated");
var onlyChild = _dereq_("./onlyChild");

ReactDefaultInjection.inject();

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;

if ("production" !== "development") {
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
}

// TODO: Drop legacy elements once classes no longer export these factories
createElement = ReactLegacyElement.wrapCreateElement(
  createElement
);
createFactory = ReactLegacyElement.wrapCreateFactory(
  createFactory
);

var render = ReactPerf.measure('React', 'render', ReactMount.render);

var React = {
  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    only: onlyChild
  },
  DOM: ReactDOM,
  PropTypes: ReactPropTypes,
  initializeTouchEvents: function(shouldUseTouch) {
    EventPluginUtils.useTouchEvents = shouldUseTouch;
  },
  createClass: ReactCompositeComponent.createClass,
  createElement: createElement,
  createFactory: createFactory,
  constructAndRenderComponent: ReactMount.constructAndRenderComponent,
  constructAndRenderComponentByID: ReactMount.constructAndRenderComponentByID,
  render: render,
  renderToString: ReactServerRendering.renderToString,
  renderToStaticMarkup: ReactServerRendering.renderToStaticMarkup,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  isValidClass: ReactLegacyElement.isValidClass,
  isValidElement: ReactElement.isValidElement,
  withContext: ReactContext.withContext,

  // Hook for JSX spread, don't use this for anything else.
  __spread: assign,

  // Deprecations (remove for 0.13)
  renderComponent: deprecated(
    'React',
    'renderComponent',
    'render',
    this,
    render
  ),
  renderComponentToString: deprecated(
    'React',
    'renderComponentToString',
    'renderToString',
    this,
    ReactServerRendering.renderToString
  ),
  renderComponentToStaticMarkup: deprecated(
    'React',
    'renderComponentToStaticMarkup',
    'renderToStaticMarkup',
    this,
    ReactServerRendering.renderToStaticMarkup
  ),
  isValidComponent: deprecated(
    'React',
    'isValidComponent',
    'isValidElement',
    this,
    ReactElement.isValidElement
  )
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&
  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    Component: ReactComponent,
    CurrentOwner: ReactCurrentOwner,
    DOMComponent: ReactDOMComponent,
    DOMPropertyOperations: DOMPropertyOperations,
    InstanceHandles: ReactInstanceHandles,
    Mount: ReactMount,
    MultiChild: ReactMultiChild,
    TextComponent: ReactTextComponent
  });
}

if ("production" !== "development") {
  var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {

    // If we're in Chrome, look for the devtools marker and provide a download
    // link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        console.debug(
          'Download the React DevTools for a better development experience: ' +
          'http://fb.me/react-devtools'
        );
      }
    }

    var expectedFeatures = [
      // shims
      Array.isArray,
      Array.prototype.every,
      Array.prototype.forEach,
      Array.prototype.indexOf,
      Array.prototype.map,
      Date.now,
      Function.prototype.bind,
      Object.keys,
      String.prototype.split,
      String.prototype.trim,

      // shams
      Object.create,
      Object.freeze
    ];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        console.error(
          'One or more ES5 shim/shams expected by React are not available: ' +
          'http://fb.me/react-warning-polyfills'
        );
        break;
      }
    }
  }
}

// Version exists only in the open-source version of React, not in Facebook's
// internal version.
React.version = '0.12.2';

module.exports = React;

},{"./DOMPropertyOperations":12,"./EventPluginUtils":20,"./ExecutionEnvironment":22,"./Object.assign":27,"./ReactChildren":31,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactDOM":37,"./ReactDOMComponent":39,"./ReactDefaultInjection":49,"./ReactElement":52,"./ReactElementValidator":53,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./ReactPropTypes":72,"./ReactServerRendering":76,"./ReactTextComponent":78,"./deprecated":106,"./onlyChild":137}],2:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule AutoFocusMixin
 * @typechecks static-only
 */

"use strict";

var focusNode = _dereq_("./focusNode");

var AutoFocusMixin = {
  componentDidMount: function() {
    if (this.props.autoFocus) {
      focusNode(this.getDOMNode());
    }
  }
};

module.exports = AutoFocusMixin;

},{"./focusNode":111}],3:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule BeforeInputEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var SyntheticInputEvent = _dereq_("./SyntheticInputEvent");

var keyOf = _dereq_("./keyOf");

var canUseTextInputEvent = (
  ExecutionEnvironment.canUseDOM &&
  'TextEvent' in window &&
  !('documentMode' in document || isPresto())
);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return (
    typeof opera === 'object' &&
    typeof opera.version === 'function' &&
    parseInt(opera.version(), 10) <= 12
  );
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

var topLevelTypes = EventConstants.topLevelTypes;

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBeforeInput: null}),
      captured: keyOf({onBeforeInputCapture: null})
    },
    dependencies: [
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyPress,
      topLevelTypes.topTextInput,
      topLevelTypes.topPaste
    ]
  }
};

// Track characters inserted via keypress and composition events.
var fallbackChars = null;

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (
    (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
    // ctrlKey && altKey is equivalent to AltGr, and is not a command.
    !(nativeEvent.ctrlKey && nativeEvent.altKey)
  );
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 */
var BeforeInputEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var chars;

    if (canUseTextInputEvent) {
      switch (topLevelType) {
        case topLevelTypes.topKeyPress:
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;
          if (which !== SPACEBAR_CODE) {
            return;
          }

          hasSpaceKeypress = true;
          chars = SPACEBAR_CHAR;
          break;

        case topLevelTypes.topTextInput:
          // Record the characters to be added to the DOM.
          chars = nativeEvent.data;

          // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to blacklist it.
          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return;
          }

          // Otherwise, carry on.
          break;

        default:
          // For other native event types, do nothing.
          return;
      }
    } else {
      switch (topLevelType) {
        case topLevelTypes.topPaste:
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          fallbackChars = null;
          break;
        case topLevelTypes.topKeyPress:
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
            fallbackChars = String.fromCharCode(nativeEvent.which);
          }
          break;
        case topLevelTypes.topCompositionEnd:
          fallbackChars = nativeEvent.data;
          break;
      }

      // If no changes have occurred to the fallback string, no relevant
      // event has fired and we're done.
      if (fallbackChars === null) {
        return;
      }

      chars = fallbackChars;
    }

    // If no characters are being inserted, no BeforeInput event should
    // be fired.
    if (!chars) {
      return;
    }

    var event = SyntheticInputEvent.getPooled(
      eventTypes.beforeInput,
      topLevelTargetID,
      nativeEvent
    );

    event.data = chars;
    fallbackChars = null;
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }
};

module.exports = BeforeInputEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./SyntheticInputEvent":89,"./keyOf":133}],4:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSProperty
 */

"use strict";

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexShrink: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  strokeOpacity: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function(prop) {
  prefixes.forEach(function(prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundImage: true,
    backgroundPosition: true,
    backgroundRepeat: true,
    backgroundColor: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

},{}],5:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CSSPropertyOperations
 * @typechecks static-only
 */

"use strict";

var CSSProperty = _dereq_("./CSSProperty");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var camelizeStyleName = _dereq_("./camelizeStyleName");
var dangerousStyleValue = _dereq_("./dangerousStyleValue");
var hyphenateStyleName = _dereq_("./hyphenateStyleName");
var memoizeStringOnly = _dereq_("./memoizeStringOnly");
var warning = _dereq_("./warning");

var processStyleName = memoizeStringOnly(function(styleName) {
  return hyphenateStyleName(styleName);
});

var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if ("production" !== "development") {
  var warnedStyleNames = {};

  var warnHyphenatedStyleName = function(name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    ("production" !== "development" ? warning(
      false,
      'Unsupported style property ' + name + '. Did you mean ' +
      camelizeStyleName(name) + '?'
    ) : null);
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {

  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @return {?string}
   */
  createMarkupForStyles: function(styles) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== "development") {
        if (styleName.indexOf('-') > -1) {
          warnHyphenatedStyleName(styleName);
        }
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   */
  setValueForStyles: function(node, styles) {
    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      if ("production" !== "development") {
        if (styleName.indexOf('-') > -1) {
          warnHyphenatedStyleName(styleName);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName]);
      if (styleName === 'float') {
        styleName = styleFloatAccessor;
      }
      if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }

};

module.exports = CSSPropertyOperations;

},{"./CSSProperty":4,"./ExecutionEnvironment":22,"./camelizeStyleName":100,"./dangerousStyleValue":105,"./hyphenateStyleName":124,"./memoizeStringOnly":135,"./warning":145}],6:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CallbackQueue
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */
function CallbackQueue() {
  this._callbacks = null;
  this._contexts = null;
}

assign(CallbackQueue.prototype, {

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */
  enqueue: function(callback, context) {
    this._callbacks = this._callbacks || [];
    this._contexts = this._contexts || [];
    this._callbacks.push(callback);
    this._contexts.push(context);
  },

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */
  notifyAll: function() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    if (callbacks) {
      ("production" !== "development" ? invariant(
        callbacks.length === contexts.length,
        "Mismatched list of contexts in callback queue"
      ) : invariant(callbacks.length === contexts.length));
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0, l = callbacks.length; i < l; i++) {
        callbacks[i].call(contexts[i]);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  },

  /**
   * Resets the internal queue.
   *
   * @internal
   */
  reset: function() {
    this._callbacks = null;
    this._contexts = null;
  },

  /**
   * `PooledClass` looks for this.
   */
  destructor: function() {
    this.reset();
  }

});

PooledClass.addPoolingTo(CallbackQueue);

module.exports = CallbackQueue;

},{"./Object.assign":27,"./PooledClass":28,"./invariant":126}],7:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ChangeEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var ReactUpdates = _dereq_("./ReactUpdates");
var SyntheticEvent = _dereq_("./SyntheticEvent");

var isEventSupported = _dereq_("./isEventSupported");
var isTextInputElement = _dereq_("./isTextInputElement");
var keyOf = _dereq_("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: keyOf({onChange: null}),
      captured: keyOf({onChangeCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topChange,
      topLevelTypes.topClick,
      topLevelTypes.topFocus,
      topLevelTypes.topInput,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

/**
 * For IE shims
 */
var activeElement = null;
var activeElementID = null;
var activeElementValue = null;
var activeElementValueProp = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  return (
    elem.nodeName === 'SELECT' ||
    (elem.nodeName === 'INPUT' && elem.type === 'file')
  );
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (
    !('documentMode' in document) || document.documentMode > 8
  );
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = SyntheticEvent.getPooled(
    eventTypes.change,
    activeElementID,
    nativeEvent
  );
  EventPropagators.accumulateTwoPhaseDispatches(event);

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue();
}

function startWatchingForChangeEventIE8(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementID = null;
}

function getTargetIDForChangeEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topChange) {
    return topLevelTargetID;
  }
}
function handleEventsForChangeEventIE8(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForChangeEventIE8();
  }
}


/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events
  isInputEventSupported = isEventSupported('input') && (
    !('documentMode' in document) || document.documentMode > 9
  );
}

/**
 * (For old IE.) Replacement getter/setter for the `value` property that gets
 * set on the active element.
 */
var newValueProp =  {
  get: function() {
    return activeElementValueProp.get.call(this);
  },
  set: function(val) {
    // Cast to a string so we can do equality checks.
    activeElementValue = '' + val;
    activeElementValueProp.set.call(this, val);
  }
};

/**
 * (For old IE.) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetID) {
  activeElement = target;
  activeElementID = targetID;
  activeElementValue = target.value;
  activeElementValueProp = Object.getOwnPropertyDescriptor(
    target.constructor.prototype,
    'value'
  );

  Object.defineProperty(activeElement, 'value', newValueProp);
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For old IE.) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }

  // delete restores the original property definition
  delete activeElement.value;
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementID = null;
  activeElementValue = null;
  activeElementValueProp = null;
}

/**
 * (For old IE.) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  var value = nativeEvent.srcElement.value;
  if (value === activeElementValue) {
    return;
  }
  activeElementValue = value;

  manualDispatchChangeEvent(nativeEvent);
}

/**
 * If a `change` event should be fired, returns the target's ID.
 */
function getTargetIDForInputEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topInput) {
    // In modern browsers (i.e., not IE8 or IE9), the input event is exactly
    // what we want so fall through here and trigger an abstract event
    return topLevelTargetID;
  }
}

// For IE8 and IE9.
function handleEventsForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topFocus) {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(topLevelTarget, topLevelTargetID);
  } else if (topLevelType === topLevelTypes.topBlur) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetIDForInputEventIE(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topSelectionChange ||
      topLevelType === topLevelTypes.topKeyUp ||
      topLevelType === topLevelTypes.topKeyDown) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    if (activeElement && activeElement.value !== activeElementValue) {
      activeElementValue = activeElement.value;
      return activeElementID;
    }
  }
}


/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  return (
    elem.nodeName === 'INPUT' &&
    (elem.type === 'checkbox' || elem.type === 'radio')
  );
}

function getTargetIDForClickEvent(
    topLevelType,
    topLevelTarget,
    topLevelTargetID) {
  if (topLevelType === topLevelTypes.topClick) {
    return topLevelTargetID;
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var getTargetIDFunc, handleEventFunc;
    if (shouldUseChangeEvent(topLevelTarget)) {
      if (doesChangeEventBubble) {
        getTargetIDFunc = getTargetIDForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(topLevelTarget)) {
      if (isInputEventSupported) {
        getTargetIDFunc = getTargetIDForInputEvent;
      } else {
        getTargetIDFunc = getTargetIDForInputEventIE;
        handleEventFunc = handleEventsForInputEventIE;
      }
    } else if (shouldUseClickEvent(topLevelTarget)) {
      getTargetIDFunc = getTargetIDForClickEvent;
    }

    if (getTargetIDFunc) {
      var targetID = getTargetIDFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
      if (targetID) {
        var event = SyntheticEvent.getPooled(
          eventTypes.change,
          targetID,
          nativeEvent
        );
        EventPropagators.accumulateTwoPhaseDispatches(event);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(
        topLevelType,
        topLevelTarget,
        topLevelTargetID
      );
    }
  }

};

module.exports = ChangeEventPlugin;

},{"./EventConstants":16,"./EventPluginHub":18,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactUpdates":79,"./SyntheticEvent":87,"./isEventSupported":127,"./isTextInputElement":129,"./keyOf":133}],8:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ClientReactRootIndex
 * @typechecks
 */

"use strict";

var nextReactRootIndex = 0;

var ClientReactRootIndex = {
  createReactRootIndex: function() {
    return nextReactRootIndex++;
  }
};

module.exports = ClientReactRootIndex;

},{}],9:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule CompositionEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var SyntheticCompositionEvent = _dereq_("./SyntheticCompositionEvent");

var getTextContentAccessor = _dereq_("./getTextContentAccessor");
var keyOf = _dereq_("./keyOf");

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var useCompositionEvent = (
  ExecutionEnvironment.canUseDOM &&
  'CompositionEvent' in window
);

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. In Korean, for example,
// the compositionend event contains only one character regardless of
// how many characters have been composed since compositionstart.
// We therefore use the fallback data while still using the native
// events as triggers.
var useFallbackData = (
  !useCompositionEvent ||
  (
    'documentMode' in document &&
    document.documentMode > 8 &&
    document.documentMode <= 11
  )
);

var topLevelTypes = EventConstants.topLevelTypes;
var currentComposition = null;

// Events and their corresponding property names.
var eventTypes = {
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionEnd: null}),
      captured: keyOf({onCompositionEndCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionEnd,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionStart: null}),
      captured: keyOf({onCompositionStartCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionStart,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCompositionUpdate: null}),
      captured: keyOf({onCompositionUpdateCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topCompositionUpdate,
      topLevelTypes.topKeyDown,
      topLevelTypes.topKeyPress,
      topLevelTypes.topKeyUp,
      topLevelTypes.topMouseDown
    ]
  }
};

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case topLevelTypes.topCompositionStart:
      return eventTypes.compositionStart;
    case topLevelTypes.topCompositionEnd:
      return eventTypes.compositionEnd;
    case topLevelTypes.topCompositionUpdate:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackStart(topLevelType, nativeEvent) {
  return (
    topLevelType === topLevelTypes.topKeyDown &&
    nativeEvent.keyCode === START_KEYCODE
  );
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case topLevelTypes.topKeyUp:
      // Command keys insert or clear IME input.
      return (END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1);
    case topLevelTypes.topKeyDown:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return (nativeEvent.keyCode !== START_KEYCODE);
    case topLevelTypes.topKeyPress:
    case topLevelTypes.topMouseDown:
    case topLevelTypes.topBlur:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Helper class stores information about selection and document state
 * so we can figure out what changed at a later date.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this.root = root;
  this.startSelection = ReactInputSelection.getSelection(root);
  this.startValue = this.getText();
}

/**
 * Get current text of input.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getText = function() {
  return this.root.value || this.root[getTextContentAccessor()];
};

/**
 * Text that has changed since the start of composition.
 *
 * @return {string}
 */
FallbackCompositionState.prototype.getData = function() {
  var endValue = this.getText();
  var prefixLength = this.startSelection.start;
  var suffixLength = this.startValue.length - this.startSelection.end;

  return endValue.substr(
    prefixLength,
    endValue.length - suffixLength - prefixLength
  );
};

/**
 * This plugin creates `onCompositionStart`, `onCompositionUpdate` and
 * `onCompositionEnd` events on inputs, textareas and contentEditable
 * nodes.
 */
var CompositionEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    var eventType;
    var data;

    if (useCompositionEvent) {
      eventType = getCompositionEventType(topLevelType);
    } else if (!currentComposition) {
      if (isFallbackStart(topLevelType, nativeEvent)) {
        eventType = eventTypes.compositionStart;
      }
    } else if (isFallbackEnd(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionEnd;
    }

    if (useFallbackData) {
      // The current composition is stored statically and must not be
      // overwritten while composition continues.
      if (!currentComposition && eventType === eventTypes.compositionStart) {
        currentComposition = new FallbackCompositionState(topLevelTarget);
      } else if (eventType === eventTypes.compositionEnd) {
        if (currentComposition) {
          data = currentComposition.getData();
          currentComposition = null;
        }
      }
    }

    if (eventType) {
      var event = SyntheticCompositionEvent.getPooled(
        eventType,
        topLevelTargetID,
        nativeEvent
      );
      if (data) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = data;
      }
      EventPropagators.accumulateTwoPhaseDispatches(event);
      return event;
    }
  }
};

module.exports = CompositionEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ExecutionEnvironment":22,"./ReactInputSelection":59,"./SyntheticCompositionEvent":85,"./getTextContentAccessor":121,"./keyOf":133}],10:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMChildrenOperations
 * @typechecks static-only
 */

"use strict";

var Danger = _dereq_("./Danger");
var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

var getTextContentAccessor = _dereq_("./getTextContentAccessor");
var invariant = _dereq_("./invariant");

/**
 * The DOM property to use when setting text content.
 *
 * @type {string}
 * @private
 */
var textContentAccessor = getTextContentAccessor();

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
function insertChildAt(parentNode, childNode, index) {
  // By exploiting arrays returning `undefined` for an undefined index, we can
  // rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. However, using `undefined` is not allowed by all
  // browsers so we must replace it with `null`.
  parentNode.insertBefore(
    childNode,
    parentNode.childNodes[index] || null
  );
}

var updateTextContent;
if (textContentAccessor === 'textContent') {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    node.textContent = text;
  };
} else {
  /**
   * Sets the text content of `node` to `text`.
   *
   * @param {DOMElement} node Node to change
   * @param {string} text New text content
   */
  updateTextContent = function(node, text) {
    // In order to preserve newlines correctly, we can't use .innerText to set
    // the contents (see #1080), so we empty the element then append a text node
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    if (text) {
      var doc = node.ownerDocument || document;
      node.appendChild(doc.createTextNode(text));
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {

  dangerouslyReplaceNodeWithMarkup: Danger.dangerouslyReplaceNodeWithMarkup,

  updateTextContent: updateTextContent,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markupList List of markup strings.
   * @internal
   */
  processUpdates: function(updates, markupList) {
    var update;
    // Mapping from parent IDs to initial child orderings.
    var initialChildren = null;
    // List of children that will be moved or removed.
    var updatedChildren = null;

    for (var i = 0; update = updates[i]; i++) {
      if (update.type === ReactMultiChildUpdateTypes.MOVE_EXISTING ||
          update.type === ReactMultiChildUpdateTypes.REMOVE_NODE) {
        var updatedIndex = update.fromIndex;
        var updatedChild = update.parentNode.childNodes[updatedIndex];
        var parentID = update.parentID;

        ("production" !== "development" ? invariant(
          updatedChild,
          'processUpdates(): Unable to find child %s of element. This ' +
          'probably means the DOM was unexpectedly mutated (e.g., by the ' +
          'browser), usually due to forgetting a <tbody> when using tables, ' +
          'nesting tags like <form>, <p>, or <a>, or using non-SVG elements '+
          'in an <svg> parent. Try inspecting the child nodes of the element ' +
          'with React ID `%s`.',
          updatedIndex,
          parentID
        ) : invariant(updatedChild));

        initialChildren = initialChildren || {};
        initialChildren[parentID] = initialChildren[parentID] || [];
        initialChildren[parentID][updatedIndex] = updatedChild;

        updatedChildren = updatedChildren || [];
        updatedChildren.push(updatedChild);
      }
    }

    var renderedMarkup = Danger.dangerouslyRenderMarkup(markupList);

    // Remove updated children first so that `toIndex` is consistent.
    if (updatedChildren) {
      for (var j = 0; j < updatedChildren.length; j++) {
        updatedChildren[j].parentNode.removeChild(updatedChildren[j]);
      }
    }

    for (var k = 0; update = updates[k]; k++) {
      switch (update.type) {
        case ReactMultiChildUpdateTypes.INSERT_MARKUP:
          insertChildAt(
            update.parentNode,
            renderedMarkup[update.markupIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.MOVE_EXISTING:
          insertChildAt(
            update.parentNode,
            initialChildren[update.parentID][update.fromIndex],
            update.toIndex
          );
          break;
        case ReactMultiChildUpdateTypes.TEXT_CONTENT:
          updateTextContent(
            update.parentNode,
            update.textContent
          );
          break;
        case ReactMultiChildUpdateTypes.REMOVE_NODE:
          // Already removed by the for-loop above.
          break;
      }
    }
  }

};

module.exports = DOMChildrenOperations;

},{"./Danger":13,"./ReactMultiChildUpdateTypes":65,"./getTextContentAccessor":121,"./invariant":126}],11:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMProperty
 * @typechecks static-only
 */

/*jslint bitwise: true */

"use strict";

var invariant = _dereq_("./invariant");

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_ATTRIBUTE: 0x1,
  MUST_USE_PROPERTY: 0x2,
  HAS_SIDE_EFFECTS: 0x4,
  HAS_BOOLEAN_VALUE: 0x8,
  HAS_NUMERIC_VALUE: 0x10,
  HAS_POSITIVE_NUMERIC_VALUE: 0x20 | 0x10,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x40,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function(domPropertyConfig) {
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(
        domPropertyConfig.isCustomAttribute
      );
    }

    for (var propName in Properties) {
      ("production" !== "development" ? invariant(
        !DOMProperty.isStandardName.hasOwnProperty(propName),
        'injectDOMPropertyConfig(...): You\'re trying to inject DOM property ' +
        '\'%s\' which has already been injected. You may be accidentally ' +
        'injecting the same DOM property config twice, or you may be ' +
        'injecting two configs that have conflicting property names.',
        propName
      ) : invariant(!DOMProperty.isStandardName.hasOwnProperty(propName)));

      DOMProperty.isStandardName[propName] = true;

      var lowerCased = propName.toLowerCase();
      DOMProperty.getPossibleStandardName[lowerCased] = propName;

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        DOMProperty.getPossibleStandardName[attributeName] = propName;
        DOMProperty.getAttributeName[propName] = attributeName;
      } else {
        DOMProperty.getAttributeName[propName] = lowerCased;
      }

      DOMProperty.getPropertyName[propName] =
        DOMPropertyNames.hasOwnProperty(propName) ?
          DOMPropertyNames[propName] :
          propName;

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        DOMProperty.getMutationMethod[propName] = DOMMutationMethods[propName];
      } else {
        DOMProperty.getMutationMethod[propName] = null;
      }

      var propConfig = Properties[propName];
      DOMProperty.mustUseAttribute[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_ATTRIBUTE);
      DOMProperty.mustUseProperty[propName] =
        checkMask(propConfig, DOMPropertyInjection.MUST_USE_PROPERTY);
      DOMProperty.hasSideEffects[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_SIDE_EFFECTS);
      DOMProperty.hasBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_BOOLEAN_VALUE);
      DOMProperty.hasNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_NUMERIC_VALUE);
      DOMProperty.hasPositiveNumericValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_POSITIVE_NUMERIC_VALUE);
      DOMProperty.hasOverloadedBooleanValue[propName] =
        checkMask(propConfig, DOMPropertyInjection.HAS_OVERLOADED_BOOLEAN_VALUE);

      ("production" !== "development" ? invariant(
        !DOMProperty.mustUseAttribute[propName] ||
          !DOMProperty.mustUseProperty[propName],
        'DOMProperty: Cannot require using both attribute and property: %s',
        propName
      ) : invariant(!DOMProperty.mustUseAttribute[propName] ||
        !DOMProperty.mustUseProperty[propName]));
      ("production" !== "development" ? invariant(
        DOMProperty.mustUseProperty[propName] ||
          !DOMProperty.hasSideEffects[propName],
        'DOMProperty: Properties that have side effects must use property: %s',
        propName
      ) : invariant(DOMProperty.mustUseProperty[propName] ||
        !DOMProperty.hasSideEffects[propName]));
      ("production" !== "development" ? invariant(
        !!DOMProperty.hasBooleanValue[propName] +
          !!DOMProperty.hasNumericValue[propName] +
          !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1,
        'DOMProperty: Value can be one of boolean, overloaded boolean, or ' +
        'numeric value, but not a combination: %s',
        propName
      ) : invariant(!!DOMProperty.hasBooleanValue[propName] +
        !!DOMProperty.hasNumericValue[propName] +
        !!DOMProperty.hasOverloadedBooleanValue[propName] <= 1));
    }
  }
};
var defaultValueCache = {};

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {

  ID_ATTRIBUTE_NAME: 'data-reactid',

  /**
   * Checks whether a property name is a standard property.
   * @type {Object}
   */
  isStandardName: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties.
   * @type {Object}
   */
  getPossibleStandardName: {},

  /**
   * Mapping from normalized names to attribute names that differ. Attribute
   * names are used when rendering markup or with `*Attribute()`.
   * @type {Object}
   */
  getAttributeName: {},

  /**
   * Mapping from normalized names to properties on DOM node instances.
   * (This includes properties that mutate due to external factors.)
   * @type {Object}
   */
  getPropertyName: {},

  /**
   * Mapping from normalized names to mutation methods. This will only exist if
   * mutation cannot be set simply by the property or `setAttribute()`.
   * @type {Object}
   */
  getMutationMethod: {},

  /**
   * Whether the property must be accessed and mutated as an object property.
   * @type {Object}
   */
  mustUseAttribute: {},

  /**
   * Whether the property must be accessed and mutated using `*Attribute()`.
   * (This includes anything that fails `<propName> in <element>`.)
   * @type {Object}
   */
  mustUseProperty: {},

  /**
   * Whether or not setting a value causes side effects such as triggering
   * resources to be loaded or text selection changes. We must ensure that
   * the value is only set if it has changed.
   * @type {Object}
   */
  hasSideEffects: {},

  /**
   * Whether the property should be removed when set to a falsey value.
   * @type {Object}
   */
  hasBooleanValue: {},

  /**
   * Whether the property must be numeric or parse as a
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasNumericValue: {},

  /**
   * Whether the property must be positive numeric or parse as a positive
   * numeric and should be removed when set to a falsey value.
   * @type {Object}
   */
  hasPositiveNumericValue: {},

  /**
   * Whether the property can be used as a flag as well as with a value. Removed
   * when strictly equal to false; present without a value when strictly equal
   * to true; present with a value otherwise.
   * @type {Object}
   */
  hasOverloadedBooleanValue: {},

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function(attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  /**
   * Returns the default property value for a DOM property (i.e., not an
   * attribute). Most default values are '' or false, but not all. Worse yet,
   * some (in particular, `type`) vary depending on the type of element.
   *
   * TODO: Is it better to grab all the possible properties when creating an
   * element to avoid having to create the same element twice?
   */
  getDefaultValueForProperty: function(nodeName, prop) {
    var nodeDefaults = defaultValueCache[nodeName];
    var testElement;
    if (!nodeDefaults) {
      defaultValueCache[nodeName] = nodeDefaults = {};
    }
    if (!(prop in nodeDefaults)) {
      testElement = document.createElement(nodeName);
      nodeDefaults[prop] = testElement[prop];
    }
    return nodeDefaults[prop];
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;

},{"./invariant":126}],12:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DOMPropertyOperations
 * @typechecks static-only
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");

var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
var memoizeStringOnly = _dereq_("./memoizeStringOnly");
var warning = _dereq_("./warning");

function shouldIgnoreValue(name, value) {
  return value == null ||
    (DOMProperty.hasBooleanValue[name] && !value) ||
    (DOMProperty.hasNumericValue[name] && isNaN(value)) ||
    (DOMProperty.hasPositiveNumericValue[name] && (value < 1)) ||
    (DOMProperty.hasOverloadedBooleanValue[name] && value === false);
}

var processAttributeNameAndPrefix = memoizeStringOnly(function(name) {
  return escapeTextForBrowser(name) + '="';
});

if ("production" !== "development") {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true
  };
  var warnedProperties = {};

  var warnUnknownProperty = function(name) {
    if (reactProps.hasOwnProperty(name) && reactProps[name] ||
        warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return;
    }

    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = (
      DOMProperty.isCustomAttribute(lowerCasedName) ?
        lowerCasedName :
      DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ?
        DOMProperty.getPossibleStandardName[lowerCasedName] :
        null
    );

    // For now, only warn when we have a suggested correction. This prevents
    // logging too much when using transferPropsTo.
    ("production" !== "development" ? warning(
      standardName == null,
      'Unknown DOM property ' + name + '. Did you mean ' + standardName + '?'
    ) : null);

  };
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {

  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function(id) {
    return processAttributeNameAndPrefix(DOMProperty.ID_ATTRIBUTE_NAME) +
      escapeTextForBrowser(id) + '"';
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function(name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      if (shouldIgnoreValue(name, value)) {
        return '';
      }
      var attributeName = DOMProperty.getAttributeName[name];
      if (DOMProperty.hasBooleanValue[name] ||
          (DOMProperty.hasOverloadedBooleanValue[name] && value === true)) {
        return escapeTextForBrowser(attributeName);
      }
      return processAttributeNameAndPrefix(attributeName) +
        escapeTextForBrowser(value) + '"';
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return processAttributeNameAndPrefix(name) +
        escapeTextForBrowser(value) + '"';
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
    return null;
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function(node, name, value) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(name, value)) {
        this.deleteValueForProperty(node, name);
      } else if (DOMProperty.mustUseAttribute[name]) {
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        node.setAttribute(DOMProperty.getAttributeName[name], '' + value);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        // Must explicitly cast values for HAS_SIDE_EFFECTS-properties to the
        // property type before comparing; only `value` does and is string.
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== ('' + value)) {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propName] = value;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        node.removeAttribute(name);
      } else {
        node.setAttribute(name, '' + value);
      }
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function(node, name) {
    if (DOMProperty.isStandardName.hasOwnProperty(name) &&
        DOMProperty.isStandardName[name]) {
      var mutationMethod = DOMProperty.getMutationMethod[name];
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (DOMProperty.mustUseAttribute[name]) {
        node.removeAttribute(DOMProperty.getAttributeName[name]);
      } else {
        var propName = DOMProperty.getPropertyName[name];
        var defaultValue = DOMProperty.getDefaultValueForProperty(
          node.nodeName,
          propName
        );
        if (!DOMProperty.hasSideEffects[name] ||
            ('' + node[propName]) !== defaultValue) {
          node[propName] = defaultValue;
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    } else if ("production" !== "development") {
      warnUnknownProperty(name);
    }
  }

};

module.exports = DOMPropertyOperations;

},{"./DOMProperty":11,"./escapeTextForBrowser":109,"./memoizeStringOnly":135,"./warning":145}],13:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Danger
 * @typechecks static-only
 */

/*jslint evil: true, sub: true */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var createNodesFromMarkup = _dereq_("./createNodesFromMarkup");
var emptyFunction = _dereq_("./emptyFunction");
var getMarkupWrap = _dereq_("./getMarkupWrap");
var invariant = _dereq_("./invariant");

var OPEN_TAG_NAME_EXP = /^(<[^ \/>]+)/;
var RESULT_INDEX_ATTR = 'data-danger-index';

/**
 * Extracts the `nodeName` from a string of markup.
 *
 * NOTE: Extracting the `nodeName` does not require a regular expression match
 * because we make assumptions about React-generated markup (i.e. there are no
 * spaces surrounding the opening tag and there is at least one attribute).
 *
 * @param {string} markup String of markup.
 * @return {string} Node name of the supplied markup.
 * @see http://jsperf.com/extract-nodename
 */
function getNodeName(markup) {
  return markup.substring(1, markup.indexOf(' '));
}

var Danger = {

  /**
   * Renders markup into an array of nodes. The markup is expected to render
   * into a list of root nodes. Also, the length of `resultList` and
   * `markupList` should be the same.
   *
   * @param {array<string>} markupList List of markup strings to render.
   * @return {array<DOMElement>} List of rendered nodes.
   * @internal
   */
  dangerouslyRenderMarkup: function(markupList) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyRenderMarkup(...): Cannot render markup in a worker ' +
      'thread. Make sure `window` and `document` are available globally ' +
      'before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    var nodeName;
    var markupByNodeName = {};
    // Group markup by `nodeName` if a wrap is necessary, else by '*'.
    for (var i = 0; i < markupList.length; i++) {
      ("production" !== "development" ? invariant(
        markupList[i],
        'dangerouslyRenderMarkup(...): Missing markup.'
      ) : invariant(markupList[i]));
      nodeName = getNodeName(markupList[i]);
      nodeName = getMarkupWrap(nodeName) ? nodeName : '*';
      markupByNodeName[nodeName] = markupByNodeName[nodeName] || [];
      markupByNodeName[nodeName][i] = markupList[i];
    }
    var resultList = [];
    var resultListAssignmentCount = 0;
    for (nodeName in markupByNodeName) {
      if (!markupByNodeName.hasOwnProperty(nodeName)) {
        continue;
      }
      var markupListByNodeName = markupByNodeName[nodeName];

      // This for-in loop skips the holes of the sparse array. The order of
      // iteration should follow the order of assignment, which happens to match
      // numerical index order, but we don't rely on that.
      for (var resultIndex in markupListByNodeName) {
        if (markupListByNodeName.hasOwnProperty(resultIndex)) {
          var markup = markupListByNodeName[resultIndex];

          // Push the requested markup with an additional RESULT_INDEX_ATTR
          // attribute.  If the markup does not start with a < character, it
          // will be discarded below (with an appropriate console.error).
          markupListByNodeName[resultIndex] = markup.replace(
            OPEN_TAG_NAME_EXP,
            // This index will be parsed back out below.
            '$1 ' + RESULT_INDEX_ATTR + '="' + resultIndex + '" '
          );
        }
      }

      // Render each group of markup with similar wrapping `nodeName`.
      var renderNodes = createNodesFromMarkup(
        markupListByNodeName.join(''),
        emptyFunction // Do nothing special with <script> tags.
      );

      for (i = 0; i < renderNodes.length; ++i) {
        var renderNode = renderNodes[i];
        if (renderNode.hasAttribute &&
            renderNode.hasAttribute(RESULT_INDEX_ATTR)) {

          resultIndex = +renderNode.getAttribute(RESULT_INDEX_ATTR);
          renderNode.removeAttribute(RESULT_INDEX_ATTR);

          ("production" !== "development" ? invariant(
            !resultList.hasOwnProperty(resultIndex),
            'Danger: Assigning to an already-occupied result index.'
          ) : invariant(!resultList.hasOwnProperty(resultIndex)));

          resultList[resultIndex] = renderNode;

          // This should match resultList.length and markupList.length when
          // we're done.
          resultListAssignmentCount += 1;

        } else if ("production" !== "development") {
          console.error(
            "Danger: Discarding unexpected node:",
            renderNode
          );
        }
      }
    }

    // Although resultList was populated out of order, it should now be a dense
    // array.
    ("production" !== "development" ? invariant(
      resultListAssignmentCount === resultList.length,
      'Danger: Did not assign to every index of resultList.'
    ) : invariant(resultListAssignmentCount === resultList.length));

    ("production" !== "development" ? invariant(
      resultList.length === markupList.length,
      'Danger: Expected markup to render %s nodes, but rendered %s.',
      markupList.length,
      resultList.length
    ) : invariant(resultList.length === markupList.length));

    return resultList;
  },

  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function(oldChild, markup) {
    ("production" !== "development" ? invariant(
      ExecutionEnvironment.canUseDOM,
      'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a ' +
      'worker thread. Make sure `window` and `document` are available ' +
      'globally before requiring React when unit testing or use ' +
      'React.renderToString for server rendering.'
    ) : invariant(ExecutionEnvironment.canUseDOM));
    ("production" !== "development" ? invariant(markup, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : invariant(markup));
    ("production" !== "development" ? invariant(
      oldChild.tagName.toLowerCase() !== 'html',
      'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the ' +
      '<html> node. This is because browser quirks make this unreliable ' +
      'and/or slow. If you want to render to the root you must use ' +
      'server rendering. See renderComponentToString().'
    ) : invariant(oldChild.tagName.toLowerCase() !== 'html'));

    var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
    oldChild.parentNode.replaceChild(newChild, oldChild);
  }

};

module.exports = Danger;

},{"./ExecutionEnvironment":22,"./createNodesFromMarkup":104,"./emptyFunction":107,"./getMarkupWrap":118,"./invariant":126}],14:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule DefaultEventPluginOrder
 */

"use strict";

 var keyOf = _dereq_("./keyOf");

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DefaultEventPluginOrder = [
  keyOf({ResponderEventPlugin: null}),
  keyOf({SimpleEventPlugin: null}),
  keyOf({TapEventPlugin: null}),
  keyOf({EnterLeaveEventPlugin: null}),
  keyOf({ChangeEventPlugin: null}),
  keyOf({SelectEventPlugin: null}),
  keyOf({CompositionEventPlugin: null}),
  keyOf({BeforeInputEventPlugin: null}),
  keyOf({AnalyticsEventPlugin: null}),
  keyOf({MobileSafariClickEventPlugin: null})
];

module.exports = DefaultEventPluginOrder;

},{"./keyOf":133}],15:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EnterLeaveEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

var ReactMount = _dereq_("./ReactMount");
var keyOf = _dereq_("./keyOf");

var topLevelTypes = EventConstants.topLevelTypes;
var getFirstReactDOM = ReactMount.getFirstReactDOM;

var eventTypes = {
  mouseEnter: {
    registrationName: keyOf({onMouseEnter: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  },
  mouseLeave: {
    registrationName: keyOf({onMouseLeave: null}),
    dependencies: [
      topLevelTypes.topMouseOut,
      topLevelTypes.topMouseOver
    ]
  }
};

var extractedEvents = [null, null];

var EnterLeaveEventPlugin = {

  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topMouseOver &&
        (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== topLevelTypes.topMouseOut &&
        topLevelType !== topLevelTypes.topMouseOver) {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (topLevelTarget.window === topLevelTarget) {
      // `topLevelTarget` is probably a window object.
      win = topLevelTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = topLevelTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from, to;
    if (topLevelType === topLevelTypes.topMouseOut) {
      from = topLevelTarget;
      to =
        getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement) ||
        win;
    } else {
      from = win;
      to = topLevelTarget;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromID = from ? ReactMount.getID(from) : '';
    var toID = to ? ReactMount.getID(to) : '';

    var leave = SyntheticMouseEvent.getPooled(
      eventTypes.mouseLeave,
      fromID,
      nativeEvent
    );
    leave.type = 'mouseleave';
    leave.target = from;
    leave.relatedTarget = to;

    var enter = SyntheticMouseEvent.getPooled(
      eventTypes.mouseEnter,
      toID,
      nativeEvent
    );
    enter.type = 'mouseenter';
    enter.target = to;
    enter.relatedTarget = from;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);

    extractedEvents[0] = leave;
    extractedEvents[1] = enter;

    return extractedEvents;
  }

};

module.exports = EnterLeaveEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ReactMount":63,"./SyntheticMouseEvent":91,"./keyOf":133}],16:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventConstants
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

var PropagationPhases = keyMirror({bubbled: null, captured: null});

/**
 * Types of raw signals from the browser caught at the top level.
 */
var topLevelTypes = keyMirror({
  topBlur: null,
  topChange: null,
  topClick: null,
  topCompositionEnd: null,
  topCompositionStart: null,
  topCompositionUpdate: null,
  topContextMenu: null,
  topCopy: null,
  topCut: null,
  topDoubleClick: null,
  topDrag: null,
  topDragEnd: null,
  topDragEnter: null,
  topDragExit: null,
  topDragLeave: null,
  topDragOver: null,
  topDragStart: null,
  topDrop: null,
  topError: null,
  topFocus: null,
  topInput: null,
  topKeyDown: null,
  topKeyPress: null,
  topKeyUp: null,
  topLoad: null,
  topMouseDown: null,
  topMouseMove: null,
  topMouseOut: null,
  topMouseOver: null,
  topMouseUp: null,
  topPaste: null,
  topReset: null,
  topScroll: null,
  topSelectionChange: null,
  topSubmit: null,
  topTextInput: null,
  topTouchCancel: null,
  topTouchEnd: null,
  topTouchMove: null,
  topTouchStart: null,
  topWheel: null
});

var EventConstants = {
  topLevelTypes: topLevelTypes,
  PropagationPhases: PropagationPhases
};

module.exports = EventConstants;

},{"./keyMirror":132}],17:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014 Facebook, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @providesModule EventListener
 * @typechecks
 */

var emptyFunction = _dereq_("./emptyFunction");

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function(target, eventType, callback) {
    if (!target.addEventListener) {
      if ("production" !== "development") {
        console.error(
          'Attempted to listen to events during the capture phase on a ' +
          'browser that does not support the capture phase. Your application ' +
          'will not receive some events.'
        );
      }
      return {
        remove: emptyFunction
      };
    } else {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    }
  },

  registerDefault: function() {}
};

module.exports = EventListener;

},{"./emptyFunction":107}],18:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginHub
 */

"use strict";

var EventPluginRegistry = _dereq_("./EventPluginRegistry");
var EventPluginUtils = _dereq_("./EventPluginUtils");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");
var invariant = _dereq_("./invariant");

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function(event) {
  if (event) {
    var executeDispatch = EventPluginUtils.executeDispatch;
    // Plugins can provide custom behavior when dispatching events.
    var PluginModule = EventPluginRegistry.getPluginModuleForEvent(event);
    if (PluginModule && PluginModule.executeDispatch) {
      executeDispatch = PluginModule.executeDispatch;
    }
    EventPluginUtils.executeDispatchesInOrder(event, executeDispatch);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};

/**
 * - `InstanceHandle`: [required] Module that performs logical traversals of DOM
 *   hierarchy given ids of the logical DOM elements involved.
 */
var InstanceHandle = null;

function validateInstanceHandle() {
  var invalid = !InstanceHandle||
    !InstanceHandle.traverseTwoPhase ||
    !InstanceHandle.traverseEnterLeave;
  if (invalid) {
    throw new Error('InstanceHandle not injected before use!');
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {

  /**
   * Methods for injecting dependencies.
   */
  injection: {

    /**
     * @param {object} InjectedMount
     * @public
     */
    injectMount: EventPluginUtils.injection.injectMount,

    /**
     * @param {object} InjectedInstanceHandle
     * @public
     */
    injectInstanceHandle: function(InjectedInstanceHandle) {
      InstanceHandle = InjectedInstanceHandle;
      if ("production" !== "development") {
        validateInstanceHandle();
      }
    },

    getInstanceHandle: function() {
      if ("production" !== "development") {
        validateInstanceHandle();
      }
      return InstanceHandle;
    },

    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName

  },

  eventNameDispatchConfigs: EventPluginRegistry.eventNameDispatchConfigs,

  registrationNameModules: EventPluginRegistry.registrationNameModules,

  /**
   * Stores `listener` at `listenerBank[registrationName][id]`. Is idempotent.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {?function} listener The callback to store.
   */
  putListener: function(id, registrationName, listener) {
    ("production" !== "development" ? invariant(
      !listener || typeof listener === 'function',
      'Expected %s listener to be a function, instead got type %s',
      registrationName, typeof listener
    ) : invariant(!listener || typeof listener === 'function'));

    var bankForRegistrationName =
      listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[id] = listener;
  },

  /**
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    return bankForRegistrationName && bankForRegistrationName[id];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {string} id ID of the DOM element.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function(id, registrationName) {
    var bankForRegistrationName = listenerBank[registrationName];
    if (bankForRegistrationName) {
      delete bankForRegistrationName[id];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {string} id ID of the DOM element.
   */
  deleteAllListeners: function(id) {
    for (var registrationName in listenerBank) {
      delete listenerBank[registrationName][id];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0, l = plugins.length; i < l; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(
          topLevelType,
          topLevelTarget,
          topLevelTargetID,
          nativeEvent
        );
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function(events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function() {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    forEachAccumulated(processingEventQueue, executeDispatchesAndRelease);
    ("production" !== "development" ? invariant(
      !eventQueue,
      'processEventQueue(): Additional events were enqueued while processing ' +
      'an event queue. Support for this has not yet been implemented.'
    ) : invariant(!eventQueue));
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function() {
    listenerBank = {};
  },

  __getListenerBank: function() {
    return listenerBank;
  }

};

module.exports = EventPluginHub;

},{"./EventPluginRegistry":19,"./EventPluginUtils":20,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],19:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginRegistry
 * @typechecks static-only
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Injectable ordering of event plugins.
 */
var EventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!EventPluginOrder) {
    // Wait until an `EventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var PluginModule = namesToPlugins[pluginName];
    var pluginIndex = EventPluginOrder.indexOf(pluginName);
    ("production" !== "development" ? invariant(
      pluginIndex > -1,
      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +
      'the plugin ordering, `%s`.',
      pluginName
    ) : invariant(pluginIndex > -1));
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    ("production" !== "development" ? invariant(
      PluginModule.extractEvents,
      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +
      'method, but `%s` does not.',
      pluginName
    ) : invariant(PluginModule.extractEvents));
    EventPluginRegistry.plugins[pluginIndex] = PluginModule;
    var publishedEvents = PluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      ("production" !== "development" ? invariant(
        publishEventForPlugin(
          publishedEvents[eventName],
          PluginModule,
          eventName
        ),
        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',
        eventName,
        pluginName
      ) : invariant(publishEventForPlugin(
        publishedEvents[eventName],
        PluginModule,
        eventName
      )));
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName),
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'event name, `%s`.',
    eventName
  ) : invariant(!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName)));
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(
          phasedRegistrationName,
          PluginModule,
          eventName
        );
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(
      dispatchConfig.registrationName,
      PluginModule,
      eventName
    );
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, PluginModule, eventName) {
  ("production" !== "development" ? invariant(
    !EventPluginRegistry.registrationNameModules[registrationName],
    'EventPluginHub: More than one plugin attempted to publish the same ' +
    'registration name, `%s`.',
    registrationName
  ) : invariant(!EventPluginRegistry.registrationNameModules[registrationName]));
  EventPluginRegistry.registrationNameModules[registrationName] = PluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] =
    PluginModule.eventTypes[eventName].dependencies;
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {

  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function(InjectedEventPluginOrder) {
    ("production" !== "development" ? invariant(
      !EventPluginOrder,
      'EventPluginRegistry: Cannot inject event plugin ordering more than ' +
      'once. You are likely trying to load more than one copy of React.'
    ) : invariant(!EventPluginOrder));
    // Clone the ordering so it cannot be dynamically mutated.
    EventPluginOrder = Array.prototype.slice.call(InjectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function(injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var PluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) ||
          namesToPlugins[pluginName] !== PluginModule) {
        ("production" !== "development" ? invariant(
          !namesToPlugins[pluginName],
          'EventPluginRegistry: Cannot inject two different event plugins ' +
          'using the same name, `%s`.',
          pluginName
        ) : invariant(!namesToPlugins[pluginName]));
        namesToPlugins[pluginName] = PluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function(event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[
        dispatchConfig.registrationName
      ] || null;
    }
    for (var phase in dispatchConfig.phasedRegistrationNames) {
      if (!dispatchConfig.phasedRegistrationNames.hasOwnProperty(phase)) {
        continue;
      }
      var PluginModule = EventPluginRegistry.registrationNameModules[
        dispatchConfig.phasedRegistrationNames[phase]
      ];
      if (PluginModule) {
        return PluginModule;
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function() {
    EventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }
  }

};

module.exports = EventPluginRegistry;

},{"./invariant":126}],20:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPluginUtils
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");

var invariant = _dereq_("./invariant");

/**
 * Injected dependencies:
 */

/**
 * - `Mount`: [required] Module that can convert between React dom IDs and
 *   actual node references.
 */
var injection = {
  Mount: null,
  injectMount: function(InjectedMount) {
    injection.Mount = InjectedMount;
    if ("production" !== "development") {
      ("production" !== "development" ? invariant(
        InjectedMount && InjectedMount.getNode,
        'EventPluginUtils.injection.injectMount(...): Injected Mount module ' +
        'is missing getNode.'
      ) : invariant(InjectedMount && InjectedMount.getNode));
    }
  }
};

var topLevelTypes = EventConstants.topLevelTypes;

function isEndish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseUp ||
         topLevelType === topLevelTypes.topTouchEnd ||
         topLevelType === topLevelTypes.topTouchCancel;
}

function isMoveish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseMove ||
         topLevelType === topLevelTypes.topTouchMove;
}
function isStartish(topLevelType) {
  return topLevelType === topLevelTypes.topMouseDown ||
         topLevelType === topLevelTypes.topTouchStart;
}


var validateEventDispatches;
if ("production" !== "development") {
  validateEventDispatches = function(event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchIDs = event._dispatchIDs;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var idsIsArr = Array.isArray(dispatchIDs);
    var IDsLen = idsIsArr ? dispatchIDs.length : dispatchIDs ? 1 : 0;
    var listenersLen = listenersIsArr ?
      dispatchListeners.length :
      dispatchListeners ? 1 : 0;

    ("production" !== "development" ? invariant(
      idsIsArr === listenersIsArr && IDsLen === listenersLen,
      'EventPluginUtils: Invalid `event`.'
    ) : invariant(idsIsArr === listenersIsArr && IDsLen === listenersLen));
  };
}

/**
 * Invokes `cb(event, listener, id)`. Avoids using call if no scope is
 * provided. The `(listener,id)` pair effectively forms the "dispatch" but are
 * kept separate to conserve memory.
 */
function forEachEventDispatch(event, cb) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      cb(event, dispatchListeners[i], dispatchIDs[i]);
    }
  } else if (dispatchListeners) {
    cb(event, dispatchListeners, dispatchIDs);
  }
}

/**
 * Default implementation of PluginModule.executeDispatch().
 * @param {SyntheticEvent} SyntheticEvent to handle
 * @param {function} Application-level callback
 * @param {string} domID DOM id to pass to the callback.
 */
function executeDispatch(event, listener, domID) {
  event.currentTarget = injection.Mount.getNode(domID);
  var returnValue = listener(event, domID);
  event.currentTarget = null;
  return returnValue;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, executeDispatch) {
  forEachEventDispatch(event, executeDispatch);
  event._dispatchListeners = null;
  event._dispatchIDs = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return id of the first dispatch execution who's listener returns true, or
 * null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchIDs = event._dispatchIDs;
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and IDs are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchIDs[i])) {
        return dispatchIDs[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchIDs)) {
      return dispatchIDs;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchIDs = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if ("production" !== "development") {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchID = event._dispatchIDs;
  ("production" !== "development" ? invariant(
    !Array.isArray(dispatchListener),
    'executeDirectDispatch(...): Invalid `event`.'
  ) : invariant(!Array.isArray(dispatchListener)));
  var res = dispatchListener ?
    dispatchListener(event, dispatchID) :
    null;
  event._dispatchListeners = null;
  event._dispatchIDs = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {bool} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatch: executeDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,
  injection: injection,
  useTouchEvents: false
};

module.exports = EventPluginUtils;

},{"./EventConstants":16,"./invariant":126}],21:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule EventPropagators
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");

var PropagationPhases = EventConstants.PropagationPhases;
var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(id, event, propagationPhase) {
  var registrationName =
    event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(id, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(domID, upwards, event) {
  if ("production" !== "development") {
    if (!domID) {
      throw new Error('Dispatching id must not be null');
    }
  }
  var phase = upwards ? PropagationPhases.bubbled : PropagationPhases.captured;
  var listener = listenerAtPhase(domID, event, phase);
  if (listener) {
    event._dispatchListeners =
      accumulateInto(event._dispatchListeners, listener);
    event._dispatchIDs = accumulateInto(event._dispatchIDs, domID);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We can not perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginHub.injection.getInstanceHandle().traverseTwoPhase(
      event.dispatchMarker,
      accumulateDirectionalDispatches,
      event
    );
  }
}


/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(id, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(id, registrationName);
    if (listener) {
      event._dispatchListeners =
        accumulateInto(event._dispatchListeners, listener);
      event._dispatchIDs = accumulateInto(event._dispatchIDs, id);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event.dispatchMarker, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateEnterLeaveDispatches(leave, enter, fromID, toID) {
  EventPluginHub.injection.getInstanceHandle().traverseEnterLeave(
    fromID,
    toID,
    accumulateDispatches,
    leave,
    enter
  );
}


function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}



/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;

},{"./EventConstants":16,"./EventPluginHub":18,"./accumulateInto":97,"./forEachAccumulated":112}],22:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ExecutionEnvironment
 */

/*jslint evil: true */

"use strict";

var canUseDOM = !!(
  typeof window !== 'undefined' &&
  window.document &&
  window.document.createElement
);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners:
    canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

},{}],23:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule HTMLDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;
var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_SIDE_EFFECTS = DOMProperty.injection.HAS_SIDE_EFFECTS;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE =
  DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE =
  DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var hasSVG;
if (ExecutionEnvironment.canUseDOM) {
  var implementation = document.implementation;
  hasSVG = (
    implementation &&
    implementation.hasFeature &&
    implementation.hasFeature(
      'http://www.w3.org/TR/SVG11/feature#BasicStructure',
      '1.1'
    )
  );
}


var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(
    /^(data|aria)-[a-z_][a-z\d_.\-]*$/
  ),
  Properties: {
    /**
     * Standard Properties
     */
    accept: null,
    acceptCharset: null,
    accessKey: null,
    action: null,
    allowFullScreen: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    allowTransparency: MUST_USE_ATTRIBUTE,
    alt: null,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: null,
    // autoFocus is polyfilled/normalized by AutoFocusMixin
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    cellPadding: null,
    cellSpacing: null,
    charSet: MUST_USE_ATTRIBUTE,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    classID: MUST_USE_ATTRIBUTE,
    // To set className on SVG elements, it's necessary to use .setAttribute;
    // this works on HTML elements too in all browsers except IE8. Conveniently,
    // IE8 doesn't support SVG and so we can simply use the attribute in
    // browsers that support SVG and the property in browsers that don't,
    // regardless of whether the element is HTML or SVG.
    className: hasSVG ? MUST_USE_ATTRIBUTE : MUST_USE_PROPERTY,
    cols: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: null,
    content: null,
    contentEditable: null,
    contextMenu: MUST_USE_ATTRIBUTE,
    controls: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    coords: null,
    crossOrigin: null,
    data: null, // For `<object />` acts as `src`.
    dateTime: MUST_USE_ATTRIBUTE,
    defer: HAS_BOOLEAN_VALUE,
    dir: null,
    disabled: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: null,
    encType: null,
    form: MUST_USE_ATTRIBUTE,
    formAction: MUST_USE_ATTRIBUTE,
    formEncType: MUST_USE_ATTRIBUTE,
    formMethod: MUST_USE_ATTRIBUTE,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: MUST_USE_ATTRIBUTE,
    frameBorder: MUST_USE_ATTRIBUTE,
    height: MUST_USE_ATTRIBUTE,
    hidden: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    href: null,
    hrefLang: null,
    htmlFor: null,
    httpEquiv: null,
    icon: null,
    id: MUST_USE_PROPERTY,
    label: null,
    lang: null,
    list: MUST_USE_ATTRIBUTE,
    loop: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    manifest: MUST_USE_ATTRIBUTE,
    marginHeight: null,
    marginWidth: null,
    max: null,
    maxLength: MUST_USE_ATTRIBUTE,
    media: MUST_USE_ATTRIBUTE,
    mediaGroup: null,
    method: null,
    min: null,
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: null,
    noValidate: HAS_BOOLEAN_VALUE,
    open: null,
    pattern: null,
    placeholder: null,
    poster: null,
    preload: null,
    radioGroup: null,
    readOnly: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    rel: null,
    required: HAS_BOOLEAN_VALUE,
    role: MUST_USE_ATTRIBUTE,
    rows: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: null,
    sandbox: null,
    scope: null,
    scrolling: null,
    seamless: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: null,
    size: MUST_USE_ATTRIBUTE | HAS_POSITIVE_NUMERIC_VALUE,
    sizes: MUST_USE_ATTRIBUTE,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: null,
    src: null,
    srcDoc: MUST_USE_PROPERTY,
    srcSet: MUST_USE_ATTRIBUTE,
    start: HAS_NUMERIC_VALUE,
    step: null,
    style: null,
    tabIndex: null,
    target: null,
    title: null,
    type: null,
    useMap: null,
    value: MUST_USE_PROPERTY | HAS_SIDE_EFFECTS,
    width: MUST_USE_ATTRIBUTE,
    wmode: MUST_USE_ATTRIBUTE,

    /**
     * Non-standard Properties
     */
    autoCapitalize: null, // Supported in Mobile Safari for keyboard hints
    autoCorrect: null, // Supported in Mobile Safari for keyboard hints
    itemProp: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
    itemScope: MUST_USE_ATTRIBUTE | HAS_BOOLEAN_VALUE, // Microdata: http://schema.org/docs/gs.html
    itemType: MUST_USE_ATTRIBUTE, // Microdata: http://schema.org/docs/gs.html
    property: null // Supports OG in meta tags
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {
    autoCapitalize: 'autocapitalize',
    autoComplete: 'autocomplete',
    autoCorrect: 'autocorrect',
    autoFocus: 'autofocus',
    autoPlay: 'autoplay',
    encType: 'enctype',
    hrefLang: 'hreflang',
    radioGroup: 'radiogroup',
    spellCheck: 'spellcheck',
    srcDoc: 'srcdoc',
    srcSet: 'srcset'
  }
};

module.exports = HTMLDOMPropertyConfig;

},{"./DOMProperty":11,"./ExecutionEnvironment":22}],24:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LinkedValueUtils
 * @typechecks static-only
 */

"use strict";

var ReactPropTypes = _dereq_("./ReactPropTypes");

var invariant = _dereq_("./invariant");

var hasReadOnlyValue = {
  'button': true,
  'checkbox': true,
  'image': true,
  'hidden': true,
  'radio': true,
  'reset': true,
  'submit': true
};

function _assertSingleLink(input) {
  ("production" !== "development" ? invariant(
    input.props.checkedLink == null || input.props.valueLink == null,
    'Cannot provide a checkedLink and a valueLink. If you want to use ' +
    'checkedLink, you probably don\'t want to use valueLink and vice versa.'
  ) : invariant(input.props.checkedLink == null || input.props.valueLink == null));
}
function _assertValueLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.value == null && input.props.onChange == null,
    'Cannot provide a valueLink and a value or onChange event. If you want ' +
    'to use value or onChange, you probably don\'t want to use valueLink.'
  ) : invariant(input.props.value == null && input.props.onChange == null));
}

function _assertCheckedLink(input) {
  _assertSingleLink(input);
  ("production" !== "development" ? invariant(
    input.props.checked == null && input.props.onChange == null,
    'Cannot provide a checkedLink and a checked property or onChange event. ' +
    'If you want to use checked or onChange, you probably don\'t want to ' +
    'use checkedLink'
  ) : invariant(input.props.checked == null && input.props.onChange == null));
}

/**
 * @param {SyntheticEvent} e change event to handle
 */
function _handleLinkedValueChange(e) {
  /*jshint validthis:true */
  this.props.valueLink.requestChange(e.target.value);
}

/**
  * @param {SyntheticEvent} e change event to handle
  */
function _handleLinkedCheckChange(e) {
  /*jshint validthis:true */
  this.props.checkedLink.requestChange(e.target.checked);
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  Mixin: {
    propTypes: {
      value: function(props, propName, componentName) {
        if (!props[propName] ||
            hasReadOnlyValue[props.type] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return;
        }
        return new Error(
          'You provided a `value` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultValue`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      checked: function(props, propName, componentName) {
        if (!props[propName] ||
            props.onChange ||
            props.readOnly ||
            props.disabled) {
          return;
        }
        return new Error(
          'You provided a `checked` prop to a form field without an ' +
          '`onChange` handler. This will render a read-only field. If ' +
          'the field should be mutable use `defaultChecked`. Otherwise, ' +
          'set either `onChange` or `readOnly`.'
        );
      },
      onChange: ReactPropTypes.func
    }
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return input.props.valueLink.value;
    }
    return input.props.value;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function(input) {
    if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return input.props.checkedLink.value;
    }
    return input.props.checked;
  },

  /**
   * @param {ReactComponent} input Form component
   * @return {function} change callback either from onChange prop or link.
   */
  getOnChange: function(input) {
    if (input.props.valueLink) {
      _assertValueLink(input);
      return _handleLinkedValueChange;
    } else if (input.props.checkedLink) {
      _assertCheckedLink(input);
      return _handleLinkedCheckChange;
    }
    return input.props.onChange;
  }
};

module.exports = LinkedValueUtils;

},{"./ReactPropTypes":72,"./invariant":126}],25:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule LocalEventTrapMixin
 */

"use strict";

var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

var accumulateInto = _dereq_("./accumulateInto");
var forEachAccumulated = _dereq_("./forEachAccumulated");
var invariant = _dereq_("./invariant");

function remove(event) {
  event.remove();
}

var LocalEventTrapMixin = {
  trapBubbledEvent:function(topLevelType, handlerBaseName) {
    ("production" !== "development" ? invariant(this.isMounted(), 'Must be mounted to trap events') : invariant(this.isMounted()));
    var listener = ReactBrowserEventEmitter.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      this.getDOMNode()
    );
    this._localEventListeners =
      accumulateInto(this._localEventListeners, listener);
  },

  // trapCapturedEvent would look nearly identical. We don't implement that
  // method because it isn't currently needed.

  componentWillUnmount:function() {
    if (this._localEventListeners) {
      forEachAccumulated(this._localEventListeners, remove);
    }
  }
};

module.exports = LocalEventTrapMixin;

},{"./ReactBrowserEventEmitter":30,"./accumulateInto":97,"./forEachAccumulated":112,"./invariant":126}],26:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule MobileSafariClickEventPlugin
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");

var emptyFunction = _dereq_("./emptyFunction");

var topLevelTypes = EventConstants.topLevelTypes;

/**
 * Mobile Safari does not fire properly bubble click events on non-interactive
 * elements, which means delegated click listeners do not fire. The workaround
 * for this bug involves attaching an empty click listener on the target node.
 *
 * This particular plugin works around the bug by attaching an empty click
 * listener on `touchstart` (which does fire on every element).
 */
var MobileSafariClickEventPlugin = {

  eventTypes: null,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    if (topLevelType === topLevelTypes.topTouchStart) {
      var target = nativeEvent.target;
      if (target && !target.onclick) {
        target.onclick = emptyFunction;
      }
    }
  }

};

module.exports = MobileSafariClickEventPlugin;

},{"./EventConstants":16,"./emptyFunction":107}],27:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Object.assign
 */

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign

function assign(target, sources) {
  if (target == null) {
    throw new TypeError('Object.assign target cannot be null or undefined');
  }

  var to = Object(target);
  var hasOwnProperty = Object.prototype.hasOwnProperty;

  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {
    var nextSource = arguments[nextIndex];
    if (nextSource == null) {
      continue;
    }

    var from = Object(nextSource);

    // We don't currently support accessors nor proxies. Therefore this
    // copy cannot throw. If we ever supported this then we must handle
    // exceptions and side-effects. We don't support symbols so they won't
    // be transferred.

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }
  }

  return to;
};

module.exports = assign;

},{}],28:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule PooledClass
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function(copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function(a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function(a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fiveArgumentPooler = function(a1, a2, a3, a4, a5) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4, a5);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4, a5);
  }
};

var standardReleaser = function(instance) {
  var Klass = this;
  ("production" !== "development" ? invariant(
    instance instanceof Klass,
    'Trying to release an instance into a pool of a different type.'
  ) : invariant(instance instanceof Klass));
  if (instance.destructor) {
    instance.destructor();
  }
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances (optional).
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function(CopyConstructor, pooler) {
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fiveArgumentPooler: fiveArgumentPooler
};

module.exports = PooledClass;

},{"./invariant":126}],29:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserComponentMixin
 */

"use strict";

var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactMount = _dereq_("./ReactMount");

var invariant = _dereq_("./invariant");

var ReactBrowserComponentMixin = {
  /**
   * Returns the DOM node rendered by this component.
   *
   * @return {DOMElement} The root node of this component.
   * @final
   * @protected
   */
  getDOMNode: function() {
    ("production" !== "development" ? invariant(
      this.isMounted(),
      'getDOMNode(): A component must be mounted to have a DOM node.'
    ) : invariant(this.isMounted()));
    if (ReactEmptyComponent.isNullComponentID(this._rootNodeID)) {
      return null;
    }
    return ReactMount.getNode(this._rootNodeID);
  }
};

module.exports = ReactBrowserComponentMixin;

},{"./ReactEmptyComponent":54,"./ReactMount":63,"./invariant":126}],30:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactBrowserEventEmitter
 * @typechecks static-only
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginHub = _dereq_("./EventPluginHub");
var EventPluginRegistry = _dereq_("./EventPluginRegistry");
var ReactEventEmitterMixin = _dereq_("./ReactEventEmitterMixin");
var ViewportMetrics = _dereq_("./ViewportMetrics");

var assign = _dereq_("./Object.assign");
var isEventSupported = _dereq_("./isEventSupported");

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topBlur: 'blur',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topScroll: 'scroll',
  topSelectionChange: 'selectionchange',
  topTextInput: 'textInput',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = "_reactListenersID" + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   ReactBrowserEventEmitter.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = assign({}, ReactEventEmitterMixin, {

  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function(ReactEventListener) {
      ReactEventListener.setHandleTopLevel(
        ReactBrowserEventEmitter.handleTopLevel
      );
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function(enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function() {
    return !!(
      ReactBrowserEventEmitter.ReactEventListener &&
      ReactBrowserEventEmitter.ReactEventListener.isEnabled()
    );
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function(registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.
      registrationNameDependencies[registrationName];

    var topLevelTypes = EventConstants.topLevelTypes;
    for (var i = 0, l = dependencies.length; i < l; i++) {
      var dependency = dependencies[i];
      if (!(
            isListening.hasOwnProperty(dependency) &&
            isListening[dependency]
          )) {
        if (dependency === topLevelTypes.topWheel) {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'wheel',
              mountAt
            );
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'mousewheel',
              mountAt
            );
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topWheel,
              'DOMMouseScroll',
              mountAt
            );
          }
        } else if (dependency === topLevelTypes.topScroll) {

          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topScroll,
              'scroll',
              mountAt
            );
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topScroll,
              'scroll',
              ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE
            );
          }
        } else if (dependency === topLevelTypes.topFocus ||
            dependency === topLevelTypes.topBlur) {

          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topFocus,
              'focus',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
              topLevelTypes.topBlur,
              'blur',
              mountAt
            );
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topFocus,
              'focusin',
              mountAt
            );
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
              topLevelTypes.topBlur,
              'focusout',
              mountAt
            );
          }

          // to make sure blur and focus event listeners are only attached once
          isListening[topLevelTypes.topBlur] = true;
          isListening[topLevelTypes.topFocus] = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
            dependency,
            topEventMapping[dependency],
            mountAt
          );
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(
      topLevelType,
      handlerBaseName,
      handle
    );
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function(){
    if (!isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  },

  eventNameDispatchConfigs: EventPluginHub.eventNameDispatchConfigs,

  registrationNameModules: EventPluginHub.registrationNameModules,

  putListener: EventPluginHub.putListener,

  getListener: EventPluginHub.getListener,

  deleteListener: EventPluginHub.deleteListener,

  deleteAllListeners: EventPluginHub.deleteAllListeners

});

module.exports = ReactBrowserEventEmitter;

},{"./EventConstants":16,"./EventPluginHub":18,"./EventPluginRegistry":19,"./Object.assign":27,"./ReactEventEmitterMixin":56,"./ViewportMetrics":96,"./isEventSupported":127}],31:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactChildren
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var traverseAllChildren = _dereq_("./traverseAllChildren");
var warning = _dereq_("./warning");

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var threeArgumentPooler = PooledClass.threeArgumentPooler;

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.forEachFunction = forEachFunction;
  this.forEachContext = forEachContext;
}
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(traverseContext, child, name, i) {
  var forEachBookKeeping = traverseContext;
  forEachBookKeeping.forEachFunction.call(
    forEachBookKeeping.forEachContext, child, i);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc.
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }

  var traverseContext =
    ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, mapFunction, mapContext) {
  this.mapResult = mapResult;
  this.mapFunction = mapFunction;
  this.mapContext = mapContext;
}
PooledClass.addPoolingTo(MapBookKeeping, threeArgumentPooler);

function mapSingleChildIntoContext(traverseContext, child, name, i) {
  var mapBookKeeping = traverseContext;
  var mapResult = mapBookKeeping.mapResult;

  var keyUnique = !mapResult.hasOwnProperty(name);
  ("production" !== "development" ? warning(
    keyUnique,
    'ReactChildren.map(...): Encountered two children with the same key, ' +
    '`%s`. Child keys must be unique; when two children share a key, only ' +
    'the first child will be used.',
    name
  ) : null);

  if (keyUnique) {
    var mappedChild =
      mapBookKeeping.mapFunction.call(mapBookKeeping.mapContext, child, i);
    mapResult[name] = mappedChild;
  }
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * TODO: This may likely break any calls to `ReactChildren.map` that were
 * previously relying on the fact that we guarded against null children.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} mapFunction.
 * @param {*} mapContext Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }

  var mapResult = {};
  var traverseContext = MapBookKeeping.getPooled(mapResult, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
  return mapResult;
}

function forEachSingleChildDummy(traverseContext, child, name, i) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  count: countChildren
};

module.exports = ReactChildren;

},{"./PooledClass":28,"./traverseAllChildren":144,"./warning":145}],32:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponent
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactOwner = _dereq_("./ReactOwner");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");
var keyMirror = _dereq_("./keyMirror");

/**
 * Every React component is in one of these life cycles.
 */
var ComponentLifeCycle = keyMirror({
  /**
   * Mounted components have a DOM node representation and are capable of
   * receiving new props.
   */
  MOUNTED: null,
  /**
   * Unmounted components are inactive and cannot receive new props.
   */
  UNMOUNTED: null
});

var injected = false;

/**
 * Optionally injectable environment dependent cleanup hook. (server vs.
 * browser etc). Example: A browser system caches DOM nodes based on component
 * ID and must remove that cache entry when this instance is unmounted.
 *
 * @private
 */
var unmountIDFromEnvironment = null;

/**
 * The "image" of a component tree, is the platform specific (typically
 * serialized) data that represents a tree of lower level UI building blocks.
 * On the web, this "image" is HTML markup which describes a construction of
 * low level `div` and `span` nodes. Other platforms may have different
 * encoding of this "image". This must be injected.
 *
 * @private
 */
var mountImageIntoNode = null;

/**
 * Components are the basic units of composition in React.
 *
 * Every component accepts a set of keyed input parameters known as "props" that
 * are initialized by the constructor. Once a component is mounted, the props
 * can be mutated using `setProps` or `replaceProps`.
 *
 * Every component is capable of the following operations:
 *
 *   `mountComponent`
 *     Initializes the component, renders markup, and registers event listeners.
 *
 *   `receiveComponent`
 *     Updates the rendered DOM nodes to match the given component.
 *
 *   `unmountComponent`
 *     Releases any resources allocated by this component.
 *
 * Components can also be "owned" by other components. Being owned by another
 * component means being constructed by that component. This is different from
 * being the child of a component, which means having a DOM representation that
 * is a child of the DOM representation of that component.
 *
 * @class ReactComponent
 */
var ReactComponent = {

  injection: {
    injectEnvironment: function(ReactComponentEnvironment) {
      ("production" !== "development" ? invariant(
        !injected,
        'ReactComponent: injectEnvironment() can only be called once.'
      ) : invariant(!injected));
      mountImageIntoNode = ReactComponentEnvironment.mountImageIntoNode;
      unmountIDFromEnvironment =
        ReactComponentEnvironment.unmountIDFromEnvironment;
      ReactComponent.BackendIDOperations =
        ReactComponentEnvironment.BackendIDOperations;
      injected = true;
    }
  },

  /**
   * @internal
   */
  LifeCycle: ComponentLifeCycle,

  /**
   * Injected module that provides ability to mutate individual properties.
   * Injected into the base class because many different subclasses need access
   * to this.
   *
   * @internal
   */
  BackendIDOperations: null,

  /**
   * Base functionality for every ReactComponent constructor. Mixed into the
   * `ReactComponent` prototype, but exposed statically for easy access.
   *
   * @lends {ReactComponent.prototype}
   */
  Mixin: {

    /**
     * Checks whether or not this component is mounted.
     *
     * @return {boolean} True if mounted, false otherwise.
     * @final
     * @protected
     */
    isMounted: function() {
      return this._lifeCycleState === ComponentLifeCycle.MOUNTED;
    },

    /**
     * Sets a subset of the props.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    setProps: function(partialProps, callback) {
      // Merge with the pending element if it exists, otherwise with existing
      // element props.
      var element = this._pendingElement || this._currentElement;
      this.replaceProps(
        assign({}, element.props, partialProps),
        callback
      );
    },

    /**
     * Replaces all of the props.
     *
     * @param {object} props New props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @public
     */
    replaceProps: function(props, callback) {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'replaceProps(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      ("production" !== "development" ? invariant(
        this._mountDepth === 0,
        'replaceProps(...): You called `setProps` or `replaceProps` on a ' +
        'component with a parent. This is an anti-pattern since props will ' +
        'get reactively updated when rendered. Instead, change the owner\'s ' +
        '`render` method to pass the correct value as props to the component ' +
        'where it is created.'
      ) : invariant(this._mountDepth === 0));
      // This is a deoptimized path. We optimize for always having a element.
      // This creates an extra internal element.
      this._pendingElement = ReactElement.cloneAndReplaceProps(
        this._pendingElement || this._currentElement,
        props
      );
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Schedule a partial update to the props. Only used for internal testing.
     *
     * @param {object} partialProps Subset of the next props.
     * @param {?function} callback Called after props are updated.
     * @final
     * @internal
     */
    _setPropsInternal: function(partialProps, callback) {
      // This is a deoptimized path. We optimize for always having a element.
      // This creates an extra internal element.
      var element = this._pendingElement || this._currentElement;
      this._pendingElement = ReactElement.cloneAndReplaceProps(
        element,
        assign({}, element.props, partialProps)
      );
      ReactUpdates.enqueueUpdate(this, callback);
    },

    /**
     * Base constructor for all React components.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.construct.call(this, ...)`.
     *
     * @param {ReactElement} element
     * @internal
     */
    construct: function(element) {
      // This is the public exposed props object after it has been processed
      // with default props. The element's props represents the true internal
      // state of the props.
      this.props = element.props;
      // Record the component responsible for creating this component.
      // This is accessible through the element but we maintain an extra
      // field for compatibility with devtools and as a way to make an
      // incremental update. TODO: Consider deprecating this field.
      this._owner = element._owner;

      // All components start unmounted.
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;

      // See ReactUpdates.
      this._pendingCallbacks = null;

      // We keep the old element and a reference to the pending element
      // to track updates.
      this._currentElement = element;
      this._pendingElement = null;
    },

    /**
     * Initializes the component, renders markup, and registers event listeners.
     *
     * NOTE: This does not insert any nodes into the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.mountComponent.call(this, ...)`.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
     * @param {number} mountDepth number of components in the owner hierarchy.
     * @return {?string} Rendered markup to be inserted into the DOM.
     * @internal
     */
    mountComponent: function(rootID, transaction, mountDepth) {
      ("production" !== "development" ? invariant(
        !this.isMounted(),
        'mountComponent(%s, ...): Can only mount an unmounted component. ' +
        'Make sure to avoid storing components between renders or reusing a ' +
        'single component instance in multiple places.',
        rootID
      ) : invariant(!this.isMounted()));
      var ref = this._currentElement.ref;
      if (ref != null) {
        var owner = this._currentElement._owner;
        ReactOwner.addComponentAsRefTo(this, ref, owner);
      }
      this._rootNodeID = rootID;
      this._lifeCycleState = ComponentLifeCycle.MOUNTED;
      this._mountDepth = mountDepth;
      // Effectively: return '';
    },

    /**
     * Releases any resources allocated by `mountComponent`.
     *
     * NOTE: This does not remove any nodes from the DOM.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.unmountComponent.call(this)`.
     *
     * @internal
     */
    unmountComponent: function() {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'unmountComponent(): Can only unmount a mounted component.'
      ) : invariant(this.isMounted()));
      var ref = this._currentElement.ref;
      if (ref != null) {
        ReactOwner.removeComponentAsRefFrom(this, ref, this._owner);
      }
      unmountIDFromEnvironment(this._rootNodeID);
      this._rootNodeID = null;
      this._lifeCycleState = ComponentLifeCycle.UNMOUNTED;
    },

    /**
     * Given a new instance of this component, updates the rendered DOM nodes
     * as if that instance was rendered instead.
     *
     * Subclasses that override this method should make sure to invoke
     * `ReactComponent.Mixin.receiveComponent.call(this, ...)`.
     *
     * @param {object} nextComponent Next set of properties.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    receiveComponent: function(nextElement, transaction) {
      ("production" !== "development" ? invariant(
        this.isMounted(),
        'receiveComponent(...): Can only update a mounted component.'
      ) : invariant(this.isMounted()));
      this._pendingElement = nextElement;
      this.performUpdateIfNecessary(transaction);
    },

    /**
     * If `_pendingElement` is set, update the component.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    performUpdateIfNecessary: function(transaction) {
      if (this._pendingElement == null) {
        return;
      }
      var prevElement = this._currentElement;
      var nextElement = this._pendingElement;
      this._currentElement = nextElement;
      this.props = nextElement.props;
      this._owner = nextElement._owner;
      this._pendingElement = null;
      this.updateComponent(transaction, prevElement);
    },

    /**
     * Updates the component's currently mounted representation.
     *
     * @param {ReactReconcileTransaction} transaction
     * @param {object} prevElement
     * @internal
     */
    updateComponent: function(transaction, prevElement) {
      var nextElement = this._currentElement;

      // If either the owner or a `ref` has changed, make sure the newest owner
      // has stored a reference to `this`, and the previous owner (if different)
      // has forgotten the reference to `this`. We use the element instead
      // of the public this.props because the post processing cannot determine
      // a ref. The ref conceptually lives on the element.

      // TODO: Should this even be possible? The owner cannot change because
      // it's forbidden by shouldUpdateReactComponent. The ref can change
      // if you swap the keys of but not the refs. Reconsider where this check
      // is made. It probably belongs where the key checking and
      // instantiateReactComponent is done.

      if (nextElement._owner !== prevElement._owner ||
          nextElement.ref !== prevElement.ref) {
        if (prevElement.ref != null) {
          ReactOwner.removeComponentAsRefFrom(
            this, prevElement.ref, prevElement._owner
          );
        }
        // Correct, even if the owner is the same, and only the ref has changed.
        if (nextElement.ref != null) {
          ReactOwner.addComponentAsRefTo(
            this,
            nextElement.ref,
            nextElement._owner
          );
        }
      }
    },

    /**
     * Mounts this component and inserts it into the DOM.
     *
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @internal
     * @see {ReactMount.render}
     */
    mountComponentIntoNode: function(rootID, container, shouldReuseMarkup) {
      var transaction = ReactUpdates.ReactReconcileTransaction.getPooled();
      transaction.perform(
        this._mountComponentIntoNode,
        this,
        rootID,
        container,
        transaction,
        shouldReuseMarkup
      );
      ReactUpdates.ReactReconcileTransaction.release(transaction);
    },

    /**
     * @param {string} rootID DOM ID of the root node.
     * @param {DOMElement} container DOM element to mount into.
     * @param {ReactReconcileTransaction} transaction
     * @param {boolean} shouldReuseMarkup If true, do not insert markup
     * @final
     * @private
     */
    _mountComponentIntoNode: function(
        rootID,
        container,
        transaction,
        shouldReuseMarkup) {
      var markup = this.mountComponent(rootID, transaction, 0);
      mountImageIntoNode(markup, container, shouldReuseMarkup);
    },

    /**
     * Checks if this component is owned by the supplied `owner` component.
     *
     * @param {ReactComponent} owner Component to check.
     * @return {boolean} True if `owners` owns this component.
     * @final
     * @internal
     */
    isOwnedBy: function(owner) {
      return this._owner === owner;
    },

    /**
     * Gets another component, that shares the same owner as this one, by ref.
     *
     * @param {string} ref of a sibling Component.
     * @return {?ReactComponent} the actual sibling Component.
     * @final
     * @internal
     */
    getSiblingByRef: function(ref) {
      var owner = this._owner;
      if (!owner || !owner.refs) {
        return null;
      }
      return owner.refs[ref];
    }
  }
};

module.exports = ReactComponent;

},{"./Object.assign":27,"./ReactElement":52,"./ReactOwner":67,"./ReactUpdates":79,"./invariant":126,"./keyMirror":132}],33:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactComponentBrowserEnvironment
 */

/*jslint evil: true */

"use strict";

var ReactDOMIDOperations = _dereq_("./ReactDOMIDOperations");
var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");
var ReactReconcileTransaction = _dereq_("./ReactReconcileTransaction");

var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
var invariant = _dereq_("./invariant");
var setInnerHTML = _dereq_("./setInnerHTML");


var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;


/**
 * Abstracts away all functionality of `ReactComponent` requires knowledge of
 * the browser context.
 */
var ReactComponentBrowserEnvironment = {
  ReactReconcileTransaction: ReactReconcileTransaction,

  BackendIDOperations: ReactDOMIDOperations,

  /**
   * If a particular environment requires that some resources be cleaned up,
   * specify this in the injected Mixin. In the DOM, we would likely want to
   * purge any cached node ID lookups.
   *
   * @private
   */
  unmountIDFromEnvironment: function(rootNodeID) {
    ReactMount.purgeID(rootNodeID);
  },

  /**
   * @param {string} markup Markup string to place into the DOM Element.
   * @param {DOMElement} container DOM Element to insert markup into.
   * @param {boolean} shouldReuseMarkup Should reuse the existing markup in the
   * container if possible.
   */
  mountImageIntoNode: ReactPerf.measure(
    'ReactComponentBrowserEnvironment',
    'mountImageIntoNode',
    function(markup, container, shouldReuseMarkup) {
      ("production" !== "development" ? invariant(
        container && (
          container.nodeType === ELEMENT_NODE_TYPE ||
            container.nodeType === DOC_NODE_TYPE
        ),
        'mountComponentIntoNode(...): Target container is not valid.'
      ) : invariant(container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
          container.nodeType === DOC_NODE_TYPE
      )));

      if (shouldReuseMarkup) {
        if (ReactMarkupChecksum.canReuseMarkup(
          markup,
          getReactRootElementInContainer(container))) {
          return;
        } else {
          ("production" !== "development" ? invariant(
            container.nodeType !== DOC_NODE_TYPE,
            'You\'re trying to render a component to the document using ' +
            'server rendering but the checksum was invalid. This usually ' +
            'means you rendered a different component type or props on ' +
            'the client from the one on the server, or your render() ' +
            'methods are impure. React cannot handle this case due to ' +
            'cross-browser quirks by rendering at the document root. You ' +
            'should look for environment dependent code in your components ' +
            'and ensure the props are the same client and server side.'
          ) : invariant(container.nodeType !== DOC_NODE_TYPE));

          if ("production" !== "development") {
            console.warn(
              'React attempted to use reuse markup in a container but the ' +
              'checksum was invalid. This generally means that you are ' +
              'using server rendering and the markup generated on the ' +
              'server was not what the client was expecting. React injected ' +
              'new markup to compensate which works but you have lost many ' +
              'of the benefits of server rendering. Instead, figure out ' +
              'why the markup being generated is different on the client ' +
              'or server.'
            );
          }
        }
      }

      ("production" !== "development" ? invariant(
        container.nodeType !== DOC_NODE_TYPE,
        'You\'re trying to render a component to the document but ' +
          'you didn\'t use server rendering. We can\'t do this ' +
          'without using server rendering due to cross-browser quirks. ' +
          'See renderComponentToString() for server rendering.'
      ) : invariant(container.nodeType !== DOC_NODE_TYPE));

      setInnerHTML(container, markup);
    }
  )
};

module.exports = ReactComponentBrowserEnvironment;

},{"./ReactDOMIDOperations":41,"./ReactMarkupChecksum":62,"./ReactMount":63,"./ReactPerf":68,"./ReactReconcileTransaction":74,"./getReactRootElementInContainer":120,"./invariant":126,"./setInnerHTML":140}],34:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCompositeComponent
 */

"use strict";

var ReactComponent = _dereq_("./ReactComponent");
var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactErrorUtils = _dereq_("./ReactErrorUtils");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactOwner = _dereq_("./ReactOwner");
var ReactPerf = _dereq_("./ReactPerf");
var ReactPropTransferer = _dereq_("./ReactPropTransferer");
var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");
var keyMirror = _dereq_("./keyMirror");
var keyOf = _dereq_("./keyOf");
var monitorCodeUse = _dereq_("./monitorCodeUse");
var mapObject = _dereq_("./mapObject");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
var warning = _dereq_("./warning");

var MIXINS_KEY = keyOf({mixins: null});

/**
 * Policies that describe methods in `ReactCompositeComponentInterface`.
 */
var SpecPolicy = keyMirror({
  /**
   * These methods may be defined only once by the class specification or mixin.
   */
  DEFINE_ONCE: null,
  /**
   * These methods may be defined by both the class specification and mixins.
   * Subsequent definitions will be chained. These methods must return void.
   */
  DEFINE_MANY: null,
  /**
   * These methods are overriding the base ReactCompositeComponent class.
   */
  OVERRIDE_BASE: null,
  /**
   * These methods are similar to DEFINE_MANY, except we assume they return
   * objects. We try to merge the keys of the return values of all the mixed in
   * functions. If there is a key conflict we throw.
   */
  DEFINE_MANY_MERGED: null
});


var injectedMixins = [];

/**
 * Composite components are higher-level components that compose other composite
 * or native components.
 *
 * To create a new type of `ReactCompositeComponent`, pass a specification of
 * your new class to `React.createClass`. The only requirement of your class
 * specification is that you implement a `render` method.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return <div>Hello World</div>;
 *     }
 *   });
 *
 * The class specification supports a specific protocol of methods that have
 * special meaning (e.g. `render`). See `ReactCompositeComponentInterface` for
 * more the comprehensive protocol. Any other properties and methods in the
 * class specification will available on the prototype.
 *
 * @interface ReactCompositeComponentInterface
 * @internal
 */
var ReactCompositeComponentInterface = {

  /**
   * An array of Mixin objects to include when defining your component.
   *
   * @type {array}
   * @optional
   */
  mixins: SpecPolicy.DEFINE_MANY,

  /**
   * An object containing properties and methods that should be defined on
   * the component's constructor instead of its prototype (static methods).
   *
   * @type {object}
   * @optional
   */
  statics: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of prop types for this component.
   *
   * @type {object}
   * @optional
   */
  propTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types for this component.
   *
   * @type {object}
   * @optional
   */
  contextTypes: SpecPolicy.DEFINE_MANY,

  /**
   * Definition of context types this component sets for its children.
   *
   * @type {object}
   * @optional
   */
  childContextTypes: SpecPolicy.DEFINE_MANY,

  // ==== Definition methods ====

  /**
   * Invoked when the component is mounted. Values in the mapping will be set on
   * `this.props` if that prop is not specified (i.e. using an `in` check).
   *
   * This method is invoked before `getInitialState` and therefore cannot rely
   * on `this.state` or use `this.setState`.
   *
   * @return {object}
   * @optional
   */
  getDefaultProps: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Invoked once before the component is mounted. The return value will be used
   * as the initial value of `this.state`.
   *
   *   getInitialState: function() {
   *     return {
   *       isOn: false,
   *       fooBaz: new BazFoo()
   *     }
   *   }
   *
   * @return {object}
   * @optional
   */
  getInitialState: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * @return {object}
   * @optional
   */
  getChildContext: SpecPolicy.DEFINE_MANY_MERGED,

  /**
   * Uses props from `this.props` and state from `this.state` to render the
   * structure of the component.
   *
   * No guarantees are made about when or how often this method is invoked, so
   * it must not have side effects.
   *
   *   render: function() {
   *     var name = this.props.name;
   *     return <div>Hello, {name}!</div>;
   *   }
   *
   * @return {ReactComponent}
   * @nosideeffects
   * @required
   */
  render: SpecPolicy.DEFINE_ONCE,



  // ==== Delegate methods ====

  /**
   * Invoked when the component is initially created and about to be mounted.
   * This may have side effects, but any external subscriptions or data created
   * by this method must be cleaned up in `componentWillUnmount`.
   *
   * @optional
   */
  componentWillMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component has been mounted and has a DOM representation.
   * However, there is no guarantee that the DOM node is in the document.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been mounted (initialized and rendered) for the first time.
   *
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidMount: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked before the component receives new props.
   *
   * Use this as an opportunity to react to a prop transition by updating the
   * state using `this.setState`. Current props are accessed via `this.props`.
   *
   *   componentWillReceiveProps: function(nextProps, nextContext) {
   *     this.setState({
   *       likesIncreasing: nextProps.likeCount > this.props.likeCount
   *     });
   *   }
   *
   * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
   * transition may cause a state change, but the opposite is not true. If you
   * need it, you are probably looking for `componentWillUpdate`.
   *
   * @param {object} nextProps
   * @optional
   */
  componentWillReceiveProps: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked while deciding if the component should be updated as a result of
   * receiving new props, state and/or context.
   *
   * Use this as an opportunity to `return false` when you're certain that the
   * transition to the new props/state/context will not require a component
   * update.
   *
   *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
   *     return !equal(nextProps, this.props) ||
   *       !equal(nextState, this.state) ||
   *       !equal(nextContext, this.context);
   *   }
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @return {boolean} True if the component should update.
   * @optional
   */
  shouldComponentUpdate: SpecPolicy.DEFINE_ONCE,

  /**
   * Invoked when the component is about to update due to a transition from
   * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
   * and `nextContext`.
   *
   * Use this as an opportunity to perform preparation before an update occurs.
   *
   * NOTE: You **cannot** use `this.setState()` in this method.
   *
   * @param {object} nextProps
   * @param {?object} nextState
   * @param {?object} nextContext
   * @param {ReactReconcileTransaction} transaction
   * @optional
   */
  componentWillUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component's DOM representation has been updated.
   *
   * Use this as an opportunity to operate on the DOM when the component has
   * been updated.
   *
   * @param {object} prevProps
   * @param {?object} prevState
   * @param {?object} prevContext
   * @param {DOMElement} rootNode DOM element representing the component.
   * @optional
   */
  componentDidUpdate: SpecPolicy.DEFINE_MANY,

  /**
   * Invoked when the component is about to be removed from its parent and have
   * its DOM representation destroyed.
   *
   * Use this as an opportunity to deallocate any external resources.
   *
   * NOTE: There is no `componentDidUnmount` since your component will have been
   * destroyed by that point.
   *
   * @optional
   */
  componentWillUnmount: SpecPolicy.DEFINE_MANY,



  // ==== Advanced methods ====

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   * @overridable
   */
  updateComponent: SpecPolicy.OVERRIDE_BASE

};

/**
 * Mapping from class specification keys to special processing functions.
 *
 * Although these are declared like instance properties in the specification
 * when defining classes using `React.createClass`, they are actually static
 * and are accessible on the constructor instead of the prototype. Despite
 * being static, they must be defined outside of the "statics" key under
 * which all other static methods are defined.
 */
var RESERVED_SPEC_KEYS = {
  displayName: function(Constructor, displayName) {
    Constructor.displayName = displayName;
  },
  mixins: function(Constructor, mixins) {
    if (mixins) {
      for (var i = 0; i < mixins.length; i++) {
        mixSpecIntoComponent(Constructor, mixins[i]);
      }
    }
  },
  childContextTypes: function(Constructor, childContextTypes) {
    validateTypeDef(
      Constructor,
      childContextTypes,
      ReactPropTypeLocations.childContext
    );
    Constructor.childContextTypes = assign(
      {},
      Constructor.childContextTypes,
      childContextTypes
    );
  },
  contextTypes: function(Constructor, contextTypes) {
    validateTypeDef(
      Constructor,
      contextTypes,
      ReactPropTypeLocations.context
    );
    Constructor.contextTypes = assign(
      {},
      Constructor.contextTypes,
      contextTypes
    );
  },
  /**
   * Special case getDefaultProps which should move into statics but requires
   * automatic merging.
   */
  getDefaultProps: function(Constructor, getDefaultProps) {
    if (Constructor.getDefaultProps) {
      Constructor.getDefaultProps = createMergedResultFunction(
        Constructor.getDefaultProps,
        getDefaultProps
      );
    } else {
      Constructor.getDefaultProps = getDefaultProps;
    }
  },
  propTypes: function(Constructor, propTypes) {
    validateTypeDef(
      Constructor,
      propTypes,
      ReactPropTypeLocations.prop
    );
    Constructor.propTypes = assign(
      {},
      Constructor.propTypes,
      propTypes
    );
  },
  statics: function(Constructor, statics) {
    mixStaticSpecIntoComponent(Constructor, statics);
  }
};

function getDeclarationErrorAddendum(component) {
  var owner = component._owner || null;
  if (owner && owner.constructor && owner.constructor.displayName) {
    return ' Check the render method of `' + owner.constructor.displayName +
      '`.';
  }
  return '';
}

function validateTypeDef(Constructor, typeDef, location) {
  for (var propName in typeDef) {
    if (typeDef.hasOwnProperty(propName)) {
      ("production" !== "development" ? invariant(
        typeof typeDef[propName] == 'function',
        '%s: %s type `%s` is invalid; it must be a function, usually from ' +
        'React.PropTypes.',
        Constructor.displayName || 'ReactCompositeComponent',
        ReactPropTypeLocationNames[location],
        propName
      ) : invariant(typeof typeDef[propName] == 'function'));
    }
  }
}

function validateMethodOverride(proto, name) {
  var specPolicy = ReactCompositeComponentInterface.hasOwnProperty(name) ?
    ReactCompositeComponentInterface[name] :
    null;

  // Disallow overriding of base class methods unless explicitly allowed.
  if (ReactCompositeComponentMixin.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.OVERRIDE_BASE,
      'ReactCompositeComponentInterface: You are attempting to override ' +
      '`%s` from your class specification. Ensure that your method names ' +
      'do not overlap with React methods.',
      name
    ) : invariant(specPolicy === SpecPolicy.OVERRIDE_BASE));
  }

  // Disallow defining methods more than once unless explicitly allowed.
  if (proto.hasOwnProperty(name)) {
    ("production" !== "development" ? invariant(
      specPolicy === SpecPolicy.DEFINE_MANY ||
      specPolicy === SpecPolicy.DEFINE_MANY_MERGED,
      'ReactCompositeComponentInterface: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be due ' +
      'to a mixin.',
      name
    ) : invariant(specPolicy === SpecPolicy.DEFINE_MANY ||
    specPolicy === SpecPolicy.DEFINE_MANY_MERGED));
  }
}

function validateLifeCycleOnReplaceState(instance) {
  var compositeLifeCycleState = instance._compositeLifeCycleState;
  ("production" !== "development" ? invariant(
    instance.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
    'replaceState(...): Can only update a mounted or mounting component.'
  ) : invariant(instance.isMounted() ||
    compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
  ("production" !== "development" ? invariant(
    ReactCurrentOwner.current == null,
    'replaceState(...): Cannot update during an existing state transition ' +
    '(such as within `render`). Render methods should be a pure function ' +
    'of props and state.'
  ) : invariant(ReactCurrentOwner.current == null));
  ("production" !== "development" ? invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING,
    'replaceState(...): Cannot update while unmounting component. This ' +
    'usually means you called setState() on an unmounted component.'
  ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING));
}

/**
 * Mixin helper which handles policy validation and reserved
 * specification keys when building `ReactCompositeComponent` classses.
 */
function mixSpecIntoComponent(Constructor, spec) {
  if (!spec) {
    return;
  }

  ("production" !== "development" ? invariant(
    !ReactLegacyElement.isValidFactory(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component class as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactLegacyElement.isValidFactory(spec)));
  ("production" !== "development" ? invariant(
    !ReactElement.isValidElement(spec),
    'ReactCompositeComponent: You\'re attempting to ' +
    'use a component as a mixin. Instead, just use a regular object.'
  ) : invariant(!ReactElement.isValidElement(spec)));

  var proto = Constructor.prototype;

  // By handling mixins before any other properties, we ensure the same
  // chaining order is applied to methods with DEFINE_MANY policy, whether
  // mixins are listed before or after these methods in the spec.
  if (spec.hasOwnProperty(MIXINS_KEY)) {
    RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
  }

  for (var name in spec) {
    if (!spec.hasOwnProperty(name)) {
      continue;
    }

    if (name === MIXINS_KEY) {
      // We have already handled mixins in a special case above
      continue;
    }

    var property = spec[name];
    validateMethodOverride(proto, name);

    if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
      RESERVED_SPEC_KEYS[name](Constructor, property);
    } else {
      // Setup methods on prototype:
      // The following member methods should not be automatically bound:
      // 1. Expected ReactCompositeComponent methods (in the "interface").
      // 2. Overridden methods (that were mixed in).
      var isCompositeComponentMethod =
        ReactCompositeComponentInterface.hasOwnProperty(name);
      var isAlreadyDefined = proto.hasOwnProperty(name);
      var markedDontBind = property && property.__reactDontBind;
      var isFunction = typeof property === 'function';
      var shouldAutoBind =
        isFunction &&
        !isCompositeComponentMethod &&
        !isAlreadyDefined &&
        !markedDontBind;

      if (shouldAutoBind) {
        if (!proto.__reactAutoBindMap) {
          proto.__reactAutoBindMap = {};
        }
        proto.__reactAutoBindMap[name] = property;
        proto[name] = property;
      } else {
        if (isAlreadyDefined) {
          var specPolicy = ReactCompositeComponentInterface[name];

          // These cases should already be caught by validateMethodOverride
          ("production" !== "development" ? invariant(
            isCompositeComponentMethod && (
              specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
              specPolicy === SpecPolicy.DEFINE_MANY
            ),
            'ReactCompositeComponent: Unexpected spec policy %s for key %s ' +
            'when mixing in component specs.',
            specPolicy,
            name
          ) : invariant(isCompositeComponentMethod && (
            specPolicy === SpecPolicy.DEFINE_MANY_MERGED ||
            specPolicy === SpecPolicy.DEFINE_MANY
          )));

          // For methods which are defined more than once, call the existing
          // methods before calling the new property, merging if appropriate.
          if (specPolicy === SpecPolicy.DEFINE_MANY_MERGED) {
            proto[name] = createMergedResultFunction(proto[name], property);
          } else if (specPolicy === SpecPolicy.DEFINE_MANY) {
            proto[name] = createChainedFunction(proto[name], property);
          }
        } else {
          proto[name] = property;
          if ("production" !== "development") {
            // Add verbose displayName to the function, which helps when looking
            // at profiling tools.
            if (typeof property === 'function' && spec.displayName) {
              proto[name].displayName = spec.displayName + '_' + name;
            }
          }
        }
      }
    }
  }
}

function mixStaticSpecIntoComponent(Constructor, statics) {
  if (!statics) {
    return;
  }
  for (var name in statics) {
    var property = statics[name];
    if (!statics.hasOwnProperty(name)) {
      continue;
    }

    var isReserved = name in RESERVED_SPEC_KEYS;
    ("production" !== "development" ? invariant(
      !isReserved,
      'ReactCompositeComponent: You are attempting to define a reserved ' +
      'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
      'as an instance property instead; it will still be accessible on the ' +
      'constructor.',
      name
    ) : invariant(!isReserved));

    var isInherited = name in Constructor;
    ("production" !== "development" ? invariant(
      !isInherited,
      'ReactCompositeComponent: You are attempting to define ' +
      '`%s` on your component more than once. This conflict may be ' +
      'due to a mixin.',
      name
    ) : invariant(!isInherited));
    Constructor[name] = property;
  }
}

/**
 * Merge two objects, but throw if both contain the same key.
 *
 * @param {object} one The first object, which is mutated.
 * @param {object} two The second object
 * @return {object} one after it has been mutated to contain everything in two.
 */
function mergeObjectsWithNoDuplicateKeys(one, two) {
  ("production" !== "development" ? invariant(
    one && two && typeof one === 'object' && typeof two === 'object',
    'mergeObjectsWithNoDuplicateKeys(): Cannot merge non-objects'
  ) : invariant(one && two && typeof one === 'object' && typeof two === 'object'));

  mapObject(two, function(value, key) {
    ("production" !== "development" ? invariant(
      one[key] === undefined,
      'mergeObjectsWithNoDuplicateKeys(): ' +
      'Tried to merge two objects with the same key: `%s`. This conflict ' +
      'may be due to a mixin; in particular, this may be caused by two ' +
      'getInitialState() or getDefaultProps() methods returning objects ' +
      'with clashing keys.',
      key
    ) : invariant(one[key] === undefined));
    one[key] = value;
  });
  return one;
}

/**
 * Creates a function that invokes two functions and merges their return values.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createMergedResultFunction(one, two) {
  return function mergedResult() {
    var a = one.apply(this, arguments);
    var b = two.apply(this, arguments);
    if (a == null) {
      return b;
    } else if (b == null) {
      return a;
    }
    return mergeObjectsWithNoDuplicateKeys(a, b);
  };
}

/**
 * Creates a function that invokes two functions and ignores their return vales.
 *
 * @param {function} one Function to invoke first.
 * @param {function} two Function to invoke second.
 * @return {function} Function that invokes the two argument functions.
 * @private
 */
function createChainedFunction(one, two) {
  return function chainedFunction() {
    one.apply(this, arguments);
    two.apply(this, arguments);
  };
}

/**
 * `ReactCompositeComponent` maintains an auxiliary life cycle state in
 * `this._compositeLifeCycleState` (which can be null).
 *
 * This is different from the life cycle state maintained by `ReactComponent` in
 * `this._lifeCycleState`. The following diagram shows how the states overlap in
 * time. There are times when the CompositeLifeCycle is null - at those times it
 * is only meaningful to look at ComponentLifeCycle alone.
 *
 * Top Row: ReactComponent.ComponentLifeCycle
 * Low Row: ReactComponent.CompositeLifeCycle
 *
 * +-------+---------------------------------+--------+
 * |  UN   |             MOUNTED             |   UN   |
 * |MOUNTED|                                 | MOUNTED|
 * +-------+---------------------------------+--------+
 * |       ^--------+   +-------+   +--------^        |
 * |       |        |   |       |   |        |        |
 * |    0--|MOUNTING|-0-|RECEIVE|-0-|   UN   |--->0   |
 * |       |        |   |PROPS  |   |MOUNTING|        |
 * |       |        |   |       |   |        |        |
 * |       |        |   |       |   |        |        |
 * |       +--------+   +-------+   +--------+        |
 * |       |                                 |        |
 * +-------+---------------------------------+--------+
 */
var CompositeLifeCycle = keyMirror({
  /**
   * Components in the process of being mounted respond to state changes
   * differently.
   */
  MOUNTING: null,
  /**
   * Components in the process of being unmounted are guarded against state
   * changes.
   */
  UNMOUNTING: null,
  /**
   * Components that are mounted and receiving new props respond to state
   * changes differently.
   */
  RECEIVING_PROPS: null
});

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponentMixin = {

  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function(element) {
    // Children can be either an array or more than one argument
    ReactComponent.Mixin.construct.apply(this, arguments);
    ReactOwner.Mixin.construct.apply(this, arguments);

    this.state = null;
    this._pendingState = null;

    // This is the public post-processed context. The real context and pending
    // context lives on the element.
    this.context = null;

    this._compositeLifeCycleState = null;
  },

  /**
   * Checks whether or not this composite component is mounted.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function() {
    return ReactComponent.Mixin.isMounted.call(this) &&
      this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING;
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      this._compositeLifeCycleState = CompositeLifeCycle.MOUNTING;

      if (this.__reactAutoBindMap) {
        this._bindAutoBindMethods();
      }

      this.context = this._processContext(this._currentElement._context);
      this.props = this._processProps(this.props);

      this.state = this.getInitialState ? this.getInitialState() : null;
      ("production" !== "development" ? invariant(
        typeof this.state === 'object' && !Array.isArray(this.state),
        '%s.getInitialState(): must return an object or null',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(typeof this.state === 'object' && !Array.isArray(this.state)));

      this._pendingState = null;
      this._pendingForceUpdate = false;

      if (this.componentWillMount) {
        this.componentWillMount();
        // When mounting, calls to `setState` by `componentWillMount` will set
        // `this._pendingState` without triggering a re-render.
        if (this._pendingState) {
          this.state = this._pendingState;
          this._pendingState = null;
        }
      }

      this._renderedComponent = instantiateReactComponent(
        this._renderValidatedComponent(),
        this._currentElement.type // The wrapping type
      );

      // Done with mounting, `setState` will now trigger UI changes.
      this._compositeLifeCycleState = null;
      var markup = this._renderedComponent.mountComponent(
        rootID,
        transaction,
        mountDepth + 1
      );
      if (this.componentDidMount) {
        transaction.getReactMountReady().enqueue(this.componentDidMount, this);
      }
      return markup;
    }
  ),

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function() {
    this._compositeLifeCycleState = CompositeLifeCycle.UNMOUNTING;
    if (this.componentWillUnmount) {
      this.componentWillUnmount();
    }
    this._compositeLifeCycleState = null;

    this._renderedComponent.unmountComponent();
    this._renderedComponent = null;

    ReactComponent.Mixin.unmountComponent.call(this);

    // Some existing components rely on this.props even after they've been
    // destroyed (in event handlers).
    // TODO: this.props = null;
    // TODO: this.state = null;
  },

  /**
   * Sets a subset of the state. Always use this or `replaceState` to mutate
   * state. You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * There is no guarantee that calls to `setState` will run synchronously,
   * as they may eventually be batched together.  You can provide an optional
   * callback that will be executed when the call to setState is actually
   * completed.
   *
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  setState: function(partialState, callback) {
    ("production" !== "development" ? invariant(
      typeof partialState === 'object' || partialState == null,
      'setState(...): takes an object of state variables to update.'
    ) : invariant(typeof partialState === 'object' || partialState == null));
    if ("production" !== "development"){
      ("production" !== "development" ? warning(
        partialState != null,
        'setState(...): You passed an undefined or null state object; ' +
        'instead, use forceUpdate().'
      ) : null);
    }
    // Merge with `_pendingState` if it exists, otherwise with existing state.
    this.replaceState(
      assign({}, this._pendingState || this.state, partialState),
      callback
    );
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {object} completeState Next state.
   * @param {?function} callback Called after state is updated.
   * @final
   * @protected
   */
  replaceState: function(completeState, callback) {
    validateLifeCycleOnReplaceState(this);
    this._pendingState = completeState;
    if (this._compositeLifeCycleState !== CompositeLifeCycle.MOUNTING) {
      // If we're in a componentWillMount handler, don't enqueue a rerender
      // because ReactUpdates assumes we're in a browser context (which is wrong
      // for server rendering) and we're about to do a render anyway.
      // TODO: The callback here is ignored when setState is called from
      // componentWillMount. Either fix it or disallow doing so completely in
      // favor of getInitialState.
      ReactUpdates.enqueueUpdate(this, callback);
    }
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function(context) {
    var maskedContext = null;
    var contextTypes = this.constructor.contextTypes;
    if (contextTypes) {
      maskedContext = {};
      for (var contextName in contextTypes) {
        maskedContext[contextName] = context[contextName];
      }
      if ("production" !== "development") {
        this._checkPropTypes(
          contextTypes,
          maskedContext,
          ReactPropTypeLocations.context
        );
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function(currentContext) {
    var childContext = this.getChildContext && this.getChildContext();
    var displayName = this.constructor.displayName || 'ReactCompositeComponent';
    if (childContext) {
      ("production" !== "development" ? invariant(
        typeof this.constructor.childContextTypes === 'object',
        '%s.getChildContext(): childContextTypes must be defined in order to ' +
        'use getChildContext().',
        displayName
      ) : invariant(typeof this.constructor.childContextTypes === 'object'));
      if ("production" !== "development") {
        this._checkPropTypes(
          this.constructor.childContextTypes,
          childContext,
          ReactPropTypeLocations.childContext
        );
      }
      for (var name in childContext) {
        ("production" !== "development" ? invariant(
          name in this.constructor.childContextTypes,
          '%s.getChildContext(): key "%s" is not defined in childContextTypes.',
          displayName,
          name
        ) : invariant(name in this.constructor.childContextTypes));
      }
      return assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Processes props by setting default values for unspecified props and
   * asserting that the props are valid. Does not mutate its argument; returns
   * a new props object with defaults merged in.
   *
   * @param {object} newProps
   * @return {object}
   * @private
   */
  _processProps: function(newProps) {
    if ("production" !== "development") {
      var propTypes = this.constructor.propTypes;
      if (propTypes) {
        this._checkPropTypes(propTypes, newProps, ReactPropTypeLocations.prop);
      }
    }
    return newProps;
  },

  /**
   * Assert that the props are valid
   *
   * @param {object} propTypes Map of prop name to a ReactPropType
   * @param {object} props
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkPropTypes: function(propTypes, props, location) {
    // TODO: Stop validating prop types here and only use the element
    // validation.
    var componentName = this.constructor.displayName;
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error =
          propTypes[propName](props, propName, componentName, location);
        if (error instanceof Error) {
          // We may want to extend this logic for similar errors in
          // renderComponent calls, so I'm abstracting it away into
          // a function to minimize refactoring in the future
          var addendum = getDeclarationErrorAddendum(this);
          ("production" !== "development" ? warning(false, error.message + addendum) : null);
        }
      }
    }
  },

  /**
   * If any of `_pendingElement`, `_pendingState`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function(transaction) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    // Do not trigger a state transition if we are in the middle of mounting or
    // receiving props because both of those will already be doing this.
    if (compositeLifeCycleState === CompositeLifeCycle.MOUNTING ||
        compositeLifeCycleState === CompositeLifeCycle.RECEIVING_PROPS) {
      return;
    }

    if (this._pendingElement == null &&
        this._pendingState == null &&
        !this._pendingForceUpdate) {
      return;
    }

    var nextContext = this.context;
    var nextProps = this.props;
    var nextElement = this._currentElement;
    if (this._pendingElement != null) {
      nextElement = this._pendingElement;
      nextContext = this._processContext(nextElement._context);
      nextProps = this._processProps(nextElement.props);
      this._pendingElement = null;

      this._compositeLifeCycleState = CompositeLifeCycle.RECEIVING_PROPS;
      if (this.componentWillReceiveProps) {
        this.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    this._compositeLifeCycleState = null;

    var nextState = this._pendingState || this.state;
    this._pendingState = null;

    var shouldUpdate =
      this._pendingForceUpdate ||
      !this.shouldComponentUpdate ||
      this.shouldComponentUpdate(nextProps, nextState, nextContext);

    if ("production" !== "development") {
      if (typeof shouldUpdate === "undefined") {
        console.warn(
          (this.constructor.displayName || 'ReactCompositeComponent') +
          '.shouldComponentUpdate(): Returned undefined instead of a ' +
          'boolean value. Make sure to return true or false.'
        );
      }
    }

    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(
        nextElement,
        nextProps,
        nextState,
        nextContext,
        transaction
      );
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state.
      this._currentElement = nextElement;
      this.props = nextProps;
      this.state = nextState;
      this.context = nextContext;

      // Owner cannot change because shouldUpdateReactComponent doesn't allow
      // it. TODO: Remove this._owner completely.
      this._owner = nextElement._owner;
    }
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @private
   */
  _performComponentUpdate: function(
    nextElement,
    nextProps,
    nextState,
    nextContext,
    transaction
  ) {
    var prevElement = this._currentElement;
    var prevProps = this.props;
    var prevState = this.state;
    var prevContext = this.context;

    if (this.componentWillUpdate) {
      this.componentWillUpdate(nextProps, nextState, nextContext);
    }

    this._currentElement = nextElement;
    this.props = nextProps;
    this.state = nextState;
    this.context = nextContext;

    // Owner cannot change because shouldUpdateReactComponent doesn't allow
    // it. TODO: Remove this._owner completely.
    this._owner = nextElement._owner;

    this.updateComponent(
      transaction,
      prevElement
    );

    if (this.componentDidUpdate) {
      transaction.getReactMountReady().enqueue(
        this.componentDidUpdate.bind(this, prevProps, prevState, prevContext),
        this
      );
    }
  },

  receiveComponent: function(nextElement, transaction) {
    if (nextElement === this._currentElement &&
        nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for a element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextElement,
      transaction
    );
  },

  /**
   * Updates the component's currently mounted DOM representation.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    'updateComponent',
    function(transaction, prevParentElement) {
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevParentElement
      );

      var prevComponentInstance = this._renderedComponent;
      var prevElement = prevComponentInstance._currentElement;
      var nextElement = this._renderValidatedComponent();
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        prevComponentInstance.receiveComponent(nextElement, transaction);
      } else {
        // These two IDs are actually the same! But nothing should rely on that.
        var thisID = this._rootNodeID;
        var prevComponentID = prevComponentInstance._rootNodeID;
        prevComponentInstance.unmountComponent();
        this._renderedComponent = instantiateReactComponent(
          nextElement,
          this._currentElement.type
        );
        var nextMarkup = this._renderedComponent.mountComponent(
          thisID,
          transaction,
          this._mountDepth + 1
        );
        ReactComponent.BackendIDOperations.dangerouslyReplaceNodeWithMarkupByID(
          prevComponentID,
          nextMarkup
        );
      }
    }
  ),

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldUpdateComponent`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {?function} callback Called after update is complete.
   * @final
   * @protected
   */
  forceUpdate: function(callback) {
    var compositeLifeCycleState = this._compositeLifeCycleState;
    ("production" !== "development" ? invariant(
      this.isMounted() ||
        compositeLifeCycleState === CompositeLifeCycle.MOUNTING,
      'forceUpdate(...): Can only force an update on mounted or mounting ' +
        'components.'
    ) : invariant(this.isMounted() ||
      compositeLifeCycleState === CompositeLifeCycle.MOUNTING));
    ("production" !== "development" ? invariant(
      compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
      ReactCurrentOwner.current == null,
      'forceUpdate(...): Cannot force an update while unmounting component ' +
      'or within a `render` function.'
    ) : invariant(compositeLifeCycleState !== CompositeLifeCycle.UNMOUNTING &&
    ReactCurrentOwner.current == null));
    this._pendingForceUpdate = true;
    ReactUpdates.enqueueUpdate(this, callback);
  },

  /**
   * @private
   */
  _renderValidatedComponent: ReactPerf.measure(
    'ReactCompositeComponent',
    '_renderValidatedComponent',
    function() {
      var renderedComponent;
      var previousContext = ReactContext.current;
      ReactContext.current = this._processChildContext(
        this._currentElement._context
      );
      ReactCurrentOwner.current = this;
      try {
        renderedComponent = this.render();
        if (renderedComponent === null || renderedComponent === false) {
          renderedComponent = ReactEmptyComponent.getEmptyComponent();
          ReactEmptyComponent.registerNullComponentID(this._rootNodeID);
        } else {
          ReactEmptyComponent.deregisterNullComponentID(this._rootNodeID);
        }
      } finally {
        ReactContext.current = previousContext;
        ReactCurrentOwner.current = null;
      }
      ("production" !== "development" ? invariant(
        ReactElement.isValidElement(renderedComponent),
        '%s.render(): A valid ReactComponent must be returned. You may have ' +
          'returned undefined, an array or some other invalid object.',
        this.constructor.displayName || 'ReactCompositeComponent'
      ) : invariant(ReactElement.isValidElement(renderedComponent)));
      return renderedComponent;
    }
  ),

  /**
   * @private
   */
  _bindAutoBindMethods: function() {
    for (var autoBindKey in this.__reactAutoBindMap) {
      if (!this.__reactAutoBindMap.hasOwnProperty(autoBindKey)) {
        continue;
      }
      var method = this.__reactAutoBindMap[autoBindKey];
      this[autoBindKey] = this._bindAutoBindMethod(ReactErrorUtils.guard(
        method,
        this.constructor.displayName + '.' + autoBindKey
      ));
    }
  },

  /**
   * Binds a method to the component.
   *
   * @param {function} method Method to be bound.
   * @private
   */
  _bindAutoBindMethod: function(method) {
    var component = this;
    var boundMethod = method.bind(component);
    if ("production" !== "development") {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis ) {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): React component methods may only be bound to the ' +
            'component instance. See ' + componentName
          );
        } else if (!args.length) {
          monitorCodeUse('react_bind_warning', { component: componentName });
          console.warn(
            'bind(): You are binding a component method to the component. ' +
            'React does this for you automatically in a high-performance ' +
            'way, so you can safely remove this call. See ' + componentName
          );
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }
};

var ReactCompositeComponentBase = function() {};
assign(
  ReactCompositeComponentBase.prototype,
  ReactComponent.Mixin,
  ReactOwner.Mixin,
  ReactPropTransferer.Mixin,
  ReactCompositeComponentMixin
);

/**
 * Module for creating composite components.
 *
 * @class ReactCompositeComponent
 * @extends ReactComponent
 * @extends ReactOwner
 * @extends ReactPropTransferer
 */
var ReactCompositeComponent = {

  LifeCycle: CompositeLifeCycle,

  Base: ReactCompositeComponentBase,

  /**
   * Creates a composite component class given a class specification.
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  createClass: function(spec) {
    var Constructor = function(props) {
      // This constructor is overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted. This will later be used
      // by the stand-alone class implementation.
    };
    Constructor.prototype = new ReactCompositeComponentBase();
    Constructor.prototype.constructor = Constructor;

    injectedMixins.forEach(
      mixSpecIntoComponent.bind(null, Constructor)
    );

    mixSpecIntoComponent(Constructor, spec);

    // Initialize the defaultProps property after all mixins have been merged
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    ("production" !== "development" ? invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    ) : invariant(Constructor.prototype.render));

    if ("production" !== "development") {
      if (Constructor.prototype.componentShouldUpdate) {
        monitorCodeUse(
          'react_component_should_update_warning',
          { component: spec.displayName }
        );
        console.warn(
          (spec.displayName || 'A component') + ' has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.'
         );
      }
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactCompositeComponentInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    if ("production" !== "development") {
      return ReactLegacyElement.wrapFactory(
        ReactElementValidator.createFactory(Constructor)
      );
    }
    return ReactLegacyElement.wrapFactory(
      ReactElement.createFactory(Constructor)
    );
  },

  injection: {
    injectMixin: function(mixin) {
      injectedMixins.push(mixin);
    }
  }
};

module.exports = ReactCompositeComponent;

},{"./Object.assign":27,"./ReactComponent":32,"./ReactContext":35,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactElementValidator":53,"./ReactEmptyComponent":54,"./ReactErrorUtils":55,"./ReactLegacyElement":61,"./ReactOwner":67,"./ReactPerf":68,"./ReactPropTransferer":69,"./ReactPropTypeLocationNames":70,"./ReactPropTypeLocations":71,"./ReactUpdates":79,"./instantiateReactComponent":125,"./invariant":126,"./keyMirror":132,"./keyOf":133,"./mapObject":134,"./monitorCodeUse":136,"./shouldUpdateReactComponent":142,"./warning":145}],35:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactContext
 */

"use strict";

var assign = _dereq_("./Object.assign");

/**
 * Keeps track of the current context.
 *
 * The context is automatically passed down the component ownership hierarchy
 * and is accessible via `this.context` on ReactCompositeComponents.
 */
var ReactContext = {

  /**
   * @internal
   * @type {object}
   */
  current: {},

  /**
   * Temporarily extends the current context while executing scopedCallback.
   *
   * A typical use case might look like
   *
   *  render: function() {
   *    var children = ReactContext.withContext({foo: 'foo'}, () => (
   *
   *    ));
   *    return <div>{children}</div>;
   *  }
   *
   * @param {object} newContext New context to merge into the existing context
   * @param {function} scopedCallback Callback to run with the new context
   * @return {ReactComponent|array<ReactComponent>}
   */
  withContext: function(newContext, scopedCallback) {
    var result;
    var previousContext = ReactContext.current;
    ReactContext.current = assign({}, previousContext, newContext);
    try {
      result = scopedCallback();
    } finally {
      ReactContext.current = previousContext;
    }
    return result;
  }

};

module.exports = ReactContext;

},{"./Object.assign":27}],36:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactCurrentOwner
 */

"use strict";

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 *
 * The depth indicate how many composite components are above this render level.
 */
var ReactCurrentOwner = {

  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null

};

module.exports = ReactCurrentOwner;

},{}],37:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOM
 * @typechecks static-only
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactElementValidator = _dereq_("./ReactElementValidator");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");

var mapObject = _dereq_("./mapObject");

/**
 * Create a factory that creates HTML tag elements.
 *
 * @param {string} tag Tag name (e.g. `div`).
 * @private
 */
function createDOMFactory(tag) {
  if ("production" !== "development") {
    return ReactLegacyElement.markNonLegacyFactory(
      ReactElementValidator.createFactory(tag)
    );
  }
  return ReactLegacyElement.markNonLegacyFactory(
    ReactElement.createFactory(tag)
  );
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 * This is also accessible via `React.DOM`.
 *
 * @public
 */
var ReactDOM = mapObject({
  a: 'a',
  abbr: 'abbr',
  address: 'address',
  area: 'area',
  article: 'article',
  aside: 'aside',
  audio: 'audio',
  b: 'b',
  base: 'base',
  bdi: 'bdi',
  bdo: 'bdo',
  big: 'big',
  blockquote: 'blockquote',
  body: 'body',
  br: 'br',
  button: 'button',
  canvas: 'canvas',
  caption: 'caption',
  cite: 'cite',
  code: 'code',
  col: 'col',
  colgroup: 'colgroup',
  data: 'data',
  datalist: 'datalist',
  dd: 'dd',
  del: 'del',
  details: 'details',
  dfn: 'dfn',
  dialog: 'dialog',
  div: 'div',
  dl: 'dl',
  dt: 'dt',
  em: 'em',
  embed: 'embed',
  fieldset: 'fieldset',
  figcaption: 'figcaption',
  figure: 'figure',
  footer: 'footer',
  form: 'form',
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  head: 'head',
  header: 'header',
  hr: 'hr',
  html: 'html',
  i: 'i',
  iframe: 'iframe',
  img: 'img',
  input: 'input',
  ins: 'ins',
  kbd: 'kbd',
  keygen: 'keygen',
  label: 'label',
  legend: 'legend',
  li: 'li',
  link: 'link',
  main: 'main',
  map: 'map',
  mark: 'mark',
  menu: 'menu',
  menuitem: 'menuitem',
  meta: 'meta',
  meter: 'meter',
  nav: 'nav',
  noscript: 'noscript',
  object: 'object',
  ol: 'ol',
  optgroup: 'optgroup',
  option: 'option',
  output: 'output',
  p: 'p',
  param: 'param',
  picture: 'picture',
  pre: 'pre',
  progress: 'progress',
  q: 'q',
  rp: 'rp',
  rt: 'rt',
  ruby: 'ruby',
  s: 's',
  samp: 'samp',
  script: 'script',
  section: 'section',
  select: 'select',
  small: 'small',
  source: 'source',
  span: 'span',
  strong: 'strong',
  style: 'style',
  sub: 'sub',
  summary: 'summary',
  sup: 'sup',
  table: 'table',
  tbody: 'tbody',
  td: 'td',
  textarea: 'textarea',
  tfoot: 'tfoot',
  th: 'th',
  thead: 'thead',
  time: 'time',
  title: 'title',
  tr: 'tr',
  track: 'track',
  u: 'u',
  ul: 'ul',
  'var': 'var',
  video: 'video',
  wbr: 'wbr',

  // SVG
  circle: 'circle',
  defs: 'defs',
  ellipse: 'ellipse',
  g: 'g',
  line: 'line',
  linearGradient: 'linearGradient',
  mask: 'mask',
  path: 'path',
  pattern: 'pattern',
  polygon: 'polygon',
  polyline: 'polyline',
  radialGradient: 'radialGradient',
  rect: 'rect',
  stop: 'stop',
  svg: 'svg',
  text: 'text',
  tspan: 'tspan'

}, createDOMFactory);

module.exports = ReactDOM;

},{"./ReactElement":52,"./ReactElementValidator":53,"./ReactLegacyElement":61,"./mapObject":134}],38:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMButton
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

var keyMirror = _dereq_("./keyMirror");

// Store a reference to the <button> `ReactDOMComponent`. TODO: use string
var button = ReactElement.createFactory(ReactDOM.button.type);

var mouseListenerNames = keyMirror({
  onClick: true,
  onDoubleClick: true,
  onMouseDown: true,
  onMouseMove: true,
  onMouseUp: true,
  onClickCapture: true,
  onDoubleClickCapture: true,
  onMouseDownCapture: true,
  onMouseMoveCapture: true,
  onMouseUpCapture: true
});

/**
 * Implements a <button> native component that does not receive mouse events
 * when `disabled` is set.
 */
var ReactDOMButton = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMButton',

  mixins: [AutoFocusMixin, ReactBrowserComponentMixin],

  render: function() {
    var props = {};

    // Copy the props; except the mouse listeners if we're disabled
    for (var key in this.props) {
      if (this.props.hasOwnProperty(key) &&
          (!this.props.disabled || !mouseListenerNames[key])) {
        props[key] = this.props[key];
      }
    }

    return button(props, this.props.children);
  }

});

module.exports = ReactDOMButton;

},{"./AutoFocusMixin":2,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./keyMirror":132}],39:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMComponent
 * @typechecks static-only
 */

"use strict";

var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
var DOMProperty = _dereq_("./DOMProperty");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactComponent = _dereq_("./ReactComponent");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactMount = _dereq_("./ReactMount");
var ReactMultiChild = _dereq_("./ReactMultiChild");
var ReactPerf = _dereq_("./ReactPerf");

var assign = _dereq_("./Object.assign");
var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");
var invariant = _dereq_("./invariant");
var isEventSupported = _dereq_("./isEventSupported");
var keyOf = _dereq_("./keyOf");
var monitorCodeUse = _dereq_("./monitorCodeUse");

var deleteListener = ReactBrowserEventEmitter.deleteListener;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = ReactBrowserEventEmitter.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = {'string': true, 'number': true};

var STYLE = keyOf({style: null});

var ELEMENT_NODE_TYPE = 1;

/**
 * @param {?object} props
 */
function assertValidProps(props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  ("production" !== "development" ? invariant(
    props.children == null || props.dangerouslySetInnerHTML == null,
    'Can only set one of `children` or `props.dangerouslySetInnerHTML`.'
  ) : invariant(props.children == null || props.dangerouslySetInnerHTML == null));
  if ("production" !== "development") {
    if (props.contentEditable && props.children != null) {
      console.warn(
        'A component is `contentEditable` and contains `children` managed by ' +
        'React. It is now your responsibility to guarantee that none of those '+
        'nodes are unexpectedly modified or duplicated. This is probably not ' +
        'intentional.'
      );
    }
  }
  ("production" !== "development" ? invariant(
    props.style == null || typeof props.style === 'object',
    'The `style` prop expects a mapping from style properties to values, ' +
    'not a string.'
  ) : invariant(props.style == null || typeof props.style === 'object'));
}

function putListener(id, registrationName, listener, transaction) {
  if ("production" !== "development") {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    if (registrationName === 'onScroll' &&
        !isEventSupported('scroll', true)) {
      monitorCodeUse('react_no_scroll_event');
      console.warn('This browser doesn\'t support the `onScroll` event');
    }
  }
  var container = ReactMount.findReactContainerForID(id);
  if (container) {
    var doc = container.nodeType === ELEMENT_NODE_TYPE ?
      container.ownerDocument :
      container;
    listenTo(registrationName, doc);
  }
  transaction.getPutListenerQueue().enqueuePutListener(
    id,
    registrationName,
    listener
  );
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special cased tags.

var omittedCloseTags = {
  'area': true,
  'base': true,
  'br': true,
  'col': true,
  'embed': true,
  'hr': true,
  'img': true,
  'input': true,
  'keygen': true,
  'link': true,
  'meta': true,
  'param': true,
  'source': true,
  'track': true,
  'wbr': true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// We accept any tag to be rendered but since this gets injected into abitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    ("production" !== "development" ? invariant(VALID_TAG_REGEX.test(tag), 'Invalid tag: %s', tag) : invariant(VALID_TAG_REGEX.test(tag)));
    validatedTagCache[tag] = true;
  }
}

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(tag) {
  validateDangerousTag(tag);
  this._tag = tag;
  this.tagName = tag.toUpperCase();
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {

  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {string} rootID The root DOM ID for this node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} The computed markup.
   */
  mountComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'mountComponent',
    function(rootID, transaction, mountDepth) {
      ReactComponent.Mixin.mountComponent.call(
        this,
        rootID,
        transaction,
        mountDepth
      );
      assertValidProps(this.props);
      var closeTag = omittedCloseTags[this._tag] ? '' : '</' + this._tag + '>';
      return (
        this._createOpenTagMarkupAndPutListeners(transaction) +
        this._createContentMarkup(transaction) +
        closeTag
      );
    }
  ),

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function(transaction) {
    var props = this.props;
    var ret = '<' + this._tag;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, propValue, transaction);
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            propValue = props.style = assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue);
        }
        var markup =
          DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret + '>';
    }

    var markupForID = DOMPropertyOperations.createMarkupForID(this._rootNodeID);
    return ret + ' ' + markupForID + '>';
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Content markup.
   */
  _createContentMarkup: function(transaction) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = this.props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        return innerHTML.__html;
      }
    } else {
      var contentToUse =
        CONTENT_TYPES[typeof this.props.children] ? this.props.children : null;
      var childrenToUse = contentToUse != null ? null : this.props.children;
      if (contentToUse != null) {
        return escapeTextForBrowser(contentToUse);
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(
          childrenToUse,
          transaction
        );
        return mountImages.join('');
      }
    }
    return '';
  },

  receiveComponent: function(nextElement, transaction) {
    if (nextElement === this._currentElement &&
        nextElement._owner != null) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for a element created outside a composite to be
      // deeply mutated and reused.
      return;
    }

    ReactComponent.Mixin.receiveComponent.call(
      this,
      nextElement,
      transaction
    );
  },

  /**
   * Updates a native DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @internal
   * @overridable
   */
  updateComponent: ReactPerf.measure(
    'ReactDOMComponent',
    'updateComponent',
    function(transaction, prevElement) {
      assertValidProps(this._currentElement.props);
      ReactComponent.Mixin.updateComponent.call(
        this,
        transaction,
        prevElement
      );
      this._updateDOMProperties(prevElement.props, transaction);
      this._updateDOMChildren(prevElement.props, transaction);
    }
  ),

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMProperties: function(lastProps, transaction) {
    var nextProps = this.props;
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) ||
         !lastProps.hasOwnProperty(propKey)) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = lastProps[propKey];
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        deleteListener(this._rootNodeID, propKey);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.deletePropertyByID(
          this._rootNodeID,
          propKey
        );
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = lastProps[propKey];
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          nextProp = nextProps.style = assign({}, nextProp);
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) &&
                (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) &&
                lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        putListener(this._rootNodeID, propKey, nextProp, transaction);
      } else if (
          DOMProperty.isStandardName[propKey] ||
          DOMProperty.isCustomAttribute(propKey)) {
        ReactComponent.BackendIDOperations.updatePropertyByID(
          this._rootNodeID,
          propKey,
          nextProp
        );
      }
    }
    if (styleUpdates) {
      ReactComponent.BackendIDOperations.updateStylesByID(
        this._rootNodeID,
        styleUpdates
      );
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {ReactReconcileTransaction} transaction
   */
  _updateDOMChildren: function(lastProps, transaction) {
    var nextProps = this.props;

    var lastContent =
      CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent =
      CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml =
      lastProps.dangerouslySetInnerHTML &&
      lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml =
      nextProps.dangerouslySetInnerHTML &&
      nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        ReactComponent.BackendIDOperations.updateInnerHTMLByID(
          this._rootNodeID,
          nextHtml
        );
      }
    } else if (nextChildren != null) {
      this.updateChildren(nextChildren, transaction);
    }
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function() {
    this.unmountChildren();
    ReactBrowserEventEmitter.deleteAllListeners(this._rootNodeID);
    ReactComponent.Mixin.unmountComponent.call(this);
  }

};

assign(
  ReactDOMComponent.prototype,
  ReactComponent.Mixin,
  ReactDOMComponent.Mixin,
  ReactMultiChild.Mixin,
  ReactBrowserComponentMixin
);

module.exports = ReactDOMComponent;

},{"./CSSPropertyOperations":5,"./DOMProperty":11,"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactMount":63,"./ReactMultiChild":64,"./ReactPerf":68,"./escapeTextForBrowser":109,"./invariant":126,"./isEventSupported":127,"./keyOf":133,"./monitorCodeUse":136}],40:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMForm
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

// Store a reference to the <form> `ReactDOMComponent`. TODO: use string
var form = ReactElement.createFactory(ReactDOM.form.type);

/**
 * Since onSubmit doesn't bubble OR capture on the top level in IE8, we need
 * to capture it on the <form> element itself. There are lots of hacks we could
 * do to accomplish this, but the most reliable is to make <form> a
 * composite component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMForm = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMForm',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    // TODO: Instead of using `ReactDOM` directly, we should use JSX. However,
    // `jshint` fails to parse JSX so in order for linting to work in the open
    // source repo, we need to just use `ReactDOM.form`.
    return form(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topReset, 'reset');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topSubmit, 'submit');
  }
});

module.exports = ReactDOMForm;

},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],41:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMIDOperations
 * @typechecks static-only
 */

/*jslint evil: true */

"use strict";

var CSSPropertyOperations = _dereq_("./CSSPropertyOperations");
var DOMChildrenOperations = _dereq_("./DOMChildrenOperations");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");

var invariant = _dereq_("./invariant");
var setInnerHTML = _dereq_("./setInnerHTML");

/**
 * Errors for properties that should not be updated with `updatePropertyById()`.
 *
 * @type {object}
 * @private
 */
var INVALID_PROPERTY_ERRORS = {
  dangerouslySetInnerHTML:
    '`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.',
  style: '`style` must be set using `updateStylesByID()`.'
};

/**
 * Operations used to process updates to DOM nodes. This is made injectable via
 * `ReactComponent.BackendIDOperations`.
 */
var ReactDOMIDOperations = {

  /**
   * Updates a DOM node with new property values. This should only be used to
   * update DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A valid property name, see `DOMProperty`.
   * @param {*} value New value of the property.
   * @internal
   */
  updatePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updatePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== "development" ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));

      // If we're updating to null or undefined, we should remove the property
      // from the DOM node instead of inadvertantly setting to a string. This
      // brings us in line with the same behavior we have on initial render.
      if (value != null) {
        DOMPropertyOperations.setValueForProperty(node, name, value);
      } else {
        DOMPropertyOperations.deleteValueForProperty(node, name);
      }
    }
  ),

  /**
   * Updates a DOM node to remove a property. This should only be used to remove
   * DOM properties in `DOMProperty`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} name A property name to remove, see `DOMProperty`.
   * @internal
   */
  deletePropertyByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'deletePropertyByID',
    function(id, name, value) {
      var node = ReactMount.getNode(id);
      ("production" !== "development" ? invariant(
        !INVALID_PROPERTY_ERRORS.hasOwnProperty(name),
        'updatePropertyByID(...): %s',
        INVALID_PROPERTY_ERRORS[name]
      ) : invariant(!INVALID_PROPERTY_ERRORS.hasOwnProperty(name)));
      DOMPropertyOperations.deleteValueForProperty(node, name, value);
    }
  ),

  /**
   * Updates a DOM node with new style values. If a value is specified as '',
   * the corresponding style property will be unset.
   *
   * @param {string} id ID of the node to update.
   * @param {object} styles Mapping from styles to values.
   * @internal
   */
  updateStylesByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateStylesByID',
    function(id, styles) {
      var node = ReactMount.getNode(id);
      CSSPropertyOperations.setValueForStyles(node, styles);
    }
  ),

  /**
   * Updates a DOM node's innerHTML.
   *
   * @param {string} id ID of the node to update.
   * @param {string} html An HTML string.
   * @internal
   */
  updateInnerHTMLByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateInnerHTMLByID',
    function(id, html) {
      var node = ReactMount.getNode(id);
      setInnerHTML(node, html);
    }
  ),

  /**
   * Updates a DOM node's text content set by `props.content`.
   *
   * @param {string} id ID of the node to update.
   * @param {string} content Text content.
   * @internal
   */
  updateTextContentByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'updateTextContentByID',
    function(id, content) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.updateTextContent(node, content);
    }
  ),

  /**
   * Replaces a DOM node that exists in the document with markup.
   *
   * @param {string} id ID of child to be replaced.
   * @param {string} markup Dangerous markup to inject in place of child.
   * @internal
   * @see {Danger.dangerouslyReplaceNodeWithMarkup}
   */
  dangerouslyReplaceNodeWithMarkupByID: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyReplaceNodeWithMarkupByID',
    function(id, markup) {
      var node = ReactMount.getNode(id);
      DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup(node, markup);
    }
  ),

  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @param {array<string>} markup List of markup strings.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: ReactPerf.measure(
    'ReactDOMIDOperations',
    'dangerouslyProcessChildrenUpdates',
    function(updates, markup) {
      for (var i = 0; i < updates.length; i++) {
        updates[i].parentNode = ReactMount.getNode(updates[i].parentID);
      }
      DOMChildrenOperations.processUpdates(updates, markup);
    }
  )
};

module.exports = ReactDOMIDOperations;

},{"./CSSPropertyOperations":5,"./DOMChildrenOperations":10,"./DOMPropertyOperations":12,"./ReactMount":63,"./ReactPerf":68,"./invariant":126,"./setInnerHTML":140}],42:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMImg
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var LocalEventTrapMixin = _dereq_("./LocalEventTrapMixin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

// Store a reference to the <img> `ReactDOMComponent`. TODO: use string
var img = ReactElement.createFactory(ReactDOM.img.type);

/**
 * Since onLoad doesn't bubble OR capture on the top level in IE8, we need to
 * capture it on the <img> element itself. There are lots of hacks we could do
 * to accomplish this, but the most reliable is to make <img> a composite
 * component and use `componentDidMount` to attach the event handlers.
 */
var ReactDOMImg = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMImg',
  tagName: 'IMG',

  mixins: [ReactBrowserComponentMixin, LocalEventTrapMixin],

  render: function() {
    return img(this.props);
  },

  componentDidMount: function() {
    this.trapBubbledEvent(EventConstants.topLevelTypes.topLoad, 'load');
    this.trapBubbledEvent(EventConstants.topLevelTypes.topError, 'error');
  }
});

module.exports = ReactDOMImg;

},{"./EventConstants":16,"./LocalEventTrapMixin":25,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52}],43:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMInput
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactMount = _dereq_("./ReactMount");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

// Store a reference to the <input> `ReactDOMComponent`. TODO: use string
var input = ReactElement.createFactory(ReactDOM.input.type);

var instancesByReactID = {};

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements an <input> native component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMInput',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    return {
      initialChecked: this.props.defaultChecked || false,
      initialValue: defaultValue != null ? defaultValue : null
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.defaultChecked = null;
    props.defaultValue = null;

    var value = LinkedValueUtils.getValue(this);
    props.value = value != null ? value : this.state.initialValue;

    var checked = LinkedValueUtils.getChecked(this);
    props.checked = checked != null ? checked : this.state.initialChecked;

    props.onChange = this._handleChange;

    return input(props, this.props.children);
  },

  componentDidMount: function() {
    var id = ReactMount.getID(this.getDOMNode());
    instancesByReactID[id] = this;
  },

  componentWillUnmount: function() {
    var rootNode = this.getDOMNode();
    var id = ReactMount.getID(rootNode);
    delete instancesByReactID[id];
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var rootNode = this.getDOMNode();
    if (this.props.checked != null) {
      DOMPropertyOperations.setValueForProperty(
        rootNode,
        'checked',
        this.props.checked || false
      );
    }

    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    // Here we use asap to wait until all updates have propagated, which
    // is important when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    ReactUpdates.asap(forceUpdateIfMounted, this);

    var name = this.props.name;
    if (this.props.type === 'radio' && name != null) {
      var rootNode = this.getDOMNode();
      var queryRoot = rootNode;

      while (queryRoot.parentNode) {
        queryRoot = queryRoot.parentNode;
      }

      // If `rootNode.form` was non-null, then we could try `form.elements`,
      // but that sometimes behaves strangely in IE8. We could also try using
      // `form.getElementsByName`, but that will only return direct children
      // and won't include inputs that use the HTML5 `form=` attribute. Since
      // the input might not even be in a form, let's just use the global
      // `querySelectorAll` to ensure we don't miss anything.
      var group = queryRoot.querySelectorAll(
        'input[name=' + JSON.stringify('' + name) + '][type="radio"]');

      for (var i = 0, groupLen = group.length; i < groupLen; i++) {
        var otherNode = group[i];
        if (otherNode === rootNode ||
            otherNode.form !== rootNode.form) {
          continue;
        }
        var otherID = ReactMount.getID(otherNode);
        ("production" !== "development" ? invariant(
          otherID,
          'ReactDOMInput: Mixing React and non-React radio inputs with the ' +
          'same `name` is not supported.'
        ) : invariant(otherID));
        var otherInstance = instancesByReactID[otherID];
        ("production" !== "development" ? invariant(
          otherInstance,
          'ReactDOMInput: Unknown radio button ID %s.',
          otherID
        ) : invariant(otherInstance));
        // If this is a controlled radio button group, forcing the input that
        // was previously checked to update will cause it to be come re-checked
        // as appropriate.
        ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
      }
    }

    return returnValue;
  }

});

module.exports = ReactDOMInput;

},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactMount":63,"./ReactUpdates":79,"./invariant":126}],44:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMOption
 */

"use strict";

var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");

var warning = _dereq_("./warning");

// Store a reference to the <option> `ReactDOMComponent`. TODO: use string
var option = ReactElement.createFactory(ReactDOM.option.type);

/**
 * Implements an <option> native component that warns when `selected` is set.
 */
var ReactDOMOption = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMOption',

  mixins: [ReactBrowserComponentMixin],

  componentWillMount: function() {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        this.props.selected == null,
        'Use the `defaultValue` or `value` props on <select> instead of ' +
        'setting `selected` on <option>.'
      ) : null);
    }
  },

  render: function() {
    return option(this.props, this.props.children);
  }

});

module.exports = ReactDOMOption;

},{"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./warning":145}],45:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelect
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");

// Store a reference to the <select> `ReactDOMComponent`. TODO: use string
var select = ReactElement.createFactory(ReactDOM.select.type);

function updateWithPendingValueIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.setState({value: this._pendingValue});
    this._pendingValue = 0;
  }
}

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function selectValueType(props, propName, componentName) {
  if (props[propName] == null) {
    return;
  }
  if (props.multiple) {
    if (!Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be an array if ") +
        ("`multiple` is true.")
      );
    }
  } else {
    if (Array.isArray(props[propName])) {
      return new Error(
        ("The `" + propName + "` prop supplied to <select> must be a scalar ") +
        ("value if `multiple` is false.")
      );
    }
  }
}

/**
 * If `value` is supplied, updates <option> elements on mount and update.
 * @param {ReactComponent} component Instance of ReactDOMSelect
 * @param {?*} propValue For uncontrolled components, null/undefined. For
 * controlled components, a string (or with `multiple`, a list of strings).
 * @private
 */
function updateOptions(component, propValue) {
  var multiple = component.props.multiple;
  var value = propValue != null ? propValue : component.state.value;
  var options = component.getDOMNode().options;
  var selectedValue, i, l;
  if (multiple) {
    selectedValue = {};
    for (i = 0, l = value.length; i < l; ++i) {
      selectedValue['' + value[i]] = true;
    }
  } else {
    selectedValue = '' + value;
  }
  for (i = 0, l = options.length; i < l; i++) {
    var selected = multiple ?
      selectedValue.hasOwnProperty(options[i].value) :
      options[i].value === selectedValue;

    if (selected !== options[i].selected) {
      options[i].selected = selected;
    }
  }
}

/**
 * Implements a <select> native component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * string. If `multiple` is true, the prop must be an array of strings.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMSelect',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  propTypes: {
    defaultValue: selectValueType,
    value: selectValueType
  },

  getInitialState: function() {
    return {value: this.props.defaultValue || (this.props.multiple ? [] : '')};
  },

  componentWillMount: function() {
    this._pendingValue = null;
  },

  componentWillReceiveProps: function(nextProps) {
    if (!this.props.multiple && nextProps.multiple) {
      this.setState({value: [this.state.value]});
    } else if (this.props.multiple && !nextProps.multiple) {
      this.setState({value: this.state.value[0]});
    }
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    props.onChange = this._handleChange;
    props.value = null;

    return select(props, this.props.children);
  },

  componentDidMount: function() {
    updateOptions(this, LinkedValueUtils.getValue(this));
  },

  componentDidUpdate: function(prevProps) {
    var value = LinkedValueUtils.getValue(this);
    var prevMultiple = !!prevProps.multiple;
    var multiple = !!this.props.multiple;
    if (value != null || prevMultiple !== multiple) {
      updateOptions(this, value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }

    var selectedValue;
    if (this.props.multiple) {
      selectedValue = [];
      var options = event.target.options;
      for (var i = 0, l = options.length; i < l; i++) {
        if (options[i].selected) {
          selectedValue.push(options[i].value);
        }
      }
    } else {
      selectedValue = event.target.value;
    }

    this._pendingValue = selectedValue;
    ReactUpdates.asap(updateWithPendingValueIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMSelect;

},{"./AutoFocusMixin":2,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79}],46:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMSelection
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var getNodeForCharacterOffset = _dereq_("./getNodeForCharacterOffset");
var getTextContentAccessor = _dereq_("./getTextContentAccessor");

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(
    selection.anchorNode,
    selection.anchorOffset,
    selection.focusNode,
    selection.focusOffset
  );

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(
    tempRange.startContainer,
    tempRange.startOffset,
    tempRange.endContainer,
    tempRange.endOffset
  );

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (typeof offsets.end === 'undefined') {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = typeof offsets.end === 'undefined' ?
            start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && document.selection;

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

},{"./ExecutionEnvironment":22,"./getNodeForCharacterOffset":119,"./getTextContentAccessor":121}],47:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDOMTextarea
 */

"use strict";

var AutoFocusMixin = _dereq_("./AutoFocusMixin");
var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var LinkedValueUtils = _dereq_("./LinkedValueUtils");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");
var ReactDOM = _dereq_("./ReactDOM");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

var warning = _dereq_("./warning");

// Store a reference to the <textarea> `ReactDOMComponent`. TODO: use string
var textarea = ReactElement.createFactory(ReactDOM.textarea.type);

function forceUpdateIfMounted() {
  /*jshint validthis:true */
  if (this.isMounted()) {
    this.forceUpdate();
  }
}

/**
 * Implements a <textarea> native component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = ReactCompositeComponent.createClass({
  displayName: 'ReactDOMTextarea',

  mixins: [AutoFocusMixin, LinkedValueUtils.Mixin, ReactBrowserComponentMixin],

  getInitialState: function() {
    var defaultValue = this.props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = this.props.children;
    if (children != null) {
      if ("production" !== "development") {
        ("production" !== "development" ? warning(
          false,
          'Use the `defaultValue` or `value` props instead of setting ' +
          'children on <textarea>.'
        ) : null);
      }
      ("production" !== "development" ? invariant(
        defaultValue == null,
        'If you supply `defaultValue` on a <textarea>, do not pass children.'
      ) : invariant(defaultValue == null));
      if (Array.isArray(children)) {
        ("production" !== "development" ? invariant(
          children.length <= 1,
          '<textarea> can only have at most one child.'
        ) : invariant(children.length <= 1));
        children = children[0];
      }

      defaultValue = '' + children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    var value = LinkedValueUtils.getValue(this);
    return {
      // We save the initial value so that `ReactDOMComponent` doesn't update
      // `textContent` (unnecessary since we update value).
      // The initial value can be a boolean or object so that's why it's
      // forced to be a string.
      initialValue: '' + (value != null ? value : defaultValue)
    };
  },

  render: function() {
    // Clone `this.props` so we don't mutate the input.
    var props = assign({}, this.props);

    ("production" !== "development" ? invariant(
      props.dangerouslySetInnerHTML == null,
      '`dangerouslySetInnerHTML` does not make sense on <textarea>.'
    ) : invariant(props.dangerouslySetInnerHTML == null));

    props.defaultValue = null;
    props.value = null;
    props.onChange = this._handleChange;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.
    return textarea(props, this.state.initialValue);
  },

  componentDidUpdate: function(prevProps, prevState, prevContext) {
    var value = LinkedValueUtils.getValue(this);
    if (value != null) {
      var rootNode = this.getDOMNode();
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      DOMPropertyOperations.setValueForProperty(rootNode, 'value', '' + value);
    }
  },

  _handleChange: function(event) {
    var returnValue;
    var onChange = LinkedValueUtils.getOnChange(this);
    if (onChange) {
      returnValue = onChange.call(this, event);
    }
    ReactUpdates.asap(forceUpdateIfMounted, this);
    return returnValue;
  }

});

module.exports = ReactDOMTextarea;

},{"./AutoFocusMixin":2,"./DOMPropertyOperations":12,"./LinkedValueUtils":24,"./Object.assign":27,"./ReactBrowserComponentMixin":29,"./ReactCompositeComponent":34,"./ReactDOM":37,"./ReactElement":52,"./ReactUpdates":79,"./invariant":126,"./warning":145}],48:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultBatchingStrategy
 */

"use strict";

var ReactUpdates = _dereq_("./ReactUpdates");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function() {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

assign(
  ReactDefaultBatchingStrategyTransaction.prototype,
  Transaction.Mixin,
  {
    getTransactionWrappers: function() {
      return TRANSACTION_WRAPPERS;
    }
  }
);

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function(callback, a, b) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      callback(a, b);
    } else {
      transaction.perform(callback, null, a, b);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

},{"./Object.assign":27,"./ReactUpdates":79,"./Transaction":95,"./emptyFunction":107}],49:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultInjection
 */

"use strict";

var BeforeInputEventPlugin = _dereq_("./BeforeInputEventPlugin");
var ChangeEventPlugin = _dereq_("./ChangeEventPlugin");
var ClientReactRootIndex = _dereq_("./ClientReactRootIndex");
var CompositionEventPlugin = _dereq_("./CompositionEventPlugin");
var DefaultEventPluginOrder = _dereq_("./DefaultEventPluginOrder");
var EnterLeaveEventPlugin = _dereq_("./EnterLeaveEventPlugin");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var HTMLDOMPropertyConfig = _dereq_("./HTMLDOMPropertyConfig");
var MobileSafariClickEventPlugin = _dereq_("./MobileSafariClickEventPlugin");
var ReactBrowserComponentMixin = _dereq_("./ReactBrowserComponentMixin");
var ReactComponentBrowserEnvironment =
  _dereq_("./ReactComponentBrowserEnvironment");
var ReactDefaultBatchingStrategy = _dereq_("./ReactDefaultBatchingStrategy");
var ReactDOMComponent = _dereq_("./ReactDOMComponent");
var ReactDOMButton = _dereq_("./ReactDOMButton");
var ReactDOMForm = _dereq_("./ReactDOMForm");
var ReactDOMImg = _dereq_("./ReactDOMImg");
var ReactDOMInput = _dereq_("./ReactDOMInput");
var ReactDOMOption = _dereq_("./ReactDOMOption");
var ReactDOMSelect = _dereq_("./ReactDOMSelect");
var ReactDOMTextarea = _dereq_("./ReactDOMTextarea");
var ReactEventListener = _dereq_("./ReactEventListener");
var ReactInjection = _dereq_("./ReactInjection");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMount = _dereq_("./ReactMount");
var SelectEventPlugin = _dereq_("./SelectEventPlugin");
var ServerReactRootIndex = _dereq_("./ServerReactRootIndex");
var SimpleEventPlugin = _dereq_("./SimpleEventPlugin");
var SVGDOMPropertyConfig = _dereq_("./SVGDOMPropertyConfig");

var createFullPageComponent = _dereq_("./createFullPageComponent");

function inject() {
  ReactInjection.EventEmitter.injectReactEventListener(
    ReactEventListener
  );

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginHub.injectInstanceHandle(ReactInstanceHandles);
  ReactInjection.EventPluginHub.injectMount(ReactMount);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    CompositionEventPlugin: CompositionEventPlugin,
    MobileSafariClickEventPlugin: MobileSafariClickEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.NativeComponent.injectGenericComponentClass(
    ReactDOMComponent
  );

  ReactInjection.NativeComponent.injectComponentClasses({
    'button': ReactDOMButton,
    'form': ReactDOMForm,
    'img': ReactDOMImg,
    'input': ReactDOMInput,
    'option': ReactDOMOption,
    'select': ReactDOMSelect,
    'textarea': ReactDOMTextarea,

    'html': createFullPageComponent('html'),
    'head': createFullPageComponent('head'),
    'body': createFullPageComponent('body')
  });

  // This needs to happen after createFullPageComponent() otherwise the mixin
  // gets double injected.
  ReactInjection.CompositeComponent.injectMixin(ReactBrowserComponentMixin);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponent('noscript');

  ReactInjection.Updates.injectReconcileTransaction(
    ReactComponentBrowserEnvironment.ReactReconcileTransaction
  );
  ReactInjection.Updates.injectBatchingStrategy(
    ReactDefaultBatchingStrategy
  );

  ReactInjection.RootIndex.injectCreateReactRootIndex(
    ExecutionEnvironment.canUseDOM ?
      ClientReactRootIndex.createReactRootIndex :
      ServerReactRootIndex.createReactRootIndex
  );

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);

  if ("production" !== "development") {
    var url = (ExecutionEnvironment.canUseDOM && window.location.href) || '';
    if ((/[?&]react_perf\b/).test(url)) {
      var ReactDefaultPerf = _dereq_("./ReactDefaultPerf");
      ReactDefaultPerf.start();
    }
  }
}

module.exports = {
  inject: inject
};

},{"./BeforeInputEventPlugin":3,"./ChangeEventPlugin":7,"./ClientReactRootIndex":8,"./CompositionEventPlugin":9,"./DefaultEventPluginOrder":14,"./EnterLeaveEventPlugin":15,"./ExecutionEnvironment":22,"./HTMLDOMPropertyConfig":23,"./MobileSafariClickEventPlugin":26,"./ReactBrowserComponentMixin":29,"./ReactComponentBrowserEnvironment":33,"./ReactDOMButton":38,"./ReactDOMComponent":39,"./ReactDOMForm":40,"./ReactDOMImg":42,"./ReactDOMInput":43,"./ReactDOMOption":44,"./ReactDOMSelect":45,"./ReactDOMTextarea":47,"./ReactDefaultBatchingStrategy":48,"./ReactDefaultPerf":50,"./ReactEventListener":57,"./ReactInjection":58,"./ReactInstanceHandles":60,"./ReactMount":63,"./SVGDOMPropertyConfig":80,"./SelectEventPlugin":81,"./ServerReactRootIndex":82,"./SimpleEventPlugin":83,"./createFullPageComponent":103}],50:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerf
 * @typechecks static-only
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ReactDefaultPerfAnalysis = _dereq_("./ReactDefaultPerfAnalysis");
var ReactMount = _dereq_("./ReactMount");
var ReactPerf = _dereq_("./ReactPerf");

var performanceNow = _dereq_("./performanceNow");

function roundFloat(val) {
  return Math.floor(val * 100) / 100;
}

function addValue(obj, key, val) {
  obj[key] = (obj[key] || 0) + val;
}

var ReactDefaultPerf = {
  _allMeasurements: [], // last item in the list is the current one
  _mountStack: [0],
  _injected: false,

  start: function() {
    if (!ReactDefaultPerf._injected) {
      ReactPerf.injection.injectMeasure(ReactDefaultPerf.measure);
    }

    ReactDefaultPerf._allMeasurements.length = 0;
    ReactPerf.enableMeasure = true;
  },

  stop: function() {
    ReactPerf.enableMeasure = false;
  },

  getLastMeasurements: function() {
    return ReactDefaultPerf._allMeasurements;
  },

  printExclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getExclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Component class name': item.componentName,
        'Total inclusive time (ms)': roundFloat(item.inclusive),
        'Exclusive mount time (ms)': roundFloat(item.exclusive),
        'Exclusive render time (ms)': roundFloat(item.render),
        'Mount time per instance (ms)': roundFloat(item.exclusive / item.count),
        'Render time per instance (ms)': roundFloat(item.render / item.count),
        'Instances': item.count
      };
    }));
    // TODO: ReactDefaultPerfAnalysis.getTotalTime() does not return the correct
    // number.
  },

  printInclusive: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(measurements);
    console.table(summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Inclusive time (ms)': roundFloat(item.time),
        'Instances': item.count
      };
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  getMeasurementsSummaryMap: function(measurements) {
    var summary = ReactDefaultPerfAnalysis.getInclusiveSummary(
      measurements,
      true
    );
    return summary.map(function(item) {
      return {
        'Owner > component': item.componentName,
        'Wasted time (ms)': item.time,
        'Instances': item.count
      };
    });
  },

  printWasted: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    console.table(ReactDefaultPerf.getMeasurementsSummaryMap(measurements));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  printDOM: function(measurements) {
    measurements = measurements || ReactDefaultPerf._allMeasurements;
    var summary = ReactDefaultPerfAnalysis.getDOMSummary(measurements);
    console.table(summary.map(function(item) {
      var result = {};
      result[DOMProperty.ID_ATTRIBUTE_NAME] = item.id;
      result['type'] = item.type;
      result['args'] = JSON.stringify(item.args);
      return result;
    }));
    console.log(
      'Total time:',
      ReactDefaultPerfAnalysis.getTotalTime(measurements).toFixed(2) + ' ms'
    );
  },

  _recordWrite: function(id, fnName, totalTime, args) {
    // TODO: totalTime isn't that useful since it doesn't count paints/reflows
    var writes =
      ReactDefaultPerf
        ._allMeasurements[ReactDefaultPerf._allMeasurements.length - 1]
        .writes;
    writes[id] = writes[id] || [];
    writes[id].push({
      type: fnName,
      time: totalTime,
      args: args
    });
  },

  measure: function(moduleName, fnName, func) {
    return function() {for (var args=[],$__0=0,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
      var totalTime;
      var rv;
      var start;

      if (fnName === '_renderNewRootComponent' ||
          fnName === 'flushBatchedUpdates') {
        // A "measurement" is a set of metrics recorded for each flush. We want
        // to group the metrics for a given flush together so we can look at the
        // components that rendered and the DOM operations that actually
        // happened to determine the amount of "wasted work" performed.
        ReactDefaultPerf._allMeasurements.push({
          exclusive: {},
          inclusive: {},
          render: {},
          counts: {},
          writes: {},
          displayNames: {},
          totalTime: 0
        });
        start = performanceNow();
        rv = func.apply(this, args);
        ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ].totalTime = performanceNow() - start;
        return rv;
      } else if (moduleName === 'ReactDOMIDOperations' ||
        moduleName === 'ReactComponentBrowserEnvironment') {
        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (fnName === 'mountImageIntoNode') {
          var mountID = ReactMount.getID(args[1]);
          ReactDefaultPerf._recordWrite(mountID, fnName, totalTime, args[0]);
        } else if (fnName === 'dangerouslyProcessChildrenUpdates') {
          // special format
          args[0].forEach(function(update) {
            var writeArgs = {};
            if (update.fromIndex !== null) {
              writeArgs.fromIndex = update.fromIndex;
            }
            if (update.toIndex !== null) {
              writeArgs.toIndex = update.toIndex;
            }
            if (update.textContent !== null) {
              writeArgs.textContent = update.textContent;
            }
            if (update.markupIndex !== null) {
              writeArgs.markup = args[1][update.markupIndex];
            }
            ReactDefaultPerf._recordWrite(
              update.parentID,
              update.type,
              totalTime,
              writeArgs
            );
          });
        } else {
          // basic format
          ReactDefaultPerf._recordWrite(
            args[0],
            fnName,
            totalTime,
            Array.prototype.slice.call(args, 1)
          );
        }
        return rv;
      } else if (moduleName === 'ReactCompositeComponent' && (
        fnName === 'mountComponent' ||
        fnName === 'updateComponent' || // TODO: receiveComponent()?
        fnName === '_renderValidatedComponent')) {

        var rootNodeID = fnName === 'mountComponent' ?
          args[0] :
          this._rootNodeID;
        var isRender = fnName === '_renderValidatedComponent';
        var isMount = fnName === 'mountComponent';

        var mountStack = ReactDefaultPerf._mountStack;
        var entry = ReactDefaultPerf._allMeasurements[
          ReactDefaultPerf._allMeasurements.length - 1
        ];

        if (isRender) {
          addValue(entry.counts, rootNodeID, 1);
        } else if (isMount) {
          mountStack.push(0);
        }

        start = performanceNow();
        rv = func.apply(this, args);
        totalTime = performanceNow() - start;

        if (isRender) {
          addValue(entry.render, rootNodeID, totalTime);
        } else if (isMount) {
          var subMountTime = mountStack.pop();
          mountStack[mountStack.length - 1] += totalTime;
          addValue(entry.exclusive, rootNodeID, totalTime - subMountTime);
          addValue(entry.inclusive, rootNodeID, totalTime);
        } else {
          addValue(entry.inclusive, rootNodeID, totalTime);
        }

        entry.displayNames[rootNodeID] = {
          current: this.constructor.displayName,
          owner: this._owner ? this._owner.constructor.displayName : '<root>'
        };

        return rv;
      } else {
        return func.apply(this, args);
      }
    };
  }
};

module.exports = ReactDefaultPerf;

},{"./DOMProperty":11,"./ReactDefaultPerfAnalysis":51,"./ReactMount":63,"./ReactPerf":68,"./performanceNow":139}],51:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactDefaultPerfAnalysis
 */

var assign = _dereq_("./Object.assign");

// Don't try to save users less than 1.2ms (a number I made up)
var DONT_CARE_THRESHOLD = 1.2;
var DOM_OPERATION_TYPES = {
  'mountImageIntoNode': 'set innerHTML',
  INSERT_MARKUP: 'set innerHTML',
  MOVE_EXISTING: 'move',
  REMOVE_NODE: 'remove',
  TEXT_CONTENT: 'set textContent',
  'updatePropertyByID': 'update attribute',
  'deletePropertyByID': 'delete attribute',
  'updateStylesByID': 'update styles',
  'updateInnerHTMLByID': 'set innerHTML',
  'dangerouslyReplaceNodeWithMarkupByID': 'replace'
};

function getTotalTime(measurements) {
  // TODO: return number of DOM ops? could be misleading.
  // TODO: measure dropped frames after reconcile?
  // TODO: log total time of each reconcile and the top-level component
  // class that triggered it.
  var totalTime = 0;
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    totalTime += measurement.totalTime;
  }
  return totalTime;
}

function getDOMSummary(measurements) {
  var items = [];
  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var id;

    for (id in measurement.writes) {
      measurement.writes[id].forEach(function(write) {
        items.push({
          id: id,
          type: DOM_OPERATION_TYPES[write.type] || write.type,
          args: write.args
        });
      });
    }
  }
  return items;
}

function getExclusiveSummary(measurements) {
  var candidates = {};
  var displayName;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );

    for (var id in allIDs) {
      displayName = measurement.displayNames[id].current;

      candidates[displayName] = candidates[displayName] || {
        componentName: displayName,
        inclusive: 0,
        exclusive: 0,
        render: 0,
        count: 0
      };
      if (measurement.render[id]) {
        candidates[displayName].render += measurement.render[id];
      }
      if (measurement.exclusive[id]) {
        candidates[displayName].exclusive += measurement.exclusive[id];
      }
      if (measurement.inclusive[id]) {
        candidates[displayName].inclusive += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[displayName].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (displayName in candidates) {
    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[displayName]);
    }
  }

  arr.sort(function(a, b) {
    return b.exclusive - a.exclusive;
  });

  return arr;
}

function getInclusiveSummary(measurements, onlyClean) {
  var candidates = {};
  var inclusiveKey;

  for (var i = 0; i < measurements.length; i++) {
    var measurement = measurements[i];
    var allIDs = assign(
      {},
      measurement.exclusive,
      measurement.inclusive
    );
    var cleanComponents;

    if (onlyClean) {
      cleanComponents = getUnchangedComponents(measurement);
    }

    for (var id in allIDs) {
      if (onlyClean && !cleanComponents[id]) {
        continue;
      }

      var displayName = measurement.displayNames[id];

      // Inclusive time is not useful for many components without knowing where
      // they are instantiated. So we aggregate inclusive time with both the
      // owner and current displayName as the key.
      inclusiveKey = displayName.owner + ' > ' + displayName.current;

      candidates[inclusiveKey] = candidates[inclusiveKey] || {
        componentName: inclusiveKey,
        time: 0,
        count: 0
      };

      if (measurement.inclusive[id]) {
        candidates[inclusiveKey].time += measurement.inclusive[id];
      }
      if (measurement.counts[id]) {
        candidates[inclusiveKey].count += measurement.counts[id];
      }
    }
  }

  // Now make a sorted array with the results.
  var arr = [];
  for (inclusiveKey in candidates) {
    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {
      arr.push(candidates[inclusiveKey]);
    }
  }

  arr.sort(function(a, b) {
    return b.time - a.time;
  });

  return arr;
}

function getUnchangedComponents(measurement) {
  // For a given reconcile, look at which components did not actually
  // render anything to the DOM and return a mapping of their ID to
  // the amount of time it took to render the entire subtree.
  var cleanComponents = {};
  var dirtyLeafIDs = Object.keys(measurement.writes);
  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);

  for (var id in allIDs) {
    var isDirty = false;
    // For each component that rendered, see if a component that triggered
    // a DOM op is in its subtree.
    for (var i = 0; i < dirtyLeafIDs.length; i++) {
      if (dirtyLeafIDs[i].indexOf(id) === 0) {
        isDirty = true;
        break;
      }
    }
    if (!isDirty && measurement.counts[id] > 0) {
      cleanComponents[id] = true;
    }
  }
  return cleanComponents;
}

var ReactDefaultPerfAnalysis = {
  getExclusiveSummary: getExclusiveSummary,
  getInclusiveSummary: getInclusiveSummary,
  getDOMSummary: getDOMSummary,
  getTotalTime: getTotalTime
};

module.exports = ReactDefaultPerfAnalysis;

},{"./Object.assign":27}],52:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElement
 */

"use strict";

var ReactContext = _dereq_("./ReactContext");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var warning = _dereq_("./warning");

var RESERVED_PROPS = {
  key: true,
  ref: true
};

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} object
 * @param {string} key
 */
function defineWarningProperty(object, key) {
  Object.defineProperty(object, key, {

    configurable: false,
    enumerable: true,

    get: function() {
      if (!this._store) {
        return null;
      }
      return this._store[key];
    },

    set: function(value) {
      ("production" !== "development" ? warning(
        false,
        'Don\'t set the ' + key + ' property of the component. ' +
        'Mutate the existing props object instead.'
      ) : null);
      this._store[key] = value;
    }

  });
}

/**
 * This is updated to true if the membrane is successfully created.
 */
var useMutationMembrane = false;

/**
 * Warn for mutations.
 *
 * @internal
 * @param {object} element
 */
function defineMutationMembrane(prototype) {
  try {
    var pseudoFrozenProperties = {
      props: true
    };
    for (var key in pseudoFrozenProperties) {
      defineWarningProperty(prototype, key);
    }
    useMutationMembrane = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

/**
 * Base constructor for all React elements. This is only used to make this
 * work with a dynamic instanceof check. Nothing should live on this prototype.
 *
 * @param {*} type
 * @param {string|object} ref
 * @param {*} key
 * @param {*} props
 * @internal
 */
var ReactElement = function(type, key, ref, owner, context, props) {
  // Built-in properties that belong on the element
  this.type = type;
  this.key = key;
  this.ref = ref;

  // Record the component responsible for creating this element.
  this._owner = owner;

  // TODO: Deprecate withContext, and then the context becomes accessible
  // through the owner.
  this._context = context;

  if ("production" !== "development") {
    // The validation flag and props are currently mutative. We put them on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    this._store = { validated: false, props: props };

    // We're not allowed to set props directly on the object so we early
    // return and rely on the prototype membrane to forward to the backing
    // store.
    if (useMutationMembrane) {
      Object.freeze(this);
      return;
    }
  }

  this.props = props;
};

// We intentionally don't expose the function on the constructor property.
// ReactElement should be indistinguishable from a plain object.
ReactElement.prototype = {
  _isReactElement: true
};

if ("production" !== "development") {
  defineMutationMembrane(ReactElement.prototype);
}

ReactElement.createElement = function(type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;

  if (config != null) {
    ref = config.ref === undefined ? null : config.ref;
    if ("production" !== "development") {
      ("production" !== "development" ? warning(
        config.key !== null,
        'createElement(...): Encountered component with a `key` of null. In ' +
        'a future version, this will be treated as equivalent to the string ' +
        '\'null\'; instead, provide an explicit key or use undefined.'
      ) : null);
    }
    // TODO: Change this back to `config.key === undefined`
    key = config.key == null ? null : '' + config.key;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (config.hasOwnProperty(propName) &&
          !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (typeof props[propName] === 'undefined') {
        props[propName] = defaultProps[propName];
      }
    }
  }

  return new ReactElement(
    type,
    key,
    ref,
    ReactCurrentOwner.current,
    ReactContext.current,
    props
  );
};

ReactElement.createFactory = function(type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. <Foo />.type === Foo.type.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceProps = function(oldElement, newProps) {
  var newElement = new ReactElement(
    oldElement.type,
    oldElement.key,
    oldElement.ref,
    oldElement._owner,
    oldElement._context,
    newProps
  );

  if ("production" !== "development") {
    // If the key on the original is valid, then the clone is valid
    newElement._store.validated = oldElement._store.validated;
  }
  return newElement;
};

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function(object) {
  // ReactTestUtils is often used outside of beforeEach where as React is
  // within it. This leads to two different instances of React on the same
  // page. To identify a element from a different React instance we use
  // a flag instead of an instanceof check.
  var isElement = !!(object && object._isReactElement);
  // if (isElement && !(object instanceof ReactElement)) {
  // This is an indicator that you're using multiple versions of React at the
  // same time. This will screw with ownership and stuff. Fix it, please.
  // TODO: We could possibly warn here.
  // }
  return isElement;
};

module.exports = ReactElement;

},{"./ReactContext":35,"./ReactCurrentOwner":36,"./warning":145}],53:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactElementValidator
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactPropTypeLocations = _dereq_("./ReactPropTypeLocations");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var monitorCodeUse = _dereq_("./monitorCodeUse");
var warning = _dereq_("./warning");

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {
  'react_key_warning': {},
  'react_numeric_key_warning': {}
};
var ownerHasMonitoredObjectMap = {};

var loggedTypeFailures = {};

var NUMERIC_PROPERTY_REGEX = /^\d+$/;

/**
 * Gets the current owner's displayName for use in warnings.
 *
 * @internal
 * @return {?string} Display name or undefined
 */
function getCurrentOwnerDisplayName() {
  var current = ReactCurrentOwner.current;
  return current && current.constructor.displayName || undefined;
}

/**
 * Warn if the component doesn't have an explicit key assigned to it.
 * This component is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it.
 *
 * @internal
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function validateExplicitKey(component, parentType) {
  if (component._store.validated || component.key != null) {
    return;
  }
  component._store.validated = true;

  warnAndMonitorForKeyUse(
    'react_key_warning',
    'Each child in an array should have a unique "key" prop.',
    component,
    parentType
  );
}

/**
 * Warn if the key is being defined as an object property but has an incorrect
 * value.
 *
 * @internal
 * @param {string} name Property name of the key.
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function validatePropertyKey(name, component, parentType) {
  if (!NUMERIC_PROPERTY_REGEX.test(name)) {
    return;
  }
  warnAndMonitorForKeyUse(
    'react_numeric_key_warning',
    'Child objects should have non-numeric keys so ordering is preserved.',
    component,
    parentType
  );
}

/**
 * Shared warning and monitoring code for the key warnings.
 *
 * @internal
 * @param {string} warningID The id used when logging.
 * @param {string} message The base warning that gets output.
 * @param {ReactComponent} component Component that requires a key.
 * @param {*} parentType component's parent's type.
 */
function warnAndMonitorForKeyUse(warningID, message, component, parentType) {
  var ownerName = getCurrentOwnerDisplayName();
  var parentName = parentType.displayName;

  var useName = ownerName || parentName;
  var memoizer = ownerHasKeyUseWarning[warningID];
  if (memoizer.hasOwnProperty(useName)) {
    return;
  }
  memoizer[useName] = true;

  message += ownerName ?
    (" Check the render method of " + ownerName + ".") :
    (" Check the renderComponent call using <" + parentName + ">.");

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwnerName = null;
  if (component._owner && component._owner !== ReactCurrentOwner.current) {
    // Name of the component that originally created this child.
    childOwnerName = component._owner.constructor.displayName;

    message += (" It was passed a child from " + childOwnerName + ".");
  }

  message += ' See http://fb.me/react-warning-keys for more information.';
  monitorCodeUse(warningID, {
    component: useName,
    componentOwner: childOwnerName
  });
  console.warn(message);
}

/**
 * Log that we're using an object map. We're considering deprecating this
 * feature and replace it with proper Map and ImmutableMap data structures.
 *
 * @internal
 */
function monitorUseOfObjectMap() {
  var currentName = getCurrentOwnerDisplayName() || '';
  if (ownerHasMonitoredObjectMap.hasOwnProperty(currentName)) {
    return;
  }
  ownerHasMonitoredObjectMap[currentName] = true;
  monitorCodeUse('react_object_map_children');
}

/**
 * Ensure that every component either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {*} component Statically passed child of any type.
 * @param {*} parentType component's parent's type.
 * @return {boolean}
 */
function validateChildKeys(component, parentType) {
  if (Array.isArray(component)) {
    for (var i = 0; i < component.length; i++) {
      var child = component[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(component)) {
    // This component was passed in a valid location.
    component._store.validated = true;
  } else if (component && typeof component === 'object') {
    monitorUseOfObjectMap();
    for (var name in component) {
      validatePropertyKey(name, component[name], parentType);
    }
  }
}

/**
 * Assert that the props are valid
 *
 * @param {string} componentName Name of the component for error messages.
 * @param {object} propTypes Map of prop name to a ReactPropType
 * @param {object} props
 * @param {string} location e.g. "prop", "context", "child context"
 * @private
 */
function checkPropTypes(componentName, propTypes, props, location) {
  for (var propName in propTypes) {
    if (propTypes.hasOwnProperty(propName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        error = propTypes[propName](props, propName, componentName, location);
      } catch (ex) {
        error = ex;
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;
        // This will soon use the warning module
        monitorCodeUse(
          'react_failed_descriptor_type_check',
          { message: error.message }
        );
      }
    }
  }
}

var ReactElementValidator = {

  createElement: function(type, props, children) {
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    ("production" !== "development" ? warning(
      type != null,
      'React.createElement: type should not be null or undefined. It should ' +
        'be a string (for DOM elements) or a ReactClass (for composite ' +
        'components).'
    ) : null);

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }

    if (type) {
      var name = type.displayName;
      if (type.propTypes) {
        checkPropTypes(
          name,
          type.propTypes,
          element.props,
          ReactPropTypeLocations.prop
        );
      }
      if (type.contextTypes) {
        checkPropTypes(
          name,
          type.contextTypes,
          element._context,
          ReactPropTypeLocations.context
        );
      }
    }
    return element;
  },

  createFactory: function(type) {
    var validatedFactory = ReactElementValidator.createElement.bind(
      null,
      type
    );
    validatedFactory.type = type;
    return validatedFactory;
  }

};

module.exports = ReactElementValidator;

},{"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactPropTypeLocations":71,"./monitorCodeUse":136,"./warning":145}],54:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEmptyComponent
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

var component;
// This registry keeps track of the React IDs of the components that rendered to
// `null` (in reality a placeholder such as `noscript`)
var nullComponentIdsRegistry = {};

var ReactEmptyComponentInjection = {
  injectEmptyComponent: function(emptyComponent) {
    component = ReactElement.createFactory(emptyComponent);
  }
};

/**
 * @return {ReactComponent} component The injected empty component.
 */
function getEmptyComponent() {
  ("production" !== "development" ? invariant(
    component,
    'Trying to return null from a render, but no null placeholder component ' +
    'was injected.'
  ) : invariant(component));
  return component();
}

/**
 * Mark the component as having rendered to null.
 * @param {string} id Component's `_rootNodeID`.
 */
function registerNullComponentID(id) {
  nullComponentIdsRegistry[id] = true;
}

/**
 * Unmark the component as having rendered to null: it renders to something now.
 * @param {string} id Component's `_rootNodeID`.
 */
function deregisterNullComponentID(id) {
  delete nullComponentIdsRegistry[id];
}

/**
 * @param {string} id Component's `_rootNodeID`.
 * @return {boolean} True if the component is rendered to null.
 */
function isNullComponentID(id) {
  return nullComponentIdsRegistry[id];
}

var ReactEmptyComponent = {
  deregisterNullComponentID: deregisterNullComponentID,
  getEmptyComponent: getEmptyComponent,
  injection: ReactEmptyComponentInjection,
  isNullComponentID: isNullComponentID,
  registerNullComponentID: registerNullComponentID
};

module.exports = ReactEmptyComponent;

},{"./ReactElement":52,"./invariant":126}],55:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactErrorUtils
 * @typechecks
 */

"use strict";

var ReactErrorUtils = {
  /**
   * Creates a guarded version of a function. This is supposed to make debugging
   * of event handlers easier. To aid debugging with the browser's debugger,
   * this currently simply returns the original function.
   *
   * @param {function} func Function to be executed
   * @param {string} name The name of the guard
   * @return {function}
   */
  guard: function(func, name) {
    return func;
  }
};

module.exports = ReactErrorUtils;

},{}],56:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventEmitterMixin
 */

"use strict";

var EventPluginHub = _dereq_("./EventPluginHub");

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue();
}

var ReactEventEmitterMixin = {

  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {object} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native environment event.
   */
  handleTopLevel: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var events = EventPluginHub.extractEvents(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent
    );

    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

},{"./EventPluginHub":18}],57:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactEventListener
 * @typechecks static-only
 */

"use strict";

var EventListener = _dereq_("./EventListener");
var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");
var PooledClass = _dereq_("./PooledClass");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMount = _dereq_("./ReactMount");
var ReactUpdates = _dereq_("./ReactUpdates");

var assign = _dereq_("./Object.assign");
var getEventTarget = _dereq_("./getEventTarget");
var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

/**
 * Finds the parent React component of `node`.
 *
 * @param {*} node
 * @return {?DOMEventTarget} Parent container, or `null` if the specified node
 *                           is not nested.
 */
function findParent(node) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  var nodeID = ReactMount.getID(node);
  var rootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);
  var container = ReactMount.findReactContainerForID(rootID);
  var parent = ReactMount.getFirstReactDOM(container);
  return parent;
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function() {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(
  TopLevelCallbackBookKeeping,
  PooledClass.twoArgumentPooler
);

function handleTopLevelImpl(bookKeeping) {
  var topLevelTarget = ReactMount.getFirstReactDOM(
    getEventTarget(bookKeeping.nativeEvent)
  ) || window;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = topLevelTarget;
  while (ancestor) {
    bookKeeping.ancestors.push(ancestor);
    ancestor = findParent(ancestor);
  }

  for (var i = 0, l = bookKeeping.ancestors.length; i < l; i++) {
    topLevelTarget = bookKeeping.ancestors[i];
    var topLevelTargetID = ReactMount.getID(topLevelTarget) || '';
    ReactEventListener._handleTopLevel(
      bookKeeping.topLevelType,
      topLevelTarget,
      topLevelTargetID,
      bookKeeping.nativeEvent
    );
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function(handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function(enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function() {
    return ReactEventListener._enabled;
  },


  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return;
    }
    return EventListener.listen(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} handle Element on which to attach listener.
   * @return {object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function(topLevelType, handlerBaseName, handle) {
    var element = handle;
    if (!element) {
      return;
    }
    return EventListener.capture(
      element,
      handlerBaseName,
      ReactEventListener.dispatchEvent.bind(null, topLevelType)
    );
  },

  monitorScrollValue: function(refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
    EventListener.listen(window, 'resize', callback);
  },

  dispatchEvent: function(topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(
      topLevelType,
      nativeEvent
    );
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

},{"./EventListener":17,"./ExecutionEnvironment":22,"./Object.assign":27,"./PooledClass":28,"./ReactInstanceHandles":60,"./ReactMount":63,"./ReactUpdates":79,"./getEventTarget":117,"./getUnboundedScrollPosition":122}],58:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInjection
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var EventPluginHub = _dereq_("./EventPluginHub");
var ReactComponent = _dereq_("./ReactComponent");
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactNativeComponent = _dereq_("./ReactNativeComponent");
var ReactPerf = _dereq_("./ReactPerf");
var ReactRootIndex = _dereq_("./ReactRootIndex");
var ReactUpdates = _dereq_("./ReactUpdates");

var ReactInjection = {
  Component: ReactComponent.injection,
  CompositeComponent: ReactCompositeComponent.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  NativeComponent: ReactNativeComponent.injection,
  Perf: ReactPerf.injection,
  RootIndex: ReactRootIndex.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

},{"./DOMProperty":11,"./EventPluginHub":18,"./ReactBrowserEventEmitter":30,"./ReactComponent":32,"./ReactCompositeComponent":34,"./ReactEmptyComponent":54,"./ReactNativeComponent":66,"./ReactPerf":68,"./ReactRootIndex":75,"./ReactUpdates":79}],59:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInputSelection
 */

"use strict";

var ReactDOMSelection = _dereq_("./ReactDOMSelection");

var containsNode = _dereq_("./containsNode");
var focusNode = _dereq_("./focusNode");
var getActiveElement = _dereq_("./getActiveElement");

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {

  hasSelectionCapabilities: function(elem) {
    return elem && (
      (elem.nodeName === 'INPUT' && elem.type === 'text') ||
      elem.nodeName === 'TEXTAREA' ||
      elem.contentEditable === 'true'
    );
  },

  getSelectionInformation: function() {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange:
          ReactInputSelection.hasSelectionCapabilities(focusedElem) ?
          ReactInputSelection.getSelection(focusedElem) :
          null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function(priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem &&
        isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(
          priorFocusedElem,
          priorSelectionRange
        );
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function(input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName === 'INPUT') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || {start: 0, end: 0};
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function(input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (typeof end === 'undefined') {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName === 'INPUT') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

},{"./ReactDOMSelection":46,"./containsNode":101,"./focusNode":111,"./getActiveElement":113}],60:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactInstanceHandles
 * @typechecks static-only
 */

"use strict";

var ReactRootIndex = _dereq_("./ReactRootIndex");

var invariant = _dereq_("./invariant");

var SEPARATOR = '.';
var SEPARATOR_LENGTH = SEPARATOR.length;

/**
 * Maximum depth of traversals before we consider the possibility of a bad ID.
 */
var MAX_TREE_DEPTH = 100;

/**
 * Creates a DOM ID prefix to use when mounting React components.
 *
 * @param {number} index A unique integer
 * @return {string} React root ID.
 * @internal
 */
function getReactRootIDString(index) {
  return SEPARATOR + index.toString(36);
}

/**
 * Checks if a character in the supplied ID is a separator or the end.
 *
 * @param {string} id A React DOM ID.
 * @param {number} index Index of the character to check.
 * @return {boolean} True if the character is a separator or end of the ID.
 * @private
 */
function isBoundary(id, index) {
  return id.charAt(index) === SEPARATOR || index === id.length;
}

/**
 * Checks if the supplied string is a valid React DOM ID.
 *
 * @param {string} id A React DOM ID, maybe.
 * @return {boolean} True if the string is a valid React DOM ID.
 * @private
 */
function isValidID(id) {
  return id === '' || (
    id.charAt(0) === SEPARATOR && id.charAt(id.length - 1) !== SEPARATOR
  );
}

/**
 * Checks if the first ID is an ancestor of or equal to the second ID.
 *
 * @param {string} ancestorID
 * @param {string} descendantID
 * @return {boolean} True if `ancestorID` is an ancestor of `descendantID`.
 * @internal
 */
function isAncestorIDOf(ancestorID, descendantID) {
  return (
    descendantID.indexOf(ancestorID) === 0 &&
    isBoundary(descendantID, ancestorID.length)
  );
}

/**
 * Gets the parent ID of the supplied React DOM ID, `id`.
 *
 * @param {string} id ID of a component.
 * @return {string} ID of the parent, or an empty string.
 * @private
 */
function getParentID(id) {
  return id ? id.substr(0, id.lastIndexOf(SEPARATOR)) : '';
}

/**
 * Gets the next DOM ID on the tree path from the supplied `ancestorID` to the
 * supplied `destinationID`. If they are equal, the ID is returned.
 *
 * @param {string} ancestorID ID of an ancestor node of `destinationID`.
 * @param {string} destinationID ID of the destination node.
 * @return {string} Next ID on the path from `ancestorID` to `destinationID`.
 * @private
 */
function getNextDescendantID(ancestorID, destinationID) {
  ("production" !== "development" ? invariant(
    isValidID(ancestorID) && isValidID(destinationID),
    'getNextDescendantID(%s, %s): Received an invalid React DOM ID.',
    ancestorID,
    destinationID
  ) : invariant(isValidID(ancestorID) && isValidID(destinationID)));
  ("production" !== "development" ? invariant(
    isAncestorIDOf(ancestorID, destinationID),
    'getNextDescendantID(...): React has made an invalid assumption about ' +
    'the DOM hierarchy. Expected `%s` to be an ancestor of `%s`.',
    ancestorID,
    destinationID
  ) : invariant(isAncestorIDOf(ancestorID, destinationID)));
  if (ancestorID === destinationID) {
    return ancestorID;
  }
  // Skip over the ancestor and the immediate separator. Traverse until we hit
  // another separator or we reach the end of `destinationID`.
  var start = ancestorID.length + SEPARATOR_LENGTH;
  for (var i = start; i < destinationID.length; i++) {
    if (isBoundary(destinationID, i)) {
      break;
    }
  }
  return destinationID.substr(0, i);
}

/**
 * Gets the nearest common ancestor ID of two IDs.
 *
 * Using this ID scheme, the nearest common ancestor ID is the longest common
 * prefix of the two IDs that immediately preceded a "marker" in both strings.
 *
 * @param {string} oneID
 * @param {string} twoID
 * @return {string} Nearest common ancestor ID, or the empty string if none.
 * @private
 */
function getFirstCommonAncestorID(oneID, twoID) {
  var minLength = Math.min(oneID.length, twoID.length);
  if (minLength === 0) {
    return '';
  }
  var lastCommonMarkerIndex = 0;
  // Use `<=` to traverse until the "EOL" of the shorter string.
  for (var i = 0; i <= minLength; i++) {
    if (isBoundary(oneID, i) && isBoundary(twoID, i)) {
      lastCommonMarkerIndex = i;
    } else if (oneID.charAt(i) !== twoID.charAt(i)) {
      break;
    }
  }
  var longestCommonID = oneID.substr(0, lastCommonMarkerIndex);
  ("production" !== "development" ? invariant(
    isValidID(longestCommonID),
    'getFirstCommonAncestorID(%s, %s): Expected a valid React DOM ID: %s',
    oneID,
    twoID,
    longestCommonID
  ) : invariant(isValidID(longestCommonID)));
  return longestCommonID;
}

/**
 * Traverses the parent path between two IDs (either up or down). The IDs must
 * not be the same, and there must exist a parent path between them. If the
 * callback returns `false`, traversal is stopped.
 *
 * @param {?string} start ID at which to start traversal.
 * @param {?string} stop ID at which to end traversal.
 * @param {function} cb Callback to invoke each ID with.
 * @param {?boolean} skipFirst Whether or not to skip the first node.
 * @param {?boolean} skipLast Whether or not to skip the last node.
 * @private
 */
function traverseParentPath(start, stop, cb, arg, skipFirst, skipLast) {
  start = start || '';
  stop = stop || '';
  ("production" !== "development" ? invariant(
    start !== stop,
    'traverseParentPath(...): Cannot traverse from and to the same ID, `%s`.',
    start
  ) : invariant(start !== stop));
  var traverseUp = isAncestorIDOf(stop, start);
  ("production" !== "development" ? invariant(
    traverseUp || isAncestorIDOf(start, stop),
    'traverseParentPath(%s, %s, ...): Cannot traverse from two IDs that do ' +
    'not have a parent path.',
    start,
    stop
  ) : invariant(traverseUp || isAncestorIDOf(start, stop)));
  // Traverse from `start` to `stop` one depth at a time.
  var depth = 0;
  var traverse = traverseUp ? getParentID : getNextDescendantID;
  for (var id = start; /* until break */; id = traverse(id, stop)) {
    var ret;
    if ((!skipFirst || id !== start) && (!skipLast || id !== stop)) {
      ret = cb(id, traverseUp, arg);
    }
    if (ret === false || id === stop) {
      // Only break //after// visiting `stop`.
      break;
    }
    ("production" !== "development" ? invariant(
      depth++ < MAX_TREE_DEPTH,
      'traverseParentPath(%s, %s, ...): Detected an infinite loop while ' +
      'traversing the React DOM ID tree. This may be due to malformed IDs: %s',
      start, stop
    ) : invariant(depth++ < MAX_TREE_DEPTH));
  }
}

/**
 * Manages the IDs assigned to DOM representations of React components. This
 * uses a specific scheme in order to traverse the DOM efficiently (e.g. in
 * order to simulate events).
 *
 * @internal
 */
var ReactInstanceHandles = {

  /**
   * Constructs a React root ID
   * @return {string} A React root ID.
   */
  createReactRootID: function() {
    return getReactRootIDString(ReactRootIndex.createReactRootIndex());
  },

  /**
   * Constructs a React ID by joining a root ID with a name.
   *
   * @param {string} rootID Root ID of a parent component.
   * @param {string} name A component's name (as flattened children).
   * @return {string} A React ID.
   * @internal
   */
  createReactID: function(rootID, name) {
    return rootID + name;
  },

  /**
   * Gets the DOM ID of the React component that is the root of the tree that
   * contains the React component with the supplied DOM ID.
   *
   * @param {string} id DOM ID of a React component.
   * @return {?string} DOM ID of the React component that is the root.
   * @internal
   */
  getReactRootIDFromNodeID: function(id) {
    if (id && id.charAt(0) === SEPARATOR && id.length > 1) {
      var index = id.indexOf(SEPARATOR, 1);
      return index > -1 ? id.substr(0, index) : id;
    }
    return null;
  },

  /**
   * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
   * should would receive a `mouseEnter` or `mouseLeave` event.
   *
   * NOTE: Does not invoke the callback on the nearest common ancestor because
   * nothing "entered" or "left" that element.
   *
   * @param {string} leaveID ID being left.
   * @param {string} enterID ID being entered.
   * @param {function} cb Callback to invoke on each entered/left ID.
   * @param {*} upArg Argument to invoke the callback with on left IDs.
   * @param {*} downArg Argument to invoke the callback with on entered IDs.
   * @internal
   */
  traverseEnterLeave: function(leaveID, enterID, cb, upArg, downArg) {
    var ancestorID = getFirstCommonAncestorID(leaveID, enterID);
    if (ancestorID !== leaveID) {
      traverseParentPath(leaveID, ancestorID, cb, upArg, false, true);
    }
    if (ancestorID !== enterID) {
      traverseParentPath(ancestorID, enterID, cb, downArg, true, false);
    }
  },

  /**
   * Simulates the traversal of a two-phase, capture/bubble event dispatch.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseTwoPhase: function(targetID, cb, arg) {
    if (targetID) {
      traverseParentPath('', targetID, cb, arg, true, false);
      traverseParentPath(targetID, '', cb, arg, false, true);
    }
  },

  /**
   * Traverse a node ID, calling the supplied `cb` for each ancestor ID. For
   * example, passing `.0.$row-0.1` would result in `cb` getting called
   * with `.0`, `.0.$row-0`, and `.0.$row-0.1`.
   *
   * NOTE: This traversal happens on IDs without touching the DOM.
   *
   * @param {string} targetID ID of the target node.
   * @param {function} cb Callback to invoke.
   * @param {*} arg Argument to invoke the callback with.
   * @internal
   */
  traverseAncestors: function(targetID, cb, arg) {
    traverseParentPath('', targetID, cb, arg, true, false);
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _getFirstCommonAncestorID: getFirstCommonAncestorID,

  /**
   * Exposed for unit testing.
   * @private
   */
  _getNextDescendantID: getNextDescendantID,

  isAncestorIDOf: isAncestorIDOf,

  SEPARATOR: SEPARATOR

};

module.exports = ReactInstanceHandles;

},{"./ReactRootIndex":75,"./invariant":126}],61:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactLegacyElement
 */

"use strict";

var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");

var invariant = _dereq_("./invariant");
var monitorCodeUse = _dereq_("./monitorCodeUse");
var warning = _dereq_("./warning");

var legacyFactoryLogs = {};
function warnForLegacyFactoryCall() {
  if (!ReactLegacyElementFactory._isLegacyCallWarningEnabled) {
    return;
  }
  var owner = ReactCurrentOwner.current;
  var name = owner && owner.constructor ? owner.constructor.displayName : '';
  if (!name) {
    name = 'Something';
  }
  if (legacyFactoryLogs.hasOwnProperty(name)) {
    return;
  }
  legacyFactoryLogs[name] = true;
  ("production" !== "development" ? warning(
    false,
    name + ' is calling a React component directly. ' +
    'Use a factory or JSX instead. See: http://fb.me/react-legacyfactory'
  ) : null);
  monitorCodeUse('react_legacy_factory_call', { version: 3, name: name });
}

function warnForPlainFunctionType(type) {
  var isReactClass =
    type.prototype &&
    typeof type.prototype.mountComponent === 'function' &&
    typeof type.prototype.receiveComponent === 'function';
  if (isReactClass) {
    ("production" !== "development" ? warning(
      false,
      'Did not expect to get a React class here. Use `Component` instead ' +
      'of `Component.type` or `this.constructor`.'
    ) : null);
  } else {
    if (!type._reactWarnedForThisType) {
      try {
        type._reactWarnedForThisType = true;
      } catch (x) {
        // just incase this is a frozen object or some special object
      }
      monitorCodeUse(
        'react_non_component_in_jsx',
        { version: 3, name: type.name }
      );
    }
    ("production" !== "development" ? warning(
      false,
      'This JSX uses a plain function. Only React components are ' +
      'valid in React\'s JSX transform.'
    ) : null);
  }
}

function warnForNonLegacyFactory(type) {
  ("production" !== "development" ? warning(
    false,
    'Do not pass React.DOM.' + type.type + ' to JSX or createFactory. ' +
    'Use the string "' + type.type + '" instead.'
  ) : null);
}

/**
 * Transfer static properties from the source to the target. Functions are
 * rebound to have this reflect the original source.
 */
function proxyStaticMethods(target, source) {
  if (typeof source !== 'function') {
    return;
  }
  for (var key in source) {
    if (source.hasOwnProperty(key)) {
      var value = source[key];
      if (typeof value === 'function') {
        var bound = value.bind(source);
        // Copy any properties defined on the function, such as `isRequired` on
        // a PropTypes validator.
        for (var k in value) {
          if (value.hasOwnProperty(k)) {
            bound[k] = value[k];
          }
        }
        target[key] = bound;
      } else {
        target[key] = value;
      }
    }
  }
}

// We use an object instead of a boolean because booleans are ignored by our
// mocking libraries when these factories gets mocked.
var LEGACY_MARKER = {};
var NON_LEGACY_MARKER = {};

var ReactLegacyElementFactory = {};

ReactLegacyElementFactory.wrapCreateFactory = function(createFactory) {
  var legacyCreateFactory = function(type) {
    if (typeof type !== 'function') {
      // Non-function types cannot be legacy factories
      return createFactory(type);
    }

    if (type.isReactNonLegacyFactory) {
      // This is probably a factory created by ReactDOM we unwrap it to get to
      // the underlying string type. It shouldn't have been passed here so we
      // warn.
      if ("production" !== "development") {
        warnForNonLegacyFactory(type);
      }
      return createFactory(type.type);
    }

    if (type.isReactLegacyFactory) {
      // This is probably a legacy factory created by ReactCompositeComponent.
      // We unwrap it to get to the underlying class.
      return createFactory(type.type);
    }

    if ("production" !== "development") {
      warnForPlainFunctionType(type);
    }

    // Unless it's a legacy factory, then this is probably a plain function,
    // that is expecting to be invoked by JSX. We can just return it as is.
    return type;
  };
  return legacyCreateFactory;
};

ReactLegacyElementFactory.wrapCreateElement = function(createElement) {
  var legacyCreateElement = function(type, props, children) {
    if (typeof type !== 'function') {
      // Non-function types cannot be legacy factories
      return createElement.apply(this, arguments);
    }

    var args;

    if (type.isReactNonLegacyFactory) {
      // This is probably a factory created by ReactDOM we unwrap it to get to
      // the underlying string type. It shouldn't have been passed here so we
      // warn.
      if ("production" !== "development") {
        warnForNonLegacyFactory(type);
      }
      args = Array.prototype.slice.call(arguments, 0);
      args[0] = type.type;
      return createElement.apply(this, args);
    }

    if (type.isReactLegacyFactory) {
      // This is probably a legacy factory created by ReactCompositeComponent.
      // We unwrap it to get to the underlying class.
      if (type._isMockFunction) {
        // If this is a mock function, people will expect it to be called. We
        // will actually call the original mock factory function instead. This
        // future proofs unit testing that assume that these are classes.
        type.type._mockedReactClassConstructor = type;
      }
      args = Array.prototype.slice.call(arguments, 0);
      args[0] = type.type;
      return createElement.apply(this, args);
    }

    if ("production" !== "development") {
      warnForPlainFunctionType(type);
    }

    // This is being called with a plain function we should invoke it
    // immediately as if this was used with legacy JSX.
    return type.apply(null, Array.prototype.slice.call(arguments, 1));
  };
  return legacyCreateElement;
};

ReactLegacyElementFactory.wrapFactory = function(factory) {
  ("production" !== "development" ? invariant(
    typeof factory === 'function',
    'This is suppose to accept a element factory'
  ) : invariant(typeof factory === 'function'));
  var legacyElementFactory = function(config, children) {
    // This factory should not be called when JSX is used. Use JSX instead.
    if ("production" !== "development") {
      warnForLegacyFactoryCall();
    }
    return factory.apply(this, arguments);
  };
  proxyStaticMethods(legacyElementFactory, factory.type);
  legacyElementFactory.isReactLegacyFactory = LEGACY_MARKER;
  legacyElementFactory.type = factory.type;
  return legacyElementFactory;
};

// This is used to mark a factory that will remain. E.g. we're allowed to call
// it as a function. However, you're not suppose to pass it to createElement
// or createFactory, so it will warn you if you do.
ReactLegacyElementFactory.markNonLegacyFactory = function(factory) {
  factory.isReactNonLegacyFactory = NON_LEGACY_MARKER;
  return factory;
};

// Checks if a factory function is actually a legacy factory pretending to
// be a class.
ReactLegacyElementFactory.isValidFactory = function(factory) {
  // TODO: This will be removed and moved into a class validator or something.
  return typeof factory === 'function' &&
    factory.isReactLegacyFactory === LEGACY_MARKER;
};

ReactLegacyElementFactory.isValidClass = function(factory) {
  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      false,
      'isValidClass is deprecated and will be removed in a future release. ' +
      'Use a more specific validator instead.'
    ) : null);
  }
  return ReactLegacyElementFactory.isValidFactory(factory);
};

ReactLegacyElementFactory._isLegacyCallWarningEnabled = true;

module.exports = ReactLegacyElementFactory;

},{"./ReactCurrentOwner":36,"./invariant":126,"./monitorCodeUse":136,"./warning":145}],62:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMarkupChecksum
 */

"use strict";

var adler32 = _dereq_("./adler32");

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function(markup) {
    var checksum = adler32(markup);
    return markup.replace(
      '>',
      ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '">'
    );
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function(markup, element) {
    var existingChecksum = element.getAttribute(
      ReactMarkupChecksum.CHECKSUM_ATTR_NAME
    );
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

},{"./adler32":98}],63:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMount
 */

"use strict";

var DOMProperty = _dereq_("./DOMProperty");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactElement = _dereq_("./ReactElement");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactPerf = _dereq_("./ReactPerf");

var containsNode = _dereq_("./containsNode");
var deprecated = _dereq_("./deprecated");
var getReactRootElementInContainer = _dereq_("./getReactRootElementInContainer");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");
var warning = _dereq_("./warning");

var createElement = ReactLegacyElement.wrapCreateElement(
  ReactElement.createElement
);

var SEPARATOR = ReactInstanceHandles.SEPARATOR;

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var nodeCache = {};

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;

/** Mapping from reactRootID to React component instance. */
var instancesByReactRootID = {};

/** Mapping from reactRootID to `container` nodes. */
var containersByReactRootID = {};

if ("production" !== "development") {
  /** __DEV__-only mapping from reactRootID to root elements. */
  var rootElementsByReactRootID = {};
}

// Used to store breadth-first search state in findComponentRoot.
var findComponentRootReusableArray = [];

/**
 * @param {DOMElement} container DOM element that may contain a React component.
 * @return {?string} A "reactRoot" ID, if a React component is rendered.
 */
function getReactRootID(container) {
  var rootElement = getReactRootElementInContainer(container);
  return rootElement && ReactMount.getID(rootElement);
}

/**
 * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form
 * element can return its control whose name or ID equals ATTR_NAME. All
 * DOM nodes support `getAttributeNode` but this can also get called on
 * other objects so just return '' if we're given something other than a
 * DOM node (such as window).
 *
 * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.
 * @return {string} ID of the supplied `domNode`.
 */
function getID(node) {
  var id = internalGetID(node);
  if (id) {
    if (nodeCache.hasOwnProperty(id)) {
      var cached = nodeCache[id];
      if (cached !== node) {
        ("production" !== "development" ? invariant(
          !isValid(cached, id),
          'ReactMount: Two valid but unequal nodes with the same `%s`: %s',
          ATTR_NAME, id
        ) : invariant(!isValid(cached, id)));

        nodeCache[id] = node;
      }
    } else {
      nodeCache[id] = node;
    }
  }

  return id;
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Sets the React-specific ID of the given node.
 *
 * @param {DOMElement} node The DOM node whose ID will be set.
 * @param {string} id The value of the ID attribute.
 */
function setID(node, id) {
  var oldID = internalGetID(node);
  if (oldID !== id) {
    delete nodeCache[oldID];
  }
  node.setAttribute(ATTR_NAME, id);
  nodeCache[id] = node;
}

/**
 * Finds the node with the supplied React-generated DOM ID.
 *
 * @param {string} id A React-generated DOM ID.
 * @return {DOMElement} DOM node with the suppled `id`.
 * @internal
 */
function getNode(id) {
  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {
    nodeCache[id] = ReactMount.findReactNodeByID(id);
  }
  return nodeCache[id];
}

/**
 * A node is "valid" if it is contained by a currently mounted container.
 *
 * This means that the node does not have to be contained by a document in
 * order to be considered valid.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @param {string} id The expected ID of the node.
 * @return {boolean} Whether the node is contained by a mounted container.
 */
function isValid(node, id) {
  if (node) {
    ("production" !== "development" ? invariant(
      internalGetID(node) === id,
      'ReactMount: Unexpected modification of `%s`',
      ATTR_NAME
    ) : invariant(internalGetID(node) === id));

    var container = ReactMount.findReactContainerForID(id);
    if (container && containsNode(container, node)) {
      return true;
    }
  }

  return false;
}

/**
 * Causes the cache to forget about one React-specific ID.
 *
 * @param {string} id The ID to forget.
 */
function purgeID(id) {
  delete nodeCache[id];
}

var deepestNodeSoFar = null;
function findDeepestCachedAncestorImpl(ancestorID) {
  var ancestor = nodeCache[ancestorID];
  if (ancestor && isValid(ancestor, ancestorID)) {
    deepestNodeSoFar = ancestor;
  } else {
    // This node isn't populated in the cache, so presumably none of its
    // descendants are. Break out of the loop.
    return false;
  }
}

/**
 * Return the deepest cached node whose ID is a prefix of `targetID`.
 */
function findDeepestCachedAncestor(targetID) {
  deepestNodeSoFar = null;
  ReactInstanceHandles.traverseAncestors(
    targetID,
    findDeepestCachedAncestorImpl
  );

  var foundNode = deepestNodeSoFar;
  deepestNodeSoFar = null;
  return foundNode;
}

/**
 * Mounting is the process of initializing a React component by creatings its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  /** Exposed for debugging purposes **/
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function(container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function(
      prevComponent,
      nextComponent,
      container,
      callback) {
    var nextProps = nextComponent.props;
    ReactMount.scrollMonitor(container, function() {
      prevComponent.replaceProps(nextProps, callback);
    });

    if ("production" !== "development") {
      // Record the root element in case it later gets transplanted.
      rootElementsByReactRootID[getReactRootID(container)] =
        getReactRootElementInContainer(container);
    }

    return prevComponent;
  },

  /**
   * Register a component into the instance map and starts scroll value
   * monitoring
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @return {string} reactRoot ID prefix
   */
  _registerComponent: function(nextComponent, container) {
    ("production" !== "development" ? invariant(
      container && (
        container.nodeType === ELEMENT_NODE_TYPE ||
        container.nodeType === DOC_NODE_TYPE
      ),
      '_registerComponent(...): Target container is not a DOM element.'
    ) : invariant(container && (
      container.nodeType === ELEMENT_NODE_TYPE ||
      container.nodeType === DOC_NODE_TYPE
    )));

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();

    var reactRootID = ReactMount.registerContainer(container);
    instancesByReactRootID[reactRootID] = nextComponent;
    return reactRootID;
  },

  /**
   * Render a new component into the DOM.
   * @param {ReactComponent} nextComponent component instance to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: ReactPerf.measure(
    'ReactMount',
    '_renderNewRootComponent',
    function(
        nextComponent,
        container,
        shouldReuseMarkup) {
      // Various parts of our code (such as ReactCompositeComponent's
      // _renderValidatedComponent) assume that calls to render aren't nested;
      // verify that that's the case.
      ("production" !== "development" ? warning(
        ReactCurrentOwner.current == null,
        '_renderNewRootComponent(): Render methods should be a pure function ' +
        'of props and state; triggering nested component updates from ' +
        'render is not allowed. If necessary, trigger nested updates in ' +
        'componentDidUpdate.'
      ) : null);

      var componentInstance = instantiateReactComponent(nextComponent, null);
      var reactRootID = ReactMount._registerComponent(
        componentInstance,
        container
      );
      componentInstance.mountComponentIntoNode(
        reactRootID,
        container,
        shouldReuseMarkup
      );

      if ("production" !== "development") {
        // Record the root element in case it later gets transplanted.
        rootElementsByReactRootID[reactRootID] =
          getReactRootElementInContainer(container);
      }

      return componentInstance;
    }
  ),

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function(nextElement, container, callback) {
    ("production" !== "development" ? invariant(
      ReactElement.isValidElement(nextElement),
      'renderComponent(): Invalid component element.%s',
      (
        typeof nextElement === 'string' ?
          ' Instead of passing an element string, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        ReactLegacyElement.isValidFactory(nextElement) ?
          ' Instead of passing a component class, make sure to instantiate ' +
          'it by passing it to React.createElement.' :
        // Check if it quacks like a element
        typeof nextElement.props !== "undefined" ?
          ' This may be caused by unintentionally loading two independent ' +
          'copies of React.' :
          ''
      )
    ) : invariant(ReactElement.isValidElement(nextElement)));

    var prevComponent = instancesByReactRootID[getReactRootID(container)];

    if (prevComponent) {
      var prevElement = prevComponent._currentElement;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        return ReactMount._updateRootComponent(
          prevComponent,
          nextElement,
          container,
          callback
        );
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup =
      reactRootElement && ReactMount.isRenderedByReact(reactRootElement);

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent;

    var component = ReactMount._renderNewRootComponent(
      nextElement,
      container,
      shouldReuseMarkup
    );
    callback && callback.call(component);
    return component;
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into the supplied `container`.
   *
   * @param {function} constructor React component constructor.
   * @param {?object} props Initial props of the component instance.
   * @param {DOMElement} container DOM element to render into.
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  constructAndRenderComponent: function(constructor, props, container) {
    var element = createElement(constructor, props);
    return ReactMount.render(element, container);
  },

  /**
   * Constructs a component instance of `constructor` with `initialProps` and
   * renders it into a container node identified by supplied `id`.
   *
   * @param {function} componentConstructor React component constructor
   * @param {?object} props Initial props of the component instance.
   * @param {string} id ID of the DOM element to render into.
   * @return {ReactComponent} Component instance rendered in the container node.
   */
  constructAndRenderComponentByID: function(constructor, props, id) {
    var domNode = document.getElementById(id);
    ("production" !== "development" ? invariant(
      domNode,
      'Tried to get element with id of "%s" but it is not present on the page.',
      id
    ) : invariant(domNode));
    return ReactMount.constructAndRenderComponent(constructor, props, domNode);
  },

  /**
   * Registers a container node into which React components will be rendered.
   * This also creates the "reactRoot" ID that will be assigned to the element
   * rendered within.
   *
   * @param {DOMElement} container DOM element to register as a container.
   * @return {string} The "reactRoot" ID of elements rendered within.
   */
  registerContainer: function(container) {
    var reactRootID = getReactRootID(container);
    if (reactRootID) {
      // If one exists, make sure it is a valid "reactRoot" ID.
      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);
    }
    if (!reactRootID) {
      // No valid "reactRoot" ID found, create one.
      reactRootID = ReactInstanceHandles.createReactRootID();
    }
    containersByReactRootID[reactRootID] = container;
    return reactRootID;
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function(container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    ("production" !== "development" ? warning(
      ReactCurrentOwner.current == null,
      'unmountComponentAtNode(): Render methods should be a pure function of ' +
      'props and state; triggering nested component updates from render is ' +
      'not allowed. If necessary, trigger nested updates in ' +
      'componentDidUpdate.'
    ) : null);

    var reactRootID = getReactRootID(container);
    var component = instancesByReactRootID[reactRootID];
    if (!component) {
      return false;
    }
    ReactMount.unmountComponentFromNode(component, container);
    delete instancesByReactRootID[reactRootID];
    delete containersByReactRootID[reactRootID];
    if ("production" !== "development") {
      delete rootElementsByReactRootID[reactRootID];
    }
    return true;
  },

  /**
   * Unmounts a component and removes it from the DOM.
   *
   * @param {ReactComponent} instance React component instance.
   * @param {DOMElement} container DOM element to unmount from.
   * @final
   * @internal
   * @see {ReactMount.unmountComponentAtNode}
   */
  unmountComponentFromNode: function(instance, container) {
    instance.unmountComponent();

    if (container.nodeType === DOC_NODE_TYPE) {
      container = container.documentElement;
    }

    // http://jsperf.com/emptying-a-node
    while (container.lastChild) {
      container.removeChild(container.lastChild);
    }
  },

  /**
   * Finds the container DOM element that contains React component to which the
   * supplied DOM `id` belongs.
   *
   * @param {string} id The ID of an element rendered by a React component.
   * @return {?DOMElement} DOM element that contains the `id`.
   */
  findReactContainerForID: function(id) {
    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);
    var container = containersByReactRootID[reactRootID];

    if ("production" !== "development") {
      var rootElement = rootElementsByReactRootID[reactRootID];
      if (rootElement && rootElement.parentNode !== container) {
        ("production" !== "development" ? invariant(
          // Call internalGetID here because getID calls isValid which calls
          // findReactContainerForID (this function).
          internalGetID(rootElement) === reactRootID,
          'ReactMount: Root element ID differed from reactRootID.'
        ) : invariant(// Call internalGetID here because getID calls isValid which calls
        // findReactContainerForID (this function).
        internalGetID(rootElement) === reactRootID));

        var containerChild = container.firstChild;
        if (containerChild &&
            reactRootID === internalGetID(containerChild)) {
          // If the container has a new child with the same ID as the old
          // root element, then rootElementsByReactRootID[reactRootID] is
          // just stale and needs to be updated. The case that deserves a
          // warning is when the container is empty.
          rootElementsByReactRootID[reactRootID] = containerChild;
        } else {
          console.warn(
            'ReactMount: Root element has been removed from its original ' +
            'container. New container:', rootElement.parentNode
          );
        }
      }
    }

    return container;
  },

  /**
   * Finds an element rendered by React with the supplied ID.
   *
   * @param {string} id ID of a DOM node in the React component.
   * @return {DOMElement} Root DOM node of the React component.
   */
  findReactNodeByID: function(id) {
    var reactRoot = ReactMount.findReactContainerForID(id);
    return ReactMount.findComponentRoot(reactRoot, id);
  },

  /**
   * True if the supplied `node` is rendered by React.
   *
   * @param {*} node DOM Element to check.
   * @return {boolean} True if the DOM Element appears to be rendered by React.
   * @internal
   */
  isRenderedByReact: function(node) {
    if (node.nodeType !== 1) {
      // Not a DOMElement, therefore not a React component
      return false;
    }
    var id = ReactMount.getID(node);
    return id ? id.charAt(0) === SEPARATOR : false;
  },

  /**
   * Traverses up the ancestors of the supplied node to find a node that is a
   * DOM representation of a React component.
   *
   * @param {*} node
   * @return {?DOMEventTarget}
   * @internal
   */
  getFirstReactDOM: function(node) {
    var current = node;
    while (current && current.parentNode !== current) {
      if (ReactMount.isRenderedByReact(current)) {
        return current;
      }
      current = current.parentNode;
    }
    return null;
  },

  /**
   * Finds a node with the supplied `targetID` inside of the supplied
   * `ancestorNode`.  Exploits the ID naming scheme to perform the search
   * quickly.
   *
   * @param {DOMEventTarget} ancestorNode Search from this root.
   * @pararm {string} targetID ID of the DOM representation of the component.
   * @return {DOMEventTarget} DOM node with the supplied `targetID`.
   * @internal
   */
  findComponentRoot: function(ancestorNode, targetID) {
    var firstChildren = findComponentRootReusableArray;
    var childIndex = 0;

    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;

    firstChildren[0] = deepestAncestor.firstChild;
    firstChildren.length = 1;

    while (childIndex < firstChildren.length) {
      var child = firstChildren[childIndex++];
      var targetChild;

      while (child) {
        var childID = ReactMount.getID(child);
        if (childID) {
          // Even if we find the node we're looking for, we finish looping
          // through its siblings to ensure they're cached so that we don't have
          // to revisit this node again. Otherwise, we make n^2 calls to getID
          // when visiting the many children of a single node in order.

          if (targetID === childID) {
            targetChild = child;
          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {
            // If we find a child whose ID is an ancestor of the given ID,
            // then we can be sure that we only want to search the subtree
            // rooted at this child, so we can throw out the rest of the
            // search state.
            firstChildren.length = childIndex = 0;
            firstChildren.push(child.firstChild);
          }

        } else {
          // If this child had no ID, then there's a chance that it was
          // injected automatically by the browser, as when a `<table>`
          // element sprouts an extra `<tbody>` child as a side effect of
          // `.innerHTML` parsing. Optimistically continue down this
          // branch, but not before examining the other siblings.
          firstChildren.push(child.firstChild);
        }

        child = child.nextSibling;
      }

      if (targetChild) {
        // Emptying firstChildren/findComponentRootReusableArray is
        // not necessary for correctness, but it helps the GC reclaim
        // any nodes that were left at the end of the search.
        firstChildren.length = 0;

        return targetChild;
      }
    }

    firstChildren.length = 0;

    ("production" !== "development" ? invariant(
      false,
      'findComponentRoot(..., %s): Unable to find element. This probably ' +
      'means the DOM was unexpectedly mutated (e.g., by the browser), ' +
      'usually due to forgetting a <tbody> when using tables, nesting tags ' +
      'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' +
      'parent. ' +
      'Try inspecting the child nodes of the element with React ID `%s`.',
      targetID,
      ReactMount.getID(ancestorNode)
    ) : invariant(false));
  },


  /**
   * React ID utilities.
   */

  getReactRootID: getReactRootID,

  getID: getID,

  setID: setID,

  getNode: getNode,

  purgeID: purgeID
};

// Deprecations (remove for 0.13)
ReactMount.renderComponent = deprecated(
  'ReactMount',
  'renderComponent',
  'render',
  this,
  ReactMount.render
);

module.exports = ReactMount;

},{"./DOMProperty":11,"./ReactBrowserEventEmitter":30,"./ReactCurrentOwner":36,"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactLegacyElement":61,"./ReactPerf":68,"./containsNode":101,"./deprecated":106,"./getReactRootElementInContainer":120,"./instantiateReactComponent":125,"./invariant":126,"./shouldUpdateReactComponent":142,"./warning":145}],64:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChild
 * @typechecks static-only
 */

"use strict";

var ReactComponent = _dereq_("./ReactComponent");
var ReactMultiChildUpdateTypes = _dereq_("./ReactMultiChildUpdateTypes");

var flattenChildren = _dereq_("./flattenChildren");
var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var shouldUpdateReactComponent = _dereq_("./shouldUpdateReactComponent");

/**
 * Updating children of a component may trigger recursive updates. The depth is
 * used to batch recursive updates to render markup more efficiently.
 *
 * @type {number}
 * @private
 */
var updateDepth = 0;

/**
 * Queue of update configuration objects.
 *
 * Each object has a `type` property that is in `ReactMultiChildUpdateTypes`.
 *
 * @type {array<object>}
 * @private
 */
var updateQueue = [];

/**
 * Queue of markup to be rendered.
 *
 * @type {array<string>}
 * @private
 */
var markupQueue = [];

/**
 * Enqueues markup to be rendered and inserted at a supplied index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function enqueueMarkup(parentID, markup, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.INSERT_MARKUP,
    markupIndex: markupQueue.push(markup) - 1,
    textContent: null,
    fromIndex: null,
    toIndex: toIndex
  });
}

/**
 * Enqueues moving an existing element to another index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function enqueueMove(parentID, fromIndex, toIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.MOVE_EXISTING,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: toIndex
  });
}

/**
 * Enqueues removing an element at an index.
 *
 * @param {string} parentID ID of the parent component.
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function enqueueRemove(parentID, fromIndex) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.REMOVE_NODE,
    markupIndex: null,
    textContent: null,
    fromIndex: fromIndex,
    toIndex: null
  });
}

/**
 * Enqueues setting the text content.
 *
 * @param {string} parentID ID of the parent component.
 * @param {string} textContent Text content to set.
 * @private
 */
function enqueueTextContent(parentID, textContent) {
  // NOTE: Null values reduce hidden classes.
  updateQueue.push({
    parentID: parentID,
    parentNode: null,
    type: ReactMultiChildUpdateTypes.TEXT_CONTENT,
    markupIndex: null,
    textContent: textContent,
    fromIndex: null,
    toIndex: null
  });
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue() {
  if (updateQueue.length) {
    ReactComponent.BackendIDOperations.dangerouslyProcessChildrenUpdates(
      updateQueue,
      markupQueue
    );
    clearQueue();
  }
}

/**
 * Clears any enqueued updates.
 *
 * @private
 */
function clearQueue() {
  updateQueue.length = 0;
  markupQueue.length = 0;
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {

  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function(nestedChildren, transaction) {
      var children = flattenChildren(nestedChildren);
      var mountImages = [];
      var index = 0;
      this._renderedChildren = children;
      for (var name in children) {
        var child = children[name];
        if (children.hasOwnProperty(name)) {
          // The rendered children must be turned into instances as they're
          // mounted.
          var childInstance = instantiateReactComponent(child, null);
          children[name] = childInstance;
          // Inlined for performance, see `ReactInstanceHandles.createReactID`.
          var rootID = this._rootNodeID + name;
          var mountImage = childInstance.mountComponent(
            rootID,
            transaction,
            this._mountDepth + 1
          );
          childInstance._mountIndex = index;
          mountImages.push(mountImage);
          index++;
        }
      }
      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function(nextContent) {
      updateDepth++;
      var errorThrown = true;
      try {
        var prevChildren = this._renderedChildren;
        // Remove any rendered children.
        for (var name in prevChildren) {
          if (prevChildren.hasOwnProperty(name)) {
            this._unmountChildByName(prevChildren[name], name);
          }
        }
        // Set new text content.
        this.setTextContent(nextContent);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function(nextNestedChildren, transaction) {
      updateDepth++;
      var errorThrown = true;
      try {
        this._updateChildren(nextNestedChildren, transaction);
        errorThrown = false;
      } finally {
        updateDepth--;
        if (!updateDepth) {
          errorThrown ? clearQueue() : processQueue();
        }
      }
    },

    /**
     * Improve performance by isolating this hot code path from the try/catch
     * block in `updateChildren`.
     *
     * @param {?object} nextNestedChildren Nested child maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function(nextNestedChildren, transaction) {
      var nextChildren = flattenChildren(nextNestedChildren);
      var prevChildren = this._renderedChildren;
      if (!nextChildren && !prevChildren) {
        return;
      }
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var lastIndex = 0;
      var nextIndex = 0;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var prevElement = prevChild && prevChild._currentElement;
        var nextElement = nextChildren[name];
        if (shouldUpdateReactComponent(prevElement, nextElement)) {
          this.moveChild(prevChild, nextIndex, lastIndex);
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild.receiveComponent(nextElement, transaction);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            this._unmountChildByName(prevChild, name);
          }
          // The child must be instantiated before it's mounted.
          var nextChildInstance = instantiateReactComponent(
            nextElement,
            null
          );
          this._mountChildByNameAtIndex(
            nextChildInstance, name, nextIndex, transaction
          );
        }
        nextIndex++;
      }
      // Remove children that are no longer present.
      for (name in prevChildren) {
        if (prevChildren.hasOwnProperty(name) &&
            !(nextChildren && nextChildren[name])) {
          this._unmountChildByName(prevChildren[name], name);
        }
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted.
     *
     * @internal
     */
    unmountChildren: function() {
      var renderedChildren = this._renderedChildren;
      for (var name in renderedChildren) {
        var renderedChild = renderedChildren[name];
        // TODO: When is this not true?
        if (renderedChild.unmountComponent) {
          renderedChild.unmountComponent();
        }
      }
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function(child, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        enqueueMove(this._rootNodeID, child._mountIndex, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function(child, mountImage) {
      enqueueMarkup(this._rootNodeID, mountImage, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function(child) {
      enqueueRemove(this._rootNodeID, child._mountIndex);
    },

    /**
     * Sets this text content string.
     *
     * @param {string} textContent Text content to set.
     * @protected
     */
    setTextContent: function(textContent) {
      enqueueTextContent(this._rootNodeID, textContent);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildByNameAtIndex: function(child, name, index, transaction) {
      // Inlined for performance, see `ReactInstanceHandles.createReactID`.
      var rootID = this._rootNodeID + name;
      var mountImage = child.mountComponent(
        rootID,
        transaction,
        this._mountDepth + 1
      );
      child._mountIndex = index;
      this.createChild(child, mountImage);
      this._renderedChildren = this._renderedChildren || {};
      this._renderedChildren[name] = child;
    },

    /**
     * Unmounts a rendered child by name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @param {string} name Name of the child in `this._renderedChildren`.
     * @private
     */
    _unmountChildByName: function(child, name) {
      this.removeChild(child);
      child._mountIndex = null;
      child.unmountComponent();
      delete this._renderedChildren[name];
    }

  }

};

module.exports = ReactMultiChild;

},{"./ReactComponent":32,"./ReactMultiChildUpdateTypes":65,"./flattenChildren":110,"./instantiateReactComponent":125,"./shouldUpdateReactComponent":142}],65:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactMultiChildUpdateTypes
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

/**
 * When a component's children are updated, a series of update configuration
 * objects are created in order to batch and serialize the required changes.
 *
 * Enumerates all the possible types of update configurations.
 *
 * @internal
 */
var ReactMultiChildUpdateTypes = keyMirror({
  INSERT_MARKUP: null,
  MOVE_EXISTING: null,
  REMOVE_NODE: null,
  TEXT_CONTENT: null
});

module.exports = ReactMultiChildUpdateTypes;

},{"./keyMirror":132}],66:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactNativeComponent
 */

"use strict";

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");

var genericComponentClass = null;
// This registry keeps track of wrapper classes around native tags
var tagToComponentClass = {};

var ReactNativeComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function(componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a keyed object with classes as values. Each key represents a
  // tag. That particular tag will use this class instead of the generic one.
  injectComponentClasses: function(componentClasses) {
    assign(tagToComponentClass, componentClasses);
  }
};

/**
 * Create an internal class for a specific tag.
 *
 * @param {string} tag The tag for which to create an internal instance.
 * @param {any} props The props passed to the instance constructor.
 * @return {ReactComponent} component The injected empty component.
 */
function createInstanceForTag(tag, props, parentType) {
  var componentClass = tagToComponentClass[tag];
  if (componentClass == null) {
    ("production" !== "development" ? invariant(
      genericComponentClass,
      'There is no registered component for the tag %s',
      tag
    ) : invariant(genericComponentClass));
    return new genericComponentClass(tag, props);
  }
  if (parentType === tag) {
    // Avoid recursion
    ("production" !== "development" ? invariant(
      genericComponentClass,
      'There is no registered component for the tag %s',
      tag
    ) : invariant(genericComponentClass));
    return new genericComponentClass(tag, props);
  }
  // Unwrap legacy factories
  return new componentClass.type(props);
}

var ReactNativeComponent = {
  createInstanceForTag: createInstanceForTag,
  injection: ReactNativeComponentInjection
};

module.exports = ReactNativeComponent;

},{"./Object.assign":27,"./invariant":126}],67:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactOwner
 */

"use strict";

var emptyObject = _dereq_("./emptyObject");
var invariant = _dereq_("./invariant");

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {

  /**
   * @param {?object} object
   * @return {boolean} True if `object` is a valid owner.
   * @final
   */
  isValidOwner: function(object) {
    return !!(
      object &&
      typeof object.attachRef === 'function' &&
      typeof object.detachRef === 'function'
    );
  },

  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'addComponentAsRefTo(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to add a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function(component, ref, owner) {
    ("production" !== "development" ? invariant(
      ReactOwner.isValidOwner(owner),
      'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. This ' +
      'usually means that you\'re trying to remove a ref to a component that ' +
      'doesn\'t have an owner (that is, was not created inside of another ' +
      'component\'s `render` method). Try rendering this component inside of ' +
      'a new top-level component which will hold the ref.'
    ) : invariant(ReactOwner.isValidOwner(owner)));
    // Check that `component` is still the current ref because we do not want to
    // detach the ref if another component stole it.
    if (owner.refs[ref] === component) {
      owner.detachRef(ref);
    }
  },

  /**
   * A ReactComponent must mix this in to have refs.
   *
   * @lends {ReactOwner.prototype}
   */
  Mixin: {

    construct: function() {
      this.refs = emptyObject;
    },

    /**
     * Lazily allocates the refs object and stores `component` as `ref`.
     *
     * @param {string} ref Reference name.
     * @param {component} component Component to store as `ref`.
     * @final
     * @private
     */
    attachRef: function(ref, component) {
      ("production" !== "development" ? invariant(
        component.isOwnedBy(this),
        'attachRef(%s, ...): Only a component\'s owner can store a ref to it.',
        ref
      ) : invariant(component.isOwnedBy(this)));
      var refs = this.refs === emptyObject ? (this.refs = {}) : this.refs;
      refs[ref] = component;
    },

    /**
     * Detaches a reference name.
     *
     * @param {string} ref Name to dereference.
     * @final
     * @private
     */
    detachRef: function(ref) {
      delete this.refs[ref];
    }

  }

};

module.exports = ReactOwner;

},{"./emptyObject":108,"./invariant":126}],68:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPerf
 * @typechecks static-only
 */

"use strict";

/**
 * ReactPerf is a general AOP system designed to measure performance. This
 * module only has the hooks: see ReactDefaultPerf for the analysis tool.
 */
var ReactPerf = {
  /**
   * Boolean to enable/disable measurement. Set to false by default to prevent
   * accidental logging and perf loss.
   */
  enableMeasure: false,

  /**
   * Holds onto the measure function in use. By default, don't measure
   * anything, but we'll override this if we inject a measure function.
   */
  storedMeasure: _noMeasure,

  /**
   * Use this to wrap methods you want to measure. Zero overhead in production.
   *
   * @param {string} objName
   * @param {string} fnName
   * @param {function} func
   * @return {function}
   */
  measure: function(objName, fnName, func) {
    if ("production" !== "development") {
      var measuredFunc = null;
      var wrapper = function() {
        if (ReactPerf.enableMeasure) {
          if (!measuredFunc) {
            measuredFunc = ReactPerf.storedMeasure(objName, fnName, func);
          }
          return measuredFunc.apply(this, arguments);
        }
        return func.apply(this, arguments);
      };
      wrapper.displayName = objName + '_' + fnName;
      return wrapper;
    }
    return func;
  },

  injection: {
    /**
     * @param {function} measure
     */
    injectMeasure: function(measure) {
      ReactPerf.storedMeasure = measure;
    }
  }
};

/**
 * Simply passes through the measured function, without measuring it.
 *
 * @param {string} objName
 * @param {string} fnName
 * @param {function} func
 * @return {function}
 */
function _noMeasure(objName, fnName, func) {
  return func;
}

module.exports = ReactPerf;

},{}],69:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTransferer
 */

"use strict";

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");
var invariant = _dereq_("./invariant");
var joinClasses = _dereq_("./joinClasses");
var warning = _dereq_("./warning");

var didWarn = false;

/**
 * Creates a transfer strategy that will merge prop values using the supplied
 * `mergeStrategy`. If a prop was previously unset, this just sets it.
 *
 * @param {function} mergeStrategy
 * @return {function}
 */
function createTransferStrategy(mergeStrategy) {
  return function(props, key, value) {
    if (!props.hasOwnProperty(key)) {
      props[key] = value;
    } else {
      props[key] = mergeStrategy(props[key], value);
    }
  };
}

var transferStrategyMerge = createTransferStrategy(function(a, b) {
  // `merge` overrides the first object's (`props[key]` above) keys using the
  // second object's (`value`) keys. An object's style's existing `propA` would
  // get overridden. Flip the order here.
  return assign({}, b, a);
});

/**
 * Transfer strategies dictate how props are transferred by `transferPropsTo`.
 * NOTE: if you add any more exceptions to this list you should be sure to
 * update `cloneWithProps()` accordingly.
 */
var TransferStrategies = {
  /**
   * Never transfer `children`.
   */
  children: emptyFunction,
  /**
   * Transfer the `className` prop by merging them.
   */
  className: createTransferStrategy(joinClasses),
  /**
   * Transfer the `style` prop (which is an object) by merging them.
   */
  style: transferStrategyMerge
};

/**
 * Mutates the first argument by transferring the properties from the second
 * argument.
 *
 * @param {object} props
 * @param {object} newProps
 * @return {object}
 */
function transferInto(props, newProps) {
  for (var thisKey in newProps) {
    if (!newProps.hasOwnProperty(thisKey)) {
      continue;
    }

    var transferStrategy = TransferStrategies[thisKey];

    if (transferStrategy && TransferStrategies.hasOwnProperty(thisKey)) {
      transferStrategy(props, thisKey, newProps[thisKey]);
    } else if (!props.hasOwnProperty(thisKey)) {
      props[thisKey] = newProps[thisKey];
    }
  }
  return props;
}

/**
 * ReactPropTransferer are capable of transferring props to another component
 * using a `transferPropsTo` method.
 *
 * @class ReactPropTransferer
 */
var ReactPropTransferer = {

  TransferStrategies: TransferStrategies,

  /**
   * Merge two props objects using TransferStrategies.
   *
   * @param {object} oldProps original props (they take precedence)
   * @param {object} newProps new props to merge in
   * @return {object} a new object containing both sets of props merged.
   */
  mergeProps: function(oldProps, newProps) {
    return transferInto(assign({}, oldProps), newProps);
  },

  /**
   * @lends {ReactPropTransferer.prototype}
   */
  Mixin: {

    /**
     * Transfer props from this component to a target component.
     *
     * Props that do not have an explicit transfer strategy will be transferred
     * only if the target component does not already have the prop set.
     *
     * This is usually used to pass down props to a returned root component.
     *
     * @param {ReactElement} element Component receiving the properties.
     * @return {ReactElement} The supplied `component`.
     * @final
     * @protected
     */
    transferPropsTo: function(element) {
      ("production" !== "development" ? invariant(
        element._owner === this,
        '%s: You can\'t call transferPropsTo() on a component that you ' +
        'don\'t own, %s. This usually means you are calling ' +
        'transferPropsTo() on a component passed in as props or children.',
        this.constructor.displayName,
        typeof element.type === 'string' ?
        element.type :
        element.type.displayName
      ) : invariant(element._owner === this));

      if ("production" !== "development") {
        if (!didWarn) {
          didWarn = true;
          ("production" !== "development" ? warning(
            false,
            'transferPropsTo is deprecated. ' +
            'See http://fb.me/react-transferpropsto for more information.'
          ) : null);
        }
      }

      // Because elements are immutable we have to merge into the existing
      // props object rather than clone it.
      transferInto(element.props, this.props);

      return element;
    }

  }
};

module.exports = ReactPropTransferer;

},{"./Object.assign":27,"./emptyFunction":107,"./invariant":126,"./joinClasses":131,"./warning":145}],70:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocationNames
 */

"use strict";

var ReactPropTypeLocationNames = {};

if ("production" !== "development") {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;

},{}],71:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypeLocations
 */

"use strict";

var keyMirror = _dereq_("./keyMirror");

var ReactPropTypeLocations = keyMirror({
  prop: null,
  context: null,
  childContext: null
});

module.exports = ReactPropTypeLocations;

},{"./keyMirror":132}],72:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPropTypes
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactPropTypeLocationNames = _dereq_("./ReactPropTypeLocationNames");

var deprecated = _dereq_("./deprecated");
var emptyFunction = _dereq_("./emptyFunction");

/**
 * Collection of methods that allow declaration and validation of props that are
 * supplied to React components. Example usage:
 *
 *   var Props = require('ReactPropTypes');
 *   var MyArticle = React.createClass({
 *     propTypes: {
 *       // An optional string prop named "description".
 *       description: Props.string,
 *
 *       // A required enum prop named "category".
 *       category: Props.oneOf(['News','Photos']).isRequired,
 *
 *       // A prop named "dialog" that requires an instance of Dialog.
 *       dialog: Props.instanceOf(Dialog).isRequired
 *     },
 *     render: function() { ... }
 *   });
 *
 * A more formal specification of how these methods are used:
 *
 *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
 *   decl := ReactPropTypes.{type}(.isRequired)?
 *
 * Each and every declaration produces a function with the same signature. This
 * allows the creation of custom validation functions. For example:
 *
 *  var MyLink = React.createClass({
 *    propTypes: {
 *      // An optional string or URI prop named "href".
 *      href: function(props, propName, componentName) {
 *        var propValue = props[propName];
 *        if (propValue != null && typeof propValue !== 'string' &&
 *            !(propValue instanceof URI)) {
 *          return new Error(
 *            'Expected a string or an URI for ' + propName + ' in ' +
 *            componentName
 *          );
 *        }
 *      }
 *    },
 *    render: function() {...}
 *  });
 *
 * @internal
 */

var ANONYMOUS = '<<anonymous>>';

var elementTypeChecker = createElementTypeChecker();
var nodeTypeChecker = createNodeChecker();

var ReactPropTypes = {
  array: createPrimitiveTypeChecker('array'),
  bool: createPrimitiveTypeChecker('boolean'),
  func: createPrimitiveTypeChecker('function'),
  number: createPrimitiveTypeChecker('number'),
  object: createPrimitiveTypeChecker('object'),
  string: createPrimitiveTypeChecker('string'),

  any: createAnyTypeChecker(),
  arrayOf: createArrayOfTypeChecker,
  element: elementTypeChecker,
  instanceOf: createInstanceTypeChecker,
  node: nodeTypeChecker,
  objectOf: createObjectOfTypeChecker,
  oneOf: createEnumTypeChecker,
  oneOfType: createUnionTypeChecker,
  shape: createShapeTypeChecker,

  component: deprecated(
    'React.PropTypes',
    'component',
    'element',
    this,
    elementTypeChecker
  ),
  renderable: deprecated(
    'React.PropTypes',
    'renderable',
    'node',
    this,
    nodeTypeChecker
  )
};

function createChainableTypeChecker(validate) {
  function checkType(isRequired, props, propName, componentName, location) {
    componentName = componentName || ANONYMOUS;
    if (props[propName] == null) {
      var locationName = ReactPropTypeLocationNames[location];
      if (isRequired) {
        return new Error(
          ("Required " + locationName + " `" + propName + "` was not specified in ")+
          ("`" + componentName + "`.")
        );
      }
    } else {
      return validate(props, propName, componentName, location);
    }
  }

  var chainedCheckType = checkType.bind(null, false);
  chainedCheckType.isRequired = checkType.bind(null, true);

  return chainedCheckType;
}

function createPrimitiveTypeChecker(expectedType) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== expectedType) {
      var locationName = ReactPropTypeLocationNames[location];
      // `propValue` being instance of, say, date/regexp, pass the 'object'
      // check, but we can offer a more precise error message here rather than
      // 'of type `object`'.
      var preciseType = getPreciseType(propValue);

      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + preciseType + "` ") +
        ("supplied to `" + componentName + "`, expected `" + expectedType + "`.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createAnyTypeChecker() {
  return createChainableTypeChecker(emptyFunction.thatReturns());
}

function createArrayOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    if (!Array.isArray(propValue)) {
      var locationName = ReactPropTypeLocationNames[location];
      var propType = getPropType(propValue);
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an array.")
      );
    }
    for (var i = 0; i < propValue.length; i++) {
      var error = typeChecker(propValue, i, componentName, location);
      if (error instanceof Error) {
        return error;
      }
    }
  }
  return createChainableTypeChecker(validate);
}

function createElementTypeChecker() {
  function validate(props, propName, componentName, location) {
    if (!ReactElement.isValidElement(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactElement.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createInstanceTypeChecker(expectedClass) {
  function validate(props, propName, componentName, location) {
    if (!(props[propName] instanceof expectedClass)) {
      var locationName = ReactPropTypeLocationNames[location];
      var expectedClassName = expectedClass.name || ANONYMOUS;
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected instance of `" + expectedClassName + "`.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createEnumTypeChecker(expectedValues) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    for (var i = 0; i < expectedValues.length; i++) {
      if (propValue === expectedValues[i]) {
        return;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    var valuesString = JSON.stringify(expectedValues);
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` of value `" + propValue + "` ") +
      ("supplied to `" + componentName + "`, expected one of " + valuesString + ".")
    );
  }
  return createChainableTypeChecker(validate);
}

function createObjectOfTypeChecker(typeChecker) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type ") +
        ("`" + propType + "` supplied to `" + componentName + "`, expected an object.")
      );
    }
    for (var key in propValue) {
      if (propValue.hasOwnProperty(key)) {
        var error = typeChecker(propValue, key, componentName, location);
        if (error instanceof Error) {
          return error;
        }
      }
    }
  }
  return createChainableTypeChecker(validate);
}

function createUnionTypeChecker(arrayOfTypeCheckers) {
  function validate(props, propName, componentName, location) {
    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (checker(props, propName, componentName, location) == null) {
        return;
      }
    }

    var locationName = ReactPropTypeLocationNames[location];
    return new Error(
      ("Invalid " + locationName + " `" + propName + "` supplied to ") +
      ("`" + componentName + "`.")
    );
  }
  return createChainableTypeChecker(validate);
}

function createNodeChecker() {
  function validate(props, propName, componentName, location) {
    if (!isNode(props[propName])) {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` supplied to ") +
        ("`" + componentName + "`, expected a ReactNode.")
      );
    }
  }
  return createChainableTypeChecker(validate);
}

function createShapeTypeChecker(shapeTypes) {
  function validate(props, propName, componentName, location) {
    var propValue = props[propName];
    var propType = getPropType(propValue);
    if (propType !== 'object') {
      var locationName = ReactPropTypeLocationNames[location];
      return new Error(
        ("Invalid " + locationName + " `" + propName + "` of type `" + propType + "` ") +
        ("supplied to `" + componentName + "`, expected `object`.")
      );
    }
    for (var key in shapeTypes) {
      var checker = shapeTypes[key];
      if (!checker) {
        continue;
      }
      var error = checker(propValue, key, componentName, location);
      if (error) {
        return error;
      }
    }
  }
  return createChainableTypeChecker(validate, 'expected `object`');
}

function isNode(propValue) {
  switch(typeof propValue) {
    case 'number':
    case 'string':
      return true;
    case 'boolean':
      return !propValue;
    case 'object':
      if (Array.isArray(propValue)) {
        return propValue.every(isNode);
      }
      if (ReactElement.isValidElement(propValue)) {
        return true;
      }
      for (var k in propValue) {
        if (!isNode(propValue[k])) {
          return false;
        }
      }
      return true;
    default:
      return false;
  }
}

// Equivalent of `typeof` but with special handling for array and regexp.
function getPropType(propValue) {
  var propType = typeof propValue;
  if (Array.isArray(propValue)) {
    return 'array';
  }
  if (propValue instanceof RegExp) {
    // Old webkits (at least until Android 4.0) return 'function' rather than
    // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
    // passes PropTypes.object.
    return 'object';
  }
  return propType;
}

// This handles more types than `getPropType`. Only used for error messages.
// See `createPrimitiveTypeChecker`.
function getPreciseType(propValue) {
  var propType = getPropType(propValue);
  if (propType === 'object') {
    if (propValue instanceof Date) {
      return 'date';
    } else if (propValue instanceof RegExp) {
      return 'regexp';
    }
  }
  return propType;
}

module.exports = ReactPropTypes;

},{"./ReactElement":52,"./ReactPropTypeLocationNames":70,"./deprecated":106,"./emptyFunction":107}],73:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactPutListenerQueue
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");

var assign = _dereq_("./Object.assign");

function ReactPutListenerQueue() {
  this.listenersToPut = [];
}

assign(ReactPutListenerQueue.prototype, {
  enqueuePutListener: function(rootNodeID, propKey, propValue) {
    this.listenersToPut.push({
      rootNodeID: rootNodeID,
      propKey: propKey,
      propValue: propValue
    });
  },

  putListeners: function() {
    for (var i = 0; i < this.listenersToPut.length; i++) {
      var listenerToPut = this.listenersToPut[i];
      ReactBrowserEventEmitter.putListener(
        listenerToPut.rootNodeID,
        listenerToPut.propKey,
        listenerToPut.propValue
      );
    }
  },

  reset: function() {
    this.listenersToPut.length = 0;
  },

  destructor: function() {
    this.reset();
  }
});

PooledClass.addPoolingTo(ReactPutListenerQueue);

module.exports = ReactPutListenerQueue;

},{"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30}],74:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactReconcileTransaction
 * @typechecks static-only
 */

"use strict";

var CallbackQueue = _dereq_("./CallbackQueue");
var PooledClass = _dereq_("./PooledClass");
var ReactBrowserEventEmitter = _dereq_("./ReactBrowserEventEmitter");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function() {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occured. `close`
   *   restores the previous value.
   */
  close: function(previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function() {
    this.reactMountReady.notifyAll();
  }
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: function() {
    this.putListenerQueue.putListeners();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  SELECTION_RESTORATION,
  EVENT_SUPPRESSION,
  ON_DOM_READY_QUEUEING
];

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction() {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap proceedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(ReactReconcileTransaction.prototype, Transaction.Mixin, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactBrowserEventEmitter":30,"./ReactInputSelection":59,"./ReactPutListenerQueue":73,"./Transaction":95}],75:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactRootIndex
 * @typechecks
 */

"use strict";

var ReactRootIndexInjection = {
  /**
   * @param {function} _createReactRootIndex
   */
  injectCreateReactRootIndex: function(_createReactRootIndex) {
    ReactRootIndex.createReactRootIndex = _createReactRootIndex;
  }
};

var ReactRootIndex = {
  createReactRootIndex: null,
  injection: ReactRootIndexInjection
};

module.exports = ReactRootIndex;

},{}],76:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks static-only
 * @providesModule ReactServerRendering
 */
"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");
var ReactMarkupChecksum = _dereq_("./ReactMarkupChecksum");
var ReactServerRenderingTransaction =
  _dereq_("./ReactServerRenderingTransaction");

var instantiateReactComponent = _dereq_("./instantiateReactComponent");
var invariant = _dereq_("./invariant");

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup
 */
function renderToString(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToString(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(false);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      var markup = componentInstance.mountComponent(id, transaction, 0);
      return ReactMarkupChecksum.addChecksumToMarkup(markup);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

/**
 * @param {ReactElement} element
 * @return {string} the HTML markup, without the extra React ID and checksum
 * (for generating static pages)
 */
function renderToStaticMarkup(element) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(element),
    'renderToStaticMarkup(): You must pass a valid ReactElement.'
  ) : invariant(ReactElement.isValidElement(element)));

  var transaction;
  try {
    var id = ReactInstanceHandles.createReactRootID();
    transaction = ReactServerRenderingTransaction.getPooled(true);

    return transaction.perform(function() {
      var componentInstance = instantiateReactComponent(element, null);
      return componentInstance.mountComponent(id, transaction, 0);
    }, null);
  } finally {
    ReactServerRenderingTransaction.release(transaction);
  }
}

module.exports = {
  renderToString: renderToString,
  renderToStaticMarkup: renderToStaticMarkup
};

},{"./ReactElement":52,"./ReactInstanceHandles":60,"./ReactMarkupChecksum":62,"./ReactServerRenderingTransaction":77,"./instantiateReactComponent":125,"./invariant":126}],77:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactServerRenderingTransaction
 * @typechecks
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");
var CallbackQueue = _dereq_("./CallbackQueue");
var ReactPutListenerQueue = _dereq_("./ReactPutListenerQueue");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");

/**
 * Provides a `CallbackQueue` queue for collecting `onDOMReady` callbacks
 * during the performing of the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function() {
    this.reactMountReady.reset();
  },

  close: emptyFunction
};

var PUT_LISTENER_QUEUEING = {
  initialize: function() {
    this.putListenerQueue.reset();
  },

  close: emptyFunction
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [
  PUT_LISTENER_QUEUEING,
  ON_DOM_READY_QUEUEING
];

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.putListenerQueue = ReactPutListenerQueue.getPooled();
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap proceedures.
   */
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function() {
    return this.reactMountReady;
  },

  getPutListenerQueue: function() {
    return this.putListenerQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be resused.
   */
  destructor: function() {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;

    ReactPutListenerQueue.release(this.putListenerQueue);
    this.putListenerQueue = null;
  }
};


assign(
  ReactServerRenderingTransaction.prototype,
  Transaction.Mixin,
  Mixin
);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactPutListenerQueue":73,"./Transaction":95,"./emptyFunction":107}],78:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactTextComponent
 * @typechecks static-only
 */

"use strict";

var DOMPropertyOperations = _dereq_("./DOMPropertyOperations");
var ReactComponent = _dereq_("./ReactComponent");
var ReactElement = _dereq_("./ReactElement");

var assign = _dereq_("./Object.assign");
var escapeTextForBrowser = _dereq_("./escapeTextForBrowser");

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings in elements so that they can undergo
 * the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactTextComponent = function(props) {
  // This constructor and it's argument is currently used by mocks.
};

assign(ReactTextComponent.prototype, ReactComponent.Mixin, {

  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {string} rootID DOM ID of the root node.
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {number} mountDepth number of components in the owner hierarchy
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function(rootID, transaction, mountDepth) {
    ReactComponent.Mixin.mountComponent.call(
      this,
      rootID,
      transaction,
      mountDepth
    );

    var escapedText = escapeTextForBrowser(this.props);

    if (transaction.renderToStaticMarkup) {
      // Normally we'd wrap this in a `span` for the reasons stated above, but
      // since this is a situation where React won't take over (static pages),
      // we can simply return the text as it is.
      return escapedText;
    }

    return (
      '<span ' + DOMPropertyOperations.createMarkupForID(rootID) + '>' +
        escapedText +
      '</span>'
    );
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {object} nextComponent Contains the next text content.
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function(nextComponent, transaction) {
    var nextProps = nextComponent.props;
    if (nextProps !== this.props) {
      this.props = nextProps;
      ReactComponent.BackendIDOperations.updateTextContentByID(
        this._rootNodeID,
        nextProps
      );
    }
  }

});

var ReactTextComponentFactory = function(text) {
  // Bypass validation and configuration
  return new ReactElement(ReactTextComponent, null, null, null, null, text);
};

ReactTextComponentFactory.type = ReactTextComponent;

module.exports = ReactTextComponentFactory;

},{"./DOMPropertyOperations":12,"./Object.assign":27,"./ReactComponent":32,"./ReactElement":52,"./escapeTextForBrowser":109}],79:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ReactUpdates
 */

"use strict";

var CallbackQueue = _dereq_("./CallbackQueue");
var PooledClass = _dereq_("./PooledClass");
var ReactCurrentOwner = _dereq_("./ReactCurrentOwner");
var ReactPerf = _dereq_("./ReactPerf");
var Transaction = _dereq_("./Transaction");

var assign = _dereq_("./Object.assign");
var invariant = _dereq_("./invariant");
var warning = _dereq_("./warning");

var dirtyComponents = [];
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  ("production" !== "development" ? invariant(
    ReactUpdates.ReactReconcileTransaction && batchingStrategy,
    'ReactUpdates: must inject a reconcile transaction class and batching ' +
    'strategy'
  ) : invariant(ReactUpdates.ReactReconcileTransaction && batchingStrategy));
}

var NESTED_UPDATES = {
  initialize: function() {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function() {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function() {
    this.callbackQueue.reset();
  },
  close: function() {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction =
    ReactUpdates.ReactReconcileTransaction.getPooled();
}

assign(
  ReactUpdatesFlushTransaction.prototype,
  Transaction.Mixin, {
  getTransactionWrappers: function() {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function() {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function(method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.Mixin.perform.call(
      this,
      this.reconcileTransaction.perform,
      this.reconcileTransaction,
      method,
      scope,
      a
    );
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b) {
  ensureInjected();
  batchingStrategy.batchedUpdates(callback, a, b);
}

/**
 * Array comparator for ReactComponents by owner depth
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountDepthComparator(c1, c2) {
  return c1._mountDepth - c2._mountDepth;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  ("production" !== "development" ? invariant(
    len === dirtyComponents.length,
    'Expected flush transaction\'s stored dirty-components length (%s) to ' +
    'match dirty-components array length (%s).',
    len,
    dirtyComponents.length
  ) : invariant(len === dirtyComponents.length));

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountDepthComparator);

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, ignore them
    // TODO: Queue unmounts in the same list to avoid this happening at all
    var component = dirtyComponents[i];
    if (component.isMounted()) {
      // If performUpdateIfNecessary happens to enqueue any new updates, we
      // shouldn't execute the callbacks until the next render happens, so
      // stash the callbacks first
      var callbacks = component._pendingCallbacks;
      component._pendingCallbacks = null;
      component.performUpdateIfNecessary(transaction.reconcileTransaction);

      if (callbacks) {
        for (var j = 0; j < callbacks.length; j++) {
          transaction.callbackQueue.enqueue(
            callbacks[j],
            component
          );
        }
      }
    }
  }
}

var flushBatchedUpdates = ReactPerf.measure(
  'ReactUpdates',
  'flushBatchedUpdates',
  function() {
    // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
    // array and perform any updates enqueued by mount-ready handlers (i.e.,
    // componentDidUpdate) but we need to check here too in order to catch
    // updates enqueued by setState callbacks and asap calls.
    while (dirtyComponents.length || asapEnqueued) {
      if (dirtyComponents.length) {
        var transaction = ReactUpdatesFlushTransaction.getPooled();
        transaction.perform(runBatchedUpdates, null, transaction);
        ReactUpdatesFlushTransaction.release(transaction);
      }

      if (asapEnqueued) {
        asapEnqueued = false;
        var queue = asapCallbackQueue;
        asapCallbackQueue = CallbackQueue.getPooled();
        queue.notifyAll();
        CallbackQueue.release(queue);
      }
    }
  }
);

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component, callback) {
  ("production" !== "development" ? invariant(
    !callback || typeof callback === "function",
    'enqueueUpdate(...): You called `setProps`, `replaceProps`, ' +
    '`setState`, `replaceState`, or `forceUpdate` with a callback that ' +
    'isn\'t callable.'
  ) : invariant(!callback || typeof callback === "function"));
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setProps, setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)
  ("production" !== "development" ? warning(
    ReactCurrentOwner.current == null,
    'enqueueUpdate(): Render methods should be a pure function of props ' +
    'and state; triggering nested component updates from render is not ' +
    'allowed. If necessary, trigger nested updates in ' +
    'componentDidUpdate.'
  ) : null);

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component, callback);
    return;
  }

  dirtyComponents.push(component);

  if (callback) {
    if (component._pendingCallbacks) {
      component._pendingCallbacks.push(callback);
    } else {
      component._pendingCallbacks = [callback];
    }
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  ("production" !== "development" ? invariant(
    batchingStrategy.isBatchingUpdates,
    'ReactUpdates.asap: Can\'t enqueue an asap callback in a context where' +
    'updates are not being batched.'
  ) : invariant(batchingStrategy.isBatchingUpdates));
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function(ReconcileTransaction) {
    ("production" !== "development" ? invariant(
      ReconcileTransaction,
      'ReactUpdates: must provide a reconcile transaction class'
    ) : invariant(ReconcileTransaction));
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function(_batchingStrategy) {
    ("production" !== "development" ? invariant(
      _batchingStrategy,
      'ReactUpdates: must provide a batching strategy'
    ) : invariant(_batchingStrategy));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.batchedUpdates === 'function',
      'ReactUpdates: must provide a batchedUpdates() function'
    ) : invariant(typeof _batchingStrategy.batchedUpdates === 'function'));
    ("production" !== "development" ? invariant(
      typeof _batchingStrategy.isBatchingUpdates === 'boolean',
      'ReactUpdates: must provide an isBatchingUpdates boolean attribute'
    ) : invariant(typeof _batchingStrategy.isBatchingUpdates === 'boolean'));
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;

},{"./CallbackQueue":6,"./Object.assign":27,"./PooledClass":28,"./ReactCurrentOwner":36,"./ReactPerf":68,"./Transaction":95,"./invariant":126,"./warning":145}],80:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SVGDOMPropertyConfig
 */

/*jslint bitwise: true*/

"use strict";

var DOMProperty = _dereq_("./DOMProperty");

var MUST_USE_ATTRIBUTE = DOMProperty.injection.MUST_USE_ATTRIBUTE;

var SVGDOMPropertyConfig = {
  Properties: {
    cx: MUST_USE_ATTRIBUTE,
    cy: MUST_USE_ATTRIBUTE,
    d: MUST_USE_ATTRIBUTE,
    dx: MUST_USE_ATTRIBUTE,
    dy: MUST_USE_ATTRIBUTE,
    fill: MUST_USE_ATTRIBUTE,
    fillOpacity: MUST_USE_ATTRIBUTE,
    fontFamily: MUST_USE_ATTRIBUTE,
    fontSize: MUST_USE_ATTRIBUTE,
    fx: MUST_USE_ATTRIBUTE,
    fy: MUST_USE_ATTRIBUTE,
    gradientTransform: MUST_USE_ATTRIBUTE,
    gradientUnits: MUST_USE_ATTRIBUTE,
    markerEnd: MUST_USE_ATTRIBUTE,
    markerMid: MUST_USE_ATTRIBUTE,
    markerStart: MUST_USE_ATTRIBUTE,
    offset: MUST_USE_ATTRIBUTE,
    opacity: MUST_USE_ATTRIBUTE,
    patternContentUnits: MUST_USE_ATTRIBUTE,
    patternUnits: MUST_USE_ATTRIBUTE,
    points: MUST_USE_ATTRIBUTE,
    preserveAspectRatio: MUST_USE_ATTRIBUTE,
    r: MUST_USE_ATTRIBUTE,
    rx: MUST_USE_ATTRIBUTE,
    ry: MUST_USE_ATTRIBUTE,
    spreadMethod: MUST_USE_ATTRIBUTE,
    stopColor: MUST_USE_ATTRIBUTE,
    stopOpacity: MUST_USE_ATTRIBUTE,
    stroke: MUST_USE_ATTRIBUTE,
    strokeDasharray: MUST_USE_ATTRIBUTE,
    strokeLinecap: MUST_USE_ATTRIBUTE,
    strokeOpacity: MUST_USE_ATTRIBUTE,
    strokeWidth: MUST_USE_ATTRIBUTE,
    textAnchor: MUST_USE_ATTRIBUTE,
    transform: MUST_USE_ATTRIBUTE,
    version: MUST_USE_ATTRIBUTE,
    viewBox: MUST_USE_ATTRIBUTE,
    x1: MUST_USE_ATTRIBUTE,
    x2: MUST_USE_ATTRIBUTE,
    x: MUST_USE_ATTRIBUTE,
    y1: MUST_USE_ATTRIBUTE,
    y2: MUST_USE_ATTRIBUTE,
    y: MUST_USE_ATTRIBUTE
  },
  DOMAttributeNames: {
    fillOpacity: 'fill-opacity',
    fontFamily: 'font-family',
    fontSize: 'font-size',
    gradientTransform: 'gradientTransform',
    gradientUnits: 'gradientUnits',
    markerEnd: 'marker-end',
    markerMid: 'marker-mid',
    markerStart: 'marker-start',
    patternContentUnits: 'patternContentUnits',
    patternUnits: 'patternUnits',
    preserveAspectRatio: 'preserveAspectRatio',
    spreadMethod: 'spreadMethod',
    stopColor: 'stop-color',
    stopOpacity: 'stop-opacity',
    strokeDasharray: 'stroke-dasharray',
    strokeLinecap: 'stroke-linecap',
    strokeOpacity: 'stroke-opacity',
    strokeWidth: 'stroke-width',
    textAnchor: 'text-anchor',
    viewBox: 'viewBox'
  }
};

module.exports = SVGDOMPropertyConfig;

},{"./DOMProperty":11}],81:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SelectEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPropagators = _dereq_("./EventPropagators");
var ReactInputSelection = _dereq_("./ReactInputSelection");
var SyntheticEvent = _dereq_("./SyntheticEvent");

var getActiveElement = _dereq_("./getActiveElement");
var isTextInputElement = _dereq_("./isTextInputElement");
var keyOf = _dereq_("./keyOf");
var shallowEqual = _dereq_("./shallowEqual");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSelect: null}),
      captured: keyOf({onSelectCapture: null})
    },
    dependencies: [
      topLevelTypes.topBlur,
      topLevelTypes.topContextMenu,
      topLevelTypes.topFocus,
      topLevelTypes.topKeyDown,
      topLevelTypes.topMouseDown,
      topLevelTypes.topMouseUp,
      topLevelTypes.topSelectionChange
    ]
  }
};

var activeElement = null;
var activeElementID = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @param {object}
 */
function getSelection(node) {
  if ('selectionStart' in node &&
      ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown ||
      activeElement == null ||
      activeElement != getActiveElement()) {
    return;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(
      eventTypes.select,
      activeElementID,
      nativeEvent
    );

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {

  eventTypes: eventTypes,

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {

    switch (topLevelType) {
      // Track the input node that has focus.
      case topLevelTypes.topFocus:
        if (isTextInputElement(topLevelTarget) ||
            topLevelTarget.contentEditable === 'true') {
          activeElement = topLevelTarget;
          activeElementID = topLevelTargetID;
          lastSelection = null;
        }
        break;
      case topLevelTypes.topBlur:
        activeElement = null;
        activeElementID = null;
        lastSelection = null;
        break;

      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case topLevelTypes.topMouseDown:
        mouseDown = true;
        break;
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topMouseUp:
        mouseDown = false;
        return constructSelectEvent(nativeEvent);

      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't).
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      case topLevelTypes.topSelectionChange:
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        return constructSelectEvent(nativeEvent);
    }
  }
};

module.exports = SelectEventPlugin;

},{"./EventConstants":16,"./EventPropagators":21,"./ReactInputSelection":59,"./SyntheticEvent":87,"./getActiveElement":113,"./isTextInputElement":129,"./keyOf":133,"./shallowEqual":141}],82:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ServerReactRootIndex
 * @typechecks
 */

"use strict";

/**
 * Size of the reactRoot ID space. We generate random numbers for React root
 * IDs and if there's a collision the events and DOM update system will
 * get confused. In the future we need a way to generate GUIDs but for
 * now this will work on a smaller scale.
 */
var GLOBAL_MOUNT_POINT_MAX = Math.pow(2, 53);

var ServerReactRootIndex = {
  createReactRootIndex: function() {
    return Math.ceil(Math.random() * GLOBAL_MOUNT_POINT_MAX);
  }
};

module.exports = ServerReactRootIndex;

},{}],83:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SimpleEventPlugin
 */

"use strict";

var EventConstants = _dereq_("./EventConstants");
var EventPluginUtils = _dereq_("./EventPluginUtils");
var EventPropagators = _dereq_("./EventPropagators");
var SyntheticClipboardEvent = _dereq_("./SyntheticClipboardEvent");
var SyntheticEvent = _dereq_("./SyntheticEvent");
var SyntheticFocusEvent = _dereq_("./SyntheticFocusEvent");
var SyntheticKeyboardEvent = _dereq_("./SyntheticKeyboardEvent");
var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");
var SyntheticDragEvent = _dereq_("./SyntheticDragEvent");
var SyntheticTouchEvent = _dereq_("./SyntheticTouchEvent");
var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
var SyntheticWheelEvent = _dereq_("./SyntheticWheelEvent");

var getEventCharCode = _dereq_("./getEventCharCode");

var invariant = _dereq_("./invariant");
var keyOf = _dereq_("./keyOf");
var warning = _dereq_("./warning");

var topLevelTypes = EventConstants.topLevelTypes;

var eventTypes = {
  blur: {
    phasedRegistrationNames: {
      bubbled: keyOf({onBlur: true}),
      captured: keyOf({onBlurCapture: true})
    }
  },
  click: {
    phasedRegistrationNames: {
      bubbled: keyOf({onClick: true}),
      captured: keyOf({onClickCapture: true})
    }
  },
  contextMenu: {
    phasedRegistrationNames: {
      bubbled: keyOf({onContextMenu: true}),
      captured: keyOf({onContextMenuCapture: true})
    }
  },
  copy: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCopy: true}),
      captured: keyOf({onCopyCapture: true})
    }
  },
  cut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onCut: true}),
      captured: keyOf({onCutCapture: true})
    }
  },
  doubleClick: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDoubleClick: true}),
      captured: keyOf({onDoubleClickCapture: true})
    }
  },
  drag: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrag: true}),
      captured: keyOf({onDragCapture: true})
    }
  },
  dragEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnd: true}),
      captured: keyOf({onDragEndCapture: true})
    }
  },
  dragEnter: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragEnter: true}),
      captured: keyOf({onDragEnterCapture: true})
    }
  },
  dragExit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragExit: true}),
      captured: keyOf({onDragExitCapture: true})
    }
  },
  dragLeave: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragLeave: true}),
      captured: keyOf({onDragLeaveCapture: true})
    }
  },
  dragOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragOver: true}),
      captured: keyOf({onDragOverCapture: true})
    }
  },
  dragStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDragStart: true}),
      captured: keyOf({onDragStartCapture: true})
    }
  },
  drop: {
    phasedRegistrationNames: {
      bubbled: keyOf({onDrop: true}),
      captured: keyOf({onDropCapture: true})
    }
  },
  focus: {
    phasedRegistrationNames: {
      bubbled: keyOf({onFocus: true}),
      captured: keyOf({onFocusCapture: true})
    }
  },
  input: {
    phasedRegistrationNames: {
      bubbled: keyOf({onInput: true}),
      captured: keyOf({onInputCapture: true})
    }
  },
  keyDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyDown: true}),
      captured: keyOf({onKeyDownCapture: true})
    }
  },
  keyPress: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyPress: true}),
      captured: keyOf({onKeyPressCapture: true})
    }
  },
  keyUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onKeyUp: true}),
      captured: keyOf({onKeyUpCapture: true})
    }
  },
  load: {
    phasedRegistrationNames: {
      bubbled: keyOf({onLoad: true}),
      captured: keyOf({onLoadCapture: true})
    }
  },
  error: {
    phasedRegistrationNames: {
      bubbled: keyOf({onError: true}),
      captured: keyOf({onErrorCapture: true})
    }
  },
  // Note: We do not allow listening to mouseOver events. Instead, use the
  // onMouseEnter/onMouseLeave created by `EnterLeaveEventPlugin`.
  mouseDown: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseDown: true}),
      captured: keyOf({onMouseDownCapture: true})
    }
  },
  mouseMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseMove: true}),
      captured: keyOf({onMouseMoveCapture: true})
    }
  },
  mouseOut: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOut: true}),
      captured: keyOf({onMouseOutCapture: true})
    }
  },
  mouseOver: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseOver: true}),
      captured: keyOf({onMouseOverCapture: true})
    }
  },
  mouseUp: {
    phasedRegistrationNames: {
      bubbled: keyOf({onMouseUp: true}),
      captured: keyOf({onMouseUpCapture: true})
    }
  },
  paste: {
    phasedRegistrationNames: {
      bubbled: keyOf({onPaste: true}),
      captured: keyOf({onPasteCapture: true})
    }
  },
  reset: {
    phasedRegistrationNames: {
      bubbled: keyOf({onReset: true}),
      captured: keyOf({onResetCapture: true})
    }
  },
  scroll: {
    phasedRegistrationNames: {
      bubbled: keyOf({onScroll: true}),
      captured: keyOf({onScrollCapture: true})
    }
  },
  submit: {
    phasedRegistrationNames: {
      bubbled: keyOf({onSubmit: true}),
      captured: keyOf({onSubmitCapture: true})
    }
  },
  touchCancel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchCancel: true}),
      captured: keyOf({onTouchCancelCapture: true})
    }
  },
  touchEnd: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchEnd: true}),
      captured: keyOf({onTouchEndCapture: true})
    }
  },
  touchMove: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchMove: true}),
      captured: keyOf({onTouchMoveCapture: true})
    }
  },
  touchStart: {
    phasedRegistrationNames: {
      bubbled: keyOf({onTouchStart: true}),
      captured: keyOf({onTouchStartCapture: true})
    }
  },
  wheel: {
    phasedRegistrationNames: {
      bubbled: keyOf({onWheel: true}),
      captured: keyOf({onWheelCapture: true})
    }
  }
};

var topLevelEventsToDispatchConfig = {
  topBlur:        eventTypes.blur,
  topClick:       eventTypes.click,
  topContextMenu: eventTypes.contextMenu,
  topCopy:        eventTypes.copy,
  topCut:         eventTypes.cut,
  topDoubleClick: eventTypes.doubleClick,
  topDrag:        eventTypes.drag,
  topDragEnd:     eventTypes.dragEnd,
  topDragEnter:   eventTypes.dragEnter,
  topDragExit:    eventTypes.dragExit,
  topDragLeave:   eventTypes.dragLeave,
  topDragOver:    eventTypes.dragOver,
  topDragStart:   eventTypes.dragStart,
  topDrop:        eventTypes.drop,
  topError:       eventTypes.error,
  topFocus:       eventTypes.focus,
  topInput:       eventTypes.input,
  topKeyDown:     eventTypes.keyDown,
  topKeyPress:    eventTypes.keyPress,
  topKeyUp:       eventTypes.keyUp,
  topLoad:        eventTypes.load,
  topMouseDown:   eventTypes.mouseDown,
  topMouseMove:   eventTypes.mouseMove,
  topMouseOut:    eventTypes.mouseOut,
  topMouseOver:   eventTypes.mouseOver,
  topMouseUp:     eventTypes.mouseUp,
  topPaste:       eventTypes.paste,
  topReset:       eventTypes.reset,
  topScroll:      eventTypes.scroll,
  topSubmit:      eventTypes.submit,
  topTouchCancel: eventTypes.touchCancel,
  topTouchEnd:    eventTypes.touchEnd,
  topTouchMove:   eventTypes.touchMove,
  topTouchStart:  eventTypes.touchStart,
  topWheel:       eventTypes.wheel
};

for (var topLevelType in topLevelEventsToDispatchConfig) {
  topLevelEventsToDispatchConfig[topLevelType].dependencies = [topLevelType];
}

var SimpleEventPlugin = {

  eventTypes: eventTypes,

  /**
   * Same as the default implementation, except cancels the event when return
   * value is false. This behavior will be disabled in a future release.
   *
   * @param {object} Event to be dispatched.
   * @param {function} Application-level callback.
   * @param {string} domID DOM ID to pass to the callback.
   */
  executeDispatch: function(event, listener, domID) {
    var returnValue = EventPluginUtils.executeDispatch(event, listener, domID);

    ("production" !== "development" ? warning(
      typeof returnValue !== 'boolean',
      'Returning `false` from an event handler is deprecated and will be ' +
      'ignored in a future release. Instead, manually call ' +
      'e.stopPropagation() or e.preventDefault(), as appropriate.'
    ) : null);

    if (returnValue === false) {
      event.stopPropagation();
      event.preventDefault();
    }
  },

  /**
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {DOMEventTarget} topLevelTarget The listening component root node.
   * @param {string} topLevelTargetID ID of `topLevelTarget`.
   * @param {object} nativeEvent Native browser event.
   * @return {*} An accumulation of synthetic events.
   * @see {EventPluginHub.extractEvents}
   */
  extractEvents: function(
      topLevelType,
      topLevelTarget,
      topLevelTargetID,
      nativeEvent) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case topLevelTypes.topInput:
      case topLevelTypes.topLoad:
      case topLevelTypes.topError:
      case topLevelTypes.topReset:
      case topLevelTypes.topSubmit:
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case topLevelTypes.topKeyPress:
        // FireFox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topKeyDown:
      case topLevelTypes.topKeyUp:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case topLevelTypes.topBlur:
      case topLevelTypes.topFocus:
        EventConstructor = SyntheticFocusEvent;
        break;
      case topLevelTypes.topClick:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
        /* falls through */
      case topLevelTypes.topContextMenu:
      case topLevelTypes.topDoubleClick:
      case topLevelTypes.topMouseDown:
      case topLevelTypes.topMouseMove:
      case topLevelTypes.topMouseOut:
      case topLevelTypes.topMouseOver:
      case topLevelTypes.topMouseUp:
        EventConstructor = SyntheticMouseEvent;
        break;
      case topLevelTypes.topDrag:
      case topLevelTypes.topDragEnd:
      case topLevelTypes.topDragEnter:
      case topLevelTypes.topDragExit:
      case topLevelTypes.topDragLeave:
      case topLevelTypes.topDragOver:
      case topLevelTypes.topDragStart:
      case topLevelTypes.topDrop:
        EventConstructor = SyntheticDragEvent;
        break;
      case topLevelTypes.topTouchCancel:
      case topLevelTypes.topTouchEnd:
      case topLevelTypes.topTouchMove:
      case topLevelTypes.topTouchStart:
        EventConstructor = SyntheticTouchEvent;
        break;
      case topLevelTypes.topScroll:
        EventConstructor = SyntheticUIEvent;
        break;
      case topLevelTypes.topWheel:
        EventConstructor = SyntheticWheelEvent;
        break;
      case topLevelTypes.topCopy:
      case topLevelTypes.topCut:
      case topLevelTypes.topPaste:
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    ("production" !== "development" ? invariant(
      EventConstructor,
      'SimpleEventPlugin: Unhandled event type, `%s`.',
      topLevelType
    ) : invariant(EventConstructor));
    var event = EventConstructor.getPooled(
      dispatchConfig,
      topLevelTargetID,
      nativeEvent
    );
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  }

};

module.exports = SimpleEventPlugin;

},{"./EventConstants":16,"./EventPluginUtils":20,"./EventPropagators":21,"./SyntheticClipboardEvent":84,"./SyntheticDragEvent":86,"./SyntheticEvent":87,"./SyntheticFocusEvent":88,"./SyntheticKeyboardEvent":90,"./SyntheticMouseEvent":91,"./SyntheticTouchEvent":92,"./SyntheticUIEvent":93,"./SyntheticWheelEvent":94,"./getEventCharCode":114,"./invariant":126,"./keyOf":133,"./warning":145}],84:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticClipboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function(event) {
    return (
      'clipboardData' in event ?
        event.clipboardData :
        window.clipboardData
    );
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;


},{"./SyntheticEvent":87}],85:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticCompositionEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticCompositionEvent,
  CompositionEventInterface
);

module.exports = SyntheticCompositionEvent;


},{"./SyntheticEvent":87}],86:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticDragEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

},{"./SyntheticMouseEvent":91}],87:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticEvent
 * @typechecks static-only
 */

"use strict";

var PooledClass = _dereq_("./PooledClass");

var assign = _dereq_("./Object.assign");
var emptyFunction = _dereq_("./emptyFunction");
var getEventTarget = _dereq_("./getEventTarget");

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: getEventTarget,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function(event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 */
function SyntheticEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  this.dispatchConfig = dispatchConfig;
  this.dispatchMarker = dispatchMarker;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      this[propName] = nativeEvent[propName];
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ?
    nativeEvent.defaultPrevented :
    nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
}

assign(SyntheticEvent.prototype, {

  preventDefault: function() {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    event.preventDefault ? event.preventDefault() : event.returnValue = false;
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function() {
    var event = this.nativeEvent;
    event.stopPropagation ? event.stopPropagation() : event.cancelBubble = true;
    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function() {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function() {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      this[propName] = null;
    }
    this.dispatchConfig = null;
    this.dispatchMarker = null;
    this.nativeEvent = null;
  }

});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function(Class, Interface) {
  var Super = this;

  var prototype = Object.create(Super.prototype);
  assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.threeArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.threeArgumentPooler);

module.exports = SyntheticEvent;

},{"./Object.assign":27,"./PooledClass":28,"./emptyFunction":107,"./getEventTarget":117}],88:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticFocusEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

},{"./SyntheticUIEvent":93}],89:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticInputEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(
  dispatchConfig,
  dispatchMarker,
  nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(
  SyntheticInputEvent,
  InputEventInterface
);

module.exports = SyntheticInputEvent;


},{"./SyntheticEvent":87}],90:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticKeyboardEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

var getEventCharCode = _dereq_("./getEventCharCode");
var getEventKey = _dereq_("./getEventKey");
var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function(event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function(event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function(event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

},{"./SyntheticUIEvent":93,"./getEventCharCode":114,"./getEventKey":115,"./getEventModifierState":116}],91:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticMouseEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");
var ViewportMetrics = _dereq_("./ViewportMetrics");

var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function(event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function(event) {
    return event.relatedTarget || (
      event.fromElement === event.srcElement ?
        event.toElement :
        event.fromElement
    );
  },
  // "Proprietary" Interface.
  pageX: function(event) {
    return 'pageX' in event ?
      event.pageX :
      event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function(event) {
    return 'pageY' in event ?
      event.pageY :
      event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

},{"./SyntheticUIEvent":93,"./ViewportMetrics":96,"./getEventModifierState":116}],92:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticTouchEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticUIEvent = _dereq_("./SyntheticUIEvent");

var getEventModifierState = _dereq_("./getEventModifierState");

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

},{"./SyntheticUIEvent":93,"./getEventModifierState":116}],93:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticUIEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticEvent = _dereq_("./SyntheticEvent");

var getEventTarget = _dereq_("./getEventTarget");

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function(event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target != null && target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function(event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

},{"./SyntheticEvent":87,"./getEventTarget":117}],94:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule SyntheticWheelEvent
 * @typechecks static-only
 */

"use strict";

var SyntheticMouseEvent = _dereq_("./SyntheticMouseEvent");

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function(event) {
    return (
      'deltaX' in event ? event.deltaX :
      // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
      'wheelDeltaX' in event ? -event.wheelDeltaX : 0
    );
  },
  deltaY: function(event) {
    return (
      'deltaY' in event ? event.deltaY :
      // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
      'wheelDeltaY' in event ? -event.wheelDeltaY :
      // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
      'wheelDelta' in event ? -event.wheelDelta : 0
    );
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent) {
  SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

},{"./SyntheticMouseEvent":91}],95:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule Transaction
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM upates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var Mixin = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function() {
    this.transactionWrappers = this.getTransactionWrappers();
    if (!this.wrapperInitData) {
      this.wrapperInitData = [];
    } else {
      this.wrapperInitData.length = 0;
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function() {
    return !!this._isInTransaction;
  },

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} args... Arguments to pass to the method (optional).
   *                           Helps prevent need to bind in many cases.
   * @return Return value from `method`.
   */
  perform: function(method, scope, a, b, c, d, e, f) {
    ("production" !== "development" ? invariant(
      !this.isInTransaction(),
      'Transaction.perform(...): Cannot initialize a transaction when there ' +
      'is already an outstanding transaction.'
    ) : invariant(!this.isInTransaction()));
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {
          }
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function(startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = Transaction.OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ?
          wrapper.initialize.call(this) :
          null;
      } finally {
        if (this.wrapperInitData[i] === Transaction.OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {
          }
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function(startIndex) {
    ("production" !== "development" ? invariant(
      this.isInTransaction(),
      'Transaction.closeAll(): Cannot close transaction when none are open.'
    ) : invariant(this.isInTransaction()));
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== Transaction.OBSERVED_ERROR) {
          wrapper.close && wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {
          }
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

var Transaction = {

  Mixin: Mixin,

  /**
   * Token to look for to determine if an error occured.
   */
  OBSERVED_ERROR: {}

};

module.exports = Transaction;

},{"./invariant":126}],96:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule ViewportMetrics
 */

"use strict";

var getUnboundedScrollPosition = _dereq_("./getUnboundedScrollPosition");

var ViewportMetrics = {

  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function() {
    var scrollPosition = getUnboundedScrollPosition(window);
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }

};

module.exports = ViewportMetrics;

},{"./getUnboundedScrollPosition":122}],97:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule accumulateInto
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 *
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  ("production" !== "development" ? invariant(
    next != null,
    'accumulateInto(...): Accumulated items must not be null or undefined.'
  ) : invariant(next != null));
  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  var currentIsArray = Array.isArray(current);
  var nextIsArray = Array.isArray(next);

  if (currentIsArray && nextIsArray) {
    current.push.apply(current, next);
    return current;
  }

  if (currentIsArray) {
    current.push(next);
    return current;
  }

  if (nextIsArray) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;

},{"./invariant":126}],98:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule adler32
 */

/* jslint bitwise:true */

"use strict";

var MOD = 65521;

// This is a clean-room implementation of adler32 designed for detecting
// if markup is not what we expect it to be. It does not need to be
// cryptographically strong, only reasonably good at detecting if markup
// generated on the server is different than that on the client.
function adler32(data) {
  var a = 1;
  var b = 0;
  for (var i = 0; i < data.length; i++) {
    a = (a + data.charCodeAt(i)) % MOD;
    b = (b + a) % MOD;
  }
  return a | (b << 16);
}

module.exports = adler32;

},{}],99:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelize
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function(_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

},{}],100:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule camelizeStyleName
 * @typechecks
 */

"use strict";

var camelize = _dereq_("./camelize");

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

},{"./camelize":99}],101:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule containsNode
 * @typechecks
 */

var isTextNode = _dereq_("./isTextNode");

/*jslint bitwise:true */

/**
 * Checks if a given DOM node contains or is another DOM node.
 *
 * @param {?DOMNode} outerNode Outer DOM node.
 * @param {?DOMNode} innerNode Inner DOM node.
 * @return {boolean} True if `outerNode` contains or is `innerNode`.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if (outerNode.contains) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

},{"./isTextNode":130}],102:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createArrayFrom
 * @typechecks
 */

var toArray = _dereq_("./toArray");

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj &&
    // arrays are objects, NodeLists are functions in Safari
    (typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    ('length' in obj) &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    (typeof obj.nodeType != 'number') &&
    (
      // a real array
      (// HTMLCollection/NodeList
      (Array.isArray(obj) ||
      // arguments
      ('callee' in obj) || 'item' in obj))
    )
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFrom = require('createArrayFrom');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFrom(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFrom(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFrom;

},{"./toArray":143}],103:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createFullPageComponent
 * @typechecks
 */

"use strict";

// Defeat circular references by requiring this directly.
var ReactCompositeComponent = _dereq_("./ReactCompositeComponent");
var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

/**
 * Create a component that will throw an exception when unmounted.
 *
 * Components like <html> <head> and <body> can't be removed or added
 * easily in a cross-browser way, however it's valuable to be able to
 * take advantage of React's reconciliation for styling and <title>
 * management. So we just document it and throw in dangerous cases.
 *
 * @param {string} tag The tag to wrap
 * @return {function} convenience constructor of new component
 */
function createFullPageComponent(tag) {
  var elementFactory = ReactElement.createFactory(tag);

  var FullPageComponent = ReactCompositeComponent.createClass({
    displayName: 'ReactFullPageComponent' + tag,

    componentWillUnmount: function() {
      ("production" !== "development" ? invariant(
        false,
        '%s tried to unmount. Because of cross-browser quirks it is ' +
        'impossible to unmount some top-level components (eg <html>, <head>, ' +
        'and <body>) reliably and efficiently. To fix this, have a single ' +
        'top-level component that never unmounts render these elements.',
        this.constructor.displayName
      ) : invariant(false));
    },

    render: function() {
      return elementFactory(this.props);
    }
  });

  return FullPageComponent;
}

module.exports = createFullPageComponent;

},{"./ReactCompositeComponent":34,"./ReactElement":52,"./invariant":126}],104:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule createNodesFromMarkup
 * @typechecks
 */

/*jslint evil: true, sub: true */

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var createArrayFrom = _dereq_("./createArrayFrom");
var getMarkupWrap = _dereq_("./getMarkupWrap");
var invariant = _dereq_("./invariant");

/**
 * Dummy container used to render all markup.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  ("production" !== "development" ? invariant(!!dummyNode, 'createNodesFromMarkup dummy not initialized') : invariant(!!dummyNode));
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    ("production" !== "development" ? invariant(
      handleScript,
      'createNodesFromMarkup(...): Unexpected <script> element rendered.'
    ) : invariant(handleScript));
    createArrayFrom(scripts).forEach(handleScript);
  }

  var nodes = createArrayFrom(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;

},{"./ExecutionEnvironment":22,"./createArrayFrom":102,"./getMarkupWrap":118,"./invariant":126}],105:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule dangerousStyleValue
 * @typechecks static-only
 */

"use strict";

var CSSProperty = _dereq_("./CSSProperty");

var isUnitlessNumber = CSSProperty.isUnitlessNumber;

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isNonNumeric || value === 0 ||
      isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;

},{"./CSSProperty":4}],106:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule deprecated
 */

var assign = _dereq_("./Object.assign");
var warning = _dereq_("./warning");

/**
 * This will log a single deprecation notice per function and forward the call
 * on to the new API.
 *
 * @param {string} namespace The namespace of the call, eg 'React'
 * @param {string} oldName The old function name, eg 'renderComponent'
 * @param {string} newName The new function name, eg 'render'
 * @param {*} ctx The context this forwarded call should run in
 * @param {function} fn The function to forward on to
 * @return {*} Will be the value as returned from `fn`
 */
function deprecated(namespace, oldName, newName, ctx, fn) {
  var warned = false;
  if ("production" !== "development") {
    var newFn = function() {
      ("production" !== "development" ? warning(
        warned,
        (namespace + "." + oldName + " will be deprecated in a future version. ") +
        ("Use " + namespace + "." + newName + " instead.")
      ) : null);
      warned = true;
      return fn.apply(ctx, arguments);
    };
    newFn.displayName = (namespace + "_" + oldName);
    // We need to make sure all properties of the original fn are copied over.
    // In particular, this is needed to support PropTypes
    return assign(newFn, fn);
  }

  return fn;
}

module.exports = deprecated;

},{"./Object.assign":27,"./warning":145}],107:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyFunction
 */

function makeEmptyFunction(arg) {
  return function() {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
function emptyFunction() {}

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function() { return this; };
emptyFunction.thatReturnsArgument = function(arg) { return arg; };

module.exports = emptyFunction;

},{}],108:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule emptyObject
 */

"use strict";

var emptyObject = {};

if ("production" !== "development") {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;

},{}],109:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule escapeTextForBrowser
 * @typechecks static-only
 */

"use strict";

var ESCAPE_LOOKUP = {
  "&": "&amp;",
  ">": "&gt;",
  "<": "&lt;",
  "\"": "&quot;",
  "'": "&#x27;"
};

var ESCAPE_REGEX = /[&><"']/g;

function escaper(match) {
  return ESCAPE_LOOKUP[match];
}

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextForBrowser(text) {
  return ('' + text).replace(ESCAPE_REGEX, escaper);
}

module.exports = escapeTextForBrowser;

},{}],110:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule flattenChildren
 */

"use strict";

var ReactTextComponent = _dereq_("./ReactTextComponent");

var traverseAllChildren = _dereq_("./traverseAllChildren");
var warning = _dereq_("./warning");

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 */
function flattenSingleChildIntoContext(traverseContext, child, name) {
  // We found a component instance.
  var result = traverseContext;
  var keyUnique = !result.hasOwnProperty(name);
  ("production" !== "development" ? warning(
    keyUnique,
    'flattenChildren(...): Encountered two children with the same key, ' +
    '`%s`. Child keys must be unique; when two children share a key, only ' +
    'the first child will be used.',
    name
  ) : null);
  if (keyUnique && child != null) {
    var type = typeof child;
    var normalizedValue;

    if (type === 'string') {
      normalizedValue = ReactTextComponent(child);
    } else if (type === 'number') {
      normalizedValue = ReactTextComponent('' + child);
    } else {
      normalizedValue = child;
    }

    result[name] = normalizedValue;
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children) {
  if (children == null) {
    return children;
  }
  var result = {};
  traverseAllChildren(children, flattenSingleChildIntoContext, result);
  return result;
}

module.exports = flattenChildren;

},{"./ReactTextComponent":78,"./traverseAllChildren":144,"./warning":145}],111:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule focusNode
 */

"use strict";

/**
 * @param {DOMElement} node input/textarea to focus
 */
function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch(e) {
  }
}

module.exports = focusNode;

},{}],112:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule forEachAccumulated
 */

"use strict";

/**
 * @param {array} an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */
var forEachAccumulated = function(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
};

module.exports = forEachAccumulated;

},{}],113:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getActiveElement
 * @typechecks
 */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document body is not yet defined.
 */
function getActiveElement() /*?DOMElement*/ {
  try {
    return document.activeElement || document.body;
  } catch (e) {
    return document.body;
  }
}

module.exports = getActiveElement;

},{}],114:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventCharCode
 * @typechecks static-only
 */

"use strict";

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

},{}],115:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventKey
 * @typechecks static-only
 */

"use strict";

var getEventCharCode = _dereq_("./getEventCharCode");

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  'Esc': 'Escape',
  'Spacebar': ' ',
  'Left': 'ArrowLeft',
  'Up': 'ArrowUp',
  'Right': 'ArrowRight',
  'Down': 'ArrowDown',
  'Del': 'Delete',
  'Win': 'OS',
  'Menu': 'ContextMenu',
  'Apps': 'ContextMenu',
  'Scroll': 'ScrollLock',
  'MozPrintableKey': 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1', 113: 'F2', 114: 'F3', 115: 'F4', 116: 'F5', 117: 'F6',
  118: 'F7', 119: 'F8', 120: 'F9', 121: 'F10', 122: 'F11', 123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

},{"./getEventCharCode":114}],116:[function(_dereq_,module,exports){
/**
 * Copyright 2013 Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventModifierState
 * @typechecks static-only
 */

"use strict";

/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  'Alt': 'altKey',
  'Control': 'ctrlKey',
  'Meta': 'metaKey',
  'Shift': 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  /*jshint validthis:true */
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

},{}],117:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getEventTarget
 * @typechecks static-only
 */

"use strict";

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;
  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

},{}],118:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getMarkupWrap
 */

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var invariant = _dereq_("./invariant");

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode =
  ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */
var shouldWrap = {
  // Force wrapping for SVG elements because if they get created inside a <div>,
  // they will be initialized in the wrong namespace (and will not display).
  'circle': true,
  'defs': true,
  'ellipse': true,
  'g': true,
  'line': true,
  'linearGradient': true,
  'path': true,
  'polygon': true,
  'polyline': true,
  'radialGradient': true,
  'rect': true,
  'stop': true,
  'text': true
};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg>', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap,

  'circle': svgWrap,
  'defs': svgWrap,
  'ellipse': svgWrap,
  'g': svgWrap,
  'line': svgWrap,
  'linearGradient': svgWrap,
  'path': svgWrap,
  'polygon': svgWrap,
  'polyline': svgWrap,
  'radialGradient': svgWrap,
  'rect': svgWrap,
  'stop': svgWrap,
  'text': svgWrap
};

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  ("production" !== "development" ? invariant(!!dummyNode, 'Markup wrapping node not initialized') : invariant(!!dummyNode));
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}


module.exports = getMarkupWrap;

},{"./ExecutionEnvironment":22,"./invariant":126}],119:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getNodeForCharacterOffset
 */

"use strict";

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType == 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

},{}],120:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getReactRootElementInContainer
 */

"use strict";

var DOC_NODE_TYPE = 9;

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 *                                           a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

module.exports = getReactRootElementInContainer;

},{}],121:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getTextContentAccessor
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ?
      'textContent' :
      'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

},{"./ExecutionEnvironment":22}],122:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule getUnboundedScrollPosition
 * @typechecks
 */

"use strict";

/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */
function getUnboundedScrollPosition(scrollable) {
  if (scrollable === window) {
    return {
      x: window.pageXOffset || document.documentElement.scrollLeft,
      y: window.pageYOffset || document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

},{}],123:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenate
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

},{}],124:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule hyphenateStyleName
 * @typechecks
 */

"use strict";

var hyphenate = _dereq_("./hyphenate");

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

},{"./hyphenate":123}],125:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule instantiateReactComponent
 * @typechecks static-only
 */

"use strict";

var warning = _dereq_("./warning");

var ReactElement = _dereq_("./ReactElement");
var ReactLegacyElement = _dereq_("./ReactLegacyElement");
var ReactNativeComponent = _dereq_("./ReactNativeComponent");
var ReactEmptyComponent = _dereq_("./ReactEmptyComponent");

/**
 * Given an `element` create an instance that will actually be mounted.
 *
 * @param {object} element
 * @param {*} parentCompositeType The composite type that resolved this.
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(element, parentCompositeType) {
  var instance;

  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      element && (typeof element.type === 'function' ||
                     typeof element.type === 'string'),
      'Only functions or strings can be mounted as React components.'
    ) : null);

    // Resolve mock instances
    if (element.type._mockedReactClassConstructor) {
      // If this is a mocked class, we treat the legacy factory as if it was the
      // class constructor for future proofing unit tests. Because this might
      // be mocked as a legacy factory, we ignore any warnings triggerd by
      // this temporary hack.
      ReactLegacyElement._isLegacyCallWarningEnabled = false;
      try {
        instance = new element.type._mockedReactClassConstructor(
          element.props
        );
      } finally {
        ReactLegacyElement._isLegacyCallWarningEnabled = true;
      }

      // If the mock implementation was a legacy factory, then it returns a
      // element. We need to turn this into a real component instance.
      if (ReactElement.isValidElement(instance)) {
        instance = new instance.type(instance.props);
      }

      var render = instance.render;
      if (!render) {
        // For auto-mocked factories, the prototype isn't shimmed and therefore
        // there is no render function on the instance. We replace the whole
        // component with an empty component instance instead.
        element = ReactEmptyComponent.getEmptyComponent();
      } else {
        if (render._isMockFunction && !render._getMockImplementation()) {
          // Auto-mocked components may have a prototype with a mocked render
          // function. For those, we'll need to mock the result of the render
          // since we consider undefined to be invalid results from render.
          render.mockImplementation(
            ReactEmptyComponent.getEmptyComponent
          );
        }
        instance.construct(element);
        return instance;
      }
    }
  }

  // Special case string values
  if (typeof element.type === 'string') {
    instance = ReactNativeComponent.createInstanceForTag(
      element.type,
      element.props,
      parentCompositeType
    );
  } else {
    // Normal case for non-mocks and non-strings
    instance = new element.type(element.props);
  }

  if ("production" !== "development") {
    ("production" !== "development" ? warning(
      typeof instance.construct === 'function' &&
      typeof instance.mountComponent === 'function' &&
      typeof instance.receiveComponent === 'function',
      'Only React Components can be mounted.'
    ) : null);
  }

  // This actually sets up the internal instance. This will become decoupled
  // from the public instance in a future diff.
  instance.construct(element);

  return instance;
}

module.exports = instantiateReactComponent;

},{"./ReactElement":52,"./ReactEmptyComponent":54,"./ReactLegacyElement":61,"./ReactNativeComponent":66,"./warning":145}],126:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule invariant
 */

"use strict";

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if ("production" !== "development") {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        'Invariant Violation: ' +
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;

},{}],127:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isEventSupported
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature =
    document.implementation &&
    document.implementation.hasFeature &&
    // always returns true in newer browsers as per the standard.
    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
    document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM ||
      capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

},{"./ExecutionEnvironment":22}],128:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isNode
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  return !!(object && (
    typeof Node === 'function' ? object instanceof Node :
      typeof object === 'object' &&
      typeof object.nodeType === 'number' &&
      typeof object.nodeName === 'string'
  ));
}

module.exports = isNode;

},{}],129:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextInputElement
 */

"use strict";

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  'color': true,
  'date': true,
  'datetime': true,
  'datetime-local': true,
  'email': true,
  'month': true,
  'number': true,
  'password': true,
  'range': true,
  'search': true,
  'tel': true,
  'text': true,
  'time': true,
  'url': true,
  'week': true
};

function isTextInputElement(elem) {
  return elem && (
    (elem.nodeName === 'INPUT' && supportedInputTypes[elem.type]) ||
    elem.nodeName === 'TEXTAREA'
  );
}

module.exports = isTextInputElement;

},{}],130:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule isTextNode
 * @typechecks
 */

var isNode = _dereq_("./isNode");

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

},{"./isNode":128}],131:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule joinClasses
 * @typechecks static-only
 */

"use strict";

/**
 * Combines multiple className strings into one.
 * http://jsperf.com/joinclasses-args-vs-array
 *
 * @param {...?string} classes
 * @return {string}
 */
function joinClasses(className/*, ... */) {
  if (!className) {
    className = '';
  }
  var nextClass;
  var argLength = arguments.length;
  if (argLength > 1) {
    for (var ii = 1; ii < argLength; ii++) {
      nextClass = arguments[ii];
      if (nextClass) {
        className = (className ? className + ' ' : '') + nextClass;
      }
    }
  }
  return className;
}

module.exports = joinClasses;

},{}],132:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyMirror
 * @typechecks static-only
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Constructs an enumeration with keys equal to their value.
 *
 * For example:
 *
 *   var COLORS = keyMirror({blue: null, red: null});
 *   var myColor = COLORS.blue;
 *   var isColorValid = !!COLORS[myColor];
 *
 * The last line could not be performed if the values of the generated enum were
 * not equal to their keys.
 *
 *   Input:  {key1: val1, key2: val2}
 *   Output: {key1: key1, key2: key2}
 *
 * @param {object} obj
 * @return {object}
 */
var keyMirror = function(obj) {
  var ret = {};
  var key;
  ("production" !== "development" ? invariant(
    obj instanceof Object && !Array.isArray(obj),
    'keyMirror(...): Argument must be an object.'
  ) : invariant(obj instanceof Object && !Array.isArray(obj)));
  for (key in obj) {
    if (!obj.hasOwnProperty(key)) {
      continue;
    }
    ret[key] = key;
  }
  return ret;
};

module.exports = keyMirror;

},{"./invariant":126}],133:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule keyOf
 */

/**
 * Allows extraction of a minified key. Let's the build system minify keys
 * without loosing the ability to dynamically use key strings as values
 * themselves. Pass in an object with a single key/val pair and it will return
 * you the string key of that single record. Suppose you want to grab the
 * value for a key 'className' inside of an object. Key/val minification may
 * have aliased that key to be 'xa12'. keyOf({className: null}) will return
 * 'xa12' in that case. Resolve keys you want to use once at startup time, then
 * reuse those resolutions.
 */
var keyOf = function(oneKeyObj) {
  var key;
  for (key in oneKeyObj) {
    if (!oneKeyObj.hasOwnProperty(key)) {
      continue;
    }
    return key;
  }
  return null;
};


module.exports = keyOf;

},{}],134:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule mapObject
 */

'use strict';

var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * Executes the provided `callback` once for each enumerable own property in the
 * object and constructs a new object from the results. The `callback` is
 * invoked with three arguments:
 *
 *  - the property value
 *  - the property name
 *  - the object being traversed
 *
 * Properties that are added after the call to `mapObject` will not be visited
 * by `callback`. If the values of existing properties are changed, the value
 * passed to `callback` will be the value at the time `mapObject` visits them.
 * Properties that are deleted before being visited are not visited.
 *
 * @grep function objectMap()
 * @grep function objMap()
 *
 * @param {?object} object
 * @param {function} callback
 * @param {*} context
 * @return {?object}
 */
function mapObject(object, callback, context) {
  if (!object) {
    return null;
  }
  var result = {};
  for (var name in object) {
    if (hasOwnProperty.call(object, name)) {
      result[name] = callback.call(context, object[name], name, object);
    }
  }
  return result;
}

module.exports = mapObject;

},{}],135:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule memoizeStringOnly
 * @typechecks static-only
 */

"use strict";

/**
 * Memoizes the return value of a function that accepts one string argument.
 *
 * @param {function} callback
 * @return {function}
 */
function memoizeStringOnly(callback) {
  var cache = {};
  return function(string) {
    if (cache.hasOwnProperty(string)) {
      return cache[string];
    } else {
      return cache[string] = callback.call(this, string);
    }
  };
}

module.exports = memoizeStringOnly;

},{}],136:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule monitorCodeUse
 */

"use strict";

var invariant = _dereq_("./invariant");

/**
 * Provides open-source compatible instrumentation for monitoring certain API
 * uses before we're ready to issue a warning or refactor. It accepts an event
 * name which may only contain the characters [a-z0-9_] and an optional data
 * object with further information.
 */

function monitorCodeUse(eventName, data) {
  ("production" !== "development" ? invariant(
    eventName && !/[^a-z0-9_]/.test(eventName),
    'You must provide an eventName using only the characters [a-z0-9_]'
  ) : invariant(eventName && !/[^a-z0-9_]/.test(eventName)));
}

module.exports = monitorCodeUse;

},{"./invariant":126}],137:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule onlyChild
 */
"use strict";

var ReactElement = _dereq_("./ReactElement");

var invariant = _dereq_("./invariant");

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection. The current implementation of this
 * function assumes that a single child gets passed without a wrapper, but the
 * purpose of this helper function is to abstract away the particular structure
 * of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactComponent} The first and only `ReactComponent` contained in the
 * structure.
 */
function onlyChild(children) {
  ("production" !== "development" ? invariant(
    ReactElement.isValidElement(children),
    'onlyChild must be passed a children with exactly one child.'
  ) : invariant(ReactElement.isValidElement(children)));
  return children;
}

module.exports = onlyChild;

},{"./ReactElement":52,"./invariant":126}],138:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performance
 * @typechecks
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance =
    window.performance ||
    window.msPerformance ||
    window.webkitPerformance;
}

module.exports = performance || {};

},{"./ExecutionEnvironment":22}],139:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule performanceNow
 * @typechecks
 */

var performance = _dereq_("./performance");

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (!performance || !performance.now) {
  performance = Date;
}

var performanceNow = performance.now.bind(performance);

module.exports = performanceNow;

},{"./performance":138}],140:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule setInnerHTML
 */

"use strict";

var ExecutionEnvironment = _dereq_("./ExecutionEnvironment");

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = function(node, html) {
  node.innerHTML = html;
};

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function(node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) ||
          html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        node.innerHTML = '\uFEFF' + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
}

module.exports = setInnerHTML;

},{"./ExecutionEnvironment":22}],141:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shallowEqual
 */

"use strict";

/**
 * Performs equality by iterating through keys on an object and returning
 * false when any key has values which are not strictly equal between
 * objA and objB. Returns true when the values of all keys are strictly equal.
 *
 * @return {boolean}
 */
function shallowEqual(objA, objB) {
  if (objA === objB) {
    return true;
  }
  var key;
  // Test for A's keys different from B.
  for (key in objA) {
    if (objA.hasOwnProperty(key) &&
        (!objB.hasOwnProperty(key) || objA[key] !== objB[key])) {
      return false;
    }
  }
  // Test for B's keys missing from A.
  for (key in objB) {
    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {
      return false;
    }
  }
  return true;
}

module.exports = shallowEqual;

},{}],142:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule shouldUpdateReactComponent
 * @typechecks static-only
 */

"use strict";

/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */
function shouldUpdateReactComponent(prevElement, nextElement) {
  if (prevElement && nextElement &&
      prevElement.type === nextElement.type &&
      prevElement.key === nextElement.key &&
      prevElement._owner === nextElement._owner) {
    return true;
  }
  return false;
}

module.exports = shouldUpdateReactComponent;

},{}],143:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule toArray
 * @typechecks
 */

var invariant = _dereq_("./invariant");

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFrom.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browse builtin objects can report typeof 'function' (e.g. NodeList in
  // old versions of Safari).
  ("production" !== "development" ? invariant(
    !Array.isArray(obj) &&
    (typeof obj === 'object' || typeof obj === 'function'),
    'toArray: Array-like object expected'
  ) : invariant(!Array.isArray(obj) &&
  (typeof obj === 'object' || typeof obj === 'function')));

  ("production" !== "development" ? invariant(
    typeof length === 'number',
    'toArray: Object needs a length property'
  ) : invariant(typeof length === 'number'));

  ("production" !== "development" ? invariant(
    length === 0 ||
    (length - 1) in obj,
    'toArray: Object should have keys for indices'
  ) : invariant(length === 0 ||
  (length - 1) in obj));

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

module.exports = toArray;

},{"./invariant":126}],144:[function(_dereq_,module,exports){
/**
 * Copyright 2013-2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule traverseAllChildren
 */

"use strict";

var ReactElement = _dereq_("./ReactElement");
var ReactInstanceHandles = _dereq_("./ReactInstanceHandles");

var invariant = _dereq_("./invariant");

var SEPARATOR = ReactInstanceHandles.SEPARATOR;
var SUBSEPARATOR = ':';

/**
 * TODO: Test that:
 * 1. `mapChildren` transforms strings and numbers into `ReactTextComponent`.
 * 2. it('should fail when supplied duplicate key', function() {
 * 3. That a single child and an array with one item have the same key pattern.
 * });
 */

var userProvidedKeyEscaperLookup = {
  '=': '=0',
  '.': '=1',
  ':': '=2'
};

var userProvidedKeyEscapeRegex = /[=.:]/g;

function userProvidedKeyEscaper(match) {
  return userProvidedKeyEscaperLookup[match];
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  if (component && component.key != null) {
    // Explicit key
    return wrapUserProvidedKey(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * Escape a component key so that it is safe to use in a reactid.
 *
 * @param {*} key Component key to be escaped.
 * @return {string} An escaped string.
 */
function escapeUserProvidedKey(text) {
  return ('' + text).replace(
    userProvidedKeyEscapeRegex,
    userProvidedKeyEscaper
  );
}

/**
 * Wrap a `key` value explicitly provided by the user to distinguish it from
 * implicitly-generated keys generated by a component's index in its parent.
 *
 * @param {string} key Value of a user-provided `key` attribute
 * @return {string}
 */
function wrapUserProvidedKey(key) {
  return '$' + escapeUserProvidedKey(key);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!number} indexSoFar Number of children encountered until this point.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
var traverseAllChildrenImpl =
  function(children, nameSoFar, indexSoFar, callback, traverseContext) {
    var nextName, nextIndex;
    var subtreeCount = 0;  // Count of children found in the current subtree.
    if (Array.isArray(children)) {
      for (var i = 0; i < children.length; i++) {
        var child = children[i];
        nextName = (
          nameSoFar +
          (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
          getComponentKey(child, i)
        );
        nextIndex = indexSoFar + subtreeCount;
        subtreeCount += traverseAllChildrenImpl(
          child,
          nextName,
          nextIndex,
          callback,
          traverseContext
        );
      }
    } else {
      var type = typeof children;
      var isOnlyChild = nameSoFar === '';
      // If it's the only child, treat the name as if it was wrapped in an array
      // so that it's consistent if the number of children grows
      var storageName =
        isOnlyChild ? SEPARATOR + getComponentKey(children, 0) : nameSoFar;
      if (children == null || type === 'boolean') {
        // All of the above are perceived as null.
        callback(traverseContext, null, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (type === 'string' || type === 'number' ||
                 ReactElement.isValidElement(children)) {
        callback(traverseContext, children, storageName, indexSoFar);
        subtreeCount = 1;
      } else if (type === 'object') {
        ("production" !== "development" ? invariant(
          !children || children.nodeType !== 1,
          'traverseAllChildren(...): Encountered an invalid child; DOM ' +
          'elements are not valid children of React components.'
        ) : invariant(!children || children.nodeType !== 1));
        for (var key in children) {
          if (children.hasOwnProperty(key)) {
            nextName = (
              nameSoFar + (nameSoFar ? SUBSEPARATOR : SEPARATOR) +
              wrapUserProvidedKey(key) + SUBSEPARATOR +
              getComponentKey(children[key], 0)
            );
            nextIndex = indexSoFar + subtreeCount;
            subtreeCount += traverseAllChildrenImpl(
              children[key],
              nextName,
              nextIndex,
              callback,
              traverseContext
            );
          }
        }
      }
    }
    return subtreeCount;
  };

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', 0, callback, traverseContext);
}

module.exports = traverseAllChildren;

},{"./ReactElement":52,"./ReactInstanceHandles":60,"./invariant":126}],145:[function(_dereq_,module,exports){
/**
 * Copyright 2014, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @providesModule warning
 */

"use strict";

var emptyFunction = _dereq_("./emptyFunction");

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if ("production" !== "development") {
  warning = function(condition, format ) {for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) args.push(arguments[$__0]);
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (!condition) {
      var argIndex = 0;
      console.warn('Warning: ' + format.replace(/%s/g, function()  {return args[argIndex++];}));
    }
  };
}

module.exports = warning;

},{"./emptyFunction":107}]},{},[1])(1)
});
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareTestMethods = function() {
  if (!goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareTestMethods must be called from " + "within a goog.module");
  }
  goog.moduleLoaderState_.declareTestMethods = true;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !goog.global.atob && goog.global.document && goog.global.document.all;
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined, declareTestMethods:false};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
      if (goog.moduleLoaderState_.declareTestMethods) {
        for (var entry in exports) {
          if (entry.indexOf("test", 0) === 0 || entry == "tearDown" || entry == "setUp" || entry == "setUpPage" || entry == "tearDownPage") {
            goog.global[entry] = exports[entry];
          }
        }
      }
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge") || goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchIE_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchOpera_() && !goog.labs.userAgent.browser.matchIE_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera", "OPR"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var edge = /Edge\/([\d\.]+)/.exec(userAgent);
  if (edge) {
    return edge[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isEdge = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit") && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident() && !goog.labs.userAgent.engine.isEdge();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = goog.labs.userAgent.engine.getEngineTuple_(tuples);
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.getEngineTuple_ = function(tuples) {
  if (!goog.labs.userAgent.engine.isEdge()) {
    return tuples[1];
  }
  for (var i = 0;i < tuples.length;i++) {
    var tuple = tuples[i];
    if (tuple[0] == "Edge") {
      return tuple;
    }
  }
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.platform.isAndroid = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.platform.isIpod = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPod");
};
goog.labs.userAgent.platform.isIphone = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPhone") && !goog.labs.userAgent.util.matchUserAgent("iPod") && !goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIpad = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad");
};
goog.labs.userAgent.platform.isIos = function() {
  return goog.labs.userAgent.platform.isIphone() || goog.labs.userAgent.platform.isIpad() || goog.labs.userAgent.platform.isIpod();
};
goog.labs.userAgent.platform.isMacintosh = function() {
  return goog.labs.userAgent.util.matchUserAgent("Macintosh");
};
goog.labs.userAgent.platform.isLinux = function() {
  return goog.labs.userAgent.util.matchUserAgent("Linux");
};
goog.labs.userAgent.platform.isWindows = function() {
  return goog.labs.userAgent.util.matchUserAgent("Windows");
};
goog.labs.userAgent.platform.isChromeOS = function() {
  return goog.labs.userAgent.util.matchUserAgent("CrOS");
};
goog.labs.userAgent.platform.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  var version = "", re;
  if (goog.labs.userAgent.platform.isWindows()) {
    re = /Windows (?:NT|Phone) ([0-9.]+)/;
    var match = re.exec(userAgentString);
    if (match) {
      version = match[1];
    } else {
      version = "0.0";
    }
  } else {
    if (goog.labs.userAgent.platform.isIos()) {
      re = /(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/;
      var match = re.exec(userAgentString);
      version = match && match[1].replace(/_/g, ".");
    } else {
      if (goog.labs.userAgent.platform.isMacintosh()) {
        re = /Mac OS X ([0-9_.]+)/;
        var match = re.exec(userAgentString);
        version = match ? match[1].replace(/_/g, ".") : "10";
      } else {
        if (goog.labs.userAgent.platform.isAndroid()) {
          re = /Android\s+([^\);]+)(\)|;)/;
          var match = re.exec(userAgentString);
          version = match && match[1];
        } else {
          if (goog.labs.userAgent.platform.isChromeOS()) {
            re = /(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/;
            var match = re.exec(userAgentString);
            version = match && match[1];
          }
        }
      }
    }
  }
  return version || "";
};
goog.labs.userAgent.platform.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(), version) >= 0;
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.platform");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();
goog.userAgent.isLegacyLinux_ = function() {
  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();
};
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();
goog.userAgent.isX11_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return !!navigator && goog.string.contains(navigator["appVersion"] || "", "X11");
};
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();
goog.userAgent.determineVersion_ = function() {
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  var version = "";
  var arr = goog.userAgent.getVersionRegexResult_();
  if (arr) {
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE && !goog.labs.userAgent.engine.isEdge()) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getVersionRegexResult_ = function() {
  var userAgent = goog.userAgent.getUserAgentString();
  if (goog.userAgent.GECKO) {
    return /rv\:([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.IE && goog.labs.userAgent.engine.isEdge()) {
    return /Edge\/([\d\.]+)/.exec(userAgent);
  }
  if (goog.userAgent.IE) {
    return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(userAgent);
  }
  if (goog.userAgent.WEBKIT) {
    return /WebKit\/(\S+)/.exec(userAgent);
  }
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && (goog.labs.userAgent.engine.isEdge() || goog.userAgent.DOCUMENT_MODE >= documentMode);
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  var mode = goog.userAgent.getDocumentMode_();
  if (!doc || !goog.userAgent.IE || !mode && goog.labs.userAgent.engine.isEdge()) {
    return undefined;
  }
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEMPLATE:"TEMPLATE", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet(("area,base,br,col,command," + "embed,hr,img,input,keygen,link,meta,param,source,track,wbr").split(","));
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function() {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
goog.string.Const.prototype.toString = function() {
  return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
};
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return goog.string.Const.create__googStringSecurityPrivate_(s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.create__googStringSecurityPrivate_ = function(s) {
  var stringConst = new goog.string.Const;
  stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = s;
  return stringConst;
};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(styleString);
  goog.asserts.assert(goog.string.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.checkStyle_ = function(style) {
  goog.asserts.assert(!/[<>]/.test(style), "Forbidden characters in style string: " + style);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "'");
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (value instanceof goog.string.Const) {
      value = goog.string.Const.unwrap(value);
      goog.asserts.assert(!/[{;}]/.test(value), "Value does not allow [{;}].");
    } else {
      if (!goog.html.SafeStyle.VALUE_RE_.test(value)) {
        goog.asserts.fail("String value allows only [-,.\"'%_!# a-zA-Z0-9], got: " + value);
        value = goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
          goog.asserts.fail("String value requires balanced quotes, got: " + value);
          value = goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.html.SafeStyle.checkStyle_(style);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0;i < value.length;i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.VALUE_RE_ = /^[-,."'%_!# a-zA-Z0-9]+$/;
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "'");
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  var urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.isDef(goog.global.URL) && goog.isDef(goog.global.URL.createObjectURL)) {
    return (goog.global.URL);
  } else {
    if (goog.isDef(goog.global.webkitURL) && goog.isDef(goog.global.webkitURL.createObjectURL)) {
      return (goog.global.webkitURL);
    } else {
      if (goog.isDef(goog.global.createObjectURL)) {
        return (goog.global);
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_");
goog.i18n.bidi.Format = {LRE:"\u202a", RLE:"\u202b", PDF:"\u202c", LRM:"\u200e", RLM:"\u200f"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-z\u00c0-\u00d6\u00d8-\u00f6\u00f8-\u02b8\u0300-\u0590\u0800-\u1fff" + "\u200e\u2c00-\ufb1c\ufe00-\ufe6f\ufefd-\uffff";
goog.i18n.bidi.rtlChars_ = "\u0591-\u07ff\u200f\ufb1d-\ufdff\ufe70-\ufefc";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "][^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "][^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Arab|Hebr|Thaa|Nkoo|Tfng))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardHtmlRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(&lt;.*?(&gt;)+)/g;
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInHtml = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  if (useRtl) {
    return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3drtl\x3e$\x26\x3c/span\x3e");
  }
  return s.replace(goog.i18n.bidi.bracketGuardHtmlRe_, "\x3cspan dir\x3dltr\x3e$\x26\x3c/span\x3e");
};
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  var useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  var mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1\u05f4").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1\u05f3");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /\d/;
goog.i18n.bidi.rtlDetectionThreshold_ = .4;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  var rtlCount = 0;
  var totalCount = 0;
  var hasWeaklyLtr = false;
  var tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (var i = 0;i < tokens.length;i++) {
    var token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      element.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      element.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      element.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      element.dir = "rtl";
      break;
    default:
      element.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeUrl = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "'");
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_BLOB_TYPE_PATTERN_ = /^image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)$/i;
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_BLOB_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^&:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    url = goog.html.SafeUrl.normalize_(url);
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.normalize_ = function(url) {
  try {
    var normalized = encodeURI(url);
  } catch (e) {
    return goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return normalized.replace(goog.html.SafeUrl.NORMALIZE_MATCHER_, function(match) {
    return goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_[match];
  });
};
goog.html.SafeUrl.NORMALIZE_MATCHER_ = /[()']|%5B|%5D|%25/g;
goog.html.SafeUrl.NORMALIZE_REPLACER_MAP_ = {"'":"%27", "(":"%28", ")":"%29", "%5B":"[", "%5D":"]", "%25":"%"};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var safeUrl = new goog.html.SafeUrl;
  safeUrl.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = url;
  return safeUrl;
};
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function() {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "'");
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var trustedResourceUrl = new goog.html.TrustedResourceUrl;
  trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = url;
  return trustedResourceUrl;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "'");
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var dir = null;
  if (textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue_;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw Error("Invalid tag name \x3c" + tagName + "\x3e.");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw Error("Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml.");
  }
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, opt_attributes, opt_content);
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0;i < styleSheet.length;i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      value = goog.html.SafeHtml.getStyleValue_(value);
    } else {
      if (/^on/i.test(name)) {
        throw Error('Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.');
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              throw Error('Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl or goog.string.Const value, "' + value + '" given.');
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(goog.isString(value) || goog.isNumber(value), "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw Error('The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value);
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.concat = function(var_args) {
  var dir = goog.i18n.bidi.Dir.NEUTRAL;
  var content = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content += goog.html.SafeHtml.unwrap(html);
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, dir);
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw Error('Invalid attribute name "' + name + '".');
      }
      var value = opt_attributes[name];
      if (!goog.isDefAndNotNull(value)) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  var content = opt_content;
  if (!goog.isDefAndNotNull(content)) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  for (name in opt_attributes) {
    var nameLower = name.toLowerCase();
    if (nameLower in fixedAttributes) {
      throw Error('Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"');
    }
    if (nameLower in defaultAttributes) {
      delete combinedAttributes[nameLower];
    }
    combinedAttributes[name] = opt_attributes[name];
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.dom.safe");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.dom.safe.setInnerHtml = function(elem, html) {
  elem.innerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrap(html);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrap(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  embed.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  link.rel = rel;
  if (goog.string.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  object.data = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  script.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setLocationHref = function(loc, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitize(url);
  }
  var win = opt_openerWin || window;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return (goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return (this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return !this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToCover = function(target) {
  var s = this.aspectRatio() <= target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.safe");
goog.require("goog.html.SafeHtml");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.string.Unicode");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (parent.getElementsByClassName) {
    retVal = parent.getElementsByClassName(className)[0];
  } else {
    if (goog.dom.canUseQuerySelector_(parent)) {
      retVal = parent.querySelector("." + className);
    } else {
      retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
    }
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return !!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!(docEl && body)) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var table = (doc.createElement(goog.dom.TagName.TABLE));
  var tbody = table.appendChild(doc.createElement(goog.dom.TagName.TBODY));
  for (var i = 0;i < rows;i++) {
    var tr = doc.createElement(goog.dom.TagName.TR);
    for (var j = 0;j < columns;j++) {
      var td = doc.createElement(goog.dom.TagName.TD);
      if (fillWithNbsp) {
        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);
      }
      tr.appendChild(td);
    }
    tbody.appendChild(tr);
  }
  return table;
};
goog.dom.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(document, html);
};
goog.dom.safeHtmlToNode_ = function(doc, html) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.create("br"), html));
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    goog.dom.safe.setInnerHtml(tempDiv, html);
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement(goog.dom.TagName.DIV);
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  return goog.dom.childrenToNode_(doc, tempDiv);
};
goog.dom.childrenToNode_ = function(doc, tempDiv) {
  if (tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild);
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return (element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return (goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return (node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return (node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return (node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return (node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return (node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return -1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return -1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return -1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return (node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement(goog.dom.TagName.DIV);
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class, opt_maxSearchSteps) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return (goog.dom.getAncestor(element, function(node) {
    return (!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true, opt_maxSearchSteps));
};
goog.dom.getAncestorByClass = function(element, className, opt_maxSearchSteps) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    goog.asserts.assert(element.name != "parentNode");
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.getPixelRatio = function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
};
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.safeHtmlToNode = function(html) {
  return goog.dom.safeHtmlToNode_(this.document_, html);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3308";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__13326__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__13325 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__13325) : cljs.core.into_array.call(null, G__13325);
      }());
    };
    var G__13326 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13327__i = 0, G__13327__a = new Array(arguments.length - 0);
        while (G__13327__i < G__13327__a.length) {
          G__13327__a[G__13327__i] = arguments[G__13327__i + 0];
          ++G__13327__i;
        }
        args = new cljs.core.IndexedSeq(G__13327__a, 0);
      }
      return G__13326__delegate.call(this, args);
    };
    G__13326.cljs$lang$maxFixedArity = 0;
    G__13326.cljs$lang$applyTo = function(arglist__13328) {
      var args = cljs.core.seq(arglist__13328);
      return G__13326__delegate(args);
    };
    G__13326.cljs$core$IFn$_invoke$arity$variadic = G__13326__delegate;
    return G__13326;
  }();
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  var G__13330 = x;
  return goog.isString(G__13330);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__13332 = x__$1;
    return goog.typeOf(G__13332);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4296__auto__ = ty;
    if (cljs.core.truth_(and__4296__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4296__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__13334 = obj;
    return goog.typeOf(G__13334);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__13336 = Symbol;
  return goog.typeOf(G__13336);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function cljs$core$make_array() {
  var G__13338 = arguments.length;
  switch(G__13338) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5193__auto___13340 = len;
  var i_13341 = 0;
  while (true) {
    if (i_13341 < n__5193__auto___13340) {
      new_arr[i_13341] = arr[i_13341];
      var G__13342 = i_13341 + 1;
      i_13341 = G__13342;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__13343 = i + 1;
      i = G__13343;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var G__13348 = arguments.length;
  switch(G__13348) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__13349 = cljs.core.aget;
  var G__13350 = array[i];
  var G__13351 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__13349, G__13350, G__13351) : cljs.core.apply.call(null, G__13349, G__13350, G__13351);
};
cljs.core.aget.cljs$lang$applyTo = function(seq13344) {
  var G__13345 = cljs.core.first(seq13344);
  var seq13344__$1 = cljs.core.next(seq13344);
  var G__13346 = cljs.core.first(seq13344__$1);
  var seq13344__$2 = cljs.core.next(seq13344__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__13345, G__13346, seq13344__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var G__13358 = arguments.length;
  switch(G__13358) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__13359 = cljs.core.aset;
  var G__13360 = array[idx];
  var G__13361 = idx2;
  var G__13362 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__13359, G__13360, G__13361, G__13362) : cljs.core.apply.call(null, G__13359, G__13360, G__13361, G__13362);
};
cljs.core.aset.cljs$lang$applyTo = function(seq13353) {
  var G__13354 = cljs.core.first(seq13353);
  var seq13353__$1 = cljs.core.next(seq13353);
  var G__13355 = cljs.core.first(seq13353__$1);
  var seq13353__$2 = cljs.core.next(seq13353__$1);
  var G__13356 = cljs.core.first(seq13353__$2);
  var seq13353__$3 = cljs.core.next(seq13353__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__13354, G__13355, G__13356, seq13353__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var G__13365 = arguments.length;
  switch(G__13365) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__13366 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__13367 = [];
  var G__13368 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__13366, G__13367, G__13368) : cljs.core.reduce.call(null, G__13366, G__13367, G__13368);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq13370) {
  var G__13371 = cljs.core.first(seq13370);
  var seq13370__$1 = cljs.core.next(seq13370);
  var G__13372 = cljs.core.first(seq13370__$1);
  var seq13370__$2 = cljs.core.next(seq13370__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__13371, G__13372, seq13370__$2);
};
cljs.core.Fn = function() {
  var obj13374 = {};
  return obj13374;
}();
cljs.core.IFn = function() {
  var obj13376 = {};
  return obj13376;
}();
cljs.core._invoke = function cljs$core$_invoke() {
  var G__13378 = arguments.length;
  switch(G__13378) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13380 = x__4944__auto__;
        return goog.typeOf(G__13380);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13382 = x__4944__auto__;
        return goog.typeOf(G__13382);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13384 = x__4944__auto__;
        return goog.typeOf(G__13384);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13386 = x__4944__auto__;
        return goog.typeOf(G__13386);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13388 = x__4944__auto__;
        return goog.typeOf(G__13388);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$6;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13390 = x__4944__auto__;
        return goog.typeOf(G__13390);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$7;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13392 = x__4944__auto__;
        return goog.typeOf(G__13392);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$8;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13394 = x__4944__auto__;
        return goog.typeOf(G__13394);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$9;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13396 = x__4944__auto__;
        return goog.typeOf(G__13396);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$10;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13398 = x__4944__auto__;
        return goog.typeOf(G__13398);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$11;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13400 = x__4944__auto__;
        return goog.typeOf(G__13400);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$12;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13402 = x__4944__auto__;
        return goog.typeOf(G__13402);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$13;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13404 = x__4944__auto__;
        return goog.typeOf(G__13404);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$14;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13406 = x__4944__auto__;
        return goog.typeOf(G__13406);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$15;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13408 = x__4944__auto__;
        return goog.typeOf(G__13408);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$16;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13410 = x__4944__auto__;
        return goog.typeOf(G__13410);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$17;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13412 = x__4944__auto__;
        return goog.typeOf(G__13412);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$18;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13414 = x__4944__auto__;
        return goog.typeOf(G__13414);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$19;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13416 = x__4944__auto__;
        return goog.typeOf(G__13416);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$20;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13418 = x__4944__auto__;
        return goog.typeOf(G__13418);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$21;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13420 = x__4944__auto__;
        return goog.typeOf(G__13420);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IFn$_invoke$arity$22;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._invoke[function() {
        var G__13422 = x__4944__auto__;
        return goog.typeOf(G__13422);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._invoke["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IFn.-invoke", this$);
        }
      }
    }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
  var obj13425 = {};
  return obj13425;
}();
cljs.core._clone = function cljs$core$_clone(value) {
  if (function() {
    var and__4296__auto__ = value;
    if (and__4296__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4944__auto__ = value == null ? null : value;
    return function() {
      var or__4308__auto__ = cljs.core._clone[function() {
        var G__13429 = x__4944__auto__;
        return goog.typeOf(G__13429);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clone["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj13431 = {};
  return obj13431;
}();
cljs.core._count = function cljs$core$_count(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._count[function() {
        var G__13435 = x__4944__auto__;
        return goog.typeOf(G__13435);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._count["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj13437 = {};
  return obj13437;
}();
cljs.core._empty = function cljs$core$_empty(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._empty[function() {
        var G__13441 = x__4944__auto__;
        return goog.typeOf(G__13441);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._empty["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj13443 = {};
  return obj13443;
}();
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._conj[function() {
        var G__13447 = x__4944__auto__;
        return goog.typeOf(G__13447);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj13449 = {};
  return obj13449;
}();
cljs.core._nth = function cljs$core$_nth() {
  var G__13451 = arguments.length;
  switch(G__13451) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__13453 = x__4944__auto__;
        return goog.typeOf(G__13453);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIndexed$_nth$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._nth[function() {
        var G__13455 = x__4944__auto__;
        return goog.typeOf(G__13455);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._nth["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIndexed.-nth", coll);
        }
      }
    }().call(null, coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
  var obj13458 = {};
  return obj13458;
}();
cljs.core.ISeq = function() {
  var obj13460 = {};
  return obj13460;
}();
cljs.core._first = function cljs$core$_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._first[function() {
        var G__13464 = x__4944__auto__;
        return goog.typeOf(G__13464);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rest[function() {
        var G__13468 = x__4944__auto__;
        return goog.typeOf(G__13468);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj13470 = {};
  return obj13470;
}();
cljs.core._next = function cljs$core$_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._next[function() {
        var G__13474 = x__4944__auto__;
        return goog.typeOf(G__13474);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj13476 = {};
  return obj13476;
}();
cljs.core._lookup = function cljs$core$_lookup() {
  var G__13478 = arguments.length;
  switch(G__13478) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__13480 = x__4944__auto__;
        return goog.typeOf(G__13480);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ILookup$_lookup$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._lookup[function() {
        var G__13482 = x__4944__auto__;
        return goog.typeOf(G__13482);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._lookup["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ILookup.-lookup", o);
        }
      }
    }().call(null, o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
  var obj13485 = {};
  return obj13485;
}();
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__13489 = x__4944__auto__;
        return goog.typeOf(G__13489);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc[function() {
        var G__13493 = x__4944__auto__;
        return goog.typeOf(G__13493);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj13495 = {};
  return obj13495;
}();
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc[function() {
        var G__13499 = x__4944__auto__;
        return goog.typeOf(G__13499);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj13501 = {};
  return obj13501;
}();
cljs.core._key = function cljs$core$_key(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._key[function() {
        var G__13505 = x__4944__auto__;
        return goog.typeOf(G__13505);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._val[function() {
        var G__13509 = x__4944__auto__;
        return goog.typeOf(G__13509);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj13511 = {};
  return obj13511;
}();
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin[function() {
        var G__13515 = x__4944__auto__;
        return goog.typeOf(G__13515);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj13517 = {};
  return obj13517;
}();
cljs.core._peek = function cljs$core$_peek(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._peek[function() {
        var G__13521 = x__4944__auto__;
        return goog.typeOf(G__13521);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._peek["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._pop[function() {
        var G__13525 = x__4944__auto__;
        return goog.typeOf(G__13525);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj13527 = {};
  return obj13527;
}();
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n[function() {
        var G__13531 = x__4944__auto__;
        return goog.typeOf(G__13531);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj13533 = {};
  return obj13533;
}();
cljs.core._deref = function cljs$core$_deref(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref[function() {
        var G__13537 = x__4944__auto__;
        return goog.typeOf(G__13537);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj13539 = {};
  return obj13539;
}();
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._deref_with_timeout[function() {
        var G__13543 = x__4944__auto__;
        return goog.typeOf(G__13543);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj13545 = {};
  return obj13545;
}();
cljs.core._meta = function cljs$core$_meta(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._meta[function() {
        var G__13549 = x__4944__auto__;
        return goog.typeOf(G__13549);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj13551 = {};
  return obj13551;
}();
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._with_meta[function() {
        var G__13555 = x__4944__auto__;
        return goog.typeOf(G__13555);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._with_meta["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj13557 = {};
  return obj13557;
}();
cljs.core._reduce = function cljs$core$_reduce() {
  var G__13559 = arguments.length;
  switch(G__13559) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__13561 = x__4944__auto__;
        return goog.typeOf(G__13561);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReduce$_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._reduce[function() {
        var G__13563 = x__4944__auto__;
        return goog.typeOf(G__13563);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReduce.-reduce", coll);
        }
      }
    }().call(null, coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
  var obj13566 = {};
  return obj13566;
}();
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._kv_reduce[function() {
        var G__13570 = x__4944__auto__;
        return goog.typeOf(G__13570);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj13572 = {};
  return obj13572;
}();
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._equiv[function() {
        var G__13576 = x__4944__auto__;
        return goog.typeOf(G__13576);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._equiv["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj13578 = {};
  return obj13578;
}();
cljs.core._hash = function cljs$core$_hash(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._hash[function() {
        var G__13582 = x__4944__auto__;
        return goog.typeOf(G__13582);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._hash["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj13584 = {};
  return obj13584;
}();
cljs.core._seq = function cljs$core$_seq(o) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._seq[function() {
        var G__13588 = x__4944__auto__;
        return goog.typeOf(G__13588);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj13590 = {};
  return obj13590;
}();
cljs.core.IList = function() {
  var obj13592 = {};
  return obj13592;
}();
cljs.core.IRecord = function() {
  var obj13594 = {};
  return obj13594;
}();
cljs.core.IReversible = function() {
  var obj13596 = {};
  return obj13596;
}();
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._rseq[function() {
        var G__13600 = x__4944__auto__;
        return goog.typeOf(G__13600);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._rseq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj13602 = {};
  return obj13602;
}();
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq[function() {
        var G__13606 = x__4944__auto__;
        return goog.typeOf(G__13606);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._sorted_seq_from[function() {
        var G__13610 = x__4944__auto__;
        return goog.typeOf(G__13610);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._entry_key[function() {
        var G__13614 = x__4944__auto__;
        return goog.typeOf(G__13614);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._entry_key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._comparator[function() {
        var G__13618 = x__4944__auto__;
        return goog.typeOf(G__13618);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._comparator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj13620 = {};
  return obj13620;
}();
cljs.core._write = function cljs$core$_write(writer, s) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._write[function() {
        var G__13624 = x__4944__auto__;
        return goog.typeOf(G__13624);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._write["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (function() {
    var and__4296__auto__ = writer;
    if (and__4296__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4944__auto__ = writer == null ? null : writer;
    return function() {
      var or__4308__auto__ = cljs.core._flush[function() {
        var G__13628 = x__4944__auto__;
        return goog.typeOf(G__13628);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._flush["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj13630 = {};
  return obj13630;
}();
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._pr_writer[function() {
        var G__13634 = x__4944__auto__;
        return goog.typeOf(G__13634);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pr_writer["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj13636 = {};
  return obj13636;
}();
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (function() {
    var and__4296__auto__ = d;
    if (and__4296__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4944__auto__ = d == null ? null : d;
    return function() {
      var or__4308__auto__ = cljs.core._realized_QMARK_[function() {
        var G__13640 = x__4944__auto__;
        return goog.typeOf(G__13640);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj13642 = {};
  return obj13642;
}();
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._notify_watches[function() {
        var G__13646 = x__4944__auto__;
        return goog.typeOf(G__13646);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._notify_watches["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._add_watch[function() {
        var G__13650 = x__4944__auto__;
        return goog.typeOf(G__13650);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs.core._remove_watch[function() {
        var G__13654 = x__4944__auto__;
        return goog.typeOf(G__13654);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_watch["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj13656 = {};
  return obj13656;
}();
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._as_transient[function() {
        var G__13660 = x__4944__auto__;
        return goog.typeOf(G__13660);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._as_transient["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj13662 = {};
  return obj13662;
}();
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._conj_BANG_[function() {
        var G__13666 = x__4944__auto__;
        return goog.typeOf(G__13666);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._persistent_BANG_[function() {
        var G__13670 = x__4944__auto__;
        return goog.typeOf(G__13670);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj13672 = {};
  return obj13672;
}();
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_BANG_[function() {
        var G__13676 = x__4944__auto__;
        return goog.typeOf(G__13676);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj13678 = {};
  return obj13678;
}();
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__13682 = x__4944__auto__;
        return goog.typeOf(G__13682);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj13684 = {};
  return obj13684;
}();
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__13688 = x__4944__auto__;
        return goog.typeOf(G__13688);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._pop_BANG_[function() {
        var G__13692 = x__4944__auto__;
        return goog.typeOf(G__13692);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj13694 = {};
  return obj13694;
}();
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__4296__auto__ = tcoll;
    if (and__4296__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4944__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__4308__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__13698 = x__4944__auto__;
        return goog.typeOf(G__13698);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj13700 = {};
  return obj13700;
}();
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._compare[function() {
        var G__13704 = x__4944__auto__;
        return goog.typeOf(G__13704);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._compare["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj13706 = {};
  return obj13706;
}();
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._drop_first[function() {
        var G__13710 = x__4944__auto__;
        return goog.typeOf(G__13710);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._drop_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj13712 = {};
  return obj13712;
}();
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_first[function() {
        var G__13716 = x__4944__auto__;
        return goog.typeOf(G__13716);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_first["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_rest[function() {
        var G__13720 = x__4944__auto__;
        return goog.typeOf(G__13720);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj13722 = {};
  return obj13722;
}();
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._chunked_next[function() {
        var G__13726 = x__4944__auto__;
        return goog.typeOf(G__13726);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._chunked_next["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj13728 = {};
  return obj13728;
}();
cljs.core._name = function cljs$core$_name(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._name[function() {
        var G__13732 = x__4944__auto__;
        return goog.typeOf(G__13732);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._name["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._namespace[function() {
        var G__13736 = x__4944__auto__;
        return goog.typeOf(G__13736);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._namespace["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj13738 = {};
  return obj13738;
}();
cljs.core.IReset = function() {
  var obj13740 = {};
  return obj13740;
}();
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._reset_BANG_[function() {
        var G__13744 = x__4944__auto__;
        return goog.typeOf(G__13744);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj13746 = {};
  return obj13746;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var G__13748 = arguments.length;
  switch(G__13748) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__13750 = x__4944__auto__;
        return goog.typeOf(G__13750);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__13752 = x__4944__auto__;
        return goog.typeOf(G__13752);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__13754 = x__4944__auto__;
        return goog.typeOf(G__13754);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._swap_BANG_[function() {
        var G__13756 = x__4944__auto__;
        return goog.typeOf(G__13756);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISwap.-swap!", o);
        }
      }
    }().call(null, o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
  var obj13759 = {};
  return obj13759;
}();
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (function() {
    var and__4296__auto__ = o;
    if (and__4296__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4944__auto__ = o == null ? null : o;
    return function() {
      var or__4308__auto__ = cljs.core._vreset_BANG_[function() {
        var G__13763 = x__4944__auto__;
        return goog.typeOf(G__13763);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj13765 = {};
  return obj13765;
}();
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (function() {
    var and__4296__auto__ = coll;
    if (and__4296__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4944__auto__ = coll == null ? null : coll;
    return function() {
      var or__4308__auto__ = cljs.core._iterator[function() {
        var G__13769 = x__4944__auto__;
        return goog.typeOf(G__13769);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._iterator["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__13772 = 4294967295;
  var G__13773 = 5;
  return Math.imul(G__13772, G__13773);
}() === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var G__13776 = a;
    var G__13777 = b;
    return Math.imul(G__13776, G__13777);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__13778 = i + 2;
        var G__13779 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__13778;
        h1 = G__13779;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj13781 = {};
  return obj13781;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__13782 = i + 1;
          var G__13783 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__13782;
          hash = G__13783;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj13787 = {};
      return obj13787;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (function() {
    var G__13790 = o;
    if (G__13790) {
      var bit__4975__auto__ = G__13790.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4975__auto__ || G__13790.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__13791 = o;
        return Math.floor(G__13791);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__13798 = a.ns;
            var G__13799 = b.ns;
            return goog.array.defaultCompare(G__13798, G__13799);
          }();
          if (0 === nsc) {
            var G__13800 = a.name;
            var G__13801 = b.name;
            return goog.array.defaultCompare(G__13800, G__13801);
          } else {
            return nsc;
          }
        }
      } else {
        var G__13802 = a.name;
        var G__13803 = b.name;
        return goog.array.defaultCompare(G__13802, G__13803);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__13805 = null;
  var G__13805__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__13805__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__13805 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13805__2.call(this, self__, coll);
      case 3:
        return G__13805__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13805.cljs$core$IFn$_invoke$arity$2 = G__13805__2;
  G__13805.cljs$core$IFn$_invoke$arity$3 = G__13805__3;
  return G__13805;
}();
cljs.core.Symbol.prototype.apply = function(self__, args13804) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13804)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var G__13807 = arguments.length;
  switch(G__13807) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__13854 = null;
  var G__13854__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__13854__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__13854__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__13854__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__13854__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__13854__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__13854__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__13854__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__13854__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__13854__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__13854__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__13854__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__13854__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__13854__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__13854__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__13854__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__13854__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__13854__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__13854__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__13854__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__13854__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__13854__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__13810 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__13811 = a;
    var G__13812 = b;
    var G__13813 = c;
    var G__13814 = d;
    var G__13815 = e;
    var G__13816 = f;
    var G__13817 = g;
    var G__13818 = h;
    var G__13819 = i;
    var G__13820 = j;
    var G__13821 = k;
    var G__13822 = l;
    var G__13823 = m;
    var G__13824 = n;
    var G__13825 = o;
    var G__13826 = p;
    var G__13827 = q;
    var G__13828 = r;
    var G__13829 = s;
    var G__13830 = t;
    var G__13831 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13810, G__13811, G__13812, G__13813, G__13814, G__13815, G__13816, G__13817, G__13818, G__13819, G__13820, G__13821, G__13822, G__13823, G__13824, G__13825, G__13826, G__13827, G__13828, G__13829, G__13830, G__13831) : cljs.core.apply.call(null, G__13810, G__13811, G__13812, G__13813, G__13814, G__13815, G__13816, G__13817, G__13818, G__13819, G__13820, G__13821, G__13822, G__13823, G__13824, 
    G__13825, G__13826, G__13827, G__13828, G__13829, G__13830, G__13831);
  };
  G__13854 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__13854__1.call(this, self__);
      case 2:
        return G__13854__2.call(this, self__, a);
      case 3:
        return G__13854__3.call(this, self__, a, b);
      case 4:
        return G__13854__4.call(this, self__, a, b, c);
      case 5:
        return G__13854__5.call(this, self__, a, b, c, d);
      case 6:
        return G__13854__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__13854__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__13854__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__13854__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__13854__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__13854__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__13854__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__13854__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__13854__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__13854__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__13854__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__13854__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__13854__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__13854__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__13854__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__13854__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__13854__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13854.cljs$core$IFn$_invoke$arity$1 = G__13854__1;
  G__13854.cljs$core$IFn$_invoke$arity$2 = G__13854__2;
  G__13854.cljs$core$IFn$_invoke$arity$3 = G__13854__3;
  G__13854.cljs$core$IFn$_invoke$arity$4 = G__13854__4;
  G__13854.cljs$core$IFn$_invoke$arity$5 = G__13854__5;
  G__13854.cljs$core$IFn$_invoke$arity$6 = G__13854__6;
  G__13854.cljs$core$IFn$_invoke$arity$7 = G__13854__7;
  G__13854.cljs$core$IFn$_invoke$arity$8 = G__13854__8;
  G__13854.cljs$core$IFn$_invoke$arity$9 = G__13854__9;
  G__13854.cljs$core$IFn$_invoke$arity$10 = G__13854__10;
  G__13854.cljs$core$IFn$_invoke$arity$11 = G__13854__11;
  G__13854.cljs$core$IFn$_invoke$arity$12 = G__13854__12;
  G__13854.cljs$core$IFn$_invoke$arity$13 = G__13854__13;
  G__13854.cljs$core$IFn$_invoke$arity$14 = G__13854__14;
  G__13854.cljs$core$IFn$_invoke$arity$15 = G__13854__15;
  G__13854.cljs$core$IFn$_invoke$arity$16 = G__13854__16;
  G__13854.cljs$core$IFn$_invoke$arity$17 = G__13854__17;
  G__13854.cljs$core$IFn$_invoke$arity$18 = G__13854__18;
  G__13854.cljs$core$IFn$_invoke$arity$19 = G__13854__19;
  G__13854.cljs$core$IFn$_invoke$arity$20 = G__13854__20;
  G__13854.cljs$core$IFn$_invoke$arity$21 = G__13854__21;
  G__13854.cljs$core$IFn$_invoke$arity$22 = G__13854__22;
  return G__13854;
}();
cljs.core.Var.prototype.apply = function(self__, args13809) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13809)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__13832 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__13833 = a;
  var G__13834 = b;
  var G__13835 = c;
  var G__13836 = d;
  var G__13837 = e;
  var G__13838 = f;
  var G__13839 = g;
  var G__13840 = h;
  var G__13841 = i;
  var G__13842 = j;
  var G__13843 = k;
  var G__13844 = l;
  var G__13845 = m;
  var G__13846 = n;
  var G__13847 = o;
  var G__13848 = p;
  var G__13849 = q;
  var G__13850 = r;
  var G__13851 = s;
  var G__13852 = t;
  var G__13853 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838, G__13839, G__13840, G__13841, G__13842, G__13843, G__13844, G__13845, G__13846, G__13847, G__13848, G__13849, G__13850, G__13851, G__13852, G__13853) : cljs.core.apply.call(null, G__13832, G__13833, G__13834, G__13835, G__13836, G__13837, G__13838, G__13839, G__13840, G__13841, G__13842, G__13843, G__13844, G__13845, G__13846, 
  G__13847, G__13848, G__13849, G__13850, G__13851, G__13852, G__13853);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  var G__13856 = x;
  if (G__13856) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__13856.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__13856.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__13856);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__13856);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  var G__13858 = value;
  if (G__13858) {
    var bit__4982__auto__ = G__13858.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4982__auto__ || G__13858.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__13858.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__13858);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__13858);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13860 = coll;
      if (G__13860) {
        var bit__4975__auto__ = G__13860.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4975__auto__ || G__13860.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13862 = coll;
      if (G__13862) {
        var bit__4975__auto__ = G__13862.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__13862.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__13864 = coll;
      if (G__13864) {
        var bit__4975__auto__ = G__13864.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__13864.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__13866 = coll;
      if (G__13866) {
        var bit__4975__auto__ = G__13866.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4975__auto__ || G__13866.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var G__13871 = arguments.length;
  switch(G__13871) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__13873 = y;
        var G__13874 = cljs.core.first(more);
        var G__13875 = cljs.core.next(more);
        x = G__13873;
        y = G__13874;
        more = G__13875;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq13867) {
  var G__13868 = cljs.core.first(seq13867);
  var seq13867__$1 = cljs.core.next(seq13867);
  var G__13869 = cljs.core.first(seq13867__$1);
  var seq13867__$2 = cljs.core.next(seq13867__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__13868, G__13869, seq13867__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__13876 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__13876) : cljs.core.es6_iterator_seq.call(null, G__13876);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null)], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13877 = n + 1;
      var G__13878 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13879 = cljs.core.next(coll__$1);
      n = G__13877;
      hash_code = G__13878;
      coll__$1 = G__13879;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__13880 = n + 1;
      var G__13881 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__13882 = cljs.core.next(coll__$1);
      n = G__13880;
      hash_code = G__13881;
      coll__$1 = G__13882;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__13883 = this$__$1.valueOf();
    var G__13884 = other.valueOf();
    return goog.array.defaultCompare(G__13883, G__13884);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__13885 = o;
  return goog.getUid(G__13885);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__13887 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13887) : cljs.core.deref.call(null, G__13887);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var G__13889 = arguments.length;
  switch(G__13889) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13890 = val;
          var G__13891 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13890, G__13891) : f.call(null, G__13890, G__13891);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13897 = nval;
          var G__13898 = n + 1;
          val = G__13897;
          n = G__13898;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13892 = val__$1;
        var G__13893 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13892, G__13893) : f.call(null, G__13892, G__13893);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13899 = nval;
        var G__13900 = n + 1;
        val__$1 = G__13899;
        n = G__13900;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13894 = val__$1;
        var G__13895 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13894, G__13895) : f.call(null, G__13894, G__13895);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13901 = nval;
        var G__13902 = n + 1;
        val__$1 = G__13901;
        n = G__13902;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var G__13904 = arguments.length;
  switch(G__13904) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__13905 = val;
          var G__13906 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13905, G__13906) : f.call(null, G__13905, G__13906);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__13912 = nval;
          var G__13913 = n + 1;
          val = G__13912;
          n = G__13913;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13907 = val__$1;
        var G__13908 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13907, G__13908) : f.call(null, G__13907, G__13908);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13914 = nval;
        var G__13915 = n + 1;
        val__$1 = G__13914;
        n = G__13915;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__13909 = val__$1;
        var G__13910 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13909, G__13910) : f.call(null, G__13909, G__13910);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13916 = nval;
        var G__13917 = n + 1;
        val__$1 = G__13916;
        n = G__13917;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  var G__13919 = x;
  if (G__13919) {
    var bit__4982__auto__ = G__13919.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4982__auto__ || G__13919.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__13919.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__13919);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__13919);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  var G__13921 = x;
  if (G__13921) {
    var bit__4982__auto__ = G__13921.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4982__auto__ || G__13921.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__13921.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__13921);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__13921);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4620__auto__ = 0;
  var y__4621__auto__ = self__.arr.length - self__.i;
  return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__13922 = coll__$1;
  var G__13923 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13922, G__13923) : cljs.core.equiv_sequential.call(null, G__13922, G__13923);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__13924 = o;
  var G__13925 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13924, G__13925) : cljs.core.cons.call(null, G__13924, G__13925);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var G__13927 = arguments.length;
  switch(G__13927) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var G__13930 = arguments.length;
  switch(G__13930) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__13932 = coll__$1;
  var G__13933 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__13932, G__13933) : cljs.core.equiv_sequential.call(null, G__13932, G__13933);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13934 = cljs.core.List.EMPTY;
  var G__13935 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__13934, G__13935) : cljs.core.with_meta.call(null, G__13934, G__13935);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__13936 = f;
  var G__13937 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__13936, G__13937) : cljs.core.seq_reduce.call(null, G__13936, G__13937);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__13938 = f;
  var G__13939 = start;
  var G__13940 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__13938, G__13939, G__13940) : cljs.core.seq_reduce.call(null, G__13938, G__13939, G__13940);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__13941 = o;
  var G__13942 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__13941, G__13942) : cljs.core.cons.call(null, G__13941, G__13942);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__13943 = sn;
      s = G__13943;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var G__13948 = arguments.length;
  switch(G__13948) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__13950 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__13951 = cljs.core.first(xs);
      var G__13952 = cljs.core.next(xs);
      coll = G__13950;
      x = G__13951;
      xs = G__13952;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq13944) {
  var G__13945 = cljs.core.first(seq13944);
  var seq13944__$1 = cljs.core.next(seq13944);
  var G__13946 = cljs.core.first(seq13944__$1);
  var seq13944__$2 = cljs.core.next(seq13944__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__13945, G__13946, seq13944__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__13953 = cljs.core.next(s);
      var G__13954 = acc + 1;
      s = G__13953;
      acc = G__13954;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__13956 = coll;
      if (G__13956) {
        var bit__4975__auto__ = G__13956.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4975__auto__ || G__13956.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var G__13958 = arguments.length;
  switch(G__13958) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13960 = cljs.core.next(coll);
            var G__13961 = n - 1;
            coll = G__13960;
            n = G__13961;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__13962 = cljs.core.next(coll);
            var G__13963 = n - 1;
            var G__13964 = not_found;
            coll = G__13962;
            n = G__13963;
            not_found = G__13964;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var G__13966 = arguments.length;
  switch(G__13966) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (function() {
        var G__13967 = coll;
        if (G__13967) {
          var bit__4975__auto__ = G__13967.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__13967.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__13968 = coll;
                if (G__13968) {
                  var bit__4982__auto__ = G__13968.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__13968.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__13968.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13968);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13968);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (function() {
        var G__13969 = coll;
        if (G__13969) {
          var bit__4975__auto__ = G__13969.cljs$lang$protocol_mask$partition0$ & 16;
          if (bit__4975__auto__ || G__13969.cljs$core$IIndexed$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
              return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (function() {
                var G__13970 = coll;
                if (G__13970) {
                  var bit__4982__auto__ = G__13970.cljs$lang$protocol_mask$partition0$ & 64;
                  if (bit__4982__auto__ || G__13970.cljs$core$ISeq$) {
                    return true;
                  } else {
                    if (!G__13970.cljs$lang$protocol_mask$partition0$) {
                      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13970);
                    } else {
                      return false;
                    }
                  }
                } else {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__13970);
                }
              }()) {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__13972 = n__$1 - 1;
      var G__13973 = cljs.core.rest(xs);
      n__$1 = G__13972;
      xs = G__13973;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var G__13975 = arguments.length;
  switch(G__13975) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (function() {
      var G__13976 = o;
      if (G__13976) {
        var bit__4975__auto__ = G__13976.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__13976.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (function() {
      var G__13977 = o;
      if (G__13977) {
        var bit__4975__auto__ = G__13977.cljs$lang$protocol_mask$partition0$ & 256;
        if (bit__4975__auto__ || G__13977.cljs$core$ILookup$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var G__13984 = arguments.length;
  switch(G__13984) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__13986 = ret;
      var G__13987 = cljs.core.first(kvs);
      var G__13988 = cljs.core.second(kvs);
      var G__13989 = cljs.core.nnext(kvs);
      coll = G__13986;
      k = G__13987;
      v = G__13988;
      kvs = G__13989;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq13979) {
  var G__13980 = cljs.core.first(seq13979);
  var seq13979__$1 = cljs.core.next(seq13979);
  var G__13981 = cljs.core.first(seq13979__$1);
  var seq13979__$2 = cljs.core.next(seq13979__$1);
  var G__13982 = cljs.core.first(seq13979__$2);
  var seq13979__$3 = cljs.core.next(seq13979__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__13980, G__13981, G__13982, seq13979__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var G__13994 = arguments.length;
  switch(G__13994) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__13996 = ret;
        var G__13997 = cljs.core.first(ks);
        var G__13998 = cljs.core.next(ks);
        coll = G__13996;
        k = G__13997;
        ks = G__13998;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq13990) {
  var G__13991 = cljs.core.first(seq13990);
  var seq13990__$1 = cljs.core.next(seq13990);
  var G__13992 = cljs.core.first(seq13990__$1);
  var seq13990__$2 = cljs.core.next(seq13990__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__13991, G__13992, seq13990__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4308__auto__ = function() {
    var G__14003 = f;
    return goog.isFunction(G__14003);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var G__14004 = f;
    if (G__14004) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto____$1 = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          return G__14004.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__14004.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__14004);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__14004);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__14470 = null;
  var G__14470__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__14470__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14006 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__14006) : self__.afn.call(null, G__14006);
  };
  var G__14470__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14007 = a;
    var G__14008 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__14007, G__14008) : self__.afn.call(null, G__14007, G__14008);
  };
  var G__14470__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14009 = a;
    var G__14010 = b;
    var G__14011 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__14009, G__14010, G__14011) : self__.afn.call(null, G__14009, G__14010, G__14011);
  };
  var G__14470__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14012 = a;
    var G__14013 = b;
    var G__14014 = c;
    var G__14015 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__14012, G__14013, G__14014, G__14015) : self__.afn.call(null, G__14012, G__14013, G__14014, G__14015);
  };
  var G__14470__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14016 = a;
    var G__14017 = b;
    var G__14018 = c;
    var G__14019 = d;
    var G__14020 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__14016, G__14017, G__14018, G__14019, G__14020) : self__.afn.call(null, G__14016, G__14017, G__14018, G__14019, G__14020);
  };
  var G__14470__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14021 = a;
    var G__14022 = b;
    var G__14023 = c;
    var G__14024 = d;
    var G__14025 = e;
    var G__14026 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__14021, G__14022, G__14023, G__14024, G__14025, G__14026) : self__.afn.call(null, G__14021, G__14022, G__14023, G__14024, G__14025, G__14026);
  };
  var G__14470__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14027 = a;
    var G__14028 = b;
    var G__14029 = c;
    var G__14030 = d;
    var G__14031 = e;
    var G__14032 = f;
    var G__14033 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14027, G__14028, G__14029, G__14030, G__14031, G__14032, G__14033) : self__.afn.call(null, G__14027, G__14028, G__14029, G__14030, G__14031, G__14032, G__14033);
  };
  var G__14470__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14034 = a;
    var G__14035 = b;
    var G__14036 = c;
    var G__14037 = d;
    var G__14038 = e;
    var G__14039 = f;
    var G__14040 = g;
    var G__14041 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14034, G__14035, G__14036, G__14037, G__14038, G__14039, G__14040, G__14041) : self__.afn.call(null, G__14034, G__14035, G__14036, G__14037, G__14038, G__14039, G__14040, G__14041);
  };
  var G__14470__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14042 = a;
    var G__14043 = b;
    var G__14044 = c;
    var G__14045 = d;
    var G__14046 = e;
    var G__14047 = f;
    var G__14048 = g;
    var G__14049 = h;
    var G__14050 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14042, G__14043, G__14044, G__14045, G__14046, G__14047, G__14048, G__14049, G__14050) : self__.afn.call(null, G__14042, G__14043, G__14044, G__14045, G__14046, G__14047, G__14048, G__14049, G__14050);
  };
  var G__14470__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14051 = a;
    var G__14052 = b;
    var G__14053 = c;
    var G__14054 = d;
    var G__14055 = e;
    var G__14056 = f;
    var G__14057 = g;
    var G__14058 = h;
    var G__14059 = i;
    var G__14060 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14051, G__14052, G__14053, G__14054, G__14055, G__14056, G__14057, G__14058, G__14059, G__14060) : self__.afn.call(null, G__14051, G__14052, G__14053, G__14054, G__14055, G__14056, G__14057, G__14058, G__14059, G__14060);
  };
  var G__14470__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14061 = a;
    var G__14062 = b;
    var G__14063 = c;
    var G__14064 = d;
    var G__14065 = e;
    var G__14066 = f;
    var G__14067 = g;
    var G__14068 = h;
    var G__14069 = i;
    var G__14070 = j;
    var G__14071 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14061, G__14062, G__14063, G__14064, G__14065, G__14066, G__14067, G__14068, G__14069, G__14070, G__14071) : self__.afn.call(null, G__14061, G__14062, G__14063, G__14064, G__14065, G__14066, G__14067, G__14068, G__14069, G__14070, G__14071);
  };
  var G__14470__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14072 = a;
    var G__14073 = b;
    var G__14074 = c;
    var G__14075 = d;
    var G__14076 = e;
    var G__14077 = f;
    var G__14078 = g;
    var G__14079 = h;
    var G__14080 = i;
    var G__14081 = j;
    var G__14082 = k;
    var G__14083 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14072, G__14073, G__14074, G__14075, G__14076, G__14077, G__14078, G__14079, G__14080, G__14081, G__14082, G__14083) : self__.afn.call(null, G__14072, G__14073, G__14074, G__14075, G__14076, G__14077, G__14078, G__14079, G__14080, G__14081, G__14082, G__14083);
  };
  var G__14470__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14084 = a;
    var G__14085 = b;
    var G__14086 = c;
    var G__14087 = d;
    var G__14088 = e;
    var G__14089 = f;
    var G__14090 = g;
    var G__14091 = h;
    var G__14092 = i;
    var G__14093 = j;
    var G__14094 = k;
    var G__14095 = l;
    var G__14096 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14084, G__14085, G__14086, G__14087, G__14088, G__14089, G__14090, G__14091, G__14092, G__14093, G__14094, G__14095, G__14096) : self__.afn.call(null, G__14084, G__14085, G__14086, G__14087, G__14088, G__14089, G__14090, G__14091, G__14092, G__14093, G__14094, G__14095, G__14096);
  };
  var G__14470__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14097 = a;
    var G__14098 = b;
    var G__14099 = c;
    var G__14100 = d;
    var G__14101 = e;
    var G__14102 = f;
    var G__14103 = g;
    var G__14104 = h;
    var G__14105 = i;
    var G__14106 = j;
    var G__14107 = k;
    var G__14108 = l;
    var G__14109 = m;
    var G__14110 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14097, G__14098, G__14099, G__14100, G__14101, G__14102, G__14103, G__14104, G__14105, G__14106, G__14107, G__14108, G__14109, G__14110) : self__.afn.call(null, G__14097, G__14098, G__14099, G__14100, G__14101, G__14102, G__14103, G__14104, G__14105, G__14106, G__14107, G__14108, G__14109, G__14110);
  };
  var G__14470__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14111 = a;
    var G__14112 = b;
    var G__14113 = c;
    var G__14114 = d;
    var G__14115 = e;
    var G__14116 = f;
    var G__14117 = g;
    var G__14118 = h;
    var G__14119 = i;
    var G__14120 = j;
    var G__14121 = k;
    var G__14122 = l;
    var G__14123 = m;
    var G__14124 = n;
    var G__14125 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14111, G__14112, G__14113, G__14114, G__14115, G__14116, G__14117, G__14118, G__14119, G__14120, G__14121, G__14122, G__14123, G__14124, G__14125) : self__.afn.call(null, G__14111, G__14112, G__14113, G__14114, G__14115, G__14116, G__14117, G__14118, G__14119, G__14120, G__14121, G__14122, G__14123, G__14124, G__14125);
  };
  var G__14470__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14126 = a;
    var G__14127 = b;
    var G__14128 = c;
    var G__14129 = d;
    var G__14130 = e;
    var G__14131 = f;
    var G__14132 = g;
    var G__14133 = h;
    var G__14134 = i;
    var G__14135 = j;
    var G__14136 = k;
    var G__14137 = l;
    var G__14138 = m;
    var G__14139 = n;
    var G__14140 = o;
    var G__14141 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14126, G__14127, G__14128, G__14129, G__14130, G__14131, G__14132, G__14133, G__14134, G__14135, G__14136, G__14137, G__14138, G__14139, G__14140, G__14141) : self__.afn.call(null, G__14126, G__14127, G__14128, G__14129, G__14130, G__14131, G__14132, G__14133, G__14134, G__14135, G__14136, G__14137, G__14138, G__14139, G__14140, G__14141);
  };
  var G__14470__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14142 = a;
    var G__14143 = b;
    var G__14144 = c;
    var G__14145 = d;
    var G__14146 = e;
    var G__14147 = f;
    var G__14148 = g;
    var G__14149 = h;
    var G__14150 = i;
    var G__14151 = j;
    var G__14152 = k;
    var G__14153 = l;
    var G__14154 = m;
    var G__14155 = n;
    var G__14156 = o;
    var G__14157 = p;
    var G__14158 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14142, G__14143, G__14144, G__14145, G__14146, G__14147, G__14148, G__14149, G__14150, G__14151, G__14152, G__14153, G__14154, G__14155, G__14156, G__14157, G__14158) : self__.afn.call(null, G__14142, G__14143, G__14144, G__14145, G__14146, G__14147, G__14148, G__14149, G__14150, G__14151, G__14152, G__14153, G__14154, G__14155, G__14156, G__14157, G__14158);
  };
  var G__14470__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14159 = a;
    var G__14160 = b;
    var G__14161 = c;
    var G__14162 = d;
    var G__14163 = e;
    var G__14164 = f;
    var G__14165 = g;
    var G__14166 = h;
    var G__14167 = i;
    var G__14168 = j;
    var G__14169 = k;
    var G__14170 = l;
    var G__14171 = m;
    var G__14172 = n;
    var G__14173 = o;
    var G__14174 = p;
    var G__14175 = q;
    var G__14176 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14159, G__14160, G__14161, G__14162, G__14163, G__14164, G__14165, G__14166, G__14167, G__14168, G__14169, G__14170, G__14171, G__14172, G__14173, G__14174, G__14175, G__14176) : self__.afn.call(null, G__14159, G__14160, G__14161, G__14162, G__14163, G__14164, G__14165, G__14166, G__14167, G__14168, G__14169, G__14170, G__14171, G__14172, G__14173, G__14174, G__14175, G__14176);
  };
  var G__14470__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14177 = a;
    var G__14178 = b;
    var G__14179 = c;
    var G__14180 = d;
    var G__14181 = e;
    var G__14182 = f;
    var G__14183 = g;
    var G__14184 = h;
    var G__14185 = i;
    var G__14186 = j;
    var G__14187 = k;
    var G__14188 = l;
    var G__14189 = m;
    var G__14190 = n;
    var G__14191 = o;
    var G__14192 = p;
    var G__14193 = q;
    var G__14194 = r;
    var G__14195 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14177, G__14178, G__14179, G__14180, G__14181, G__14182, G__14183, G__14184, G__14185, G__14186, G__14187, G__14188, G__14189, G__14190, G__14191, G__14192, G__14193, G__14194, G__14195) : self__.afn.call(null, G__14177, G__14178, G__14179, G__14180, G__14181, G__14182, G__14183, G__14184, G__14185, G__14186, G__14187, G__14188, G__14189, G__14190, G__14191, G__14192, G__14193, G__14194, G__14195);
  };
  var G__14470__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14196 = a;
    var G__14197 = b;
    var G__14198 = c;
    var G__14199 = d;
    var G__14200 = e;
    var G__14201 = f;
    var G__14202 = g;
    var G__14203 = h;
    var G__14204 = i;
    var G__14205 = j;
    var G__14206 = k;
    var G__14207 = l;
    var G__14208 = m;
    var G__14209 = n;
    var G__14210 = o;
    var G__14211 = p;
    var G__14212 = q;
    var G__14213 = r;
    var G__14214 = s;
    var G__14215 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14196, G__14197, G__14198, G__14199, G__14200, G__14201, G__14202, G__14203, G__14204, G__14205, G__14206, G__14207, G__14208, G__14209, G__14210, G__14211, G__14212, G__14213, G__14214, G__14215) : self__.afn.call(null, G__14196, G__14197, G__14198, G__14199, G__14200, G__14201, G__14202, G__14203, G__14204, G__14205, G__14206, G__14207, G__14208, G__14209, G__14210, G__14211, G__14212, G__14213, 
    G__14214, G__14215);
  };
  var G__14470__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__14216 = self__.afn;
    var G__14217 = a;
    var G__14218 = b;
    var G__14219 = c;
    var G__14220 = d;
    var G__14221 = e;
    var G__14222 = f;
    var G__14223 = g;
    var G__14224 = h;
    var G__14225 = i;
    var G__14226 = j;
    var G__14227 = k;
    var G__14228 = l;
    var G__14229 = m;
    var G__14230 = n;
    var G__14231 = o;
    var G__14232 = p;
    var G__14233 = q;
    var G__14234 = r;
    var G__14235 = s;
    var G__14236 = t;
    var G__14237 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14216, G__14217, G__14218, G__14219, G__14220, G__14221, G__14222, G__14223, G__14224, G__14225, G__14226, G__14227, G__14228, G__14229, G__14230, G__14231, G__14232, G__14233, G__14234, G__14235, G__14236, G__14237) : cljs.core.apply.call(null, G__14216, G__14217, G__14218, G__14219, G__14220, G__14221, G__14222, G__14223, G__14224, G__14225, G__14226, G__14227, G__14228, G__14229, G__14230, 
    G__14231, G__14232, G__14233, G__14234, G__14235, G__14236, G__14237);
  };
  G__14470 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__14470__1.call(this, self__);
      case 2:
        return G__14470__2.call(this, self__, a);
      case 3:
        return G__14470__3.call(this, self__, a, b);
      case 4:
        return G__14470__4.call(this, self__, a, b, c);
      case 5:
        return G__14470__5.call(this, self__, a, b, c, d);
      case 6:
        return G__14470__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__14470__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__14470__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__14470__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__14470__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__14470__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__14470__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__14470__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__14470__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__14470__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__14470__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__14470__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__14470__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__14470__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__14470__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__14470__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__14470__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14470.cljs$core$IFn$_invoke$arity$1 = G__14470__1;
  G__14470.cljs$core$IFn$_invoke$arity$2 = G__14470__2;
  G__14470.cljs$core$IFn$_invoke$arity$3 = G__14470__3;
  G__14470.cljs$core$IFn$_invoke$arity$4 = G__14470__4;
  G__14470.cljs$core$IFn$_invoke$arity$5 = G__14470__5;
  G__14470.cljs$core$IFn$_invoke$arity$6 = G__14470__6;
  G__14470.cljs$core$IFn$_invoke$arity$7 = G__14470__7;
  G__14470.cljs$core$IFn$_invoke$arity$8 = G__14470__8;
  G__14470.cljs$core$IFn$_invoke$arity$9 = G__14470__9;
  G__14470.cljs$core$IFn$_invoke$arity$10 = G__14470__10;
  G__14470.cljs$core$IFn$_invoke$arity$11 = G__14470__11;
  G__14470.cljs$core$IFn$_invoke$arity$12 = G__14470__12;
  G__14470.cljs$core$IFn$_invoke$arity$13 = G__14470__13;
  G__14470.cljs$core$IFn$_invoke$arity$14 = G__14470__14;
  G__14470.cljs$core$IFn$_invoke$arity$15 = G__14470__15;
  G__14470.cljs$core$IFn$_invoke$arity$16 = G__14470__16;
  G__14470.cljs$core$IFn$_invoke$arity$17 = G__14470__17;
  G__14470.cljs$core$IFn$_invoke$arity$18 = G__14470__18;
  G__14470.cljs$core$IFn$_invoke$arity$19 = G__14470__19;
  G__14470.cljs$core$IFn$_invoke$arity$20 = G__14470__20;
  G__14470.cljs$core$IFn$_invoke$arity$21 = G__14470__21;
  G__14470.cljs$core$IFn$_invoke$arity$22 = G__14470__22;
  return G__14470;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args14005) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14005)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__14238 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__14238) : self__.afn.call(null, G__14238);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__14239 = a;
  var G__14240 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__14239, G__14240) : self__.afn.call(null, G__14239, G__14240);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__14241 = a;
  var G__14242 = b;
  var G__14243 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__14241, G__14242, G__14243) : self__.afn.call(null, G__14241, G__14242, G__14243);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__14244 = a;
  var G__14245 = b;
  var G__14246 = c;
  var G__14247 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__14244, G__14245, G__14246, G__14247) : self__.afn.call(null, G__14244, G__14245, G__14246, G__14247);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__14248 = a;
  var G__14249 = b;
  var G__14250 = c;
  var G__14251 = d;
  var G__14252 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__14248, G__14249, G__14250, G__14251, G__14252) : self__.afn.call(null, G__14248, G__14249, G__14250, G__14251, G__14252);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__14253 = a;
  var G__14254 = b;
  var G__14255 = c;
  var G__14256 = d;
  var G__14257 = e;
  var G__14258 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__14253, G__14254, G__14255, G__14256, G__14257, G__14258) : self__.afn.call(null, G__14253, G__14254, G__14255, G__14256, G__14257, G__14258);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__14259 = a;
  var G__14260 = b;
  var G__14261 = c;
  var G__14262 = d;
  var G__14263 = e;
  var G__14264 = f;
  var G__14265 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__14259, G__14260, G__14261, G__14262, G__14263, G__14264, G__14265) : self__.afn.call(null, G__14259, G__14260, G__14261, G__14262, G__14263, G__14264, G__14265);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__14266 = a;
  var G__14267 = b;
  var G__14268 = c;
  var G__14269 = d;
  var G__14270 = e;
  var G__14271 = f;
  var G__14272 = g;
  var G__14273 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__14266, G__14267, G__14268, G__14269, G__14270, G__14271, G__14272, G__14273) : self__.afn.call(null, G__14266, G__14267, G__14268, G__14269, G__14270, G__14271, G__14272, G__14273);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__14274 = a;
  var G__14275 = b;
  var G__14276 = c;
  var G__14277 = d;
  var G__14278 = e;
  var G__14279 = f;
  var G__14280 = g;
  var G__14281 = h;
  var G__14282 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__14274, G__14275, G__14276, G__14277, G__14278, G__14279, G__14280, G__14281, G__14282) : self__.afn.call(null, G__14274, G__14275, G__14276, G__14277, G__14278, G__14279, G__14280, G__14281, G__14282);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__14283 = a;
  var G__14284 = b;
  var G__14285 = c;
  var G__14286 = d;
  var G__14287 = e;
  var G__14288 = f;
  var G__14289 = g;
  var G__14290 = h;
  var G__14291 = i;
  var G__14292 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__14283, G__14284, G__14285, G__14286, G__14287, G__14288, G__14289, G__14290, G__14291, G__14292) : self__.afn.call(null, G__14283, G__14284, G__14285, G__14286, G__14287, G__14288, G__14289, G__14290, G__14291, G__14292);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__14293 = a;
  var G__14294 = b;
  var G__14295 = c;
  var G__14296 = d;
  var G__14297 = e;
  var G__14298 = f;
  var G__14299 = g;
  var G__14300 = h;
  var G__14301 = i;
  var G__14302 = j;
  var G__14303 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__14293, G__14294, G__14295, G__14296, G__14297, G__14298, G__14299, G__14300, G__14301, G__14302, G__14303) : self__.afn.call(null, G__14293, G__14294, G__14295, G__14296, G__14297, G__14298, G__14299, G__14300, G__14301, G__14302, G__14303);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__14304 = a;
  var G__14305 = b;
  var G__14306 = c;
  var G__14307 = d;
  var G__14308 = e;
  var G__14309 = f;
  var G__14310 = g;
  var G__14311 = h;
  var G__14312 = i;
  var G__14313 = j;
  var G__14314 = k;
  var G__14315 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__14304, G__14305, G__14306, G__14307, G__14308, G__14309, G__14310, G__14311, G__14312, G__14313, G__14314, G__14315) : self__.afn.call(null, G__14304, G__14305, G__14306, G__14307, G__14308, G__14309, G__14310, G__14311, G__14312, G__14313, G__14314, G__14315);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__14316 = a;
  var G__14317 = b;
  var G__14318 = c;
  var G__14319 = d;
  var G__14320 = e;
  var G__14321 = f;
  var G__14322 = g;
  var G__14323 = h;
  var G__14324 = i;
  var G__14325 = j;
  var G__14326 = k;
  var G__14327 = l;
  var G__14328 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__14316, G__14317, G__14318, G__14319, G__14320, G__14321, G__14322, G__14323, G__14324, G__14325, G__14326, G__14327, G__14328) : self__.afn.call(null, G__14316, G__14317, G__14318, G__14319, G__14320, G__14321, G__14322, G__14323, G__14324, G__14325, G__14326, G__14327, G__14328);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__14329 = a;
  var G__14330 = b;
  var G__14331 = c;
  var G__14332 = d;
  var G__14333 = e;
  var G__14334 = f;
  var G__14335 = g;
  var G__14336 = h;
  var G__14337 = i;
  var G__14338 = j;
  var G__14339 = k;
  var G__14340 = l;
  var G__14341 = m;
  var G__14342 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__14329, G__14330, G__14331, G__14332, G__14333, G__14334, G__14335, G__14336, G__14337, G__14338, G__14339, G__14340, G__14341, G__14342) : self__.afn.call(null, G__14329, G__14330, G__14331, G__14332, G__14333, G__14334, G__14335, G__14336, G__14337, G__14338, G__14339, G__14340, G__14341, G__14342);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__14343 = a;
  var G__14344 = b;
  var G__14345 = c;
  var G__14346 = d;
  var G__14347 = e;
  var G__14348 = f;
  var G__14349 = g;
  var G__14350 = h;
  var G__14351 = i;
  var G__14352 = j;
  var G__14353 = k;
  var G__14354 = l;
  var G__14355 = m;
  var G__14356 = n;
  var G__14357 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__14343, G__14344, G__14345, G__14346, G__14347, G__14348, G__14349, G__14350, G__14351, G__14352, G__14353, G__14354, G__14355, G__14356, G__14357) : self__.afn.call(null, G__14343, G__14344, G__14345, G__14346, G__14347, G__14348, G__14349, G__14350, G__14351, G__14352, G__14353, G__14354, G__14355, G__14356, G__14357);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__14358 = a;
  var G__14359 = b;
  var G__14360 = c;
  var G__14361 = d;
  var G__14362 = e;
  var G__14363 = f;
  var G__14364 = g;
  var G__14365 = h;
  var G__14366 = i;
  var G__14367 = j;
  var G__14368 = k;
  var G__14369 = l;
  var G__14370 = m;
  var G__14371 = n;
  var G__14372 = o;
  var G__14373 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__14358, G__14359, G__14360, G__14361, G__14362, G__14363, G__14364, G__14365, G__14366, G__14367, G__14368, G__14369, G__14370, G__14371, G__14372, G__14373) : self__.afn.call(null, G__14358, G__14359, G__14360, G__14361, G__14362, G__14363, G__14364, G__14365, G__14366, G__14367, G__14368, G__14369, G__14370, G__14371, G__14372, G__14373);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__14374 = a;
  var G__14375 = b;
  var G__14376 = c;
  var G__14377 = d;
  var G__14378 = e;
  var G__14379 = f;
  var G__14380 = g;
  var G__14381 = h;
  var G__14382 = i;
  var G__14383 = j;
  var G__14384 = k;
  var G__14385 = l;
  var G__14386 = m;
  var G__14387 = n;
  var G__14388 = o;
  var G__14389 = p;
  var G__14390 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__14374, G__14375, G__14376, G__14377, G__14378, G__14379, G__14380, G__14381, G__14382, G__14383, G__14384, G__14385, G__14386, G__14387, G__14388, G__14389, G__14390) : self__.afn.call(null, G__14374, G__14375, G__14376, G__14377, G__14378, G__14379, G__14380, G__14381, G__14382, G__14383, G__14384, G__14385, G__14386, G__14387, G__14388, G__14389, G__14390);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__14391 = a;
  var G__14392 = b;
  var G__14393 = c;
  var G__14394 = d;
  var G__14395 = e;
  var G__14396 = f;
  var G__14397 = g;
  var G__14398 = h;
  var G__14399 = i;
  var G__14400 = j;
  var G__14401 = k;
  var G__14402 = l;
  var G__14403 = m;
  var G__14404 = n;
  var G__14405 = o;
  var G__14406 = p;
  var G__14407 = q;
  var G__14408 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__14391, G__14392, G__14393, G__14394, G__14395, G__14396, G__14397, G__14398, G__14399, G__14400, G__14401, G__14402, G__14403, G__14404, G__14405, G__14406, G__14407, G__14408) : self__.afn.call(null, G__14391, G__14392, G__14393, G__14394, G__14395, G__14396, G__14397, G__14398, G__14399, G__14400, G__14401, G__14402, G__14403, G__14404, G__14405, G__14406, G__14407, G__14408);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__14409 = a;
  var G__14410 = b;
  var G__14411 = c;
  var G__14412 = d;
  var G__14413 = e;
  var G__14414 = f;
  var G__14415 = g;
  var G__14416 = h;
  var G__14417 = i;
  var G__14418 = j;
  var G__14419 = k;
  var G__14420 = l;
  var G__14421 = m;
  var G__14422 = n;
  var G__14423 = o;
  var G__14424 = p;
  var G__14425 = q;
  var G__14426 = r;
  var G__14427 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__14409, G__14410, G__14411, G__14412, G__14413, G__14414, G__14415, G__14416, G__14417, G__14418, G__14419, G__14420, G__14421, G__14422, G__14423, G__14424, G__14425, G__14426, G__14427) : self__.afn.call(null, G__14409, G__14410, G__14411, G__14412, G__14413, G__14414, G__14415, G__14416, G__14417, G__14418, G__14419, G__14420, G__14421, G__14422, G__14423, G__14424, G__14425, G__14426, G__14427);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__14428 = a;
  var G__14429 = b;
  var G__14430 = c;
  var G__14431 = d;
  var G__14432 = e;
  var G__14433 = f;
  var G__14434 = g;
  var G__14435 = h;
  var G__14436 = i;
  var G__14437 = j;
  var G__14438 = k;
  var G__14439 = l;
  var G__14440 = m;
  var G__14441 = n;
  var G__14442 = o;
  var G__14443 = p;
  var G__14444 = q;
  var G__14445 = r;
  var G__14446 = s;
  var G__14447 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__14428, G__14429, G__14430, G__14431, G__14432, G__14433, G__14434, G__14435, G__14436, G__14437, G__14438, G__14439, G__14440, G__14441, G__14442, G__14443, G__14444, G__14445, G__14446, G__14447) : self__.afn.call(null, G__14428, G__14429, G__14430, G__14431, G__14432, G__14433, G__14434, G__14435, G__14436, G__14437, G__14438, G__14439, G__14440, G__14441, G__14442, G__14443, G__14444, G__14445, G__14446, 
  G__14447);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__14448 = self__.afn;
  var G__14449 = a;
  var G__14450 = b;
  var G__14451 = c;
  var G__14452 = d;
  var G__14453 = e;
  var G__14454 = f;
  var G__14455 = g;
  var G__14456 = h;
  var G__14457 = i;
  var G__14458 = j;
  var G__14459 = k;
  var G__14460 = l;
  var G__14461 = m;
  var G__14462 = n;
  var G__14463 = o;
  var G__14464 = p;
  var G__14465 = q;
  var G__14466 = r;
  var G__14467 = s;
  var G__14468 = t;
  var G__14469 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__14448, G__14449, G__14450, G__14451, G__14452, G__14453, G__14454, G__14455, G__14456, G__14457, G__14458, G__14459, G__14460, G__14461, G__14462, G__14463, G__14464, G__14465, G__14466, G__14467, G__14468, G__14469) : cljs.core.apply.call(null, G__14448, G__14449, G__14450, G__14451, G__14452, G__14453, G__14454, G__14455, G__14456, G__14457, G__14458, G__14459, G__14460, G__14461, G__14462, 
  G__14463, G__14464, G__14465, G__14466, G__14467, G__14468, G__14469);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__14474 = o;
    if (G__14474) {
      var bit__4982__auto__ = G__14474.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4982__auto__ || G__14474.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__14474.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__14474);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__14474);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4296__auto__ = !(o == null);
    if (and__4296__auto__) {
      var G__14478 = o;
      if (G__14478) {
        var bit__4982__auto__ = G__14478.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4982__auto__ || G__14478.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__14478.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14478);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14478);
      }
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var G__14483 = arguments.length;
  switch(G__14483) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__14485 = ret;
        var G__14486 = cljs.core.first(ks);
        var G__14487 = cljs.core.next(ks);
        coll = G__14485;
        k = G__14486;
        ks = G__14487;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq14479) {
  var G__14480 = cljs.core.first(seq14479);
  var seq14479__$1 = cljs.core.next(seq14479);
  var G__14481 = cljs.core.first(seq14479__$1);
  var seq14479__$2 = cljs.core.next(seq14479__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__14480, G__14481, seq14479__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14489 = x;
    if (G__14489) {
      var bit__4982__auto__ = G__14489.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4982__auto__ || G__14489.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__14489.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__14489);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__14489);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14491 = x;
    if (G__14491) {
      var bit__4982__auto__ = G__14491.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4982__auto__ || G__14491.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__14491.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__14491);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__14491);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  var G__14493 = x;
  if (G__14493) {
    var bit__4982__auto__ = G__14493.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4982__auto__ || G__14493.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__14493.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__14493);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__14493);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  var G__14495 = x;
  if (G__14495) {
    var bit__4982__auto__ = G__14495.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4982__auto__ || G__14495.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__14495.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__14495);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__14495);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  var G__14497 = x;
  if (G__14497) {
    var bit__4982__auto__ = G__14497.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4982__auto__ || G__14497.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__14497.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__14497);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__14497);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  var G__14499 = x;
  if (G__14499) {
    var bit__4982__auto__ = G__14499.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4982__auto__ || G__14499.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__14499.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__14499);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__14499);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__14501 = x;
    if (G__14501) {
      var bit__4982__auto__ = G__14501.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4982__auto__ || G__14501.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__14501.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__14501);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__14501);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  var G__14503 = x;
  if (G__14503) {
    var bit__4982__auto__ = G__14503.cljs$lang$protocol_mask$partition0$ & 67108864;
    if (bit__4982__auto__ || G__14503.cljs$core$IRecord$) {
      return true;
    } else {
      if (!G__14503.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__14503);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, G__14503);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  var G__14505 = x;
  if (G__14505) {
    var bit__4982__auto__ = G__14505.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4982__auto__ || G__14505.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__14505.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__14505);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__14505);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  var G__14507 = x;
  if (G__14507) {
    var bit__4975__auto__ = G__14507.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4975__auto__ || G__14507.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var G__14510 = arguments.length;
  switch(G__14510) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  var obj14512 = {};
  return obj14512;
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var G__14513 = goog.object.create;
  var G__14514 = keyvals;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__14513, G__14514) : cljs.core.apply.call(null, G__14513, G__14514);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq14508) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14508));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__14518_14520 = obj;
  var G__14519_14521 = function(G__14518_14520, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__14518_14520, keys);
  goog.object.forEach(G__14518_14520, G__14519_14521);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14522 = i__$1 + 1;
      var G__14523 = j__$1 + 1;
      var G__14524 = len__$1 - 1;
      i__$1 = G__14522;
      j__$1 = G__14523;
      len__$1 = G__14524;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__14525 = i__$1 - 1;
      var G__14526 = j__$1 - 1;
      var G__14527 = len__$1 - 1;
      i__$1 = G__14525;
      j__$1 = G__14526;
      len__$1 = G__14527;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj14529 = {};
  return obj14529;
}();
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__14531 = s;
    if (G__14531) {
      var bit__4982__auto__ = G__14531.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4982__auto__ || G__14531.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__14531.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__14531);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__14531);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var G__14533 = s;
  if (G__14533) {
    var bit__4982__auto__ = G__14533.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4982__auto__ || G__14533.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__14533.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__14533);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__14533);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4308__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var G__14537 = f;
    if (G__14537) {
      var bit__4982__auto__ = G__14537.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4982__auto__ || G__14537.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__14537.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__14537);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__14537);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__14550 = n;
    return isNaN(G__14550);
  }()) && !(n === Infinity) && function() {
    var G__14551 = n;
    return parseFloat(G__14551);
  }() === function() {
    var G__14552 = n;
    var G__14553 = 10;
    return parseInt(G__14552, G__14553);
  }();
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var G__14558 = arguments.length;
  switch(G__14558) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__14560 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__14561 = etc;
          s = G__14560;
          xs = G__14561;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq14554) {
  var G__14555 = cljs.core.first(seq14554);
  var seq14554__$1 = cljs.core.next(seq14554);
  var G__14556 = cljs.core.first(seq14554__$1);
  var seq14554__$2 = cljs.core.next(seq14554__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__14555, G__14556, seq14554__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            var G__14567 = x;
            var G__14568 = y;
            return goog.array.defaultCompare(G__14567, G__14568);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (function() {
            var G__14569 = x;
            if (G__14569) {
              var bit__4982__auto__ = G__14569.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4982__auto__ || G__14569.cljs$core$IComparable$) {
                return true;
              } else {
                if (!G__14569.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__14569);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, G__14569);
            }
          }()) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              var G__14570 = x;
              var G__14571 = y;
              return goog.array.defaultCompare(G__14570, G__14571);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var G__14573 = arguments.length;
  switch(G__14573) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__14575 = xs;
      var G__14576 = ys;
      var G__14577 = len;
      var G__14578 = n + 1;
      xs = G__14575;
      ys = G__14576;
      len = G__14577;
      n = G__14578;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__14583 = x;
        var G__14584 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14583, G__14584) : f.call(null, G__14583, G__14584);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(function() {
            var G__14585 = y;
            var G__14586 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14585, G__14586) : f.call(null, G__14585, G__14586);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var G__14588 = arguments.length;
  switch(G__14588) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = function() {
      var G__14589 = coll;
      return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14589) : cljs.core.to_array.call(null, G__14589);
    }();
    var G__14590_14593 = a;
    var G__14591_14594 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__14590_14593, G__14591_14594);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var G__14596 = arguments.length;
  switch(G__14596) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, function() {
      var G__14597 = x;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14597) : keyfn.call(null, G__14597);
    }(), function() {
      var G__14598 = y;
      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14598) : keyfn.call(null, G__14598);
    }());
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var G__14601 = arguments.length;
  switch(G__14601) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__14602 = f;
    var G__14603 = cljs.core.first(s);
    var G__14604 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__14602, G__14603, G__14604) : cljs.core.reduce.call(null, G__14602, G__14603, G__14604);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__14605 = val__$1;
        var G__14606 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14605, G__14606) : f.call(null, G__14605, G__14606);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__14608 = nval;
        var G__14609 = cljs.core.next(coll__$1);
        val__$1 = G__14608;
        coll__$1 = G__14609;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = function() {
    var G__14613 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__14613) : cljs.core.to_array.call(null, G__14613);
  }();
  var G__14614_14616 = a;
  goog.array.shuffle(G__14614_14616);
  var G__14615 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__14615) : cljs.core.vec.call(null, G__14615);
};
cljs.core.reduce = function cljs$core$reduce() {
  var G__14618 = arguments.length;
  switch(G__14618) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (function() {
    var G__14619 = coll;
    if (G__14619) {
      var bit__4975__auto__ = G__14619.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__14619.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (function() {
    var G__14620 = coll;
    if (G__14620) {
      var bit__4975__auto__ = G__14620.cljs$lang$protocol_mask$partition0$ & 524288;
      if (bit__4975__auto__ || G__14620.cljs$core$IReduce$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var G__14623 = arguments.length;
  switch(G__14623) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__14628 = null;
    var G__14628__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__14628__1 = function(x) {
      var G__14624 = x;
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__14624) : cf.call(null, G__14624);
    };
    var G__14628__2 = function(x, y) {
      var G__14625 = x;
      var G__14626 = y;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14625, G__14626) : f.call(null, G__14625, G__14626);
    };
    G__14628 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__14628__0.call(this);
        case 1:
          return G__14628__1.call(this, x);
        case 2:
          return G__14628__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14628.cljs$core$IFn$_invoke$arity$0 = G__14628__0;
    G__14628.cljs$core$IFn$_invoke$arity$1 = G__14628__1;
    G__14628.cljs$core$IFn$_invoke$arity$2 = G__14628__2;
    return G__14628;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var G__14630 = arguments.length;
  switch(G__14630) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }(), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = function() {
    var G__14631 = f;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__14631) : xform.call(null, G__14631);
  }();
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  var G__14632 = ret;
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__14632) : f__$1.call(null, G__14632);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var G__14638 = arguments.length;
  switch(G__14638) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq14634) {
  var G__14635 = cljs.core.first(seq14634);
  var seq14634__$1 = cljs.core.next(seq14634);
  var G__14636 = cljs.core.first(seq14634__$1);
  var seq14634__$2 = cljs.core.next(seq14634__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__14635, G__14636, seq14634__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var G__14644 = arguments.length;
  switch(G__14644) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq14640) {
  var G__14641 = cljs.core.first(seq14640);
  var seq14640__$1 = cljs.core.next(seq14640);
  var G__14642 = cljs.core.first(seq14640__$1);
  var seq14640__$2 = cljs.core.next(seq14640__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__14641, G__14642, seq14640__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var G__14650 = arguments.length;
  switch(G__14650) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq14646) {
  var G__14647 = cljs.core.first(seq14646);
  var seq14646__$1 = cljs.core.next(seq14646);
  var G__14648 = cljs.core.first(seq14646__$1);
  var seq14646__$2 = cljs.core.next(seq14646__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__14647, G__14648, seq14646__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var G__14656 = arguments.length;
  switch(G__14656) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq14652) {
  var G__14653 = cljs.core.first(seq14652);
  var seq14652__$1 = cljs.core.next(seq14652);
  var G__14654 = cljs.core.first(seq14652__$1);
  var seq14652__$2 = cljs.core.next(seq14652__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__14653, G__14654, seq14652__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var G__14662 = arguments.length;
  switch(G__14662) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__14664 = y;
        var G__14665 = cljs.core.first(more);
        var G__14666 = cljs.core.next(more);
        x = G__14664;
        y = G__14665;
        more = G__14666;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq14658) {
  var G__14659 = cljs.core.first(seq14658);
  var seq14658__$1 = cljs.core.next(seq14658);
  var G__14660 = cljs.core.first(seq14658__$1);
  var seq14658__$2 = cljs.core.next(seq14658__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__14659, G__14660, seq14658__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var G__14671 = arguments.length;
  switch(G__14671) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__14673 = y;
        var G__14674 = cljs.core.first(more);
        var G__14675 = cljs.core.next(more);
        x = G__14673;
        y = G__14674;
        more = G__14675;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq14667) {
  var G__14668 = cljs.core.first(seq14667);
  var seq14667__$1 = cljs.core.next(seq14667);
  var G__14669 = cljs.core.first(seq14667__$1);
  var seq14667__$2 = cljs.core.next(seq14667__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14668, G__14669, seq14667__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var G__14680 = arguments.length;
  switch(G__14680) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__14682 = y;
        var G__14683 = cljs.core.first(more);
        var G__14684 = cljs.core.next(more);
        x = G__14682;
        y = G__14683;
        more = G__14684;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq14676) {
  var G__14677 = cljs.core.first(seq14676);
  var seq14676__$1 = cljs.core.next(seq14676);
  var G__14678 = cljs.core.first(seq14676__$1);
  var seq14676__$2 = cljs.core.next(seq14676__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__14677, G__14678, seq14676__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var G__14689 = arguments.length;
  switch(G__14689) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__14691 = y;
        var G__14692 = cljs.core.first(more);
        var G__14693 = cljs.core.next(more);
        x = G__14691;
        y = G__14692;
        more = G__14693;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq14685) {
  var G__14686 = cljs.core.first(seq14685);
  var seq14685__$1 = cljs.core.next(seq14685);
  var G__14687 = cljs.core.first(seq14685__$1);
  var seq14685__$2 = cljs.core.next(seq14685__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14686, G__14687, seq14685__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var G__14698 = arguments.length;
  switch(G__14698) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4620__auto__ = x;
  var y__4621__auto__ = y;
  return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4620__auto__ = x;
    var y__4621__auto__ = y;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq14694) {
  var G__14695 = cljs.core.first(seq14694);
  var seq14694__$1 = cljs.core.next(seq14694);
  var G__14696 = cljs.core.first(seq14694__$1);
  var seq14694__$2 = cljs.core.next(seq14694__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__14695, G__14696, seq14694__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var G__14704 = arguments.length;
  switch(G__14704) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4627__auto__ = x;
  var y__4628__auto__ = y;
  return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4627__auto__ = x;
    var y__4628__auto__ = y;
    return x__4627__auto__ < y__4628__auto__ ? x__4627__auto__ : y__4628__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq14700) {
  var G__14701 = cljs.core.first(seq14700);
  var seq14700__$1 = cljs.core.next(seq14700);
  var G__14702 = cljs.core.first(seq14700__$1);
  var seq14700__$2 = cljs.core.next(seq14700__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__14701, G__14702, seq14700__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var G__14710 = arguments.length;
  switch(G__14710) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq14706) {
  var G__14707 = cljs.core.first(seq14706);
  var seq14706__$1 = cljs.core.next(seq14706);
  var G__14708 = cljs.core.first(seq14706__$1);
  var seq14706__$2 = cljs.core.next(seq14706__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__14707, G__14708, seq14706__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var G__14716 = arguments.length;
  switch(G__14716) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq14712) {
  var G__14713 = cljs.core.first(seq14712);
  var seq14712__$1 = cljs.core.next(seq14712);
  var G__14714 = cljs.core.first(seq14712__$1);
  var seq14712__$2 = cljs.core.next(seq14712__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__14713, G__14714, seq14712__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var G__14722 = arguments.length;
  switch(G__14722) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq14718) {
  var G__14719 = cljs.core.first(seq14718);
  var seq14718__$1 = cljs.core.next(seq14718);
  var G__14720 = cljs.core.first(seq14718__$1);
  var seq14718__$2 = cljs.core.next(seq14718__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__14719, G__14720, seq14718__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var G__14728 = arguments.length;
  switch(G__14728) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq14724) {
  var G__14725 = cljs.core.first(seq14724);
  var seq14724__$1 = cljs.core.next(seq14724);
  var G__14726 = cljs.core.first(seq14724__$1);
  var seq14724__$2 = cljs.core.next(seq14724__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__14725, G__14726, seq14724__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var G__14734 = arguments.length;
  switch(G__14734) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq14730) {
  var G__14731 = cljs.core.first(seq14730);
  var seq14730__$1 = cljs.core.next(seq14730);
  var G__14732 = cljs.core.first(seq14730__$1);
  var seq14730__$2 = cljs.core.next(seq14730__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__14731, G__14732, seq14730__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  var G__14738 = x;
  var G__14739 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__14738, G__14739) : cljs.core.mod.call(null, G__14738, G__14739);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var G__14744 = arguments.length;
  switch(G__14744) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq14740) {
  var G__14741 = cljs.core.first(seq14740);
  var seq14740__$1 = cljs.core.next(seq14740);
  var G__14742 = cljs.core.first(seq14740__$1);
  var seq14740__$2 = cljs.core.next(seq14740__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__14741, G__14742, seq14740__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var G__14750 = arguments.length;
  switch(G__14750) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq14746) {
  var G__14747 = cljs.core.first(seq14746);
  var seq14746__$1 = cljs.core.next(seq14746);
  var G__14748 = cljs.core.first(seq14746__$1);
  var seq14746__$2 = cljs.core.next(seq14746__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__14747, G__14748, seq14746__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    var G__14754 = q;
    return Math.floor(G__14754);
  } else {
    var G__14755 = q;
    return Math.ceil(G__14755);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var G__14760 = arguments.length;
  switch(G__14760) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq14756) {
  var G__14757 = cljs.core.first(seq14756);
  var seq14756__$1 = cljs.core.next(seq14756);
  var G__14758 = cljs.core.first(seq14756__$1);
  var seq14756__$2 = cljs.core.next(seq14756__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__14757, G__14758, seq14756__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var G__14766 = arguments.length;
  switch(G__14766) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq14762) {
  var G__14763 = cljs.core.first(seq14762);
  var seq14762__$1 = cljs.core.next(seq14762);
  var G__14764 = cljs.core.first(seq14762__$1);
  var seq14762__$2 = cljs.core.next(seq14762__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__14763, G__14764, seq14762__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var G__14772 = arguments.length;
  switch(G__14772) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq14768) {
  var G__14769 = cljs.core.first(seq14768);
  var seq14768__$1 = cljs.core.next(seq14768);
  var G__14770 = cljs.core.first(seq14768__$1);
  var seq14768__$2 = cljs.core.next(seq14768__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__14769, G__14770, seq14768__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var G__14778 = arguments.length;
  switch(G__14778) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq14774) {
  var G__14775 = cljs.core.first(seq14774);
  var seq14774__$1 = cljs.core.next(seq14774);
  var G__14776 = cljs.core.first(seq14774__$1);
  var seq14774__$2 = cljs.core.next(seq14774__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__14775, G__14776, seq14774__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var G__14784 = arguments.length;
  switch(G__14784) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__14786 = y;
        var G__14787 = cljs.core.first(more);
        var G__14788 = cljs.core.next(more);
        x = G__14786;
        y = G__14787;
        more = G__14788;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq14780) {
  var G__14781 = cljs.core.first(seq14780);
  var seq14780__$1 = cljs.core.next(seq14780);
  var G__14782 = cljs.core.first(seq14780__$1);
  var seq14780__$2 = cljs.core.next(seq14780__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__14781, G__14782, seq14780__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__14789 = n__$1 - 1;
      var G__14790 = cljs.core.next(xs);
      n__$1 = G__14789;
      xs = G__14790;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var G__14794 = arguments.length;
  switch(G__14794) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    var G__14795 = x;
    return goog.string.buildString(G__14795);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__14797 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__14798 = cljs.core.next(more);
      sb = G__14797;
      more = G__14798;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq14791) {
  var G__14792 = cljs.core.first(seq14791);
  var seq14791__$1 = cljs.core.next(seq14791);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__14792, seq14791__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var G__14800 = arguments.length;
  switch(G__14800) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__14802 = cljs.core.next(xs);
            var G__14803 = cljs.core.next(ys);
            xs = G__14802;
            ys = G__14803;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__14804 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__14805 = cljs.core.next(s);
        res = G__14804;
        s = G__14805;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__14810 = (h + (cljs.core.hash(function() {
        var G__14808 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14808) : cljs.core.key.call(null, G__14808);
      }()) ^ cljs.core.hash(function() {
        var G__14809 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14809) : cljs.core.val.call(null, G__14809);
      }()))) % 4503599627370496;
      var G__14811 = cljs.core.next(s);
      h = G__14810;
      s = G__14811;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__14812 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__14813 = cljs.core.next(s__$1);
      h = G__14812;
      s__$1 = G__14813;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__14824_14834 = cljs.core.seq(fn_map);
  var chunk__14825_14835 = null;
  var count__14826_14836 = 0;
  var i__14827_14837 = 0;
  while (true) {
    if (i__14827_14837 < count__14826_14836) {
      var vec__14828_14838 = chunk__14825_14835.cljs$core$IIndexed$_nth$arity$2(null, i__14827_14837);
      var key_name_14839 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14828_14838, 0, null);
      var f_14840 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14828_14838, 1, null);
      var str_name_14841 = function() {
        var G__14829 = key_name_14839;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14829) : cljs.core.name.call(null, G__14829);
      }();
      obj[str_name_14841] = f_14840;
      var G__14842 = seq__14824_14834;
      var G__14843 = chunk__14825_14835;
      var G__14844 = count__14826_14836;
      var G__14845 = i__14827_14837 + 1;
      seq__14824_14834 = G__14842;
      chunk__14825_14835 = G__14843;
      count__14826_14836 = G__14844;
      i__14827_14837 = G__14845;
      continue;
    } else {
      var temp__4425__auto___14846 = cljs.core.seq(seq__14824_14834);
      if (temp__4425__auto___14846) {
        var seq__14824_14847__$1 = temp__4425__auto___14846;
        if (cljs.core.chunked_seq_QMARK_(seq__14824_14847__$1)) {
          var c__5093__auto___14848 = function() {
            var G__14830 = seq__14824_14847__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__14830) : cljs.core.chunk_first.call(null, G__14830);
          }();
          var G__14849 = function() {
            var G__14831 = seq__14824_14847__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__14831) : cljs.core.chunk_rest.call(null, G__14831);
          }();
          var G__14850 = c__5093__auto___14848;
          var G__14851 = cljs.core.count(c__5093__auto___14848);
          var G__14852 = 0;
          seq__14824_14834 = G__14849;
          chunk__14825_14835 = G__14850;
          count__14826_14836 = G__14851;
          i__14827_14837 = G__14852;
          continue;
        } else {
          var vec__14832_14853 = cljs.core.first(seq__14824_14847__$1);
          var key_name_14854 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14832_14853, 0, null);
          var f_14855 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14832_14853, 1, null);
          var str_name_14856 = function() {
            var G__14833 = key_name_14854;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14833) : cljs.core.name.call(null, G__14833);
          }();
          obj[str_name_14856] = f_14855;
          var G__14857 = cljs.core.next(seq__14824_14847__$1);
          var G__14858 = null;
          var G__14859 = 0;
          var G__14860 = 0;
          seq__14824_14834 = G__14857;
          chunk__14825_14835 = G__14858;
          count__14826_14836 = G__14859;
          i__14827_14837 = G__14860;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  var G__14862 = coll;
  if (G__14862) {
    var bit__4982__auto__ = G__14862.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4982__auto__ || G__14862.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__14862.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__14862);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__14862);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__14864 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__14864;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__14865 = i - 1;
      var G__14866 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__14865;
      r = G__14866;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq14863) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14863));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4308__auto__ = coll == null;
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      var G__14870 = coll;
      if (G__14870) {
        var bit__4975__auto__ = G__14870.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4975__auto__ || G__14870.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  var G__14872 = x;
  if (G__14872) {
    var bit__4982__auto__ = G__14872.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4982__auto__ || G__14872.cljs$core$IList$) {
      return true;
    } else {
      if (!G__14872.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__14872);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__14872);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = cljs.core.not(a.ns);
      if (and__4296__auto__) {
        return b.ns;
      } else {
        return and__4296__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__14879 = a.ns;
            var G__14880 = b.ns;
            return goog.array.defaultCompare(G__14879, G__14880);
          }();
          if (0 === nsc) {
            var G__14881 = a.name;
            var G__14882 = b.name;
            return goog.array.defaultCompare(G__14881, G__14882);
          } else {
            return nsc;
          }
        }
      } else {
        var G__14883 = a.name;
        var G__14884 = b.name;
        return goog.array.defaultCompare(G__14883, G__14884);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14886 = null;
  var G__14886__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__14886__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__14886 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14886__2.call(this, self__, coll);
      case 3:
        return G__14886__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14886.cljs$core$IFn$_invoke$arity$2 = G__14886__2;
  G__14886.cljs$core$IFn$_invoke$arity$3 = G__14886__3;
  return G__14886;
}();
cljs.core.Keyword.prototype.apply = function(self__, args14885) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14885)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4724__auto__ = self__._hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null)], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (function() {
    var G__14888 = x;
    if (G__14888) {
      var bit__4975__auto__ = G__14888.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__14888.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var G__14890 = arguments.length;
  switch(G__14890) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), function() {
        var G__14891 = name;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__14891) : cljs.core.name.call(null, G__14891);
      }(), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__14893 = ls.sval();
        ls = G__14893;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var G__14895 = arguments.length;
  switch(G__14895) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (function() {
    var G__14898 = s;
    if (G__14898) {
      var bit__4975__auto__ = G__14898.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4975__auto__ || G__14898.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__14899 = cljs.core.next(s__$1);
      s__$1 = G__14899;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_14900 = 0;
  var xs_14901 = cljs.core.seq(coll);
  while (true) {
    if (xs_14901) {
      ret[i_14900] = cljs.core.to_array(cljs.core.first(xs_14901));
      var G__14902 = i_14900 + 1;
      var G__14903 = cljs.core.next(xs_14901);
      i_14900 = G__14902;
      xs_14901 = G__14903;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var G__14905 = arguments.length;
  switch(G__14905) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14907 = i + 1;
        var G__14908 = cljs.core.next(s__$1);
        i = G__14907;
        s__$1 = G__14908;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___14909 = size;
    var i_14910 = 0;
    while (true) {
      if (i_14910 < n__5193__auto___14909) {
        a[i_14910] = init_val_or_seq;
        var G__14911 = i_14910 + 1;
        i_14910 = G__14911;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var G__14913 = arguments.length;
  switch(G__14913) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14915 = i + 1;
        var G__14916 = cljs.core.next(s__$1);
        i = G__14915;
        s__$1 = G__14916;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___14917 = size;
    var i_14918 = 0;
    while (true) {
      if (i_14918 < n__5193__auto___14917) {
        a[i_14918] = init_val_or_seq;
        var G__14919 = i_14918 + 1;
        i_14918 = G__14919;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var G__14921 = arguments.length;
  switch(G__14921) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14923 = i + 1;
        var G__14924 = cljs.core.next(s__$1);
        i = G__14923;
        s__$1 = G__14924;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___14925 = size;
    var i_14926 = 0;
    while (true) {
      if (i_14926 < n__5193__auto___14925) {
        a[i_14926] = init_val_or_seq;
        var G__14927 = i_14926 + 1;
        i_14926 = G__14927;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var G__14929 = arguments.length;
  switch(G__14929) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__14931 = i + 1;
        var G__14932 = cljs.core.next(s__$1);
        i = G__14931;
        s__$1 = G__14932;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5193__auto___14933 = size;
    var i_14934 = 0;
    while (true) {
      if (i_14934 < n__5193__auto___14933) {
        a[i_14934] = init_val_or_seq;
        var G__14935 = i_14934 + 1;
        i_14934 = G__14935;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__14936 = cljs.core.next(s__$1);
        var G__14937 = i - 1;
        var G__14938 = sum + 1;
        s__$1 = G__14936;
        i = G__14937;
        sum = G__14938;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var G__14944 = arguments.length;
  switch(G__14944) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq14940) {
  var G__14941 = cljs.core.first(seq14940);
  var seq14940__$1 = cljs.core.next(seq14940);
  var G__14942 = cljs.core.first(seq14940__$1);
  var seq14940__$2 = cljs.core.next(seq14940__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__14941, G__14942, seq14940__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var G__14958 = arguments.length;
  switch(G__14958) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq14952) {
  var G__14953 = cljs.core.first(seq14952);
  var seq14952__$1 = cljs.core.next(seq14952);
  var G__14954 = cljs.core.first(seq14952__$1);
  var seq14952__$2 = cljs.core.next(seq14952__$1);
  var G__14955 = cljs.core.first(seq14952__$2);
  var seq14952__$3 = cljs.core.next(seq14952__$2);
  var G__14956 = cljs.core.first(seq14952__$3);
  var seq14952__$4 = cljs.core.next(seq14952__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__14953, G__14954, G__14955, G__14956, seq14952__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var G__14964 = arguments.length;
  switch(G__14964) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14966 = ntcoll;
      var G__14967 = cljs.core.first(vals);
      var G__14968 = cljs.core.next(vals);
      tcoll = G__14966;
      val = G__14967;
      vals = G__14968;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq14960) {
  var G__14961 = cljs.core.first(seq14960);
  var seq14960__$1 = cljs.core.next(seq14960);
  var G__14962 = cljs.core.first(seq14960__$1);
  var seq14960__$2 = cljs.core.next(seq14960__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14961, G__14962, seq14960__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var G__14974 = arguments.length;
  switch(G__14974) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__14976 = ntcoll;
      var G__14977 = cljs.core.first(kvs);
      var G__14978 = cljs.core.second(kvs);
      var G__14979 = cljs.core.nnext(kvs);
      tcoll = G__14976;
      key = G__14977;
      val = G__14978;
      kvs = G__14979;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq14969) {
  var G__14970 = cljs.core.first(seq14969);
  var seq14969__$1 = cljs.core.next(seq14969);
  var G__14971 = cljs.core.first(seq14969__$1);
  var seq14969__$2 = cljs.core.next(seq14969__$1);
  var G__14972 = cljs.core.first(seq14969__$2);
  var seq14969__$3 = cljs.core.next(seq14969__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14970, G__14971, G__14972, seq14969__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var G__14984 = arguments.length;
  switch(G__14984) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__14986 = ntcoll;
      var G__14987 = cljs.core.first(ks);
      var G__14988 = cljs.core.next(ks);
      tcoll = G__14986;
      key = G__14987;
      ks = G__14988;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq14980) {
  var G__14981 = cljs.core.first(seq14980);
  var seq14980__$1 = cljs.core.next(seq14980);
  var G__14982 = cljs.core.first(seq14980__$1);
  var seq14980__$2 = cljs.core.next(seq14980__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14981, G__14982, seq14980__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var G__14993 = arguments.length;
  switch(G__14993) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__14995 = ntcoll;
      var G__14996 = cljs.core.first(vals);
      var G__14997 = cljs.core.next(vals);
      tcoll = G__14995;
      val = G__14996;
      vals = G__14997;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq14989) {
  var G__14990 = cljs.core.first(seq14989);
  var seq14989__$1 = cljs.core.next(seq14989);
  var G__14991 = cljs.core.first(seq14989__$1);
  var seq14989__$2 = cljs.core.next(seq14989__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__14990, G__14991, seq14989__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5237 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5237);
      } else {
        var G__15208 = a5237;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15208) : f.call(null, G__15208);
      }
    } else {
      var b5238 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5237, b5238);
        } else {
          var G__15209 = a5237;
          var G__15210 = b5238;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15209, G__15210) : f.call(null, G__15209, G__15210);
        }
      } else {
        var c5239 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5237, b5238, c5239);
          } else {
            var G__15211 = a5237;
            var G__15212 = b5238;
            var G__15213 = c5239;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15211, G__15212, G__15213) : f.call(null, G__15211, G__15212, G__15213);
          }
        } else {
          var d5240 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5237, b5238, c5239, d5240);
            } else {
              var G__15214 = a5237;
              var G__15215 = b5238;
              var G__15216 = c5239;
              var G__15217 = d5240;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15214, G__15215, G__15216, G__15217) : f.call(null, G__15214, G__15215, G__15216, G__15217);
            }
          } else {
            var e5241 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5237, b5238, c5239, d5240, e5241);
              } else {
                var G__15218 = a5237;
                var G__15219 = b5238;
                var G__15220 = c5239;
                var G__15221 = d5240;
                var G__15222 = e5241;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15218, G__15219, G__15220, G__15221, G__15222) : f.call(null, G__15218, G__15219, G__15220, G__15221, G__15222);
              }
            } else {
              var f5242 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5237, b5238, c5239, d5240, e5241, f5242);
                } else {
                  var G__15223 = a5237;
                  var G__15224 = b5238;
                  var G__15225 = c5239;
                  var G__15226 = d5240;
                  var G__15227 = e5241;
                  var G__15228 = f5242;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15223, G__15224, G__15225, G__15226, G__15227, G__15228) : f.call(null, G__15223, G__15224, G__15225, G__15226, G__15227, G__15228);
                }
              } else {
                var g5243 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5237, b5238, c5239, d5240, e5241, f5242, g5243);
                  } else {
                    var G__15229 = a5237;
                    var G__15230 = b5238;
                    var G__15231 = c5239;
                    var G__15232 = d5240;
                    var G__15233 = e5241;
                    var G__15234 = f5242;
                    var G__15235 = g5243;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235) : f.call(null, G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235);
                  }
                } else {
                  var h5244 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244);
                    } else {
                      var G__15236 = a5237;
                      var G__15237 = b5238;
                      var G__15238 = c5239;
                      var G__15239 = d5240;
                      var G__15240 = e5241;
                      var G__15241 = f5242;
                      var G__15242 = g5243;
                      var G__15243 = h5244;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__15236, G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243) : f.call(null, G__15236, G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243);
                    }
                  } else {
                    var i5245 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245);
                      } else {
                        var G__15244 = a5237;
                        var G__15245 = b5238;
                        var G__15246 = c5239;
                        var G__15247 = d5240;
                        var G__15248 = e5241;
                        var G__15249 = f5242;
                        var G__15250 = g5243;
                        var G__15251 = h5244;
                        var G__15252 = i5245;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__15244, G__15245, G__15246, G__15247, G__15248, G__15249, G__15250, G__15251, G__15252) : f.call(null, G__15244, G__15245, G__15246, G__15247, G__15248, G__15249, G__15250, G__15251, G__15252);
                      }
                    } else {
                      var j5246 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246);
                        } else {
                          var G__15253 = a5237;
                          var G__15254 = b5238;
                          var G__15255 = c5239;
                          var G__15256 = d5240;
                          var G__15257 = e5241;
                          var G__15258 = f5242;
                          var G__15259 = g5243;
                          var G__15260 = h5244;
                          var G__15261 = i5245;
                          var G__15262 = j5246;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259, G__15260, G__15261, G__15262) : f.call(null, G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259, G__15260, G__15261, G__15262);
                        }
                      } else {
                        var k5247 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247);
                          } else {
                            var G__15263 = a5237;
                            var G__15264 = b5238;
                            var G__15265 = c5239;
                            var G__15266 = d5240;
                            var G__15267 = e5241;
                            var G__15268 = f5242;
                            var G__15269 = g5243;
                            var G__15270 = h5244;
                            var G__15271 = i5245;
                            var G__15272 = j5246;
                            var G__15273 = k5247;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271, G__15272, G__15273) : f.call(null, G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271, G__15272, G__15273);
                          }
                        } else {
                          var l5248 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248);
                            } else {
                              var G__15274 = a5237;
                              var G__15275 = b5238;
                              var G__15276 = c5239;
                              var G__15277 = d5240;
                              var G__15278 = e5241;
                              var G__15279 = f5242;
                              var G__15280 = g5243;
                              var G__15281 = h5244;
                              var G__15282 = i5245;
                              var G__15283 = j5246;
                              var G__15284 = k5247;
                              var G__15285 = l5248;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__15274, G__15275, G__15276, G__15277, G__15278, G__15279, G__15280, G__15281, G__15282, G__15283, G__15284, G__15285) : f.call(null, G__15274, G__15275, G__15276, G__15277, G__15278, G__15279, G__15280, G__15281, G__15282, G__15283, G__15284, G__15285);
                            }
                          } else {
                            var m5249 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249);
                              } else {
                                var G__15286 = a5237;
                                var G__15287 = b5238;
                                var G__15288 = c5239;
                                var G__15289 = d5240;
                                var G__15290 = e5241;
                                var G__15291 = f5242;
                                var G__15292 = g5243;
                                var G__15293 = h5244;
                                var G__15294 = i5245;
                                var G__15295 = j5246;
                                var G__15296 = k5247;
                                var G__15297 = l5248;
                                var G__15298 = m5249;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, G__15297, G__15298) : f.call(null, G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, G__15297, G__15298);
                              }
                            } else {
                              var n5250 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250);
                                } else {
                                  var G__15299 = a5237;
                                  var G__15300 = b5238;
                                  var G__15301 = c5239;
                                  var G__15302 = d5240;
                                  var G__15303 = e5241;
                                  var G__15304 = f5242;
                                  var G__15305 = g5243;
                                  var G__15306 = h5244;
                                  var G__15307 = i5245;
                                  var G__15308 = j5246;
                                  var G__15309 = k5247;
                                  var G__15310 = l5248;
                                  var G__15311 = m5249;
                                  var G__15312 = n5250;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311, G__15312) : f.call(null, G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311, G__15312);
                                }
                              } else {
                                var o5251 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251);
                                  } else {
                                    var G__15313 = a5237;
                                    var G__15314 = b5238;
                                    var G__15315 = c5239;
                                    var G__15316 = d5240;
                                    var G__15317 = e5241;
                                    var G__15318 = f5242;
                                    var G__15319 = g5243;
                                    var G__15320 = h5244;
                                    var G__15321 = i5245;
                                    var G__15322 = j5246;
                                    var G__15323 = k5247;
                                    var G__15324 = l5248;
                                    var G__15325 = m5249;
                                    var G__15326 = n5250;
                                    var G__15327 = o5251;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__15313, G__15314, G__15315, G__15316, G__15317, G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325, G__15326, G__15327) : f.call(null, G__15313, G__15314, G__15315, G__15316, G__15317, G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325, G__15326, G__15327);
                                  }
                                } else {
                                  var p5252 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252);
                                    } else {
                                      var G__15328 = a5237;
                                      var G__15329 = b5238;
                                      var G__15330 = c5239;
                                      var G__15331 = d5240;
                                      var G__15332 = e5241;
                                      var G__15333 = f5242;
                                      var G__15334 = g5243;
                                      var G__15335 = h5244;
                                      var G__15336 = i5245;
                                      var G__15337 = j5246;
                                      var G__15338 = k5247;
                                      var G__15339 = l5248;
                                      var G__15340 = m5249;
                                      var G__15341 = n5250;
                                      var G__15342 = o5251;
                                      var G__15343 = p5252;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, G__15334, G__15335, G__15336, G__15337, G__15338, G__15339, G__15340, G__15341, G__15342, G__15343) : f.call(null, G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, G__15334, G__15335, G__15336, G__15337, G__15338, G__15339, G__15340, G__15341, G__15342, G__15343);
                                    }
                                  } else {
                                    var q5253 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253);
                                      } else {
                                        var G__15344 = a5237;
                                        var G__15345 = b5238;
                                        var G__15346 = c5239;
                                        var G__15347 = d5240;
                                        var G__15348 = e5241;
                                        var G__15349 = f5242;
                                        var G__15350 = g5243;
                                        var G__15351 = h5244;
                                        var G__15352 = i5245;
                                        var G__15353 = j5246;
                                        var G__15354 = k5247;
                                        var G__15355 = l5248;
                                        var G__15356 = m5249;
                                        var G__15357 = n5250;
                                        var G__15358 = o5251;
                                        var G__15359 = p5252;
                                        var G__15360 = q5253;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355, G__15356, G__15357, G__15358, G__15359, G__15360) : f.call(null, G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355, G__15356, G__15357, G__15358, G__15359, G__15360);
                                      }
                                    } else {
                                      var r5254 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254);
                                        } else {
                                          var G__15361 = a5237;
                                          var G__15362 = b5238;
                                          var G__15363 = c5239;
                                          var G__15364 = d5240;
                                          var G__15365 = e5241;
                                          var G__15366 = f5242;
                                          var G__15367 = g5243;
                                          var G__15368 = h5244;
                                          var G__15369 = i5245;
                                          var G__15370 = j5246;
                                          var G__15371 = k5247;
                                          var G__15372 = l5248;
                                          var G__15373 = m5249;
                                          var G__15374 = n5250;
                                          var G__15375 = o5251;
                                          var G__15376 = p5252;
                                          var G__15377 = q5253;
                                          var G__15378 = r5254;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__15361, G__15362, G__15363, G__15364, G__15365, G__15366, G__15367, G__15368, G__15369, G__15370, G__15371, G__15372, G__15373, G__15374, G__15375, G__15376, G__15377, G__15378) : f.call(null, G__15361, G__15362, G__15363, G__15364, G__15365, G__15366, G__15367, G__15368, G__15369, G__15370, G__15371, G__15372, G__15373, G__15374, G__15375, G__15376, G__15377, G__15378);
                                        }
                                      } else {
                                        var s5255 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255);
                                          } else {
                                            var G__15379 = a5237;
                                            var G__15380 = b5238;
                                            var G__15381 = c5239;
                                            var G__15382 = d5240;
                                            var G__15383 = e5241;
                                            var G__15384 = f5242;
                                            var G__15385 = g5243;
                                            var G__15386 = h5244;
                                            var G__15387 = i5245;
                                            var G__15388 = j5246;
                                            var G__15389 = k5247;
                                            var G__15390 = l5248;
                                            var G__15391 = m5249;
                                            var G__15392 = n5250;
                                            var G__15393 = o5251;
                                            var G__15394 = p5252;
                                            var G__15395 = q5253;
                                            var G__15396 = r5254;
                                            var G__15397 = s5255;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__15379, G__15380, G__15381, G__15382, G__15383, G__15384, G__15385, G__15386, G__15387, G__15388, G__15389, G__15390, G__15391, G__15392, G__15393, G__15394, G__15395, G__15396, G__15397) : f.call(null, G__15379, G__15380, G__15381, G__15382, G__15383, G__15384, G__15385, G__15386, G__15387, G__15388, G__15389, G__15390, G__15391, G__15392, G__15393, G__15394, G__15395, G__15396, 
                                            G__15397);
                                          }
                                        } else {
                                          var t5256 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5237, b5238, c5239, d5240, e5241, f5242, g5243, h5244, i5245, j5246, k5247, l5248, m5249, n5250, o5251, p5252, q5253, r5254, s5255, t5256);
                                            } else {
                                              var G__15398 = a5237;
                                              var G__15399 = b5238;
                                              var G__15400 = c5239;
                                              var G__15401 = d5240;
                                              var G__15402 = e5241;
                                              var G__15403 = f5242;
                                              var G__15404 = g5243;
                                              var G__15405 = h5244;
                                              var G__15406 = i5245;
                                              var G__15407 = j5246;
                                              var G__15408 = k5247;
                                              var G__15409 = l5248;
                                              var G__15410 = m5249;
                                              var G__15411 = n5250;
                                              var G__15412 = o5251;
                                              var G__15413 = p5252;
                                              var G__15414 = q5253;
                                              var G__15415 = r5254;
                                              var G__15416 = s5255;
                                              var G__15417 = t5256;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__15398, G__15399, G__15400, G__15401, G__15402, G__15403, G__15404, G__15405, G__15406, G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413, G__15414, G__15415, G__15416, G__15417) : f.call(null, G__15398, G__15399, G__15400, G__15401, G__15402, G__15403, G__15404, G__15405, G__15406, G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413, G__15414, 
                                              G__15415, G__15416, G__15417);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var G__15425 = arguments.length;
  switch(G__15425) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5359__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq15418) {
  var G__15419 = cljs.core.first(seq15418);
  var seq15418__$1 = cljs.core.next(seq15418);
  var G__15420 = cljs.core.first(seq15418__$1);
  var seq15418__$2 = cljs.core.next(seq15418__$1);
  var G__15421 = cljs.core.first(seq15418__$2);
  var seq15418__$3 = cljs.core.next(seq15418__$2);
  var G__15422 = cljs.core.first(seq15418__$3);
  var seq15418__$4 = cljs.core.next(seq15418__$3);
  var G__15423 = cljs.core.first(seq15418__$4);
  var seq15418__$5 = cljs.core.next(seq15418__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__15419, G__15420, G__15421, G__15422, G__15423, seq15418__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var G__15435 = arguments.length;
  switch(G__15435) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__15436 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15436) : f.call(null, G__15436);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__15437 = cljs.core.meta(obj);
    var G__15438 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15437, G__15438) : f.call(null, G__15437, G__15438);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__15439 = cljs.core.meta(obj);
    var G__15440 = a;
    var G__15441 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15439, G__15440, G__15441) : f.call(null, G__15439, G__15440, G__15441);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__15442 = cljs.core.meta(obj);
    var G__15443 = a;
    var G__15444 = b;
    var G__15445 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15442, G__15443, G__15444, G__15445) : f.call(null, G__15442, G__15443, G__15444, G__15445);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__15446 = cljs.core.meta(obj);
    var G__15447 = a;
    var G__15448 = b;
    var G__15449 = c;
    var G__15450 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15446, G__15447, G__15448, G__15449, G__15450) : f.call(null, G__15446, G__15447, G__15448, G__15449, G__15450);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq15427) {
  var G__15428 = cljs.core.first(seq15427);
  var seq15427__$1 = cljs.core.next(seq15427);
  var G__15429 = cljs.core.first(seq15427__$1);
  var seq15427__$2 = cljs.core.next(seq15427__$1);
  var G__15430 = cljs.core.first(seq15427__$2);
  var seq15427__$3 = cljs.core.next(seq15427__$2);
  var G__15431 = cljs.core.first(seq15427__$3);
  var seq15427__$4 = cljs.core.next(seq15427__$3);
  var G__15432 = cljs.core.first(seq15427__$4);
  var seq15427__$5 = cljs.core.next(seq15427__$4);
  var G__15433 = cljs.core.first(seq15427__$5);
  var seq15427__$6 = cljs.core.next(seq15427__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__15428, G__15429, G__15430, G__15431, G__15432, G__15433, seq15427__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var G__15456 = arguments.length;
  switch(G__15456) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq15452) {
  var G__15453 = cljs.core.first(seq15452);
  var seq15452__$1 = cljs.core.next(seq15452);
  var G__15454 = cljs.core.first(seq15452__$1);
  var seq15452__$2 = cljs.core.next(seq15452__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__15453, G__15454, seq15452__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t15461 !== "undefined") {
  } else {
    cljs.core.t15461 = function(nil_iter, meta15462) {
      this.nil_iter = nil_iter;
      this.meta15462 = meta15462;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t15461.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15463, meta15462__$1) {
      var self__ = this;
      var _15463__$1 = this;
      return new cljs.core.t15461(self__.nil_iter, meta15462__$1);
    };
    cljs.core.t15461.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15463) {
      var self__ = this;
      var _15463__$1 = this;
      return self__.meta15462;
    };
    cljs.core.t15461.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t15461.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t15461.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t15461.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.Symbol(null, "meta15462", "meta15462", 823026694, null)], null);
    };
    cljs.core.t15461.cljs$lang$type = true;
    cljs.core.t15461.cljs$lang$ctorStr = "cljs.core/t15461";
    cljs.core.t15461.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write(writer__4888__auto__, "cljs.core/t15461");
    };
    cljs.core.__GT_t15461 = function cljs$core$nil_iter_$___GT_t15461(nil_iter__$1, meta15462) {
      return new cljs.core.t15461(nil_iter__$1, meta15462);
    };
  }
  return new cljs.core.t15461(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.Symbol(null, "_next", "_next", 101877036, null)], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__15464 = lt;
        var G__15465 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__15464, G__15465) : self__.xform.call(null, G__15464, G__15465);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__15466 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15466) : self__.xform.call(null, G__15466);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__15468 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15468) : xform.call(null, G__15468);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__15470 = cljs.core.next(iters__$1);
        iters__$1 = G__15470;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5193__auto___15471 = self__.iters.length;
  var i_15472 = 0;
  while (true) {
    if (i_15472 < n__5193__auto___15471) {
      self__.nexts[i_15472] = self__.iters[i_15472].next();
      var G__15473 = i_15472 + 1;
      i_15472 = G__15473;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = !(lt.stepper == null);
      if (and__4296__auto__) {
        return this$.hasNext();
      } else {
        return and__4296__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__15469 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__15469) : self__.xform.call(null, G__15469);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var G__15475 = arguments.length;
  switch(G__15475) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(function() {
    var G__15476 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__15476) : xform.call(null, G__15476);
  }(), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__15478_15482 = cljs.core.seq(colls);
  var chunk__15479_15483 = null;
  var count__15480_15484 = 0;
  var i__15481_15485 = 0;
  while (true) {
    if (i__15481_15485 < count__15480_15484) {
      var coll_15486 = chunk__15479_15483.cljs$core$IIndexed$_nth$arity$2(null, i__15481_15485);
      iters.push(cljs.core.iter(coll_15486));
      var G__15487 = seq__15478_15482;
      var G__15488 = chunk__15479_15483;
      var G__15489 = count__15480_15484;
      var G__15490 = i__15481_15485 + 1;
      seq__15478_15482 = G__15487;
      chunk__15479_15483 = G__15488;
      count__15480_15484 = G__15489;
      i__15481_15485 = G__15490;
      continue;
    } else {
      var temp__4425__auto___15491 = cljs.core.seq(seq__15478_15482);
      if (temp__4425__auto___15491) {
        var seq__15478_15492__$1 = temp__4425__auto___15491;
        if (cljs.core.chunked_seq_QMARK_(seq__15478_15492__$1)) {
          var c__5093__auto___15493 = cljs.core.chunk_first(seq__15478_15492__$1);
          var G__15494 = cljs.core.chunk_rest(seq__15478_15492__$1);
          var G__15495 = c__5093__auto___15493;
          var G__15496 = cljs.core.count(c__5093__auto___15493);
          var G__15497 = 0;
          seq__15478_15482 = G__15494;
          chunk__15479_15483 = G__15495;
          count__15480_15484 = G__15496;
          i__15481_15485 = G__15497;
          continue;
        } else {
          var coll_15498 = cljs.core.first(seq__15478_15492__$1);
          iters.push(cljs.core.iter(coll_15498));
          var G__15499 = cljs.core.next(seq__15478_15492__$1);
          var G__15500 = null;
          var G__15501 = 0;
          var G__15502 = 0;
          seq__15478_15482 = G__15499;
          chunk__15479_15483 = G__15500;
          count__15480_15484 = G__15501;
          i__15481_15485 = G__15502;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var G__15507 = arguments.length;
  switch(G__15507) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4308__auto__ = cljs.core.seq(coll);
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq15503) {
  var G__15504 = cljs.core.first(seq15503);
  var seq15503__$1 = cljs.core.next(seq15503);
  var G__15505 = cljs.core.first(seq15503__$1);
  var seq15503__$2 = cljs.core.next(seq15503__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__15504, G__15505, seq15503__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__15510 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15510) : pred.call(null, G__15510);
      }())) {
        var G__15511 = pred;
        var G__15512 = cljs.core.next(coll);
        pred = G__15511;
        coll = G__15512;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4308__auto__ = function() {
        var G__15516 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15516) : pred.call(null, G__15516);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__15517 = pred;
        var G__15518 = cljs.core.next(coll);
        pred = G__15517;
        coll = G__15518;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__15525 = null;
    var G__15525__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__15525__1 = function(x) {
      return cljs.core.not(function() {
        var G__15522 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15522) : f.call(null, G__15522);
      }());
    };
    var G__15525__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__15523 = x;
        var G__15524 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15523, G__15524) : f.call(null, G__15523, G__15524);
      }());
    };
    var G__15525__3 = function() {
      var G__15526__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__15526 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__15527__i = 0, G__15527__a = new Array(arguments.length - 2);
          while (G__15527__i < G__15527__a.length) {
            G__15527__a[G__15527__i] = arguments[G__15527__i + 2];
            ++G__15527__i;
          }
          zs = new cljs.core.IndexedSeq(G__15527__a, 0);
        }
        return G__15526__delegate.call(this, x, y, zs);
      };
      G__15526.cljs$lang$maxFixedArity = 2;
      G__15526.cljs$lang$applyTo = function(arglist__15528) {
        var x = cljs.core.first(arglist__15528);
        arglist__15528 = cljs.core.next(arglist__15528);
        var y = cljs.core.first(arglist__15528);
        var zs = cljs.core.rest(arglist__15528);
        return G__15526__delegate(x, y, zs);
      };
      G__15526.cljs$core$IFn$_invoke$arity$variadic = G__15526__delegate;
      return G__15526;
    }();
    G__15525 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__15525__0.call(this);
        case 1:
          return G__15525__1.call(this, x);
        case 2:
          return G__15525__2.call(this, x, y);
        default:
          var G__15529 = null;
          if (arguments.length > 2) {
            var G__15530__i = 0, G__15530__a = new Array(arguments.length - 2);
            while (G__15530__i < G__15530__a.length) {
              G__15530__a[G__15530__i] = arguments[G__15530__i + 2];
              ++G__15530__i;
            }
            G__15529 = new cljs.core.IndexedSeq(G__15530__a, 0);
          }
          return G__15525__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__15529);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15525.cljs$lang$maxFixedArity = 2;
    G__15525.cljs$lang$applyTo = G__15525__3.cljs$lang$applyTo;
    G__15525.cljs$core$IFn$_invoke$arity$0 = G__15525__0;
    G__15525.cljs$core$IFn$_invoke$arity$1 = G__15525__1;
    G__15525.cljs$core$IFn$_invoke$arity$2 = G__15525__2;
    G__15525.cljs$core$IFn$_invoke$arity$variadic = G__15525__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__15525;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__15531__delegate = function(args) {
      return x;
    };
    var G__15531 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15532__i = 0, G__15532__a = new Array(arguments.length - 0);
        while (G__15532__i < G__15532__a.length) {
          G__15532__a[G__15532__i] = arguments[G__15532__i + 0];
          ++G__15532__i;
        }
        args = new cljs.core.IndexedSeq(G__15532__a, 0);
      }
      return G__15531__delegate.call(this, args);
    };
    G__15531.cljs$lang$maxFixedArity = 0;
    G__15531.cljs$lang$applyTo = function(arglist__15533) {
      var args = cljs.core.seq(arglist__15533);
      return G__15531__delegate(args);
    };
    G__15531.cljs$core$IFn$_invoke$arity$variadic = G__15531__delegate;
    return G__15531;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var G__15539 = arguments.length;
  switch(G__15539) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__15568 = null;
    var G__15568__0 = function() {
      var G__15540 = function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15540) : f.call(null, G__15540);
    };
    var G__15568__1 = function(x) {
      var G__15541 = function() {
        var G__15542 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15542) : g.call(null, G__15542);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15541) : f.call(null, G__15541);
    };
    var G__15568__2 = function(x, y) {
      var G__15543 = function() {
        var G__15544 = x;
        var G__15545 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__15544, G__15545) : g.call(null, G__15544, G__15545);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15543) : f.call(null, G__15543);
    };
    var G__15568__3 = function(x, y, z) {
      var G__15546 = function() {
        var G__15547 = x;
        var G__15548 = y;
        var G__15549 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__15547, G__15548, G__15549) : g.call(null, G__15547, G__15548, G__15549);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15546) : f.call(null, G__15546);
    };
    var G__15568__4 = function() {
      var G__15569__delegate = function(x, y, z, args) {
        var G__15550 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15550) : f.call(null, G__15550);
      };
      var G__15569 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15570__i = 0, G__15570__a = new Array(arguments.length - 3);
          while (G__15570__i < G__15570__a.length) {
            G__15570__a[G__15570__i] = arguments[G__15570__i + 3];
            ++G__15570__i;
          }
          args = new cljs.core.IndexedSeq(G__15570__a, 0);
        }
        return G__15569__delegate.call(this, x, y, z, args);
      };
      G__15569.cljs$lang$maxFixedArity = 3;
      G__15569.cljs$lang$applyTo = function(arglist__15571) {
        var x = cljs.core.first(arglist__15571);
        arglist__15571 = cljs.core.next(arglist__15571);
        var y = cljs.core.first(arglist__15571);
        arglist__15571 = cljs.core.next(arglist__15571);
        var z = cljs.core.first(arglist__15571);
        var args = cljs.core.rest(arglist__15571);
        return G__15569__delegate(x, y, z, args);
      };
      G__15569.cljs$core$IFn$_invoke$arity$variadic = G__15569__delegate;
      return G__15569;
    }();
    G__15568 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15568__0.call(this);
        case 1:
          return G__15568__1.call(this, x);
        case 2:
          return G__15568__2.call(this, x, y);
        case 3:
          return G__15568__3.call(this, x, y, z);
        default:
          var G__15572 = null;
          if (arguments.length > 3) {
            var G__15573__i = 0, G__15573__a = new Array(arguments.length - 3);
            while (G__15573__i < G__15573__a.length) {
              G__15573__a[G__15573__i] = arguments[G__15573__i + 3];
              ++G__15573__i;
            }
            G__15572 = new cljs.core.IndexedSeq(G__15573__a, 0);
          }
          return G__15568__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15572);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15568.cljs$lang$maxFixedArity = 3;
    G__15568.cljs$lang$applyTo = G__15568__4.cljs$lang$applyTo;
    G__15568.cljs$core$IFn$_invoke$arity$0 = G__15568__0;
    G__15568.cljs$core$IFn$_invoke$arity$1 = G__15568__1;
    G__15568.cljs$core$IFn$_invoke$arity$2 = G__15568__2;
    G__15568.cljs$core$IFn$_invoke$arity$3 = G__15568__3;
    G__15568.cljs$core$IFn$_invoke$arity$variadic = G__15568__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15568;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__15574 = null;
    var G__15574__0 = function() {
      var G__15551 = function() {
        var G__15552 = function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15552) : g.call(null, G__15552);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15551) : f.call(null, G__15551);
    };
    var G__15574__1 = function(x) {
      var G__15553 = function() {
        var G__15554 = function() {
          var G__15555 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__15555) : h.call(null, G__15555);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15554) : g.call(null, G__15554);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15553) : f.call(null, G__15553);
    };
    var G__15574__2 = function(x, y) {
      var G__15556 = function() {
        var G__15557 = function() {
          var G__15558 = x;
          var G__15559 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__15558, G__15559) : h.call(null, G__15558, G__15559);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15557) : g.call(null, G__15557);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15556) : f.call(null, G__15556);
    };
    var G__15574__3 = function(x, y, z) {
      var G__15560 = function() {
        var G__15561 = function() {
          var G__15562 = x;
          var G__15563 = y;
          var G__15564 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__15562, G__15563, G__15564) : h.call(null, G__15562, G__15563, G__15564);
        }();
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15561) : g.call(null, G__15561);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15560) : f.call(null, G__15560);
    };
    var G__15574__4 = function() {
      var G__15575__delegate = function(x, y, z, args) {
        var G__15565 = function() {
          var G__15566 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15566) : g.call(null, G__15566);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15565) : f.call(null, G__15565);
      };
      var G__15575 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15576__i = 0, G__15576__a = new Array(arguments.length - 3);
          while (G__15576__i < G__15576__a.length) {
            G__15576__a[G__15576__i] = arguments[G__15576__i + 3];
            ++G__15576__i;
          }
          args = new cljs.core.IndexedSeq(G__15576__a, 0);
        }
        return G__15575__delegate.call(this, x, y, z, args);
      };
      G__15575.cljs$lang$maxFixedArity = 3;
      G__15575.cljs$lang$applyTo = function(arglist__15577) {
        var x = cljs.core.first(arglist__15577);
        arglist__15577 = cljs.core.next(arglist__15577);
        var y = cljs.core.first(arglist__15577);
        arglist__15577 = cljs.core.next(arglist__15577);
        var z = cljs.core.first(arglist__15577);
        var args = cljs.core.rest(arglist__15577);
        return G__15575__delegate(x, y, z, args);
      };
      G__15575.cljs$core$IFn$_invoke$arity$variadic = G__15575__delegate;
      return G__15575;
    }();
    G__15574 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15574__0.call(this);
        case 1:
          return G__15574__1.call(this, x);
        case 2:
          return G__15574__2.call(this, x, y);
        case 3:
          return G__15574__3.call(this, x, y, z);
        default:
          var G__15578 = null;
          if (arguments.length > 3) {
            var G__15579__i = 0, G__15579__a = new Array(arguments.length - 3);
            while (G__15579__i < G__15579__a.length) {
              G__15579__a[G__15579__i] = arguments[G__15579__i + 3];
              ++G__15579__i;
            }
            G__15578 = new cljs.core.IndexedSeq(G__15579__a, 0);
          }
          return G__15574__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15578);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15574.cljs$lang$maxFixedArity = 3;
    G__15574.cljs$lang$applyTo = G__15574__4.cljs$lang$applyTo;
    G__15574.cljs$core$IFn$_invoke$arity$0 = G__15574__0;
    G__15574.cljs$core$IFn$_invoke$arity$1 = G__15574__1;
    G__15574.cljs$core$IFn$_invoke$arity$2 = G__15574__2;
    G__15574.cljs$core$IFn$_invoke$arity$3 = G__15574__3;
    G__15574.cljs$core$IFn$_invoke$arity$variadic = G__15574__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15574;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__15580__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__15581 = cljs.core.first(fs__$2).call(null, ret);
            var G__15582 = cljs.core.next(fs__$2);
            ret = G__15581;
            fs__$2 = G__15582;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__15580 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__15583__i = 0, G__15583__a = new Array(arguments.length - 0);
          while (G__15583__i < G__15583__a.length) {
            G__15583__a[G__15583__i] = arguments[G__15583__i + 0];
            ++G__15583__i;
          }
          args = new cljs.core.IndexedSeq(G__15583__a, 0);
        }
        return G__15580__delegate.call(this, args);
      };
      G__15580.cljs$lang$maxFixedArity = 0;
      G__15580.cljs$lang$applyTo = function(arglist__15584) {
        var args = cljs.core.seq(arglist__15584);
        return G__15580__delegate(args);
      };
      G__15580.cljs$core$IFn$_invoke$arity$variadic = G__15580__delegate;
      return G__15580;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq15534) {
  var G__15535 = cljs.core.first(seq15534);
  var seq15534__$1 = cljs.core.next(seq15534);
  var G__15536 = cljs.core.first(seq15534__$1);
  var seq15534__$2 = cljs.core.next(seq15534__$1);
  var G__15537 = cljs.core.first(seq15534__$2);
  var seq15534__$3 = cljs.core.next(seq15534__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__15535, G__15536, G__15537, seq15534__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var G__15591 = arguments.length;
  switch(G__15591) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__15635 = null;
    var G__15635__0 = function() {
      var G__15592 = arg1;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15592) : f.call(null, G__15592);
    };
    var G__15635__1 = function(x) {
      var G__15593 = arg1;
      var G__15594 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15593, G__15594) : f.call(null, G__15593, G__15594);
    };
    var G__15635__2 = function(x, y) {
      var G__15595 = arg1;
      var G__15596 = x;
      var G__15597 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15595, G__15596, G__15597) : f.call(null, G__15595, G__15596, G__15597);
    };
    var G__15635__3 = function(x, y, z) {
      var G__15598 = arg1;
      var G__15599 = x;
      var G__15600 = y;
      var G__15601 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15598, G__15599, G__15600, G__15601) : f.call(null, G__15598, G__15599, G__15600, G__15601);
    };
    var G__15635__4 = function() {
      var G__15636__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__15636 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15637__i = 0, G__15637__a = new Array(arguments.length - 3);
          while (G__15637__i < G__15637__a.length) {
            G__15637__a[G__15637__i] = arguments[G__15637__i + 3];
            ++G__15637__i;
          }
          args = new cljs.core.IndexedSeq(G__15637__a, 0);
        }
        return G__15636__delegate.call(this, x, y, z, args);
      };
      G__15636.cljs$lang$maxFixedArity = 3;
      G__15636.cljs$lang$applyTo = function(arglist__15638) {
        var x = cljs.core.first(arglist__15638);
        arglist__15638 = cljs.core.next(arglist__15638);
        var y = cljs.core.first(arglist__15638);
        arglist__15638 = cljs.core.next(arglist__15638);
        var z = cljs.core.first(arglist__15638);
        var args = cljs.core.rest(arglist__15638);
        return G__15636__delegate(x, y, z, args);
      };
      G__15636.cljs$core$IFn$_invoke$arity$variadic = G__15636__delegate;
      return G__15636;
    }();
    G__15635 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15635__0.call(this);
        case 1:
          return G__15635__1.call(this, x);
        case 2:
          return G__15635__2.call(this, x, y);
        case 3:
          return G__15635__3.call(this, x, y, z);
        default:
          var G__15639 = null;
          if (arguments.length > 3) {
            var G__15640__i = 0, G__15640__a = new Array(arguments.length - 3);
            while (G__15640__i < G__15640__a.length) {
              G__15640__a[G__15640__i] = arguments[G__15640__i + 3];
              ++G__15640__i;
            }
            G__15639 = new cljs.core.IndexedSeq(G__15640__a, 0);
          }
          return G__15635__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15639);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15635.cljs$lang$maxFixedArity = 3;
    G__15635.cljs$lang$applyTo = G__15635__4.cljs$lang$applyTo;
    G__15635.cljs$core$IFn$_invoke$arity$0 = G__15635__0;
    G__15635.cljs$core$IFn$_invoke$arity$1 = G__15635__1;
    G__15635.cljs$core$IFn$_invoke$arity$2 = G__15635__2;
    G__15635.cljs$core$IFn$_invoke$arity$3 = G__15635__3;
    G__15635.cljs$core$IFn$_invoke$arity$variadic = G__15635__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15635;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__15641 = null;
    var G__15641__0 = function() {
      var G__15602 = arg1;
      var G__15603 = arg2;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15602, G__15603) : f.call(null, G__15602, G__15603);
    };
    var G__15641__1 = function(x) {
      var G__15604 = arg1;
      var G__15605 = arg2;
      var G__15606 = x;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15604, G__15605, G__15606) : f.call(null, G__15604, G__15605, G__15606);
    };
    var G__15641__2 = function(x, y) {
      var G__15607 = arg1;
      var G__15608 = arg2;
      var G__15609 = x;
      var G__15610 = y;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15607, G__15608, G__15609, G__15610) : f.call(null, G__15607, G__15608, G__15609, G__15610);
    };
    var G__15641__3 = function(x, y, z) {
      var G__15611 = arg1;
      var G__15612 = arg2;
      var G__15613 = x;
      var G__15614 = y;
      var G__15615 = z;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15611, G__15612, G__15613, G__15614, G__15615) : f.call(null, G__15611, G__15612, G__15613, G__15614, G__15615);
    };
    var G__15641__4 = function() {
      var G__15642__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__15642 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15643__i = 0, G__15643__a = new Array(arguments.length - 3);
          while (G__15643__i < G__15643__a.length) {
            G__15643__a[G__15643__i] = arguments[G__15643__i + 3];
            ++G__15643__i;
          }
          args = new cljs.core.IndexedSeq(G__15643__a, 0);
        }
        return G__15642__delegate.call(this, x, y, z, args);
      };
      G__15642.cljs$lang$maxFixedArity = 3;
      G__15642.cljs$lang$applyTo = function(arglist__15644) {
        var x = cljs.core.first(arglist__15644);
        arglist__15644 = cljs.core.next(arglist__15644);
        var y = cljs.core.first(arglist__15644);
        arglist__15644 = cljs.core.next(arglist__15644);
        var z = cljs.core.first(arglist__15644);
        var args = cljs.core.rest(arglist__15644);
        return G__15642__delegate(x, y, z, args);
      };
      G__15642.cljs$core$IFn$_invoke$arity$variadic = G__15642__delegate;
      return G__15642;
    }();
    G__15641 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15641__0.call(this);
        case 1:
          return G__15641__1.call(this, x);
        case 2:
          return G__15641__2.call(this, x, y);
        case 3:
          return G__15641__3.call(this, x, y, z);
        default:
          var G__15645 = null;
          if (arguments.length > 3) {
            var G__15646__i = 0, G__15646__a = new Array(arguments.length - 3);
            while (G__15646__i < G__15646__a.length) {
              G__15646__a[G__15646__i] = arguments[G__15646__i + 3];
              ++G__15646__i;
            }
            G__15645 = new cljs.core.IndexedSeq(G__15646__a, 0);
          }
          return G__15641__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15645);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15641.cljs$lang$maxFixedArity = 3;
    G__15641.cljs$lang$applyTo = G__15641__4.cljs$lang$applyTo;
    G__15641.cljs$core$IFn$_invoke$arity$0 = G__15641__0;
    G__15641.cljs$core$IFn$_invoke$arity$1 = G__15641__1;
    G__15641.cljs$core$IFn$_invoke$arity$2 = G__15641__2;
    G__15641.cljs$core$IFn$_invoke$arity$3 = G__15641__3;
    G__15641.cljs$core$IFn$_invoke$arity$variadic = G__15641__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15641;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__15647 = null;
    var G__15647__0 = function() {
      var G__15616 = arg1;
      var G__15617 = arg2;
      var G__15618 = arg3;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15616, G__15617, G__15618) : f.call(null, G__15616, G__15617, G__15618);
    };
    var G__15647__1 = function(x) {
      var G__15619 = arg1;
      var G__15620 = arg2;
      var G__15621 = arg3;
      var G__15622 = x;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15619, G__15620, G__15621, G__15622) : f.call(null, G__15619, G__15620, G__15621, G__15622);
    };
    var G__15647__2 = function(x, y) {
      var G__15623 = arg1;
      var G__15624 = arg2;
      var G__15625 = arg3;
      var G__15626 = x;
      var G__15627 = y;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__15623, G__15624, G__15625, G__15626, G__15627) : f.call(null, G__15623, G__15624, G__15625, G__15626, G__15627);
    };
    var G__15647__3 = function(x, y, z) {
      var G__15628 = arg1;
      var G__15629 = arg2;
      var G__15630 = arg3;
      var G__15631 = x;
      var G__15632 = y;
      var G__15633 = z;
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__15628, G__15629, G__15630, G__15631, G__15632, G__15633) : f.call(null, G__15628, G__15629, G__15630, G__15631, G__15632, G__15633);
    };
    var G__15647__4 = function() {
      var G__15648__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__15648 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__15649__i = 0, G__15649__a = new Array(arguments.length - 3);
          while (G__15649__i < G__15649__a.length) {
            G__15649__a[G__15649__i] = arguments[G__15649__i + 3];
            ++G__15649__i;
          }
          args = new cljs.core.IndexedSeq(G__15649__a, 0);
        }
        return G__15648__delegate.call(this, x, y, z, args);
      };
      G__15648.cljs$lang$maxFixedArity = 3;
      G__15648.cljs$lang$applyTo = function(arglist__15650) {
        var x = cljs.core.first(arglist__15650);
        arglist__15650 = cljs.core.next(arglist__15650);
        var y = cljs.core.first(arglist__15650);
        arglist__15650 = cljs.core.next(arglist__15650);
        var z = cljs.core.first(arglist__15650);
        var args = cljs.core.rest(arglist__15650);
        return G__15648__delegate(x, y, z, args);
      };
      G__15648.cljs$core$IFn$_invoke$arity$variadic = G__15648__delegate;
      return G__15648;
    }();
    G__15647 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__15647__0.call(this);
        case 1:
          return G__15647__1.call(this, x);
        case 2:
          return G__15647__2.call(this, x, y);
        case 3:
          return G__15647__3.call(this, x, y, z);
        default:
          var G__15651 = null;
          if (arguments.length > 3) {
            var G__15652__i = 0, G__15652__a = new Array(arguments.length - 3);
            while (G__15652__i < G__15652__a.length) {
              G__15652__a[G__15652__i] = arguments[G__15652__i + 3];
              ++G__15652__i;
            }
            G__15651 = new cljs.core.IndexedSeq(G__15652__a, 0);
          }
          return G__15647__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__15651);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15647.cljs$lang$maxFixedArity = 3;
    G__15647.cljs$lang$applyTo = G__15647__4.cljs$lang$applyTo;
    G__15647.cljs$core$IFn$_invoke$arity$0 = G__15647__0;
    G__15647.cljs$core$IFn$_invoke$arity$1 = G__15647__1;
    G__15647.cljs$core$IFn$_invoke$arity$2 = G__15647__2;
    G__15647.cljs$core$IFn$_invoke$arity$3 = G__15647__3;
    G__15647.cljs$core$IFn$_invoke$arity$variadic = G__15647__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15647;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__15653__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__15653 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15654__i = 0, G__15654__a = new Array(arguments.length - 0);
        while (G__15654__i < G__15654__a.length) {
          G__15654__a[G__15654__i] = arguments[G__15654__i + 0];
          ++G__15654__i;
        }
        args = new cljs.core.IndexedSeq(G__15654__a, 0);
      }
      return G__15653__delegate.call(this, args);
    };
    G__15653.cljs$lang$maxFixedArity = 0;
    G__15653.cljs$lang$applyTo = function(arglist__15655) {
      var args = cljs.core.seq(arglist__15655);
      return G__15653__delegate(args);
    };
    G__15653.cljs$core$IFn$_invoke$arity$variadic = G__15653__delegate;
    return G__15653;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq15585) {
  var G__15586 = cljs.core.first(seq15585);
  var seq15585__$1 = cljs.core.next(seq15585);
  var G__15587 = cljs.core.first(seq15585__$1);
  var seq15585__$2 = cljs.core.next(seq15585__$1);
  var G__15588 = cljs.core.first(seq15585__$2);
  var seq15585__$3 = cljs.core.next(seq15585__$2);
  var G__15589 = cljs.core.first(seq15585__$3);
  var seq15585__$4 = cljs.core.next(seq15585__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__15586, G__15587, G__15588, G__15589, seq15585__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var G__15657 = arguments.length;
  switch(G__15657) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__15675 = null;
    var G__15675__1 = function(a) {
      var G__15658 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15658) : f.call(null, G__15658);
    };
    var G__15675__2 = function(a, b) {
      var G__15659 = a == null ? x : a;
      var G__15660 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15659, G__15660) : f.call(null, G__15659, G__15660);
    };
    var G__15675__3 = function(a, b, c) {
      var G__15661 = a == null ? x : a;
      var G__15662 = b;
      var G__15663 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15661, G__15662, G__15663) : f.call(null, G__15661, G__15662, G__15663);
    };
    var G__15675__4 = function() {
      var G__15676__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__15676 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15677__i = 0, G__15677__a = new Array(arguments.length - 3);
          while (G__15677__i < G__15677__a.length) {
            G__15677__a[G__15677__i] = arguments[G__15677__i + 3];
            ++G__15677__i;
          }
          ds = new cljs.core.IndexedSeq(G__15677__a, 0);
        }
        return G__15676__delegate.call(this, a, b, c, ds);
      };
      G__15676.cljs$lang$maxFixedArity = 3;
      G__15676.cljs$lang$applyTo = function(arglist__15678) {
        var a = cljs.core.first(arglist__15678);
        arglist__15678 = cljs.core.next(arglist__15678);
        var b = cljs.core.first(arglist__15678);
        arglist__15678 = cljs.core.next(arglist__15678);
        var c = cljs.core.first(arglist__15678);
        var ds = cljs.core.rest(arglist__15678);
        return G__15676__delegate(a, b, c, ds);
      };
      G__15676.cljs$core$IFn$_invoke$arity$variadic = G__15676__delegate;
      return G__15676;
    }();
    G__15675 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__15675__1.call(this, a);
        case 2:
          return G__15675__2.call(this, a, b);
        case 3:
          return G__15675__3.call(this, a, b, c);
        default:
          var G__15679 = null;
          if (arguments.length > 3) {
            var G__15680__i = 0, G__15680__a = new Array(arguments.length - 3);
            while (G__15680__i < G__15680__a.length) {
              G__15680__a[G__15680__i] = arguments[G__15680__i + 3];
              ++G__15680__i;
            }
            G__15679 = new cljs.core.IndexedSeq(G__15680__a, 0);
          }
          return G__15675__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15679);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15675.cljs$lang$maxFixedArity = 3;
    G__15675.cljs$lang$applyTo = G__15675__4.cljs$lang$applyTo;
    G__15675.cljs$core$IFn$_invoke$arity$1 = G__15675__1;
    G__15675.cljs$core$IFn$_invoke$arity$2 = G__15675__2;
    G__15675.cljs$core$IFn$_invoke$arity$3 = G__15675__3;
    G__15675.cljs$core$IFn$_invoke$arity$variadic = G__15675__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15675;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__15681 = null;
    var G__15681__2 = function(a, b) {
      var G__15664 = a == null ? x : a;
      var G__15665 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15664, G__15665) : f.call(null, G__15664, G__15665);
    };
    var G__15681__3 = function(a, b, c) {
      var G__15666 = a == null ? x : a;
      var G__15667 = b == null ? y : b;
      var G__15668 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15666, G__15667, G__15668) : f.call(null, G__15666, G__15667, G__15668);
    };
    var G__15681__4 = function() {
      var G__15682__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__15682 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15683__i = 0, G__15683__a = new Array(arguments.length - 3);
          while (G__15683__i < G__15683__a.length) {
            G__15683__a[G__15683__i] = arguments[G__15683__i + 3];
            ++G__15683__i;
          }
          ds = new cljs.core.IndexedSeq(G__15683__a, 0);
        }
        return G__15682__delegate.call(this, a, b, c, ds);
      };
      G__15682.cljs$lang$maxFixedArity = 3;
      G__15682.cljs$lang$applyTo = function(arglist__15684) {
        var a = cljs.core.first(arglist__15684);
        arglist__15684 = cljs.core.next(arglist__15684);
        var b = cljs.core.first(arglist__15684);
        arglist__15684 = cljs.core.next(arglist__15684);
        var c = cljs.core.first(arglist__15684);
        var ds = cljs.core.rest(arglist__15684);
        return G__15682__delegate(a, b, c, ds);
      };
      G__15682.cljs$core$IFn$_invoke$arity$variadic = G__15682__delegate;
      return G__15682;
    }();
    G__15681 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__15681__2.call(this, a, b);
        case 3:
          return G__15681__3.call(this, a, b, c);
        default:
          var G__15685 = null;
          if (arguments.length > 3) {
            var G__15686__i = 0, G__15686__a = new Array(arguments.length - 3);
            while (G__15686__i < G__15686__a.length) {
              G__15686__a[G__15686__i] = arguments[G__15686__i + 3];
              ++G__15686__i;
            }
            G__15685 = new cljs.core.IndexedSeq(G__15686__a, 0);
          }
          return G__15681__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15685);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15681.cljs$lang$maxFixedArity = 3;
    G__15681.cljs$lang$applyTo = G__15681__4.cljs$lang$applyTo;
    G__15681.cljs$core$IFn$_invoke$arity$2 = G__15681__2;
    G__15681.cljs$core$IFn$_invoke$arity$3 = G__15681__3;
    G__15681.cljs$core$IFn$_invoke$arity$variadic = G__15681__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15681;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__15687 = null;
    var G__15687__2 = function(a, b) {
      var G__15669 = a == null ? x : a;
      var G__15670 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15669, G__15670) : f.call(null, G__15669, G__15670);
    };
    var G__15687__3 = function(a, b, c) {
      var G__15671 = a == null ? x : a;
      var G__15672 = b == null ? y : b;
      var G__15673 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15671, G__15672, G__15673) : f.call(null, G__15671, G__15672, G__15673);
    };
    var G__15687__4 = function() {
      var G__15688__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__15688 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__15689__i = 0, G__15689__a = new Array(arguments.length - 3);
          while (G__15689__i < G__15689__a.length) {
            G__15689__a[G__15689__i] = arguments[G__15689__i + 3];
            ++G__15689__i;
          }
          ds = new cljs.core.IndexedSeq(G__15689__a, 0);
        }
        return G__15688__delegate.call(this, a, b, c, ds);
      };
      G__15688.cljs$lang$maxFixedArity = 3;
      G__15688.cljs$lang$applyTo = function(arglist__15690) {
        var a = cljs.core.first(arglist__15690);
        arglist__15690 = cljs.core.next(arglist__15690);
        var b = cljs.core.first(arglist__15690);
        arglist__15690 = cljs.core.next(arglist__15690);
        var c = cljs.core.first(arglist__15690);
        var ds = cljs.core.rest(arglist__15690);
        return G__15688__delegate(a, b, c, ds);
      };
      G__15688.cljs$core$IFn$_invoke$arity$variadic = G__15688__delegate;
      return G__15688;
    }();
    G__15687 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__15687__2.call(this, a, b);
        case 3:
          return G__15687__3.call(this, a, b, c);
        default:
          var G__15691 = null;
          if (arguments.length > 3) {
            var G__15692__i = 0, G__15692__a = new Array(arguments.length - 3);
            while (G__15692__i < G__15692__a.length) {
              G__15692__a[G__15692__i] = arguments[G__15692__i + 3];
              ++G__15692__i;
            }
            G__15691 = new cljs.core.IndexedSeq(G__15692__a, 0);
          }
          return G__15687__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__15691);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__15687.cljs$lang$maxFixedArity = 3;
    G__15687.cljs$lang$applyTo = G__15687__4.cljs$lang$applyTo;
    G__15687.cljs$core$IFn$_invoke$arity$2 = G__15687__2;
    G__15687.cljs$core$IFn$_invoke$arity$3 = G__15687__3;
    G__15687.cljs$core$IFn$_invoke$arity$variadic = G__15687__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__15687;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var G__15694 = arguments.length;
  switch(G__15694) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = function() {
      var G__15695 = -1;
      return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__15695) : cljs.core.volatile_BANG_.call(null, G__15695);
    }();
    return function(i) {
      return function() {
        var G__15726 = null;
        var G__15726__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15726__1 = function(result) {
          var G__15696 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15696) : rf.call(null, G__15696);
        };
        var G__15726__2 = function(result, input) {
          var G__15697 = result;
          var G__15698 = function() {
            var G__15699 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__15700 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15699, G__15700) : f.call(null, G__15699, G__15700);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15697, G__15698) : rf.call(null, G__15697, G__15698);
        };
        G__15726 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15726__0.call(this);
            case 1:
              return G__15726__1.call(this, result);
            case 2:
              return G__15726__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15726.cljs$core$IFn$_invoke$arity$0 = G__15726__0;
        G__15726.cljs$core$IFn$_invoke$arity$1 = G__15726__1;
        G__15726.cljs$core$IFn$_invoke$arity$2 = G__15726__2;
        return G__15726;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___15727 = size;
          var i_15728 = 0;
          while (true) {
            if (i_15728 < n__5193__auto___15727) {
              cljs.core.chunk_append(b, function() {
                var G__15721 = idx + i_15728;
                var G__15722 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15728);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15721, G__15722) : f.call(null, G__15721, G__15722);
              }());
              var G__15729 = i_15728 + 1;
              i_15728 = G__15729;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__15723 = idx;
            var G__15724 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15723, G__15724) : f.call(null, G__15723, G__15724);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var G__15731 = arguments.length;
  switch(G__15731) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__15739 = null;
      var G__15739__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15739__1 = function(result) {
        var G__15732 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15732) : rf.call(null, G__15732);
      };
      var G__15739__2 = function(result, input) {
        var v = function() {
          var G__15733 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15733) : f.call(null, G__15733);
        }();
        if (v == null) {
          return result;
        } else {
          var G__15734 = result;
          var G__15735 = v;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15734, G__15735) : rf.call(null, G__15734, G__15735);
        }
      };
      G__15739 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15739__0.call(this);
          case 1:
            return G__15739__1.call(this, result);
          case 2:
            return G__15739__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15739.cljs$core$IFn$_invoke$arity$0 = G__15739__0;
      G__15739.cljs$core$IFn$_invoke$arity$1 = G__15739__1;
      G__15739.cljs$core$IFn$_invoke$arity$2 = G__15739__2;
      return G__15739;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___15740 = size;
        var i_15741 = 0;
        while (true) {
          if (i_15741 < n__5193__auto___15740) {
            var x_15742 = function() {
              var G__15736 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15741);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15736) : f.call(null, G__15736);
            }();
            if (x_15742 == null) {
            } else {
              cljs.core.chunk_append(b, x_15742);
            }
            var G__15743 = i_15741 + 1;
            i_15741 = G__15743;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__15737 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15737) : f.call(null, G__15737);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__15744 = cljs.core.seq(self__.watches);
  var chunk__15745 = null;
  var count__15746 = 0;
  var i__15747 = 0;
  while (true) {
    if (i__15747 < count__15746) {
      var vec__15748 = chunk__15745.cljs$core$IIndexed$_nth$arity$2(null, i__15747);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15748, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15748, 1, null);
      var G__15749_15759 = key;
      var G__15750_15760 = this$__$1;
      var G__15751_15761 = oldval;
      var G__15752_15762 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15749_15759, G__15750_15760, G__15751_15761, G__15752_15762) : f.call(null, G__15749_15759, G__15750_15760, G__15751_15761, G__15752_15762);
      var G__15763 = seq__15744;
      var G__15764 = chunk__15745;
      var G__15765 = count__15746;
      var G__15766 = i__15747 + 1;
      seq__15744 = G__15763;
      chunk__15745 = G__15764;
      count__15746 = G__15765;
      i__15747 = G__15766;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__15744);
      if (temp__4425__auto__) {
        var seq__15744__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__15744__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__15744__$1);
          var G__15767 = cljs.core.chunk_rest(seq__15744__$1);
          var G__15768 = c__5093__auto__;
          var G__15769 = cljs.core.count(c__5093__auto__);
          var G__15770 = 0;
          seq__15744 = G__15767;
          chunk__15745 = G__15768;
          count__15746 = G__15769;
          i__15747 = G__15770;
          continue;
        } else {
          var vec__15753 = cljs.core.first(seq__15744__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15753, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15753, 1, null);
          var G__15754_15771 = key;
          var G__15755_15772 = this$__$1;
          var G__15756_15773 = oldval;
          var G__15757_15774 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15754_15771, G__15755_15772, G__15756_15773, G__15757_15774) : f.call(null, G__15754_15771, G__15755_15772, G__15756_15773, G__15757_15774);
          var G__15775 = cljs.core.next(seq__15744__$1);
          var G__15776 = null;
          var G__15777 = 0;
          var G__15778 = 0;
          seq__15744 = G__15775;
          chunk__15745 = G__15776;
          count__15746 = G__15777;
          i__15747 = G__15778;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__15758 = this$__$1;
  return goog.getUid(G__15758);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var G__15782 = arguments.length;
  switch(G__15782) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__15783) {
  var map__15784 = p__15783;
  var map__15784__$1 = cljs.core.seq_QMARK_(map__15784) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15784) : map__15784;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15784__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15784__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq15779) {
  var G__15780 = cljs.core.first(seq15779);
  var seq15779__$1 = cljs.core.next(seq15779);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__15780, seq15779__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__15788 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__15788) : validate.call(null, G__15788);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__15789 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__15789) : cljs.core.pr_str.call(null, G__15789);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var G__15796 = arguments.length;
  switch(G__15796) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15797 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15797) : f.call(null, G__15797);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15798 = a.state;
      var G__15799 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15798, G__15799) : f.call(null, G__15798, G__15799);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__15800 = a.state;
      var G__15801 = x;
      var G__15802 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15800, G__15801, G__15802) : f.call(null, G__15800, G__15801, G__15802);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq15790) {
  var G__15791 = cljs.core.first(seq15790);
  var seq15790__$1 = cljs.core.next(seq15790);
  var G__15792 = cljs.core.first(seq15790__$1);
  var seq15790__$2 = cljs.core.next(seq15790__$1);
  var G__15793 = cljs.core.first(seq15790__$2);
  var seq15790__$3 = cljs.core.next(seq15790__$2);
  var G__15794 = cljs.core.first(seq15790__$3);
  var seq15790__$4 = cljs.core.next(seq15790__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__15791, G__15792, G__15793, G__15794, seq15790__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null)], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var G__15805 = arguments.length;
  switch(G__15805) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__15840 = null;
        var G__15840__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__15840__1 = function(result) {
          var G__15806 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15806) : rf.call(null, G__15806);
        };
        var G__15840__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = function() {
            var G__15807 = i;
            var G__15808 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15807, G__15808) : f.call(null, G__15807, G__15808);
          }();
          if (v == null) {
            return result;
          } else {
            var G__15809 = result;
            var G__15810 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15809, G__15810) : rf.call(null, G__15809, G__15810);
          }
        };
        G__15840 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__15840__0.call(this);
            case 1:
              return G__15840__1.call(this, result);
            case 2:
              return G__15840__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__15840.cljs$core$IFn$_invoke$arity$0 = G__15840__0;
        G__15840.cljs$core$IFn$_invoke$arity$1 = G__15840__1;
        G__15840.cljs$core$IFn$_invoke$arity$2 = G__15840__2;
        return G__15840;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5193__auto___15841 = size;
          var i_15842 = 0;
          while (true) {
            if (i_15842 < n__5193__auto___15841) {
              var x_15843 = function() {
                var G__15835 = idx + i_15842;
                var G__15836 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_15842);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15835, G__15836) : f.call(null, G__15835, G__15836);
              }();
              if (x_15843 == null) {
              } else {
                cljs.core.chunk_append(b, x_15843);
              }
              var G__15844 = i_15842 + 1;
              i_15842 = G__15844;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__15837 = idx;
            var G__15838 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15837, G__15838) : f.call(null, G__15837, G__15838);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var G__15856 = arguments.length;
  switch(G__15856) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(function() {
        var G__15872 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15872) : p.call(null, G__15872);
      }());
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15874 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15874) : p.call(null, G__15874);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__15875 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15875) : p.call(null, G__15875);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15877 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15877) : p.call(null, G__15877);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15879 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15879) : p.call(null, G__15879);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__15880 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__15880) : p.call(null, G__15880);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__16042__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__16042 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16043__i = 0, G__16043__a = new Array(arguments.length - 3);
          while (G__16043__i < G__16043__a.length) {
            G__16043__a[G__16043__i] = arguments[G__16043__i + 3];
            ++G__16043__i;
          }
          args = new cljs.core.IndexedSeq(G__16043__a, 0);
        }
        return G__16042__delegate.call(this, x, y, z, args);
      };
      G__16042.cljs$lang$maxFixedArity = 3;
      G__16042.cljs$lang$applyTo = function(arglist__16044) {
        var x = cljs.core.first(arglist__16044);
        arglist__16044 = cljs.core.next(arglist__16044);
        var y = cljs.core.first(arglist__16044);
        arglist__16044 = cljs.core.next(arglist__16044);
        var z = cljs.core.first(arglist__16044);
        var args = cljs.core.rest(arglist__16044);
        return G__16042__delegate(x, y, z, args);
      };
      G__16042.cljs$core$IFn$_invoke$arity$variadic = G__16042__delegate;
      return G__16042;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__16045 = null;
          if (arguments.length > 3) {
            var G__16046__i = 0, G__16046__a = new Array(arguments.length - 3);
            while (G__16046__i < G__16046__a.length) {
              G__16046__a[G__16046__i] = arguments[G__16046__i + 3];
              ++G__16046__i;
            }
            G__16045 = new cljs.core.IndexedSeq(G__16046__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16045);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15912 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15912) : p1.call(null, G__15912);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var G__15913 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15913) : p2.call(null, G__15913);
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15915 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15915) : p1.call(null, G__15915);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15917 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15917) : p1.call(null, G__15917);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__15919 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15919) : p2.call(null, G__15919);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var G__15920 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15920) : p2.call(null, G__15920);
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15922 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15922) : p1.call(null, G__15922);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15924 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15924) : p1.call(null, G__15924);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__15926 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15926) : p1.call(null, G__15926);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__15928 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15928) : p2.call(null, G__15928);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__15930 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15930) : p2.call(null, G__15930);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__15931 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15931) : p2.call(null, G__15931);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__16047__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__15845_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__15933 = p1__15845_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15933) : p1.call(null, G__15933);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var G__15934 = p1__15845_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15934) : p2.call(null, G__15934);
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__16047 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16048__i = 0, G__16048__a = new Array(arguments.length - 3);
          while (G__16048__i < G__16048__a.length) {
            G__16048__a[G__16048__i] = arguments[G__16048__i + 3];
            ++G__16048__i;
          }
          args = new cljs.core.IndexedSeq(G__16048__a, 0);
        }
        return G__16047__delegate.call(this, x, y, z, args);
      };
      G__16047.cljs$lang$maxFixedArity = 3;
      G__16047.cljs$lang$applyTo = function(arglist__16049) {
        var x = cljs.core.first(arglist__16049);
        arglist__16049 = cljs.core.next(arglist__16049);
        var y = cljs.core.first(arglist__16049);
        arglist__16049 = cljs.core.next(arglist__16049);
        var z = cljs.core.first(arglist__16049);
        var args = cljs.core.rest(arglist__16049);
        return G__16047__delegate(x, y, z, args);
      };
      G__16047.cljs$core$IFn$_invoke$arity$variadic = G__16047__delegate;
      return G__16047;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__16050 = null;
          if (arguments.length > 3) {
            var G__16051__i = 0, G__16051__a = new Array(arguments.length - 3);
            while (G__16051__i < G__16051__a.length) {
              G__16051__a[G__16051__i] = arguments[G__16051__i + 3];
              ++G__16051__i;
            }
            G__16050 = new cljs.core.IndexedSeq(G__16051__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16050);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15980 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15980) : p1.call(null, G__15980);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15982 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15982) : p2.call(null, G__15982);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var G__15983 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15983) : p3.call(null, G__15983);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15985 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15985) : p1.call(null, G__15985);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15987 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15987) : p2.call(null, G__15987);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__15989 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15989) : p3.call(null, G__15989);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__15991 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15991) : p1.call(null, G__15991);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__15993 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15993) : p2.call(null, G__15993);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var G__15994 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__15994) : p3.call(null, G__15994);
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4296__auto__ = function() {
          var G__15996 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__15996) : p1.call(null, G__15996);
        }();
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__15998 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__15998) : p2.call(null, G__15998);
          }();
          if (cljs.core.truth_(and__4296__auto____$1)) {
            var and__4296__auto____$2 = function() {
              var G__16000 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16000) : p3.call(null, G__16000);
            }();
            if (cljs.core.truth_(and__4296__auto____$2)) {
              var and__4296__auto____$3 = function() {
                var G__16002 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16002) : p1.call(null, G__16002);
              }();
              if (cljs.core.truth_(and__4296__auto____$3)) {
                var and__4296__auto____$4 = function() {
                  var G__16004 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16004) : p2.call(null, G__16004);
                }();
                if (cljs.core.truth_(and__4296__auto____$4)) {
                  var and__4296__auto____$5 = function() {
                    var G__16006 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16006) : p3.call(null, G__16006);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$5)) {
                    var and__4296__auto____$6 = function() {
                      var G__16008 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16008) : p1.call(null, G__16008);
                    }();
                    if (cljs.core.truth_(and__4296__auto____$6)) {
                      var and__4296__auto____$7 = function() {
                        var G__16010 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16010) : p2.call(null, G__16010);
                      }();
                      if (cljs.core.truth_(and__4296__auto____$7)) {
                        var G__16011 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16011) : p3.call(null, G__16011);
                      } else {
                        return and__4296__auto____$7;
                      }
                    } else {
                      return and__4296__auto____$6;
                    }
                  } else {
                    return and__4296__auto____$5;
                  }
                } else {
                  return and__4296__auto____$4;
                }
              } else {
                return and__4296__auto____$3;
              }
            } else {
              return and__4296__auto____$2;
            }
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__16052__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4296__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.every_QMARK_(function(and__4296__auto__) {
              return function(p1__15846_SHARP_) {
                var and__4296__auto____$1 = function() {
                  var G__16013 = p1__15846_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16013) : p1.call(null, G__16013);
                }();
                if (cljs.core.truth_(and__4296__auto____$1)) {
                  var and__4296__auto____$2 = function() {
                    var G__16015 = p1__15846_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16015) : p2.call(null, G__16015);
                  }();
                  if (cljs.core.truth_(and__4296__auto____$2)) {
                    var G__16016 = p1__15846_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16016) : p3.call(null, G__16016);
                  } else {
                    return and__4296__auto____$2;
                  }
                } else {
                  return and__4296__auto____$1;
                }
              };
            }(and__4296__auto__), args);
          } else {
            return and__4296__auto__;
          }
        }());
      };
      var G__16052 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16053__i = 0, G__16053__a = new Array(arguments.length - 3);
          while (G__16053__i < G__16053__a.length) {
            G__16053__a[G__16053__i] = arguments[G__16053__i + 3];
            ++G__16053__i;
          }
          args = new cljs.core.IndexedSeq(G__16053__a, 0);
        }
        return G__16052__delegate.call(this, x, y, z, args);
      };
      G__16052.cljs$lang$maxFixedArity = 3;
      G__16052.cljs$lang$applyTo = function(arglist__16054) {
        var x = cljs.core.first(arglist__16054);
        arglist__16054 = cljs.core.next(arglist__16054);
        var y = cljs.core.first(arglist__16054);
        arglist__16054 = cljs.core.next(arglist__16054);
        var z = cljs.core.first(arglist__16054);
        var args = cljs.core.rest(arglist__16054);
        return G__16052__delegate(x, y, z, args);
      };
      G__16052.cljs$core$IFn$_invoke$arity$variadic = G__16052__delegate;
      return G__16052;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__16055 = null;
          if (arguments.length > 3) {
            var G__16056__i = 0, G__16056__a = new Array(arguments.length - 3);
            while (G__16056__i < G__16056__a.length) {
              G__16056__a[G__16056__i] = arguments[G__16056__i + 3];
              ++G__16056__i;
            }
            G__16055 = new cljs.core.IndexedSeq(G__16056__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16055);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15847_SHARP_) {
            var G__16032 = x;
            return p1__15847_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15847_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16032) : p1__15847_SHARP_.call(null, G__16032);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15848_SHARP_) {
            var and__4296__auto__ = function() {
              var G__16034 = x;
              return p1__15848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15848_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16034) : p1__15848_SHARP_.call(null, G__16034);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__16035 = y;
              return p1__15848_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15848_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16035) : p1__15848_SHARP_.call(null, G__16035);
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__15849_SHARP_) {
            var and__4296__auto__ = function() {
              var G__16037 = x;
              return p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16037) : p1__15849_SHARP_.call(null, G__16037);
            }();
            if (cljs.core.truth_(and__4296__auto__)) {
              var and__4296__auto____$1 = function() {
                var G__16039 = y;
                return p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16039) : p1__15849_SHARP_.call(null, G__16039);
              }();
              if (cljs.core.truth_(and__4296__auto____$1)) {
                var G__16040 = z;
                return p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__15849_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16040) : p1__15849_SHARP_.call(null, G__16040);
              } else {
                return and__4296__auto____$1;
              }
            } else {
              return and__4296__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__16057__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4296__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core.every_QMARK_(function(and__4296__auto__, ps__$1) {
                return function(p1__15850_SHARP_) {
                  return cljs.core.every_QMARK_(p1__15850_SHARP_, args);
                };
              }(and__4296__auto__, ps__$1), ps__$1);
            } else {
              return and__4296__auto__;
            }
          }());
        };
        var G__16057 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16058__i = 0, G__16058__a = new Array(arguments.length - 3);
            while (G__16058__i < G__16058__a.length) {
              G__16058__a[G__16058__i] = arguments[G__16058__i + 3];
              ++G__16058__i;
            }
            args = new cljs.core.IndexedSeq(G__16058__a, 0);
          }
          return G__16057__delegate.call(this, x, y, z, args);
        };
        G__16057.cljs$lang$maxFixedArity = 3;
        G__16057.cljs$lang$applyTo = function(arglist__16059) {
          var x = cljs.core.first(arglist__16059);
          arglist__16059 = cljs.core.next(arglist__16059);
          var y = cljs.core.first(arglist__16059);
          arglist__16059 = cljs.core.next(arglist__16059);
          var z = cljs.core.first(arglist__16059);
          var args = cljs.core.rest(arglist__16059);
          return G__16057__delegate(x, y, z, args);
        };
        G__16057.cljs$core$IFn$_invoke$arity$variadic = G__16057__delegate;
        return G__16057;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__16060 = null;
            if (arguments.length > 3) {
              var G__16061__i = 0, G__16061__a = new Array(arguments.length - 3);
              while (G__16061__i < G__16061__a.length) {
                G__16061__a[G__16061__i] = arguments[G__16061__i + 3];
                ++G__16061__i;
              }
              G__16060 = new cljs.core.IndexedSeq(G__16061__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16060);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq15851) {
  var G__15852 = cljs.core.first(seq15851);
  var seq15851__$1 = cljs.core.next(seq15851);
  var G__15853 = cljs.core.first(seq15851__$1);
  var seq15851__$2 = cljs.core.next(seq15851__$1);
  var G__15854 = cljs.core.first(seq15851__$2);
  var seq15851__$3 = cljs.core.next(seq15851__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__15852, G__15853, G__15854, seq15851__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var G__16073 = arguments.length;
  switch(G__16073) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      var G__16089 = x;
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16089) : p.call(null, G__16089);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__16091 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16091) : p.call(null, G__16091);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__16092 = y;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16092) : p.call(null, G__16092);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__16094 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16094) : p.call(null, G__16094);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16096 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16096) : p.call(null, G__16096);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__16097 = z;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__16097) : p.call(null, G__16097);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__16259__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__16259 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16260__i = 0, G__16260__a = new Array(arguments.length - 3);
          while (G__16260__i < G__16260__a.length) {
            G__16260__a[G__16260__i] = arguments[G__16260__i + 3];
            ++G__16260__i;
          }
          args = new cljs.core.IndexedSeq(G__16260__a, 0);
        }
        return G__16259__delegate.call(this, x, y, z, args);
      };
      G__16259.cljs$lang$maxFixedArity = 3;
      G__16259.cljs$lang$applyTo = function(arglist__16261) {
        var x = cljs.core.first(arglist__16261);
        arglist__16261 = cljs.core.next(arglist__16261);
        var y = cljs.core.first(arglist__16261);
        arglist__16261 = cljs.core.next(arglist__16261);
        var z = cljs.core.first(arglist__16261);
        var args = cljs.core.rest(arglist__16261);
        return G__16259__delegate(x, y, z, args);
      };
      G__16259.cljs$core$IFn$_invoke$arity$variadic = G__16259__delegate;
      return G__16259;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__16262 = null;
          if (arguments.length > 3) {
            var G__16263__i = 0, G__16263__a = new Array(arguments.length - 3);
            while (G__16263__i < G__16263__a.length) {
              G__16263__a[G__16263__i] = arguments[G__16263__i + 3];
              ++G__16263__i;
            }
            G__16262 = new cljs.core.IndexedSeq(G__16263__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16262);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__16129 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16129) : p1.call(null, G__16129);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var G__16130 = x;
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16130) : p2.call(null, G__16130);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__16132 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16132) : p1.call(null, G__16132);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16134 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16134) : p1.call(null, G__16134);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__16136 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16136) : p2.call(null, G__16136);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var G__16137 = y;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16137) : p2.call(null, G__16137);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__16139 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16139) : p1.call(null, G__16139);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16141 = y;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16141) : p1.call(null, G__16141);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__16143 = z;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16143) : p1.call(null, G__16143);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__16145 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16145) : p2.call(null, G__16145);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__16147 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16147) : p2.call(null, G__16147);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__16148 = z;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16148) : p2.call(null, G__16148);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__16264__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__16062_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__16150 = p1__16062_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16150) : p1.call(null, G__16150);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__16151 = p1__16062_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16151) : p2.call(null, G__16151);
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__16264 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16265__i = 0, G__16265__a = new Array(arguments.length - 3);
          while (G__16265__i < G__16265__a.length) {
            G__16265__a[G__16265__i] = arguments[G__16265__i + 3];
            ++G__16265__i;
          }
          args = new cljs.core.IndexedSeq(G__16265__a, 0);
        }
        return G__16264__delegate.call(this, x, y, z, args);
      };
      G__16264.cljs$lang$maxFixedArity = 3;
      G__16264.cljs$lang$applyTo = function(arglist__16266) {
        var x = cljs.core.first(arglist__16266);
        arglist__16266 = cljs.core.next(arglist__16266);
        var y = cljs.core.first(arglist__16266);
        arglist__16266 = cljs.core.next(arglist__16266);
        var z = cljs.core.first(arglist__16266);
        var args = cljs.core.rest(arglist__16266);
        return G__16264__delegate(x, y, z, args);
      };
      G__16264.cljs$core$IFn$_invoke$arity$variadic = G__16264__delegate;
      return G__16264;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__16267 = null;
          if (arguments.length > 3) {
            var G__16268__i = 0, G__16268__a = new Array(arguments.length - 3);
            while (G__16268__i < G__16268__a.length) {
              G__16268__a[G__16268__i] = arguments[G__16268__i + 3];
              ++G__16268__i;
            }
            G__16267 = new cljs.core.IndexedSeq(G__16268__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16267);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4308__auto__ = function() {
        var G__16197 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16197) : p1.call(null, G__16197);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16199 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16199) : p2.call(null, G__16199);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var G__16200 = x;
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16200) : p3.call(null, G__16200);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4308__auto__ = function() {
        var G__16202 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16202) : p1.call(null, G__16202);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16204 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16204) : p2.call(null, G__16204);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__16206 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16206) : p3.call(null, G__16206);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__16208 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16208) : p1.call(null, G__16208);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__16210 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16210) : p2.call(null, G__16210);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var G__16211 = y;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16211) : p3.call(null, G__16211);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4308__auto__ = function() {
        var G__16213 = x;
        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16213) : p1.call(null, G__16213);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = function() {
          var G__16215 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16215) : p2.call(null, G__16215);
        }();
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          var or__4308__auto____$2 = function() {
            var G__16217 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16217) : p3.call(null, G__16217);
          }();
          if (cljs.core.truth_(or__4308__auto____$2)) {
            return or__4308__auto____$2;
          } else {
            var or__4308__auto____$3 = function() {
              var G__16219 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16219) : p1.call(null, G__16219);
            }();
            if (cljs.core.truth_(or__4308__auto____$3)) {
              return or__4308__auto____$3;
            } else {
              var or__4308__auto____$4 = function() {
                var G__16221 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16221) : p2.call(null, G__16221);
              }();
              if (cljs.core.truth_(or__4308__auto____$4)) {
                return or__4308__auto____$4;
              } else {
                var or__4308__auto____$5 = function() {
                  var G__16223 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16223) : p3.call(null, G__16223);
                }();
                if (cljs.core.truth_(or__4308__auto____$5)) {
                  return or__4308__auto____$5;
                } else {
                  var or__4308__auto____$6 = function() {
                    var G__16225 = z;
                    return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16225) : p1.call(null, G__16225);
                  }();
                  if (cljs.core.truth_(or__4308__auto____$6)) {
                    return or__4308__auto____$6;
                  } else {
                    var or__4308__auto____$7 = function() {
                      var G__16227 = z;
                      return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16227) : p2.call(null, G__16227);
                    }();
                    if (cljs.core.truth_(or__4308__auto____$7)) {
                      return or__4308__auto____$7;
                    } else {
                      var G__16228 = z;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16228) : p3.call(null, G__16228);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__16269__delegate = function(x, y, z, args) {
        var or__4308__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.some(function(or__4308__auto__) {
            return function(p1__16063_SHARP_) {
              var or__4308__auto____$1 = function() {
                var G__16230 = p1__16063_SHARP_;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__16230) : p1.call(null, G__16230);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var or__4308__auto____$2 = function() {
                  var G__16232 = p1__16063_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__16232) : p2.call(null, G__16232);
                }();
                if (cljs.core.truth_(or__4308__auto____$2)) {
                  return or__4308__auto____$2;
                } else {
                  var G__16233 = p1__16063_SHARP_;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__16233) : p3.call(null, G__16233);
                }
              }
            };
          }(or__4308__auto__), args);
        }
      };
      var G__16269 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__16270__i = 0, G__16270__a = new Array(arguments.length - 3);
          while (G__16270__i < G__16270__a.length) {
            G__16270__a[G__16270__i] = arguments[G__16270__i + 3];
            ++G__16270__i;
          }
          args = new cljs.core.IndexedSeq(G__16270__a, 0);
        }
        return G__16269__delegate.call(this, x, y, z, args);
      };
      G__16269.cljs$lang$maxFixedArity = 3;
      G__16269.cljs$lang$applyTo = function(arglist__16271) {
        var x = cljs.core.first(arglist__16271);
        arglist__16271 = cljs.core.next(arglist__16271);
        var y = cljs.core.first(arglist__16271);
        arglist__16271 = cljs.core.next(arglist__16271);
        var z = cljs.core.first(arglist__16271);
        var args = cljs.core.rest(arglist__16271);
        return G__16269__delegate(x, y, z, args);
      };
      G__16269.cljs$core$IFn$_invoke$arity$variadic = G__16269__delegate;
      return G__16269;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__16272 = null;
          if (arguments.length > 3) {
            var G__16273__i = 0, G__16273__a = new Array(arguments.length - 3);
            while (G__16273__i < G__16273__a.length) {
              G__16273__a[G__16273__i] = arguments[G__16273__i + 3];
              ++G__16273__i;
            }
            G__16272 = new cljs.core.IndexedSeq(G__16273__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16272);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__16064_SHARP_) {
            var G__16249 = x;
            return p1__16064_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16064_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16249) : p1__16064_SHARP_.call(null, G__16249);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__16065_SHARP_) {
            var or__4308__auto__ = function() {
              var G__16251 = x;
              return p1__16065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16251) : p1__16065_SHARP_.call(null, G__16251);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var G__16252 = y;
              return p1__16065_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16065_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16252) : p1__16065_SHARP_.call(null, G__16252);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__16066_SHARP_) {
            var or__4308__auto__ = function() {
              var G__16254 = x;
              return p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16254) : p1__16066_SHARP_.call(null, G__16254);
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              var or__4308__auto____$1 = function() {
                var G__16256 = y;
                return p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16256) : p1__16066_SHARP_.call(null, G__16256);
              }();
              if (cljs.core.truth_(or__4308__auto____$1)) {
                return or__4308__auto____$1;
              } else {
                var G__16257 = z;
                return p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__16066_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16257) : p1__16066_SHARP_.call(null, G__16257);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__16274__delegate = function(x, y, z, args) {
          var or__4308__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.some(function(or__4308__auto__, ps__$1) {
              return function(p1__16067_SHARP_) {
                return cljs.core.some(p1__16067_SHARP_, args);
              };
            }(or__4308__auto__, ps__$1), ps__$1);
          }
        };
        var G__16274 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__16275__i = 0, G__16275__a = new Array(arguments.length - 3);
            while (G__16275__i < G__16275__a.length) {
              G__16275__a[G__16275__i] = arguments[G__16275__i + 3];
              ++G__16275__i;
            }
            args = new cljs.core.IndexedSeq(G__16275__a, 0);
          }
          return G__16274__delegate.call(this, x, y, z, args);
        };
        G__16274.cljs$lang$maxFixedArity = 3;
        G__16274.cljs$lang$applyTo = function(arglist__16276) {
          var x = cljs.core.first(arglist__16276);
          arglist__16276 = cljs.core.next(arglist__16276);
          var y = cljs.core.first(arglist__16276);
          arglist__16276 = cljs.core.next(arglist__16276);
          var z = cljs.core.first(arglist__16276);
          var args = cljs.core.rest(arglist__16276);
          return G__16274__delegate(x, y, z, args);
        };
        G__16274.cljs$core$IFn$_invoke$arity$variadic = G__16274__delegate;
        return G__16274;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__16277 = null;
            if (arguments.length > 3) {
              var G__16278__i = 0, G__16278__a = new Array(arguments.length - 3);
              while (G__16278__i < G__16278__a.length) {
                G__16278__a[G__16278__i] = arguments[G__16278__i + 3];
                ++G__16278__i;
              }
              G__16277 = new cljs.core.IndexedSeq(G__16278__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__16277);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq16068) {
  var G__16069 = cljs.core.first(seq16068);
  var seq16068__$1 = cljs.core.next(seq16068);
  var G__16070 = cljs.core.first(seq16068__$1);
  var seq16068__$2 = cljs.core.next(seq16068__$1);
  var G__16071 = cljs.core.first(seq16068__$2);
  var seq16068__$3 = cljs.core.next(seq16068__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__16069, G__16070, G__16071, seq16068__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var G__16286 = arguments.length;
  switch(G__16286) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__16302 = null;
      var G__16302__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16302__1 = function(result) {
        var G__16287 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16287) : rf.call(null, G__16287);
      };
      var G__16302__2 = function(result, input) {
        var G__16288 = result;
        var G__16289 = function() {
          var G__16290 = input;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16290) : f.call(null, G__16290);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16288, G__16289) : rf.call(null, G__16288, G__16289);
      };
      var G__16302__3 = function() {
        var G__16303__delegate = function(result, input, inputs) {
          var G__16291 = result;
          var G__16292 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16291, G__16292) : rf.call(null, G__16291, G__16292);
        };
        var G__16303 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__16304__i = 0, G__16304__a = new Array(arguments.length - 2);
            while (G__16304__i < G__16304__a.length) {
              G__16304__a[G__16304__i] = arguments[G__16304__i + 2];
              ++G__16304__i;
            }
            inputs = new cljs.core.IndexedSeq(G__16304__a, 0);
          }
          return G__16303__delegate.call(this, result, input, inputs);
        };
        G__16303.cljs$lang$maxFixedArity = 2;
        G__16303.cljs$lang$applyTo = function(arglist__16305) {
          var result = cljs.core.first(arglist__16305);
          arglist__16305 = cljs.core.next(arglist__16305);
          var input = cljs.core.first(arglist__16305);
          var inputs = cljs.core.rest(arglist__16305);
          return G__16303__delegate(result, input, inputs);
        };
        G__16303.cljs$core$IFn$_invoke$arity$variadic = G__16303__delegate;
        return G__16303;
      }();
      G__16302 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__16302__0.call(this);
          case 1:
            return G__16302__1.call(this, result);
          case 2:
            return G__16302__2.call(this, result, input);
          default:
            var G__16306 = null;
            if (arguments.length > 2) {
              var G__16307__i = 0, G__16307__a = new Array(arguments.length - 2);
              while (G__16307__i < G__16307__a.length) {
                G__16307__a[G__16307__i] = arguments[G__16307__i + 2];
                ++G__16307__i;
              }
              G__16306 = new cljs.core.IndexedSeq(G__16307__a, 0);
            }
            return G__16302__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__16306);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16302.cljs$lang$maxFixedArity = 2;
      G__16302.cljs$lang$applyTo = G__16302__3.cljs$lang$applyTo;
      G__16302.cljs$core$IFn$_invoke$arity$0 = G__16302__0;
      G__16302.cljs$core$IFn$_invoke$arity$1 = G__16302__1;
      G__16302.cljs$core$IFn$_invoke$arity$2 = G__16302__2;
      G__16302.cljs$core$IFn$_invoke$arity$variadic = G__16302__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__16302;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___16308 = size;
        var i_16309 = 0;
        while (true) {
          if (i_16309 < n__5193__auto___16308) {
            cljs.core.chunk_append(b, function() {
              var G__16293 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16309);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16293) : f.call(null, G__16293);
            }());
            var G__16310 = i_16309 + 1;
            i_16309 = G__16310;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__16294 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16294) : f.call(null, G__16294);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__16295 = cljs.core.first(s1);
        var G__16296 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16295, G__16296) : f.call(null, G__16295, G__16296);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__16297 = cljs.core.first(s1);
        var G__16298 = cljs.core.first(s2);
        var G__16299 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16297, G__16298, G__16299) : f.call(null, G__16297, G__16298, G__16299);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__16279_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__16279_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq16280) {
  var G__16281 = cljs.core.first(seq16280);
  var seq16280__$1 = cljs.core.next(seq16280);
  var G__16282 = cljs.core.first(seq16280__$1);
  var seq16280__$2 = cljs.core.next(seq16280__$1);
  var G__16283 = cljs.core.first(seq16280__$2);
  var seq16280__$3 = cljs.core.next(seq16280__$2);
  var G__16284 = cljs.core.first(seq16280__$3);
  var seq16280__$4 = cljs.core.next(seq16280__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__16281, G__16282, G__16283, G__16284, seq16280__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var G__16312 = arguments.length;
  switch(G__16312) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__16317 = null;
        var G__16317__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16317__1 = function(result) {
          var G__16313 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16313) : rf.call(null, G__16313);
        };
        var G__16317__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? function() {
            var G__16314 = result;
            var G__16315 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16314, G__16315) : rf.call(null, G__16314, G__16315);
          }() : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__16317 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16317__0.call(this);
            case 1:
              return G__16317__1.call(this, result);
            case 2:
              return G__16317__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16317.cljs$core$IFn$_invoke$arity$0 = G__16317__0;
        G__16317.cljs$core$IFn$_invoke$arity$1 = G__16317__1;
        G__16317.cljs$core$IFn$_invoke$arity$2 = G__16317__2;
        return G__16317;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var G__16319 = arguments.length;
  switch(G__16319) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__16324 = null;
        var G__16324__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16324__1 = function(result) {
          var G__16320 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16320) : rf.call(null, G__16320);
        };
        var G__16324__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            var G__16321 = result;
            var G__16322 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16321, G__16322) : rf.call(null, G__16321, G__16322);
          }
        };
        G__16324 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16324__0.call(this);
            case 1:
              return G__16324__1.call(this, result);
            case 2:
              return G__16324__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16324.cljs$core$IFn$_invoke$arity$0 = G__16324__0;
        G__16324.cljs$core$IFn$_invoke$arity$1 = G__16324__1;
        G__16324.cljs$core$IFn$_invoke$arity$2 = G__16324__2;
        return G__16324;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__16325 = n__$1 - 1;
        var G__16326 = cljs.core.rest(s);
        n__$1 = G__16325;
        coll__$1 = G__16326;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var G__16328 = arguments.length;
  switch(G__16328) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__16330 = cljs.core.next(s);
      var G__16331 = cljs.core.next(lead);
      s = G__16330;
      lead = G__16331;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var G__16333 = arguments.length;
  switch(G__16333) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__16341 = null;
        var G__16341__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16341__1 = function(result) {
          var G__16334 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16334) : rf.call(null, G__16334);
        };
        var G__16341__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4296__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4296__auto__)) {
              var G__16335 = input;
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16335) : pred.call(null, G__16335);
            } else {
              return and__4296__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            var G__16336 = result;
            var G__16337 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16336, G__16337) : rf.call(null, G__16336, G__16337);
          }
        };
        G__16341 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16341__0.call(this);
            case 1:
              return G__16341__1.call(this, result);
            case 2:
              return G__16341__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16341.cljs$core$IFn$_invoke$arity$0 = G__16341__0;
        G__16341.cljs$core$IFn$_invoke$arity$1 = G__16341__1;
        G__16341.cljs$core$IFn$_invoke$arity$2 = G__16341__2;
        return G__16341;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = s;
        if (and__4296__auto__) {
          var G__16339 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__16339) : pred__$1.call(null, G__16339);
        } else {
          return and__4296__auto__;
        }
      }())) {
        var G__16342 = pred__$1;
        var G__16343 = cljs.core.rest(s);
        pred__$1 = G__16342;
        coll__$1 = G__16343;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var G__16346 = arguments.length;
  switch(G__16346) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var G__16349 = arguments.length;
  switch(G__16349) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, function() {
      var G__16354 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16354) : f.call(null, G__16354);
    }());
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var G__16359 = arguments.length;
  switch(G__16359) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq16355) {
  var G__16356 = cljs.core.first(seq16355);
  var seq16355__$1 = cljs.core.next(seq16355);
  var G__16357 = cljs.core.first(seq16355__$1);
  var seq16355__$2 = cljs.core.next(seq16355__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__16356, G__16357, seq16355__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var G__16362 = arguments.length;
  switch(G__16362) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__16371 = null;
        var G__16371__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__16371__1 = function(result) {
          var G__16363 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16363) : rf.call(null, G__16363);
        };
        var G__16371__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = function() {
              var G__16364 = result;
              var G__16365 = sep;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16364, G__16365) : rf.call(null, G__16364, G__16365);
            }();
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              var G__16366 = sepr;
              var G__16367 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16366, G__16367) : rf.call(null, G__16366, G__16367);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            var G__16368 = result;
            var G__16369 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16368, G__16369) : rf.call(null, G__16368, G__16369);
          }
        };
        G__16371 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__16371__0.call(this);
            case 1:
              return G__16371__1.call(this, result);
            case 2:
              return G__16371__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__16371.cljs$core$IFn$_invoke$arity$0 = G__16371__0;
        G__16371.cljs$core$IFn$_invoke$arity$1 = G__16371__1;
        G__16371.cljs$core$IFn$_invoke$arity$2 = G__16371__2;
        return G__16371;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var G__16383 = arguments.length;
  switch(G__16383) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq16380) {
  var G__16381 = cljs.core.first(seq16380);
  var seq16380__$1 = cljs.core.next(seq16380);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__16381, seq16380__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var G__16386 = arguments.length;
  switch(G__16386) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__16394 = null;
      var G__16394__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__16394__1 = function(result) {
        var G__16387 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16387) : rf.call(null, G__16387);
      };
      var G__16394__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__16388 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16388) : pred.call(null, G__16388);
        }())) {
          var G__16389 = result;
          var G__16390 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16389, G__16390) : rf.call(null, G__16389, G__16390);
        } else {
          return result;
        }
      };
      G__16394 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__16394__0.call(this);
          case 1:
            return G__16394__1.call(this, result);
          case 2:
            return G__16394__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__16394.cljs$core$IFn$_invoke$arity$0 = G__16394__0;
      G__16394.cljs$core$IFn$_invoke$arity$1 = G__16394__1;
      G__16394.cljs$core$IFn$_invoke$arity$2 = G__16394__2;
      return G__16394;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5193__auto___16395 = size;
        var i_16396 = 0;
        while (true) {
          if (i_16396 < n__5193__auto___16395) {
            if (cljs.core.truth_(function() {
              var G__16391 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16396);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16391) : pred.call(null, G__16391);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_16396));
            } else {
            }
            var G__16397 = i_16396 + 1;
            i_16396 = G__16397;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(function() {
          var G__16392 = f;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16392) : pred.call(null, G__16392);
        }())) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var G__16399 = arguments.length;
  switch(G__16399) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__16407 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__16407) : branch_QMARK_.call(null, G__16407);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([function() {
        var G__16408 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__16408) : children.call(null, G__16408);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__16409_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__16409_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var G__16411 = arguments.length;
  switch(G__16411) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (function() {
      var G__16412 = to;
      if (G__16412) {
        var bit__4975__auto__ = G__16412.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4975__auto__ || G__16412.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (function() {
    var G__16413 = to;
    if (G__16413) {
      var bit__4975__auto__ = G__16413.cljs$lang$protocol_mask$partition1$ & 4;
      if (bit__4975__auto__ || G__16413.cljs$core$IEditableCollection$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var G__16421 = arguments.length;
  switch(G__16421) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5359__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
      var G__16422 = o;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16422) : f.call(null, G__16422);
    }());
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq16415) {
  var G__16416 = cljs.core.first(seq16415);
  var seq16415__$1 = cljs.core.next(seq16415);
  var G__16417 = cljs.core.first(seq16415__$1);
  var seq16415__$2 = cljs.core.next(seq16415__$1);
  var G__16418 = cljs.core.first(seq16415__$2);
  var seq16415__$3 = cljs.core.next(seq16415__$2);
  var G__16419 = cljs.core.first(seq16415__$3);
  var seq16415__$4 = cljs.core.next(seq16415__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__16416, G__16417, G__16418, G__16419, seq16415__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__16425 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__16425) : pred.call(null, G__16425);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var G__16427 = arguments.length;
  switch(G__16427) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var G__16430 = arguments.length;
  switch(G__16430) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!function() {
        var G__16431 = m__$1;
        if (G__16431) {
          var bit__4982__auto__ = G__16431.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4982__auto__ || G__16431.cljs$core$ILookup$) {
            return true;
          } else {
            if (!G__16431.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__16431);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__16431);
        }
      }()) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__16433 = sentinel;
          var G__16434 = m__$2;
          var G__16435 = cljs.core.next(ks__$1);
          sentinel = G__16433;
          m__$1 = G__16434;
          ks__$1 = G__16435;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__16436, v) {
  var vec__16441 = p__16436;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16441, 0, null);
  var ks = cljs.core.nthnext(vec__16441, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var G__16450 = arguments.length;
  switch(G__16450) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__16451, f) {
  var vec__16452 = p__16451;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16452, 0, null);
  var ks = cljs.core.nthnext(vec__16452, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16453 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16453) : f.call(null, G__16453);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__16454, f, a) {
  var vec__16455 = p__16454;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16455, 0, null);
  var ks = cljs.core.nthnext(vec__16455, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16456 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16457 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16456, G__16457) : f.call(null, G__16456, G__16457);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__16458, f, a, b) {
  var vec__16459 = p__16458;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16459, 0, null);
  var ks = cljs.core.nthnext(vec__16459, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16460 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16461 = a;
      var G__16462 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16460, G__16461, G__16462) : f.call(null, G__16460, G__16461, G__16462);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__16463, f, a, b, c) {
  var vec__16464 = p__16463;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16464, 0, null);
  var ks = cljs.core.nthnext(vec__16464, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__16465 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__16466 = a;
      var G__16467 = b;
      var G__16468 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16465, G__16466, G__16467, G__16468) : f.call(null, G__16465, G__16466, G__16467, G__16468);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__16469, f, a, b, c, args) {
  var vec__16470 = p__16469;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16470, 0, null);
  var ks = cljs.core.nthnext(vec__16470, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq16442) {
  var G__16443 = cljs.core.first(seq16442);
  var seq16442__$1 = cljs.core.next(seq16442);
  var G__16444 = cljs.core.first(seq16442__$1);
  var seq16442__$2 = cljs.core.next(seq16442__$1);
  var G__16445 = cljs.core.first(seq16442__$2);
  var seq16442__$3 = cljs.core.next(seq16442__$2);
  var G__16446 = cljs.core.first(seq16442__$3);
  var seq16442__$4 = cljs.core.next(seq16442__$3);
  var G__16447 = cljs.core.first(seq16442__$4);
  var seq16442__$5 = cljs.core.next(seq16442__$4);
  var G__16448 = cljs.core.first(seq16442__$5);
  var seq16442__$6 = cljs.core.next(seq16442__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__16443, G__16444, G__16445, G__16446, G__16447, G__16448, seq16442__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var G__16480 = arguments.length;
  switch(G__16480) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5359__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16481 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16481) : f.call(null, G__16481);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16482 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16483 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16482, G__16483) : f.call(null, G__16482, G__16483);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16484 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16485 = x;
    var G__16486 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16484, G__16485, G__16486) : f.call(null, G__16484, G__16485, G__16486);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__16487 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__16488 = x;
    var G__16489 = y;
    var G__16490 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__16487, G__16488, G__16489, G__16490) : f.call(null, G__16487, G__16488, G__16489, G__16490);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq16472) {
  var G__16473 = cljs.core.first(seq16472);
  var seq16472__$1 = cljs.core.next(seq16472);
  var G__16474 = cljs.core.first(seq16472__$1);
  var seq16472__$2 = cljs.core.next(seq16472__$1);
  var G__16475 = cljs.core.first(seq16472__$2);
  var seq16472__$3 = cljs.core.next(seq16472__$2);
  var G__16476 = cljs.core.first(seq16472__$3);
  var seq16472__$4 = cljs.core.next(seq16472__$3);
  var G__16477 = cljs.core.first(seq16472__$4);
  var seq16472__$5 = cljs.core.next(seq16472__$4);
  var G__16478 = cljs.core.first(seq16472__$5);
  var seq16472__$6 = cljs.core.next(seq16472__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__16473, G__16474, G__16475, G__16476, G__16477, G__16478, seq16472__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__16492 = ll - 5;
      var G__16493 = r;
      ll = G__16492;
      ret = G__16493;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__16498 = cljs.core.pv_aget(node, 0);
      var G__16499 = level - 5;
      node = G__16498;
      level = G__16499;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__16500 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__16501 = level - 5;
        node = G__16500;
        level = G__16501;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16511 = init__$2;
              var G__16512 = j + i;
              var G__16513 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16511, G__16512, G__16513) : f.call(null, G__16511, G__16512, G__16513);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16524 = j + 1;
              var G__16525 = init__$3;
              j = G__16524;
              init__$2 = G__16525;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16514 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16514) : cljs.core.deref.call(null, G__16514);
      } else {
        var G__16526 = i + len;
        var G__16527 = init__$2;
        i = G__16526;
        init__$1 = G__16527;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__16515 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__16515) : cljs.core.tv_editable_root.call(null, G__16515);
  }(), function() {
    var G__16516 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__16516) : cljs.core.tv_editable_tail.call(null, G__16516);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__16517 = init__$2;
              var G__16518 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16517, G__16518) : f.call(null, G__16517, G__16518);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__16528 = j + 1;
              var G__16529 = init__$3;
              j = G__16528;
              init__$2 = G__16529;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16519 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16519) : cljs.core.deref.call(null, G__16519);
      } else {
        var G__16530 = i + len;
        var G__16531 = init__$2;
        i = G__16530;
        init__$1 = G__16531;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__16520 = coll__$1;
      var G__16521 = cljs.core.first_array_for_longvec(coll__$1);
      var G__16522 = 0;
      var G__16523 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16520, G__16521, G__16522, G__16523) : cljs.core.chunked_seq.call(null, G__16520, G__16521, G__16522, G__16523);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5193__auto___16532 = len;
    var i_16533 = 0;
    while (true) {
      if (i_16533 < n__5193__auto___16532) {
        new_tail[i_16533] = self__.tail[i_16533];
        var G__16534 = i_16533 + 1;
        i_16533 = G__16534;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__16535 = null;
  var G__16535__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16535__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16535 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16535__2.call(this, self__, k);
      case 3:
        return G__16535__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16535.cljs$core$IFn$_invoke$arity$2 = G__16535__2;
  G__16535.cljs$core$IFn$_invoke$arity$3 = G__16535__3;
  return G__16535;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args16510) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16510)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__16536 = i + 1;
        var G__16537 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__16536;
        out = G__16537;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq16538) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16538));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16539 = self__.vec;
      var G__16540 = self__.node;
      var G__16541 = self__.i;
      var G__16542 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16539, G__16540, G__16541, G__16542) : cljs.core.chunked_seq.call(null, G__16539, G__16540, G__16541, G__16542);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__16543 = self__.vec;
    var G__16544 = self__.i + self__.off;
    var G__16545 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16543, G__16544, G__16545) : cljs.core.subvec.call(null, G__16543, G__16544, G__16545);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__16546 = self__.vec;
    var G__16547 = self__.i + self__.off;
    var G__16548 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__16546, G__16547, G__16548) : cljs.core.subvec.call(null, G__16546, G__16547, G__16548);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__16549 = self__.vec;
      var G__16550 = self__.node;
      var G__16551 = self__.i;
      var G__16552 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16549, G__16550, G__16551, G__16552) : cljs.core.chunked_seq.call(null, G__16549, G__16550, G__16551, G__16552);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16553 = self__.vec;
    var G__16554 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16555 = end;
    var G__16556 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16553, G__16554, G__16555, G__16556) : cljs.core.chunked_seq.call(null, G__16553, G__16554, G__16555, G__16556);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__16557 = self__.vec;
  var G__16558 = self__.node;
  var G__16559 = self__.i;
  var G__16560 = self__.off;
  var G__16561 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__16557, G__16558, G__16559, G__16560, G__16561) : cljs.core.chunked_seq.call(null, G__16557, G__16558, G__16559, G__16560, G__16561);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__16562 = self__.vec;
    var G__16563 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__16564 = end;
    var G__16565 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__16562, G__16563, G__16564, G__16565) : cljs.core.chunked_seq.call(null, G__16562, G__16563, G__16564, G__16565);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var G__16567 = arguments.length;
  switch(G__16567) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__16570 = init__$1;
        var G__16571 = j;
        var G__16572 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16570, G__16571, G__16572) : f.call(null, G__16570, G__16571, G__16572);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16573 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16573) : cljs.core.deref.call(null, G__16573);
      } else {
        var G__16595 = i + 1;
        var G__16596 = j + 1;
        var G__16597 = init__$2;
        i = G__16595;
        j = G__16596;
        init__$1 = G__16597;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__16574 = self__.meta;
  var G__16575 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__16576 = self__.start;
  var G__16577 = function() {
    var x__4620__auto__ = self__.end;
    var y__4621__auto__ = v_pos + 1;
    return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
  }();
  var G__16578 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16574, G__16575, G__16576, G__16577, G__16578) : cljs.core.build_subvec.call(null, G__16574, G__16575, G__16576, G__16577, G__16578);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__16579 = self__.meta;
    var G__16580 = self__.v;
    var G__16581 = self__.start;
    var G__16582 = self__.end - 1;
    var G__16583 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16579, G__16580, G__16581, G__16582, G__16583) : cljs.core.build_subvec.call(null, G__16579, G__16580, G__16581, G__16582, G__16583);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__16585 = meta__$1;
  var G__16586 = self__.v;
  var G__16587 = self__.start;
  var G__16588 = self__.end;
  var G__16589 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16585, G__16586, G__16587, G__16588, G__16589) : cljs.core.build_subvec.call(null, G__16585, G__16586, G__16587, G__16588, G__16589);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__16590 = self__.meta;
  var G__16591 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__16592 = self__.start;
  var G__16593 = self__.end + 1;
  var G__16594 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__16590, G__16591, G__16592, G__16593, G__16594) : cljs.core.build_subvec.call(null, G__16590, G__16591, G__16592, G__16593, G__16594);
};
cljs.core.Subvec.prototype.call = function() {
  var G__16598 = null;
  var G__16598__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__16598__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__16598 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16598__2.call(this, self__, k);
      case 3:
        return G__16598__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16598.cljs$core$IFn$_invoke$arity$2 = G__16598__2;
  G__16598.cljs$core$IFn$_invoke$arity$3 = G__16598__3;
  return G__16598;
}();
cljs.core.Subvec.prototype.apply = function(self__, args16569) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16569)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__16599 = meta;
      var G__16600 = v.v;
      var G__16601 = v.start + start;
      var G__16602 = v.start + end;
      var G__16603 = __hash;
      meta = G__16599;
      v = G__16600;
      start = G__16601;
      end = G__16602;
      __hash = G__16603;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var G__16605 = arguments.length;
  switch(G__16605) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj16610 = {};
    return obj16610;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__16618 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__16619 = level - 5;
        node = G__16618;
        level = G__16619;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__16623 = null;
  var G__16623__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16623__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16623 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16623__2.call(this, self__, k);
      case 3:
        return G__16623__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16623.cljs$core$IFn$_invoke$arity$2 = G__16623__2;
  G__16623.cljs$core$IFn$_invoke$arity$3 = G__16623__3;
  return G__16623;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args16620) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16620)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null)], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4308__auto__ = self__.front;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4308__auto__ = self__.rear;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__16624 = i + incr;
        i = G__16624;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__16625 = i + 1;
      var G__16626 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__16625;
      out = G__16626;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = function() {
    var obj16630 = {};
    return obj16630;
  }();
  var l = ks.length;
  var i_16631 = 0;
  while (true) {
    if (i_16631 < l) {
      var k_16632 = ks[i_16631];
      new_obj[k_16632] = obj[k_16632];
      var G__16633 = i_16631 + 1;
      i_16631 = G__16633;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__16637 = k;
      return goog.isString(G__16637);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__16638 = init__$1;
        var G__16639 = k;
        var G__16640 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16638, G__16639, G__16640) : f.call(null, G__16638, G__16639, G__16640);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16641 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16641) : cljs.core.deref.call(null, G__16641);
      } else {
        var G__16647 = cljs.core.rest(keys__$1);
        var G__16648 = init__$2;
        keys__$1 = G__16647;
        init__$1 = G__16648;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__16643 = k;
      return goog.isString(G__16643);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__16644 = k;
    return goog.isString(G__16644);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = function() {
      var G__16646 = k;
      return goog.isString(G__16646);
    }();
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__16634_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16634_SHARP_, self__.strobj[p1__16634_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__16649 = null;
  var G__16649__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16649__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16649 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16649__2.call(this, self__, k);
      case 3:
        return G__16649__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16649.cljs$core$IFn$_invoke$arity$2 = G__16649__2;
  G__16649.cljs$core$IFn$_invoke$arity$3 = G__16649__3;
  return G__16649;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args16635) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16635)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj16651 = {};
  return obj16651;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__16652 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16652, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16652, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null)], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__16653 = i + 2;
        i = G__16653;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__16654 = i + 2;
        i = G__16654;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__16655 = i + 2;
        i = G__16655;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__16656 = i + 2;
        i = G__16656;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__16657 = i + 2;
        i = G__16657;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = function() {
        var G__16661 = k;
        return goog.isString(G__16661);
      }();
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_16662 = 0;
  while (true) {
    if (i_16662 < l) {
      narr[i_16662] = arr[i_16662];
      var G__16663 = i_16662 + 1;
      i_16662 = G__16663;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16665 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16665) : cljs.core.keys.call(null, G__16665);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16666 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16666) : cljs.core.vals.call(null, G__16666);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16667 = cljs.core.seq(coll);
  var chunk__16668 = null;
  var count__16669 = 0;
  var i__16670 = 0;
  while (true) {
    if (i__16670 < count__16669) {
      var vec__16671 = chunk__16668.cljs$core$IIndexed$_nth$arity$2(null, i__16670);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16671, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16671, 1, null);
      var G__16672_16685 = v;
      var G__16673_16686 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16672_16685, G__16673_16686) : f.call(null, G__16672_16685, G__16673_16686);
      var G__16687 = seq__16667;
      var G__16688 = chunk__16668;
      var G__16689 = count__16669;
      var G__16690 = i__16670 + 1;
      seq__16667 = G__16687;
      chunk__16668 = G__16688;
      count__16669 = G__16689;
      i__16670 = G__16690;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16667);
      if (temp__4425__auto__) {
        var seq__16667__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16667__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__16667__$1);
          var G__16691 = cljs.core.chunk_rest(seq__16667__$1);
          var G__16692 = c__5093__auto__;
          var G__16693 = cljs.core.count(c__5093__auto__);
          var G__16694 = 0;
          seq__16667 = G__16691;
          chunk__16668 = G__16692;
          count__16669 = G__16693;
          i__16670 = G__16694;
          continue;
        } else {
          var vec__16674 = cljs.core.first(seq__16667__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16674, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16674, 1, null);
          var G__16675_16695 = v;
          var G__16676_16696 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16675_16695, G__16676_16696) : f.call(null, G__16675_16695, G__16676_16696);
          var G__16697 = cljs.core.next(seq__16667__$1);
          var G__16698 = null;
          var G__16699 = 0;
          var G__16700 = 0;
          seq__16667 = G__16697;
          chunk__16668 = G__16698;
          count__16669 = G__16699;
          i__16670 = G__16700;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__16677 = init__$1;
        var G__16678 = self__.arr[i];
        var G__16679 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16677, G__16678, G__16679) : f.call(null, G__16677, G__16678, G__16679);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16680 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16680) : cljs.core.deref.call(null, G__16680);
      } else {
        var G__16701 = i + 2;
        var G__16702 = init__$2;
        i = G__16701;
        init__$1 = G__16702;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__16681 = other;
    if (G__16681) {
      var bit__4975__auto__ = G__16681.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4975__auto__ || G__16681.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__16703 = i + 2;
              i = G__16703;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj16683 = {};
    return obj16683;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__16704 = s + 2;
            var G__16705 = d;
            s = G__16704;
            d = G__16705;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__16706 = s + 2;
            var G__16707 = d + 2;
            s = G__16706;
            d = G__16707;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__16684 = cljs.core.aclone(self__.arr);
        G__16684[idx + 1] = v;
        return G__16684;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16708 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16709 = cljs.core.next(es);
          ret = G__16708;
          es = G__16709;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__16710 = null;
  var G__16710__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16710__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16710 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16710__2.call(this, self__, k);
      case 3:
        return G__16710__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16710.cljs$core$IFn$_invoke$arity$2 = G__16710__2;
  G__16710.cljs$core$IFn$_invoke$arity$3 = G__16710__3;
  return G__16710;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args16664) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16664)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_16711 = 0;
    while (true) {
      if (i_16711 < arr__$1.length) {
        var k_16712 = arr__$1[i_16711];
        var v_16713 = arr__$1[i_16711 + 1];
        var idx_16714 = cljs.core.array_index_of(ret, k_16712);
        if (idx_16714 === -1) {
          ret.push(k_16712);
          ret.push(v_16713);
        } else {
        }
        var G__16715 = i_16711 + 2;
        i_16711 = G__16715;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__16716 = o;
      if (G__16716) {
        var bit__4982__auto__ = G__16716.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__16716.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__16716.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16716);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16716);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__16717 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16717) : cljs.core.key.call(null, G__16717);
      }(), function() {
        var G__16718 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16718) : cljs.core.val.call(null, G__16718);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__16724 = cljs.core.next(es);
          var G__16725 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__16719 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16719) : cljs.core.key.call(null, G__16719);
          }(), function() {
            var G__16720 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16720) : cljs.core.val.call(null, G__16720);
          }());
          es = G__16724;
          tcoll__$2 = G__16725;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__16721 = self__.len;
          var G__16722 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__16721, G__16722) : cljs.core.array__GT_transient_hash_map.call(null, G__16721, G__16722);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__16723_16726 = self__.arr;
      G__16723_16726.pop();
      G__16723_16726.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__16727 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__16728 = i + 2;
      out = G__16727;
      i = G__16728;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var G__16730 = arguments.length;
  switch(G__16730) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__16731 = cljs.core.aclone(arr);
  G__16731[i] = a;
  return G__16731;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__16732 = cljs.core.aclone(arr);
  G__16732[i] = a;
  G__16732[j] = b;
  return G__16732;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var G__16735 = arguments.length;
  switch(G__16735) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__16741 = init__$1;
          var G__16742 = k;
          var G__16743 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16741, G__16742, G__16743) : f.call(null, G__16741, G__16742, G__16743);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__16744 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16744) : cljs.core.deref.call(null, G__16744);
      } else {
        var G__16745 = i + 2;
        var G__16746 = init__$2;
        i = G__16745;
        init__$1 = G__16746;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16747 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16747) : cljs.core.create_inode_seq.call(null, G__16747);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_16761 = 0;
        var j_16762 = 0;
        while (true) {
          if (i_16761 < 32) {
            if ((self__.bitmap >>> i_16761 & 1) === 0) {
              var G__16763 = i_16761 + 1;
              var G__16764 = j_16762;
              i_16761 = G__16763;
              j_16762 = G__16764;
              continue;
            } else {
              nodes[i_16761] = !(self__.arr[j_16762] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_16762]), self__.arr[j_16762], self__.arr[j_16762 + 1], added_leaf_QMARK_) : self__.arr[j_16762 + 1];
              var G__16765 = i_16761 + 1;
              var G__16766 = j_16762 + 2;
              i_16761 = G__16765;
              j_16762 = G__16766;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__16748 = edit__$1;
          var G__16749 = shift + 5;
          var G__16750 = key_or_nil;
          var G__16751 = val_or_node;
          var G__16752 = hash;
          var G__16753 = key;
          var G__16754 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754) : cljs.core.create_node.call(null, G__16748, G__16749, G__16750, G__16751, G__16752, G__16753, G__16754);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_16767 = 0;
      var j_16768 = 0;
      while (true) {
        if (i_16767 < 32) {
          if ((self__.bitmap >>> i_16767 & 1) === 0) {
            var G__16769 = i_16767 + 1;
            var G__16770 = j_16768;
            i_16767 = G__16769;
            j_16768 = G__16770;
            continue;
          } else {
            nodes[i_16767] = !(self__.arr[j_16768] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_16768]), self__.arr[j_16768], self__.arr[j_16768 + 1], added_leaf_QMARK_) : self__.arr[j_16768 + 1];
            var G__16771 = i_16767 + 1;
            var G__16772 = j_16768 + 2;
            i_16767 = G__16771;
            j_16768 = G__16772;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__16755 = shift + 5;
          var G__16756 = key_or_nil;
          var G__16757 = val_or_node;
          var G__16758 = hash;
          var G__16759 = key;
          var G__16760 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__16755, G__16756, G__16757, G__16758, G__16759, G__16760) : cljs.core.create_node.call(null, G__16755, G__16756, G__16757, G__16758, G__16759, G__16760);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__16773 = i + 1;
        var G__16774 = j + 2;
        var G__16775 = bitmap | 1 << i;
        i = G__16773;
        j = G__16774;
        bitmap = G__16775;
        continue;
      } else {
        var G__16776 = i + 1;
        var G__16777 = j;
        var G__16778 = bitmap;
        i = G__16776;
        j = G__16777;
        bitmap = G__16778;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16779 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__16779) : cljs.core.create_array_node_seq.call(null, G__16779);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__16780 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16780) : cljs.core.deref.call(null, G__16780);
        } else {
          var G__16781 = i + 1;
          var G__16782 = init__$2;
          i = G__16781;
          init__$1 = G__16782;
          continue;
        }
      } else {
        var G__16783 = i + 1;
        var G__16784 = init__$1;
        i = G__16783;
        init__$1 = G__16784;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__16785 = i + 2;
        i = G__16785;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__16786 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__16786) : cljs.core.create_inode_seq.call(null, G__16786);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var G__16788 = arguments.length;
  switch(G__16788) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__16790 = self__.nodes;
    var G__16791 = self__.i + 2;
    var G__16792 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16790, G__16791, G__16792) : cljs.core.create_inode_seq.call(null, G__16790, G__16791, G__16792);
  } else {
    var G__16793 = self__.nodes;
    var G__16794 = self__.i;
    var G__16795 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__16793, G__16794, G__16795) : cljs.core.create_inode_seq.call(null, G__16793, G__16794, G__16795);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var G__16797 = arguments.length;
  switch(G__16797) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__16799 = j + 2;
              j = G__16799;
              continue;
            }
          } else {
            var G__16800 = j + 2;
            j = G__16800;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__16801 = null;
  var G__16802 = self__.nodes;
  var G__16803 = self__.i;
  var G__16804 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__16801, G__16802, G__16803, G__16804) : cljs.core.create_array_node_seq.call(null, G__16801, G__16802, G__16803, G__16804);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var G__16806 = arguments.length;
  switch(G__16806) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__16808 = j + 1;
            j = G__16808;
            continue;
          }
        } else {
          var G__16809 = j + 1;
          j = G__16809;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16811 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16811) : cljs.core.keys.call(null, G__16811);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16812 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16812) : cljs.core.vals.call(null, G__16812);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16813 = cljs.core.seq(coll);
  var chunk__16814 = null;
  var count__16815 = 0;
  var i__16816 = 0;
  while (true) {
    if (i__16816 < count__16815) {
      var vec__16817 = chunk__16814.cljs$core$IIndexed$_nth$arity$2(null, i__16816);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16817, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16817, 1, null);
      var G__16818_16829 = v;
      var G__16819_16830 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16818_16829, G__16819_16830) : f.call(null, G__16818_16829, G__16819_16830);
      var G__16831 = seq__16813;
      var G__16832 = chunk__16814;
      var G__16833 = count__16815;
      var G__16834 = i__16816 + 1;
      seq__16813 = G__16831;
      chunk__16814 = G__16832;
      count__16815 = G__16833;
      i__16816 = G__16834;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16813);
      if (temp__4425__auto__) {
        var seq__16813__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16813__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__16813__$1);
          var G__16835 = cljs.core.chunk_rest(seq__16813__$1);
          var G__16836 = c__5093__auto__;
          var G__16837 = cljs.core.count(c__5093__auto__);
          var G__16838 = 0;
          seq__16813 = G__16835;
          chunk__16814 = G__16836;
          count__16815 = G__16837;
          i__16816 = G__16838;
          continue;
        } else {
          var vec__16820 = cljs.core.first(seq__16813__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16820, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16820, 1, null);
          var G__16821_16839 = v;
          var G__16822_16840 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16821_16839, G__16822_16840) : f.call(null, G__16821_16839, G__16822_16840);
          var G__16841 = cljs.core.next(seq__16813__$1);
          var G__16842 = null;
          var G__16843 = 0;
          var G__16844 = 0;
          seq__16813 = G__16841;
          chunk__16814 = G__16842;
          count__16815 = G__16843;
          i__16816 = G__16844;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__16823 = init;
    var G__16824 = null;
    var G__16825 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16823, G__16824, G__16825) : f.call(null, G__16823, G__16824, G__16825);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__16826 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16826) : cljs.core.deref.call(null, G__16826);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj16828 = {};
    return obj16828;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16845 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16846 = cljs.core.next(es);
          ret = G__16845;
          es = G__16846;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__16847 = null;
  var G__16847__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16847__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16847 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16847__2.call(this, self__, k);
      case 3:
        return G__16847__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16847.cljs$core$IFn$_invoke$arity$2 = G__16847__2;
  G__16847.cljs$core$IFn$_invoke$arity$3 = G__16847__3;
  return G__16847;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args16810) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16810)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16848 = i + 2;
      var G__16849 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__16848;
      ret = G__16849;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__16850 = i + 1;
      var G__16851 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__16850;
      out = G__16851;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__16852 = o;
      if (G__16852) {
        var bit__4982__auto__ = G__16852.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4982__auto__ || G__16852.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__16852.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16852);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__16852);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__16853 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16853) : cljs.core.key.call(null, G__16853);
      }(), function() {
        var G__16854 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16854) : cljs.core.val.call(null, G__16854);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__16857 = cljs.core.next(es);
          var G__16858 = tcoll__$1.assoc_BANG_(function() {
            var G__16855 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16855) : cljs.core.key.call(null, G__16855);
          }(), function() {
            var G__16856 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__16856) : cljs.core.val.call(null, G__16856);
          }());
          es = G__16857;
          tcoll__$1 = G__16858;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null)], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__16859 = ascending_QMARK_ ? t.left : t.right;
      var G__16860 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__16859;
      stack__$1 = G__16860;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__16873 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16873) : cljs.core.deref.call(null, G__16873);
  } else {
    var init__$2 = function() {
      var G__16874 = init__$1;
      var G__16875 = node.key;
      var G__16876 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16874, G__16875, G__16876) : f.call(null, G__16874, G__16875, G__16876);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__16877 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16877) : cljs.core.deref.call(null, G__16877);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__16878 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16878) : cljs.core.deref.call(null, G__16878);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__16880 = null;
  var G__16880__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16880__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16880 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16880__2.call(this, self__, k);
      case 3:
        return G__16880__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16880.cljs$core$IFn$_invoke$arity$2 = G__16880__2;
  G__16880.cljs$core$IFn$_invoke$arity$3 = G__16880__3;
  return G__16880;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args16879) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16879)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__16882 = null;
  var G__16882__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16882__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16882 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16882__2.call(this, self__, k);
      case 3:
        return G__16882__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16882.cljs$core$IFn$_invoke$arity$2 = G__16882__2;
  G__16882.cljs$core$IFn$_invoke$arity$3 = G__16882__3;
  return G__16882;
}();
cljs.core.RedNode.prototype.apply = function(self__, args16881) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16881)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__16895 = k;
      var G__16896 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16895, G__16896) : comp.call(null, G__16895, G__16896);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__16915 = k;
      var G__16916 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16915, G__16916) : comp.call(null, G__16915, G__16916);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__16927 = k;
    var G__16928 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__16927, G__16928) : comp.call(null, G__16927, G__16928);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__16930 = cljs.core.seq(coll);
  var chunk__16931 = null;
  var count__16932 = 0;
  var i__16933 = 0;
  while (true) {
    if (i__16933 < count__16932) {
      var vec__16934 = chunk__16931.cljs$core$IIndexed$_nth$arity$2(null, i__16933);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16934, 1, null);
      var G__16935_16947 = v;
      var G__16936_16948 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16935_16947, G__16936_16948) : f.call(null, G__16935_16947, G__16936_16948);
      var G__16949 = seq__16930;
      var G__16950 = chunk__16931;
      var G__16951 = count__16932;
      var G__16952 = i__16933 + 1;
      seq__16930 = G__16949;
      chunk__16931 = G__16950;
      count__16932 = G__16951;
      i__16933 = G__16952;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__16930);
      if (temp__4425__auto__) {
        var seq__16930__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__16930__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__16930__$1);
          var G__16953 = cljs.core.chunk_rest(seq__16930__$1);
          var G__16954 = c__5093__auto__;
          var G__16955 = cljs.core.count(c__5093__auto__);
          var G__16956 = 0;
          seq__16930 = G__16953;
          chunk__16931 = G__16954;
          count__16932 = G__16955;
          i__16933 = G__16956;
          continue;
        } else {
          var vec__16937 = cljs.core.first(seq__16930__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16937, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16937, 1, null);
          var G__16938_16957 = v;
          var G__16939_16958 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16938_16957, G__16939_16958) : f.call(null, G__16938_16957, G__16939_16958);
          var G__16959 = cljs.core.next(seq__16930__$1);
          var G__16960 = null;
          var G__16961 = 0;
          var G__16962 = 0;
          seq__16930 = G__16959;
          chunk__16931 = G__16960;
          count__16932 = G__16961;
          i__16933 = G__16962;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16940 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__16940) : cljs.core.keys.call(null, G__16940);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__16941 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__16941) : cljs.core.vals.call(null, G__16941);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__16942 = k;
        var G__16943 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16942, G__16943) : self__.comp.call(null, G__16942, G__16943);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__16963 = t.left;
          t = G__16963;
          continue;
        } else {
          var G__16964 = t.right;
          t = G__16964;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__16965 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__16966 = cljs.core.next(es);
          ret = G__16965;
          es = G__16966;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__16967 = null;
  var G__16967__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__16967__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__16967 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__16967__2.call(this, self__, k);
      case 3:
        return G__16967__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__16967.cljs$core$IFn$_invoke$arity$2 = G__16967__2;
  G__16967.cljs$core$IFn$_invoke$arity$3 = G__16967__3;
  return G__16967;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args16929) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args16929)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__16944 = k;
          var G__16945 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__16944, G__16945) : self__.comp.call(null, G__16944, G__16945);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__16968 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16969 = t.left;
              stack = G__16968;
              t = G__16969;
              continue;
            } else {
              var G__16970 = stack;
              var G__16971 = t.right;
              stack = G__16970;
              t = G__16971;
              continue;
            }
          } else {
            if (c > 0) {
              var G__16972 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__16973 = t.right;
              stack = G__16972;
              t = G__16973;
              continue;
            } else {
              var G__16974 = stack;
              var G__16975 = t.left;
              stack = G__16974;
              t = G__16975;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__16946 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__16946) : cljs.core.key.call(null, G__16946);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__16977 = cljs.core.nnext(in$);
      var G__16978 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16977;
      out = G__16978;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq16976) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16976));
};
cljs.core.array_map = function cljs$core$array_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq16979) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16979));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = function() {
    var obj16982 = {};
    return obj16982;
  }();
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__16983 = cljs.core.nnext(kvs);
      kvs = G__16983;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq16980) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16980));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__16985 = cljs.core.nnext(in$);
      var G__16986 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16985;
      out = G__16986;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq16984) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16984));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__16989 = cljs.core.nnext(in$);
      var G__16990 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__16989;
      out = G__16990;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq16987) {
  var G__16988 = cljs.core.first(seq16987);
  var seq16987__$1 = cljs.core.next(seq16987);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__16988, seq16987__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16991 = self__.mseq;
    if (G__16991) {
      var bit__4982__auto__ = G__16991.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__16991.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16991.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16991);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16991);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16992 = self__.mseq;
    if (G__16992) {
      var bit__4982__auto__ = G__16992.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__16992.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16992.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16992);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16992);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16993 = self__.mseq;
    if (G__16993) {
      var bit__4982__auto__ = G__16993.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__16993.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16993.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16993);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16993);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__16994 = self__.mseq;
    if (G__16994) {
      var bit__4982__auto__ = G__16994.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4982__auto__ || G__16994.cljs$core$INext$) {
        return true;
      } else {
        if (!G__16994.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16994);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__16994);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__16995_SHARP_, p2__16996_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4308__auto__ = p1__16995_SHARP_;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__16996_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq16997) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq16997));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__17000 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__17001 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17000, G__17001) : f.call(null, G__17000, G__17001);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4308__auto__ = m1;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq16998) {
  var G__16999 = cljs.core.first(seq16998);
  var seq16998__$1 = cljs.core.next(seq16998);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__16999, seq16998__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__17002 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__17003 = cljs.core.next(keys);
      ret = G__17002;
      keys = G__17003;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__17006 = cljs.core.seq(coll);
  var chunk__17007 = null;
  var count__17008 = 0;
  var i__17009 = 0;
  while (true) {
    if (i__17009 < count__17008) {
      var vec__17010 = chunk__17007.cljs$core$IIndexed$_nth$arity$2(null, i__17009);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17010, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17010, 1, null);
      var G__17011_17016 = v;
      var G__17012_17017 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17011_17016, G__17012_17017) : f.call(null, G__17011_17016, G__17012_17017);
      var G__17018 = seq__17006;
      var G__17019 = chunk__17007;
      var G__17020 = count__17008;
      var G__17021 = i__17009 + 1;
      seq__17006 = G__17018;
      chunk__17007 = G__17019;
      count__17008 = G__17020;
      i__17009 = G__17021;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17006);
      if (temp__4425__auto__) {
        var seq__17006__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17006__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__17006__$1);
          var G__17022 = cljs.core.chunk_rest(seq__17006__$1);
          var G__17023 = c__5093__auto__;
          var G__17024 = cljs.core.count(c__5093__auto__);
          var G__17025 = 0;
          seq__17006 = G__17022;
          chunk__17007 = G__17023;
          count__17008 = G__17024;
          i__17009 = G__17025;
          continue;
        } else {
          var vec__17013 = cljs.core.first(seq__17006__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17013, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17013, 1, null);
          var G__17014_17026 = v;
          var G__17015_17027 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17014_17026, G__17015_17027) : f.call(null, G__17014_17026, G__17015_17027);
          var G__17028 = cljs.core.next(seq__17006__$1);
          var G__17029 = null;
          var G__17030 = 0;
          var G__17031 = 0;
          seq__17006 = G__17028;
          chunk__17007 = G__17029;
          count__17008 = G__17030;
          i__17009 = G__17031;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__17004_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__17004_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__17032 = null;
  var G__17032__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17032__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17032 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17032__2.call(this, self__, k);
      case 3:
        return G__17032__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17032.cljs$core$IFn$_invoke$arity$2 = G__17032__2;
  G__17032.cljs$core$IFn$_invoke$arity$3 = G__17032__3;
  return G__17032;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args17005) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17005)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__17033 = i + 1;
        var G__17034 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__17033;
        out = G__17034;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__17035 = i + 1;
        var G__17036 = cljs.core._conj_BANG_(out, items[i]);
        i = G__17035;
        out = G__17036;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__17038 = null;
  var G__17038__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__17038__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__17038 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17038__2.call(this, self__, k);
      case 3:
        return G__17038__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17038.cljs$core$IFn$_invoke$arity$2 = G__17038__2;
  G__17038.cljs$core$IFn$_invoke$arity$3 = G__17038__3;
  return G__17038;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args17037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17037)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null)], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__17041 = cljs.core.seq(coll);
  var chunk__17042 = null;
  var count__17043 = 0;
  var i__17044 = 0;
  while (true) {
    if (i__17044 < count__17043) {
      var vec__17045 = chunk__17042.cljs$core$IIndexed$_nth$arity$2(null, i__17044);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17045, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17045, 1, null);
      var G__17046_17051 = v;
      var G__17047_17052 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17046_17051, G__17047_17052) : f.call(null, G__17046_17051, G__17047_17052);
      var G__17053 = seq__17041;
      var G__17054 = chunk__17042;
      var G__17055 = count__17043;
      var G__17056 = i__17044 + 1;
      seq__17041 = G__17053;
      chunk__17042 = G__17054;
      count__17043 = G__17055;
      i__17044 = G__17056;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17041);
      if (temp__4425__auto__) {
        var seq__17041__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17041__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__17041__$1);
          var G__17057 = cljs.core.chunk_rest(seq__17041__$1);
          var G__17058 = c__5093__auto__;
          var G__17059 = cljs.core.count(c__5093__auto__);
          var G__17060 = 0;
          seq__17041 = G__17057;
          chunk__17042 = G__17058;
          count__17043 = G__17059;
          i__17044 = G__17060;
          continue;
        } else {
          var vec__17048 = cljs.core.first(seq__17041__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17048, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17048, 1, null);
          var G__17049_17061 = v;
          var G__17050_17062 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17049_17061, G__17050_17062) : f.call(null, G__17049_17061, G__17050_17062);
          var G__17063 = cljs.core.next(seq__17041__$1);
          var G__17064 = null;
          var G__17065 = 0;
          var G__17066 = 0;
          seq__17041 = G__17063;
          chunk__17042 = G__17064;
          count__17043 = G__17065;
          i__17044 = G__17066;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__17039_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__17039_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__17067 = null;
  var G__17067__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__17067__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__17067 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__17067__2.call(this, self__, k);
      case 3:
        return G__17067__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__17067.cljs$core$IFn$_invoke$arity$2 = G__17067__2;
  G__17067.cljs$core$IFn$_invoke$arity$3 = G__17067__3;
  return G__17067;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args17040) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17040)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5187__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5187__auto__.length) {
        var G__17068 = i + 1;
        var G__17069 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__17068;
        res = G__17069;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__17070 = cljs.core.next(in$__$1);
          var G__17071 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__17070;
          out = G__17071;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var G__17074 = arguments.length;
  switch(G__17074) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5359__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq17072) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17072));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq17076) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17076));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq17077) {
  var G__17078 = cljs.core.first(seq17077);
  var seq17077__$1 = cljs.core.next(seq17077);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__17078, seq17077__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var G__17082 = arguments.length;
  switch(G__17082) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__17079_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__17079_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__17079_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__17080_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__17080_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__17080_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var G__17085 = arguments.length;
  switch(G__17085) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__17097 = null;
        var G__17097__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17097__1 = function(result) {
          var G__17086 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17086) : rf.call(null, G__17086);
        };
        var G__17097__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(function() {
            var G__17087 = seen;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17087) : cljs.core.deref.call(null, G__17087);
          }(), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            var G__17088 = result;
            var G__17089 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17088, G__17089) : rf.call(null, G__17088, G__17089);
          }
        };
        G__17097 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17097__0.call(this);
            case 1:
              return G__17097__1.call(this, result);
            case 2:
              return G__17097__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17097.cljs$core$IFn$_invoke$arity$0 = G__17097__0;
        G__17097.cljs$core$IFn$_invoke$arity$1 = G__17097__1;
        G__17097.cljs$core$IFn$_invoke$arity$2 = G__17097__2;
        return G__17097;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__17094, seen__$1) {
        while (true) {
          var vec__17095 = p__17094;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17095, 0, null);
          var xs__$1 = vec__17095;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__17098 = cljs.core.rest(s);
              var G__17099 = seen__$1;
              p__17094 = G__17098;
              seen__$1 = G__17099;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__17100 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__17101 = cljs.core.next(s__$1);
      ret = G__17100;
      s__$1 = G__17101;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (function() {
    var G__17103 = x;
    if (G__17103) {
      var bit__4975__auto__ = G__17103.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4975__auto__ || G__17103.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__17104 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__17105 = cljs.core.next(ks);
      var G__17106 = cljs.core.next(vs);
      map = G__17104;
      ks = G__17105;
      vs = G__17106;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var G__17114 = arguments.length;
  switch(G__17114) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__17115 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17115) : k.call(null, G__17115);
  }() > function() {
    var G__17116 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17116) : k.call(null, G__17116);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17107_SHARP_, p2__17108_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__17107_SHARP_, p2__17108_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq17109) {
  var G__17110 = cljs.core.first(seq17109);
  var seq17109__$1 = cljs.core.next(seq17109);
  var G__17111 = cljs.core.first(seq17109__$1);
  var seq17109__$2 = cljs.core.next(seq17109__$1);
  var G__17112 = cljs.core.first(seq17109__$2);
  var seq17109__$3 = cljs.core.next(seq17109__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__17110, G__17111, G__17112, seq17109__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var G__17125 = arguments.length;
  switch(G__17125) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if (function() {
    var G__17126 = x;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17126) : k.call(null, G__17126);
  }() < function() {
    var G__17127 = y;
    return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__17127) : k.call(null, G__17127);
  }()) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17118_SHARP_, p2__17119_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__17118_SHARP_, p2__17119_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq17120) {
  var G__17121 = cljs.core.first(seq17120);
  var seq17120__$1 = cljs.core.next(seq17120);
  var G__17122 = cljs.core.first(seq17120__$1);
  var seq17120__$2 = cljs.core.next(seq17120__$1);
  var G__17123 = cljs.core.first(seq17120__$2);
  var seq17120__$3 = cljs.core.next(seq17120__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__17121, G__17122, G__17123, seq17120__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var G__17130 = arguments.length;
  switch(G__17130) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__17137 = null;
        var G__17137__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17137__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__17131 = result;
              var G__17132 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17131, G__17132) : rf.call(null, G__17131, G__17132);
            }());
          }();
          var G__17133 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17133) : rf.call(null, G__17133);
        };
        var G__17137__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var G__17134 = result;
            var G__17135 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17134, G__17135) : rf.call(null, G__17134, G__17135);
          } else {
            return result;
          }
        };
        G__17137 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17137__0.call(this);
            case 1:
              return G__17137__1.call(this, result);
            case 2:
              return G__17137__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17137.cljs$core$IFn$_invoke$arity$0 = G__17137__0;
        G__17137.cljs$core$IFn$_invoke$arity$1 = G__17137__1;
        G__17137.cljs$core$IFn$_invoke$arity$2 = G__17137__2;
        return G__17137;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var G__17139 = arguments.length;
  switch(G__17139) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__17146 = null;
      var G__17146__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__17146__1 = function(result) {
        var G__17140 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17140) : rf.call(null, G__17140);
      };
      var G__17146__2 = function(result, input) {
        if (cljs.core.truth_(function() {
          var G__17141 = input;
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17141) : pred.call(null, G__17141);
        }())) {
          var G__17142 = result;
          var G__17143 = input;
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17142, G__17143) : rf.call(null, G__17142, G__17143);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__17146 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__17146__0.call(this);
          case 1:
            return G__17146__1.call(this, result);
          case 2:
            return G__17146__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17146.cljs$core$IFn$_invoke$arity$0 = G__17146__0;
      G__17146.cljs$core$IFn$_invoke$arity$1 = G__17146__1;
      G__17146.cljs$core$IFn$_invoke$arity$2 = G__17146__2;
      return G__17146;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__17144 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__17144) : pred.call(null, G__17144);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__17151 = function() {
      var G__17153 = cljs.core._entry_key(sc, e);
      var G__17154 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__17153, G__17154) : comp.call(null, G__17153, G__17154);
    }();
    var G__17152 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__17151, G__17152) : test.call(null, G__17151, G__17152);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var G__17156 = arguments.length;
  switch(G__17156) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__17157 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17157, 0, null);
      var s = vec__17157;
      if (cljs.core.truth_(function() {
        var G__17158 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17158) : include.call(null, G__17158);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__17159 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17159, 0, null);
    var s = vec__17159;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var G__17162 = arguments.length;
  switch(G__17162) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__17163 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17163, 0, null);
      var s = vec__17163;
      if (cljs.core.truth_(function() {
        var G__17164 = e;
        return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__17164) : include.call(null, G__17164);
      }())) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__17165 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17165, 0, null);
    var s = vec__17165;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__17167 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__17167);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__17168 = ret;
        var G__17169 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17168, G__17169) : f.call(null, G__17168, G__17169);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__17170 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17170) : cljs.core.deref.call(null, G__17170);
      } else {
        var G__17171 = i + self__.step;
        var G__17172 = ret__$1;
        i = G__17171;
        ret = G__17172;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.range = function cljs$core$range() {
  var G__17174 = arguments.length;
  switch(G__17174) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var G__17177 = arguments.length;
  switch(G__17177) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__17182 = null;
        var G__17182__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17182__1 = function(result) {
          var G__17178 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17178) : rf.call(null, G__17178);
        };
        var G__17182__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            var G__17179 = result;
            var G__17180 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17179, G__17180) : rf.call(null, G__17179, G__17180);
          } else {
            return result;
          }
        };
        G__17182 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17182__0.call(this);
            case 1:
              return G__17182__1.call(this, result);
            case 2:
              return G__17182__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17182.cljs$core$IFn$_invoke$arity$0 = G__17182__0;
        G__17182.cljs$core$IFn$_invoke$arity$1 = G__17182__1;
        G__17182.cljs$core$IFn$_invoke$arity$2 = G__17182__2;
        return G__17182;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var G__17185 = arguments.length;
  switch(G__17185) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__17196 = null;
        var G__17196__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17196__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(function() {
              var G__17186 = result;
              var G__17187 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17186, G__17187) : rf.call(null, G__17186, G__17187);
            }());
          }();
          var G__17188 = result__$1;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17188) : rf.call(null, G__17188);
        };
        var G__17196__2 = function(result, input) {
          var pval = function() {
            var G__17189 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17189) : cljs.core.deref.call(null, G__17189);
          }();
          var val = function() {
            var G__17190 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17190) : f.call(null, G__17190);
          }();
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = function() {
              var G__17191 = result;
              var G__17192 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17191, G__17192) : rf.call(null, G__17191, G__17192);
            }();
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__17196 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17196__0.call(this);
            case 1:
              return G__17196__1.call(this, result);
            case 2:
              return G__17196__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17196.cljs$core$IFn$_invoke$arity$0 = G__17196__0;
        G__17196.cljs$core$IFn$_invoke$arity$1 = G__17196__1;
        G__17196.cljs$core$IFn$_invoke$arity$2 = G__17196__2;
        return G__17196;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = function() {
        var G__17193 = fst;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17193) : f.call(null, G__17193);
      }();
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__17183_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
            var G__17194 = p1__17183_SHARP_;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17194) : f.call(null, G__17194);
          }());
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var G__17198 = arguments.length;
  switch(G__17198) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__17199 = init;
        var G__17200 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17199, G__17200) : f.call(null, G__17199, G__17200);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var G__17217 = arguments.length;
  switch(G__17217) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5359__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__17261 = null;
    var G__17261__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }()], null);
    };
    var G__17261__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17218 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17218) : f.call(null, G__17218);
      }()], null);
    };
    var G__17261__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17219 = x;
        var G__17220 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17219, G__17220) : f.call(null, G__17219, G__17220);
      }()], null);
    };
    var G__17261__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17221 = x;
        var G__17222 = y;
        var G__17223 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17221, G__17222, G__17223) : f.call(null, G__17221, G__17222, G__17223);
      }()], null);
    };
    var G__17261__4 = function() {
      var G__17262__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__17262 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__17263__i = 0, G__17263__a = new Array(arguments.length - 3);
          while (G__17263__i < G__17263__a.length) {
            G__17263__a[G__17263__i] = arguments[G__17263__i + 3];
            ++G__17263__i;
          }
          args = new cljs.core.IndexedSeq(G__17263__a, 0);
        }
        return G__17262__delegate.call(this, x, y, z, args);
      };
      G__17262.cljs$lang$maxFixedArity = 3;
      G__17262.cljs$lang$applyTo = function(arglist__17264) {
        var x = cljs.core.first(arglist__17264);
        arglist__17264 = cljs.core.next(arglist__17264);
        var y = cljs.core.first(arglist__17264);
        arglist__17264 = cljs.core.next(arglist__17264);
        var z = cljs.core.first(arglist__17264);
        var args = cljs.core.rest(arglist__17264);
        return G__17262__delegate(x, y, z, args);
      };
      G__17262.cljs$core$IFn$_invoke$arity$variadic = G__17262__delegate;
      return G__17262;
    }();
    G__17261 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__17261__0.call(this);
        case 1:
          return G__17261__1.call(this, x);
        case 2:
          return G__17261__2.call(this, x, y);
        case 3:
          return G__17261__3.call(this, x, y, z);
        default:
          var G__17265 = null;
          if (arguments.length > 3) {
            var G__17266__i = 0, G__17266__a = new Array(arguments.length - 3);
            while (G__17266__i < G__17266__a.length) {
              G__17266__a[G__17266__i] = arguments[G__17266__i + 3];
              ++G__17266__i;
            }
            G__17265 = new cljs.core.IndexedSeq(G__17266__a, 0);
          }
          return G__17261__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__17265);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__17261.cljs$lang$maxFixedArity = 3;
    G__17261.cljs$lang$applyTo = G__17261__4.cljs$lang$applyTo;
    G__17261.cljs$core$IFn$_invoke$arity$0 = G__17261__0;
    G__17261.cljs$core$IFn$_invoke$arity$1 = G__17261__1;
    G__17261.cljs$core$IFn$_invoke$arity$2 = G__17261__2;
    G__17261.cljs$core$IFn$_invoke$arity$3 = G__17261__3;
    G__17261.cljs$core$IFn$_invoke$arity$variadic = G__17261__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__17261;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__17267 = null;
    var G__17267__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }()], null);
    };
    var G__17267__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17224 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17224) : f.call(null, G__17224);
      }(), function() {
        var G__17225 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17225) : g.call(null, G__17225);
      }()], null);
    };
    var G__17267__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17226 = x;
        var G__17227 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17226, G__17227) : f.call(null, G__17226, G__17227);
      }(), function() {
        var G__17228 = x;
        var G__17229 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17228, G__17229) : g.call(null, G__17228, G__17229);
      }()], null);
    };
    var G__17267__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17230 = x;
        var G__17231 = y;
        var G__17232 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17230, G__17231, G__17232) : f.call(null, G__17230, G__17231, G__17232);
      }(), function() {
        var G__17233 = x;
        var G__17234 = y;
        var G__17235 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17233, G__17234, G__17235) : g.call(null, G__17233, G__17234, G__17235);
      }()], null);
    };
    var G__17267__4 = function() {
      var G__17268__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__17268 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__17269__i = 0, G__17269__a = new Array(arguments.length - 3);
          while (G__17269__i < G__17269__a.length) {
            G__17269__a[G__17269__i] = arguments[G__17269__i + 3];
            ++G__17269__i;
          }
          args = new cljs.core.IndexedSeq(G__17269__a, 0);
        }
        return G__17268__delegate.call(this, x, y, z, args);
      };
      G__17268.cljs$lang$maxFixedArity = 3;
      G__17268.cljs$lang$applyTo = function(arglist__17270) {
        var x = cljs.core.first(arglist__17270);
        arglist__17270 = cljs.core.next(arglist__17270);
        var y = cljs.core.first(arglist__17270);
        arglist__17270 = cljs.core.next(arglist__17270);
        var z = cljs.core.first(arglist__17270);
        var args = cljs.core.rest(arglist__17270);
        return G__17268__delegate(x, y, z, args);
      };
      G__17268.cljs$core$IFn$_invoke$arity$variadic = G__17268__delegate;
      return G__17268;
    }();
    G__17267 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__17267__0.call(this);
        case 1:
          return G__17267__1.call(this, x);
        case 2:
          return G__17267__2.call(this, x, y);
        case 3:
          return G__17267__3.call(this, x, y, z);
        default:
          var G__17271 = null;
          if (arguments.length > 3) {
            var G__17272__i = 0, G__17272__a = new Array(arguments.length - 3);
            while (G__17272__i < G__17272__a.length) {
              G__17272__a[G__17272__i] = arguments[G__17272__i + 3];
              ++G__17272__i;
            }
            G__17271 = new cljs.core.IndexedSeq(G__17272__a, 0);
          }
          return G__17267__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__17271);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__17267.cljs$lang$maxFixedArity = 3;
    G__17267.cljs$lang$applyTo = G__17267__4.cljs$lang$applyTo;
    G__17267.cljs$core$IFn$_invoke$arity$0 = G__17267__0;
    G__17267.cljs$core$IFn$_invoke$arity$1 = G__17267__1;
    G__17267.cljs$core$IFn$_invoke$arity$2 = G__17267__2;
    G__17267.cljs$core$IFn$_invoke$arity$3 = G__17267__3;
    G__17267.cljs$core$IFn$_invoke$arity$variadic = G__17267__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__17267;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__17273 = null;
    var G__17273__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), function() {
        return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      }(), function() {
        return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
      }()], null);
    };
    var G__17273__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17236 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17236) : f.call(null, G__17236);
      }(), function() {
        var G__17237 = x;
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__17237) : g.call(null, G__17237);
      }(), function() {
        var G__17238 = x;
        return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__17238) : h.call(null, G__17238);
      }()], null);
    };
    var G__17273__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17239 = x;
        var G__17240 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__17239, G__17240) : f.call(null, G__17239, G__17240);
      }(), function() {
        var G__17241 = x;
        var G__17242 = y;
        return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__17241, G__17242) : g.call(null, G__17241, G__17242);
      }(), function() {
        var G__17243 = x;
        var G__17244 = y;
        return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__17243, G__17244) : h.call(null, G__17243, G__17244);
      }()], null);
    };
    var G__17273__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var G__17245 = x;
        var G__17246 = y;
        var G__17247 = z;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__17245, G__17246, G__17247) : f.call(null, G__17245, G__17246, G__17247);
      }(), function() {
        var G__17248 = x;
        var G__17249 = y;
        var G__17250 = z;
        return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__17248, G__17249, G__17250) : g.call(null, G__17248, G__17249, G__17250);
      }(), function() {
        var G__17251 = x;
        var G__17252 = y;
        var G__17253 = z;
        return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__17251, G__17252, G__17253) : h.call(null, G__17251, G__17252, G__17253);
      }()], null);
    };
    var G__17273__4 = function() {
      var G__17274__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__17274 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__17275__i = 0, G__17275__a = new Array(arguments.length - 3);
          while (G__17275__i < G__17275__a.length) {
            G__17275__a[G__17275__i] = arguments[G__17275__i + 3];
            ++G__17275__i;
          }
          args = new cljs.core.IndexedSeq(G__17275__a, 0);
        }
        return G__17274__delegate.call(this, x, y, z, args);
      };
      G__17274.cljs$lang$maxFixedArity = 3;
      G__17274.cljs$lang$applyTo = function(arglist__17276) {
        var x = cljs.core.first(arglist__17276);
        arglist__17276 = cljs.core.next(arglist__17276);
        var y = cljs.core.first(arglist__17276);
        arglist__17276 = cljs.core.next(arglist__17276);
        var z = cljs.core.first(arglist__17276);
        var args = cljs.core.rest(arglist__17276);
        return G__17274__delegate(x, y, z, args);
      };
      G__17274.cljs$core$IFn$_invoke$arity$variadic = G__17274__delegate;
      return G__17274;
    }();
    G__17273 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__17273__0.call(this);
        case 1:
          return G__17273__1.call(this, x);
        case 2:
          return G__17273__2.call(this, x, y);
        case 3:
          return G__17273__3.call(this, x, y, z);
        default:
          var G__17277 = null;
          if (arguments.length > 3) {
            var G__17278__i = 0, G__17278__a = new Array(arguments.length - 3);
            while (G__17278__i < G__17278__a.length) {
              G__17278__a[G__17278__i] = arguments[G__17278__i + 3];
              ++G__17278__i;
            }
            G__17277 = new cljs.core.IndexedSeq(G__17278__a, 0);
          }
          return G__17273__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__17277);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__17273.cljs$lang$maxFixedArity = 3;
    G__17273.cljs$lang$applyTo = G__17273__4.cljs$lang$applyTo;
    G__17273.cljs$core$IFn$_invoke$arity$0 = G__17273__0;
    G__17273.cljs$core$IFn$_invoke$arity$1 = G__17273__1;
    G__17273.cljs$core$IFn$_invoke$arity$2 = G__17273__2;
    G__17273.cljs$core$IFn$_invoke$arity$3 = G__17273__3;
    G__17273.cljs$core$IFn$_invoke$arity$variadic = G__17273__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__17273;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__17279 = null;
      var G__17279__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__17202_SHARP_, p2__17203_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17202_SHARP_, function() {
              return p2__17203_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__17203_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__17203_SHARP_.call(null);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__17279__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__17204_SHARP_, p2__17205_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17204_SHARP_, function() {
              var G__17254 = x;
              return p2__17205_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__17205_SHARP_.cljs$core$IFn$_invoke$arity$1(G__17254) : p2__17205_SHARP_.call(null, G__17254);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__17279__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__17206_SHARP_, p2__17207_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17206_SHARP_, function() {
              var G__17255 = x;
              var G__17256 = y;
              return p2__17207_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__17207_SHARP_.cljs$core$IFn$_invoke$arity$2(G__17255, G__17256) : p2__17207_SHARP_.call(null, G__17255, G__17256);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__17279__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__17208_SHARP_, p2__17209_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17208_SHARP_, function() {
              var G__17257 = x;
              var G__17258 = y;
              var G__17259 = z;
              return p2__17209_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__17209_SHARP_.cljs$core$IFn$_invoke$arity$3(G__17257, G__17258, G__17259) : p2__17209_SHARP_.call(null, G__17257, G__17258, G__17259);
            }());
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__17279__4 = function() {
        var G__17280__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__17210_SHARP_, p2__17211_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__17210_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__17211_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__17280 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__17281__i = 0, G__17281__a = new Array(arguments.length - 3);
            while (G__17281__i < G__17281__a.length) {
              G__17281__a[G__17281__i] = arguments[G__17281__i + 3];
              ++G__17281__i;
            }
            args = new cljs.core.IndexedSeq(G__17281__a, 0);
          }
          return G__17280__delegate.call(this, x, y, z, args);
        };
        G__17280.cljs$lang$maxFixedArity = 3;
        G__17280.cljs$lang$applyTo = function(arglist__17282) {
          var x = cljs.core.first(arglist__17282);
          arglist__17282 = cljs.core.next(arglist__17282);
          var y = cljs.core.first(arglist__17282);
          arglist__17282 = cljs.core.next(arglist__17282);
          var z = cljs.core.first(arglist__17282);
          var args = cljs.core.rest(arglist__17282);
          return G__17280__delegate(x, y, z, args);
        };
        G__17280.cljs$core$IFn$_invoke$arity$variadic = G__17280__delegate;
        return G__17280;
      }();
      G__17279 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__17279__0.call(this);
          case 1:
            return G__17279__1.call(this, x);
          case 2:
            return G__17279__2.call(this, x, y);
          case 3:
            return G__17279__3.call(this, x, y, z);
          default:
            var G__17283 = null;
            if (arguments.length > 3) {
              var G__17284__i = 0, G__17284__a = new Array(arguments.length - 3);
              while (G__17284__i < G__17284__a.length) {
                G__17284__a[G__17284__i] = arguments[G__17284__i + 3];
                ++G__17284__i;
              }
              G__17283 = new cljs.core.IndexedSeq(G__17284__a, 0);
            }
            return G__17279__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__17283);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17279.cljs$lang$maxFixedArity = 3;
      G__17279.cljs$lang$applyTo = G__17279__4.cljs$lang$applyTo;
      G__17279.cljs$core$IFn$_invoke$arity$0 = G__17279__0;
      G__17279.cljs$core$IFn$_invoke$arity$1 = G__17279__1;
      G__17279.cljs$core$IFn$_invoke$arity$2 = G__17279__2;
      G__17279.cljs$core$IFn$_invoke$arity$3 = G__17279__3;
      G__17279.cljs$core$IFn$_invoke$arity$variadic = G__17279__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__17279;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq17212) {
  var G__17213 = cljs.core.first(seq17212);
  var seq17212__$1 = cljs.core.next(seq17212);
  var G__17214 = cljs.core.first(seq17212__$1);
  var seq17212__$2 = cljs.core.next(seq17212__$1);
  var G__17215 = cljs.core.first(seq17212__$2);
  var seq17212__$3 = cljs.core.next(seq17212__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__17213, G__17214, G__17215, seq17212__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var G__17286 = arguments.length;
  switch(G__17286) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__17288 = cljs.core.next(coll);
      coll = G__17288;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__17289 = n - 1;
      var G__17290 = cljs.core.next(coll);
      n = G__17289;
      coll = G__17290;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var G__17292 = arguments.length;
  switch(G__17292) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__17297 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17297, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17297, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4308__auto__ = flags;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_17305 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__17306_17312 = cljs.core.first(coll);
          var G__17307_17313 = writer;
          var G__17308_17314 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17306_17312, G__17307_17313, G__17308_17314) : print_one.call(null, G__17306_17312, G__17307_17313, G__17308_17314);
        } else {
        }
        var coll_17315__$1 = cljs.core.next(coll);
        var n_17316 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_17315__$1 && (n_17316 == null || !(n_17316 === 0))) {
            cljs.core._write(writer, sep);
            var G__17309_17317 = cljs.core.first(coll_17315__$1);
            var G__17310_17318 = writer;
            var G__17311_17319 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17309_17317, G__17310_17318, G__17311_17319) : print_one.call(null, G__17309_17317, G__17310_17318, G__17311_17319);
            var G__17320 = cljs.core.next(coll_17315__$1);
            var G__17321 = n_17316 - 1;
            coll_17315__$1 = G__17320;
            n_17316 = G__17321;
            continue;
          } else {
            if (cljs.core.seq(coll_17315__$1) && n_17316 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4308__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4308__auto__)) {
                  return or__4308__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_17305;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__17324 = cljs.core.seq(ss);
  var chunk__17325 = null;
  var count__17326 = 0;
  var i__17327 = 0;
  while (true) {
    if (i__17327 < count__17326) {
      var s = chunk__17325.cljs$core$IIndexed$_nth$arity$2(null, i__17327);
      cljs.core._write(writer, s);
      var G__17328 = seq__17324;
      var G__17329 = chunk__17325;
      var G__17330 = count__17326;
      var G__17331 = i__17327 + 1;
      seq__17324 = G__17328;
      chunk__17325 = G__17329;
      count__17326 = G__17330;
      i__17327 = G__17331;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17324);
      if (temp__4425__auto__) {
        var seq__17324__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17324__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__17324__$1);
          var G__17332 = cljs.core.chunk_rest(seq__17324__$1);
          var G__17333 = c__5093__auto__;
          var G__17334 = cljs.core.count(c__5093__auto__);
          var G__17335 = 0;
          seq__17324 = G__17332;
          chunk__17325 = G__17333;
          count__17326 = G__17334;
          i__17327 = G__17335;
          continue;
        } else {
          var s = cljs.core.first(seq__17324__$1);
          cljs.core._write(writer, s);
          var G__17336 = cljs.core.next(seq__17324__$1);
          var G__17337 = null;
          var G__17338 = 0;
          var G__17339 = 0;
          seq__17324 = G__17336;
          chunk__17325 = G__17337;
          count__17326 = G__17338;
          i__17327 = G__17339;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq17322) {
  var G__17323 = cljs.core.first(seq17322);
  var seq17322__$1 = cljs.core.next(seq17322);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__17323, seq17322__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj17341 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj17341;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__17344 = '[\\\\"\b\f\n\r\t]';
    var G__17345 = "g";
    return RegExp(G__17344, G__17345);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = function() {
            var G__17359 = obj;
            if (G__17359) {
              var bit__4982__auto__ = G__17359.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4982__auto__ || G__17359.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__17359.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17359);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__17359);
            }
          }();
          if (and__4296__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__17360_17370 = cljs.core.meta(obj);
        var G__17361_17371 = writer;
        var G__17362_17372 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__17360_17370, G__17361_17371, G__17362_17372) : cljs.core.pr_writer.call(null, G__17360_17370, G__17361_17371, G__17362_17372);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__17363 = obj;
            if (G__17363) {
              var bit__4975__auto__ = G__17363.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4975__auto__ || G__17363.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__17364 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__17365 = cljs.core.pr_writer;
                var G__17366 = writer;
                var G__17367 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__17364, G__17365, G__17366, G__17367) : cljs.core.print_map.call(null, G__17364, G__17365, G__17366, G__17367);
              } else {
                if (cljs.core.array_QMARK_(obj)) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__17368 = obj;
                    return goog.isString(G__17368);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__17373 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__17373;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.truth_(cljs.core.regexp_QMARK_(obj))) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__17369 = obj;
                            if (G__17369) {
                              var bit__4982__auto__ = G__17369.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4982__auto__ || G__17369.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__17369.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__17369);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__17369);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__17377 = obj;
    var G__17378 = writer;
    var G__17379 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__17377, G__17378, G__17379) : alt_impl.call(null, G__17377, G__17378, G__17379);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__17384 = cljs.core.seq(cljs.core.next(objs));
  var chunk__17385 = null;
  var count__17386 = 0;
  var i__17387 = 0;
  while (true) {
    if (i__17387 < count__17386) {
      var obj = chunk__17385.cljs$core$IIndexed$_nth$arity$2(null, i__17387);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__17388 = seq__17384;
      var G__17389 = chunk__17385;
      var G__17390 = count__17386;
      var G__17391 = i__17387 + 1;
      seq__17384 = G__17388;
      chunk__17385 = G__17389;
      count__17386 = G__17390;
      i__17387 = G__17391;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__17384);
      if (temp__4425__auto__) {
        var seq__17384__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__17384__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first(seq__17384__$1);
          var G__17392 = cljs.core.chunk_rest(seq__17384__$1);
          var G__17393 = c__5093__auto__;
          var G__17394 = cljs.core.count(c__5093__auto__);
          var G__17395 = 0;
          seq__17384 = G__17392;
          chunk__17385 = G__17393;
          count__17386 = G__17394;
          i__17387 = G__17395;
          continue;
        } else {
          var obj = cljs.core.first(seq__17384__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__17396 = cljs.core.next(seq__17384__$1);
          var G__17397 = null;
          var G__17398 = 0;
          var G__17399 = 0;
          seq__17384 = G__17396;
          chunk__17385 = G__17397;
          count__17386 = G__17398;
          i__17387 = G__17399;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var G__17401 = arguments.length;
  switch(G__17401) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq17403) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17403));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq17404) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17404));
};
cljs.core.pr = function cljs$core$pr() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq17405) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17405));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__17406__i = 0, G__17406__a = new Array(arguments.length - 0);
      while (G__17406__i < G__17406__a.length) {
        G__17406__a[G__17406__i] = arguments[G__17406__i + 0];
        ++G__17406__i;
      }
      objs = new cljs.core.IndexedSeq(G__17406__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__17407) {
    var objs = cljs.core.seq(arglist__17407);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq17408) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17408));
};
cljs.core.println = function cljs$core$println() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq17409) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17409));
};
cljs.core.println_str = function cljs$core$println_str() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq17410) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17410));
};
cljs.core.prn = function cljs$core$prn() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq17411) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17411));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__17418_17424 = cljs.core.key(e);
    var G__17419_17425 = w;
    var G__17420_17426 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17418_17424, G__17419_17425, G__17420_17426) : print_one.call(null, G__17418_17424, G__17419_17425, G__17420_17426);
    cljs.core._write(w, " ");
    var G__17421 = cljs.core.val(e);
    var G__17422 = w;
    var G__17423 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__17421, G__17422, G__17423) : print_one.call(null, G__17421, G__17422, G__17423);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var argseq__5348__auto__ = 2 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5348__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq17427) {
  var G__17428 = cljs.core.first(seq17427);
  var seq17427__$1 = cljs.core.next(seq17427);
  var G__17429 = cljs.core.first(seq17427__$1);
  var seq17427__$2 = cljs.core.next(seq17427__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__17428, G__17429, seq17427__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var G__17431 = arguments.length;
  switch(G__17431) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = function() {
      var G__17432 = 0;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17432) : cljs.core.atom.call(null, G__17432);
    }();
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "value", "value", 1946509744, null)], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__17435 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17435) : cljs.core.deref.call(null, G__17435);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__17436_SHARP_, p2__17437_SHARP_) {
    var ret = function() {
      var G__17440 = p1__17436_SHARP_;
      var G__17441 = p2__17437_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17440, G__17441) : rf.call(null, G__17440, G__17441);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__17444 = null;
      var G__17444__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__17444__1 = function(result) {
        var G__17443 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17443) : rf.call(null, G__17443);
      };
      var G__17444__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__17444 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__17444__0.call(this);
          case 1:
            return G__17444__1.call(this, result);
          case 2:
            return G__17444__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__17444.cljs$core$IFn$_invoke$arity$0 = G__17444__0;
      G__17444.cljs$core$IFn$_invoke$arity$1 = G__17444__1;
      G__17444.cljs$core$IFn$_invoke$arity$2 = G__17444__2;
      return G__17444;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var G__17446 = arguments.length;
  switch(G__17446) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__17452 = null;
        var G__17452__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__17452__1 = function(result) {
          var G__17447 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__17447) : rf.call(null, G__17447);
        };
        var G__17452__2 = function(result, input) {
          var prior = function() {
            var G__17448 = pa;
            return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17448) : cljs.core.deref.call(null, G__17448);
          }();
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            var G__17449 = result;
            var G__17450 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__17449, G__17450) : rf.call(null, G__17449, G__17450);
          }
        };
        G__17452 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__17452__0.call(this);
            case 1:
              return G__17452__1.call(this, result);
            case 2:
              return G__17452__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__17452.cljs$core$IFn$_invoke$arity$0 = G__17452__0;
        G__17452.cljs$core$IFn$_invoke$arity$1 = G__17452__1;
        G__17452.cljs$core$IFn$_invoke$arity$2 = G__17452__2;
        return G__17452;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var G__17454 = arguments.length;
  switch(G__17454) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return function() {
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
    }() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5284__auto__ = this;
  return cljs.core.es6_iterator(this__5284__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq17456) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq17456));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__17458_SHARP_, p2__17457_SHARP_) {
    var G__17460 = p2__17457_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__17460) : proc.call(null, G__17460);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj17462 = {};
  return obj17462;
}();
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._clj__GT_js[function() {
        var G__17466 = x__4944__auto__;
        return goog.typeOf(G__17466);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._key__GT_js[function() {
        var G__17470 = x__4944__auto__;
        return goog.typeOf(G__17470);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (function() {
    var G__17473 = k;
    if (G__17473) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__17473.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__17473.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17473);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17473);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__17474 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__17474) : cljs.core.clj__GT_js.call(null, G__17474);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__17490 = x;
      if (G__17490) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__17490.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__17490.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17490);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__17490);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj17492 = {};
              return obj17492;
            }();
            var seq__17493_17503 = cljs.core.seq(x);
            var chunk__17494_17504 = null;
            var count__17495_17505 = 0;
            var i__17496_17506 = 0;
            while (true) {
              if (i__17496_17506 < count__17495_17505) {
                var vec__17497_17507 = chunk__17494_17504.cljs$core$IIndexed$_nth$arity$2(null, i__17496_17506);
                var k_17508 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17497_17507, 0, null);
                var v_17509 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17497_17507, 1, null);
                m[cljs.core.key__GT_js(k_17508)] = cljs$core$clj__GT_js(v_17509);
                var G__17510 = seq__17493_17503;
                var G__17511 = chunk__17494_17504;
                var G__17512 = count__17495_17505;
                var G__17513 = i__17496_17506 + 1;
                seq__17493_17503 = G__17510;
                chunk__17494_17504 = G__17511;
                count__17495_17505 = G__17512;
                i__17496_17506 = G__17513;
                continue;
              } else {
                var temp__4425__auto___17514 = cljs.core.seq(seq__17493_17503);
                if (temp__4425__auto___17514) {
                  var seq__17493_17515__$1 = temp__4425__auto___17514;
                  if (cljs.core.chunked_seq_QMARK_(seq__17493_17515__$1)) {
                    var c__5093__auto___17516 = cljs.core.chunk_first(seq__17493_17515__$1);
                    var G__17517 = cljs.core.chunk_rest(seq__17493_17515__$1);
                    var G__17518 = c__5093__auto___17516;
                    var G__17519 = cljs.core.count(c__5093__auto___17516);
                    var G__17520 = 0;
                    seq__17493_17503 = G__17517;
                    chunk__17494_17504 = G__17518;
                    count__17495_17505 = G__17519;
                    i__17496_17506 = G__17520;
                    continue;
                  } else {
                    var vec__17498_17521 = cljs.core.first(seq__17493_17515__$1);
                    var k_17522 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17498_17521, 0, null);
                    var v_17523 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17498_17521, 1, null);
                    m[cljs.core.key__GT_js(k_17522)] = cljs$core$clj__GT_js(v_17523);
                    var G__17524 = cljs.core.next(seq__17493_17515__$1);
                    var G__17525 = null;
                    var G__17526 = 0;
                    var G__17527 = 0;
                    seq__17493_17503 = G__17524;
                    chunk__17494_17504 = G__17525;
                    count__17495_17505 = G__17526;
                    i__17496_17506 = G__17527;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__17499_17528 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__17500_17529 = null;
              var count__17501_17530 = 0;
              var i__17502_17531 = 0;
              while (true) {
                if (i__17502_17531 < count__17501_17530) {
                  var x_17532__$1 = chunk__17500_17529.cljs$core$IIndexed$_nth$arity$2(null, i__17502_17531);
                  arr.push(x_17532__$1);
                  var G__17533 = seq__17499_17528;
                  var G__17534 = chunk__17500_17529;
                  var G__17535 = count__17501_17530;
                  var G__17536 = i__17502_17531 + 1;
                  seq__17499_17528 = G__17533;
                  chunk__17500_17529 = G__17534;
                  count__17501_17530 = G__17535;
                  i__17502_17531 = G__17536;
                  continue;
                } else {
                  var temp__4425__auto___17537 = cljs.core.seq(seq__17499_17528);
                  if (temp__4425__auto___17537) {
                    var seq__17499_17538__$1 = temp__4425__auto___17537;
                    if (cljs.core.chunked_seq_QMARK_(seq__17499_17538__$1)) {
                      var c__5093__auto___17539 = cljs.core.chunk_first(seq__17499_17538__$1);
                      var G__17540 = cljs.core.chunk_rest(seq__17499_17538__$1);
                      var G__17541 = c__5093__auto___17539;
                      var G__17542 = cljs.core.count(c__5093__auto___17539);
                      var G__17543 = 0;
                      seq__17499_17528 = G__17540;
                      chunk__17500_17529 = G__17541;
                      count__17501_17530 = G__17542;
                      i__17502_17531 = G__17543;
                      continue;
                    } else {
                      var x_17544__$1 = cljs.core.first(seq__17499_17538__$1);
                      arr.push(x_17544__$1);
                      var G__17545 = cljs.core.next(seq__17499_17538__$1);
                      var G__17546 = null;
                      var G__17547 = 0;
                      var G__17548 = 0;
                      seq__17499_17528 = G__17545;
                      chunk__17500_17529 = G__17546;
                      count__17501_17530 = G__17547;
                      i__17502_17531 = G__17548;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj17550 = {};
  return obj17550;
}();
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = cljs.core._js__GT_clj[function() {
        var G__17554 = x__4944__auto__;
        return goog.typeOf(G__17554);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var G__17558 = arguments.length;
  switch(G__17558) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__17559 = opts;
  var map__17559__$1 = cljs.core.seq_QMARK_(map__17559) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__17559) : map__17559;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__17559__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__17559, map__17559__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (function() {
        var G__17575 = x__$1;
        if (G__17575) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto__ = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return G__17575.cljs$core$IEncodeClojure$;
            }
          }())) {
            return true;
          } else {
            if (!G__17575.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__17575);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__17575);
        }
      }()) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5062__auto__ = function(map__17559, map__17559__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__17576(s__17577) {
                      return new cljs.core.LazySeq(null, function(map__17559, map__17559__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__17577__$1 = s__17577;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__17577__$1);
                            if (temp__4425__auto__) {
                              var s__17577__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__17577__$2)) {
                                var c__5060__auto__ = cljs.core.chunk_first(s__17577__$2);
                                var size__5061__auto__ = cljs.core.count(c__5060__auto__);
                                var b__17579 = cljs.core.chunk_buffer(size__5061__auto__);
                                if (function() {
                                  var i__17578 = 0;
                                  while (true) {
                                    if (i__17578 < size__5061__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5060__auto__, i__17578);
                                      cljs.core.chunk_append(b__17579, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                        var G__17584 = k;
                                        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17584) : keyfn.call(null, G__17584);
                                      }(), cljs$core$thisfn(x__$1[k])], null));
                                      var G__17587 = i__17578 + 1;
                                      i__17578 = G__17587;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__17579), cljs$core$thisfn_$_iter__17576(cljs.core.chunk_rest(s__17577__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__17579), null);
                                }
                              } else {
                                var k = cljs.core.first(s__17577__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                  var G__17585 = k;
                                  return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__17585) : keyfn.call(null, G__17585);
                                }(), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__17576(cljs.core.rest(s__17577__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__17559, map__17559__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__17559, map__17559__$1, keywordize_keys, keyfn);
                  return iter__5062__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__17559, map__17559__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq17555) {
  var G__17556 = cljs.core.first(seq17555);
  var seq17555__$1 = cljs.core.next(seq17555);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__17556, seq17555__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__17590 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17590) : cljs.core.atom.call(null, G__17590);
  }();
  return function(mem) {
    return function() {
      var G__17592__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__17591 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17591) : cljs.core.deref.call(null, G__17591);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__17592 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__17593__i = 0, G__17593__a = new Array(arguments.length - 0);
          while (G__17593__i < G__17593__a.length) {
            G__17593__a[G__17593__i] = arguments[G__17593__i + 0];
            ++G__17593__i;
          }
          args = new cljs.core.IndexedSeq(G__17593__a, 0);
        }
        return G__17592__delegate.call(this, args);
      };
      G__17592.cljs$lang$maxFixedArity = 0;
      G__17592.cljs$lang$applyTo = function(arglist__17594) {
        var args = cljs.core.seq(arglist__17594);
        return G__17592__delegate(args);
      };
      G__17592.cljs$core$IFn$_invoke$arity$variadic = G__17592__delegate;
      return G__17592;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var G__17598 = arguments.length;
  switch(G__17598) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }();
    if (cljs.core.fn_QMARK_(ret)) {
      var G__17600 = ret;
      f = G__17600;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq17595) {
  var G__17596 = cljs.core.first(seq17595);
  var seq17595__$1 = cljs.core.next(seq17595);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__17596, seq17595__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var G__17602 = arguments.length;
  switch(G__17602) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function() {
    return Math.random();
  }() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__17605 = function() {
    return Math.random();
  }() * n;
  return Math.floor(G__17605);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__17607 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__17607) : f.call(null, G__17607);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__17609 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__17609) : cljs.core.atom.call(null, G__17609);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq17610) {
  var G__17611 = cljs.core.first(seq17610);
  var seq17610__$1 = cljs.core.next(seq17610);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__17611, seq17610__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var G__17613 = arguments.length;
  switch(G__17613) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__17614 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17614) : cljs.core.deref.call(null, G__17614);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4308__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4308__auto__) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4308__auto____$1) {
      return or__4308__auto____$1;
    } else {
      var and__4296__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4296__auto__) {
        var and__4296__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4296__auto____$1) {
          var and__4296__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4296__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__17640 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                  var G__17637 = i;
                  return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__17637) : child.call(null, G__17637);
                }(), function() {
                  var G__17638 = i;
                  return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__17638) : parent.call(null, G__17638);
                }());
                var G__17641 = i + 1;
                ret = G__17640;
                i = G__17641;
                continue;
              }
              break;
            }
          } else {
            return and__4296__auto____$2;
          }
        } else {
          return and__4296__auto____$1;
        }
      } else {
        return and__4296__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var G__17643 = arguments.length;
  switch(G__17643) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17644 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17644) : cljs.core.deref.call(null, G__17644);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var G__17647 = arguments.length;
  switch(G__17647) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17648 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17648) : cljs.core.deref.call(null, G__17648);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var G__17651 = arguments.length;
  switch(G__17651) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17652 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17652) : cljs.core.deref.call(null, G__17652);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var G__17655 = arguments.length;
  switch(G__17655) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
            var G__17656 = target;
            return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__17656) : targets.call(null, G__17656);
          }())));
        };
      }(tp, td, ta), m, cljs.core.cons(source, function() {
        var G__17657 = source;
        return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__17657) : sources.call(null, G__17657);
      }()));
    };
  }(tp, td, ta);
  var or__4308__auto__ = cljs.core.contains_QMARK_(function() {
    var G__17661 = tag;
    return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__17661) : tp.call(null, G__17661);
  }(), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(function() {
      var G__17662 = tag;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17662) : ta.call(null, G__17662);
    }(), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(function() {
      var G__17663 = parent;
      return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__17663) : ta.call(null, G__17663);
    }(), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var G__17669 = arguments.length;
  switch(G__17669) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(function() {
    var G__17670 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17670) : parentMap.call(null, G__17670);
  }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
    var G__17671 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17671) : parentMap.call(null, G__17671);
  }(), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__17665_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__17665_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__17665_SHARP_), cljs.core.second(p1__17665_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(function() {
    var G__17672 = tag;
    return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__17672) : parentMap.call(null, G__17672);
  }(), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__17666_SHARP_, p2__17667_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__17666_SHARP_, p2__17667_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__17676 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17676) : cljs.core.deref.call(null, G__17676);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__17677 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17677) : cljs.core.deref.call(null, G__17677);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__17693 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17693) : cljs.core.deref.call(null, G__17693);
  }().call(null, x);
  var or__4308__auto__ = cljs.core.truth_(function() {
    var and__4296__auto__ = xprefs;
    if (cljs.core.truth_(and__4296__auto__)) {
      var G__17695 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__17695) : xprefs.call(null, G__17695);
    } else {
      return and__4296__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__17696 = cljs.core.rest(ps);
          ps = G__17696;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4308__auto____$1)) {
      return or__4308__auto____$1;
    } else {
      var or__4308__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__17697 = cljs.core.rest(ps);
            ps = G__17697;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4308__auto____$2)) {
        return or__4308__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4308__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__17711) {
    var vec__17712 = p__17711;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17712, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__17712, 1, null);
    var e = vec__17712;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__17713 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17713) : cljs.core.deref.call(null, G__17713);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4308__auto__ = be == null;
        if (or__4308__auto__) {
          return or__4308__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__17714 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17714) : cljs.core.deref.call(null, G__17714);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__17715 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17715) : cljs.core.deref.call(null, G__17715);
    }(), function() {
      var G__17716 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__17716) : cljs.core.deref.call(null, G__17716);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj17718 = {};
  return obj17718;
}();
cljs.core._reset = function cljs$core$_reset(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._reset[function() {
        var G__17722 = x__4944__auto__;
        return goog.typeOf(G__17722);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._reset["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._add_method[function() {
        var G__17726 = x__4944__auto__;
        return goog.typeOf(G__17726);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._add_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._remove_method[function() {
        var G__17730 = x__4944__auto__;
        return goog.typeOf(G__17730);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._remove_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefer_method[function() {
        var G__17734 = x__4944__auto__;
        return goog.typeOf(G__17734);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefer_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._get_method[function() {
        var G__17738 = x__4944__auto__;
        return goog.typeOf(G__17738);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._get_method["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._methods[function() {
        var G__17742 = x__4944__auto__;
        return goog.typeOf(G__17742);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._methods["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._prefers[function() {
        var G__17746 = x__4944__auto__;
        return goog.typeOf(G__17746);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._prefers["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._default_dispatch_val[function() {
        var G__17750 = x__4944__auto__;
        return goog.typeOf(G__17750);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._default_dispatch_val["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (function() {
    var and__4296__auto__ = mf;
    if (and__4296__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__4944__auto__ = mf == null ? null : mf;
    return function() {
      var or__4308__auto__ = cljs.core._dispatch_fn[function() {
        var G__17754 = x__4944__auto__;
        return goog.typeOf(G__17754);
      }()];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.core._dispatch_fn["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__18603 = null;
  var G__18603__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__18603__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17756 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17756) : self__.dispatch_fn.call(null, G__17756);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17757 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17757) : target_fn.call(null, G__17757);
  };
  var G__18603__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17758 = a;
      var G__17759 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17758, G__17759) : self__.dispatch_fn.call(null, G__17758, G__17759);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17760 = a;
    var G__17761 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17760, G__17761) : target_fn.call(null, G__17760, G__17761);
  };
  var G__18603__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17762 = a;
      var G__17763 = b;
      var G__17764 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17762, G__17763, G__17764) : self__.dispatch_fn.call(null, G__17762, G__17763, G__17764);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17765 = a;
    var G__17766 = b;
    var G__17767 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17765, G__17766, G__17767) : target_fn.call(null, G__17765, G__17766, G__17767);
  };
  var G__18603__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17768 = a;
      var G__17769 = b;
      var G__17770 = c;
      var G__17771 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17768, G__17769, G__17770, G__17771) : self__.dispatch_fn.call(null, G__17768, G__17769, G__17770, G__17771);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17772 = a;
    var G__17773 = b;
    var G__17774 = c;
    var G__17775 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17772, G__17773, G__17774, G__17775) : target_fn.call(null, G__17772, G__17773, G__17774, G__17775);
  };
  var G__18603__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17776 = a;
      var G__17777 = b;
      var G__17778 = c;
      var G__17779 = d;
      var G__17780 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17776, G__17777, G__17778, G__17779, G__17780) : self__.dispatch_fn.call(null, G__17776, G__17777, G__17778, G__17779, G__17780);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17781 = a;
    var G__17782 = b;
    var G__17783 = c;
    var G__17784 = d;
    var G__17785 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17781, G__17782, G__17783, G__17784, G__17785) : target_fn.call(null, G__17781, G__17782, G__17783, G__17784, G__17785);
  };
  var G__18603__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17786 = a;
      var G__17787 = b;
      var G__17788 = c;
      var G__17789 = d;
      var G__17790 = e;
      var G__17791 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17786, G__17787, G__17788, G__17789, G__17790, G__17791) : self__.dispatch_fn.call(null, G__17786, G__17787, G__17788, G__17789, G__17790, G__17791);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17792 = a;
    var G__17793 = b;
    var G__17794 = c;
    var G__17795 = d;
    var G__17796 = e;
    var G__17797 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17792, G__17793, G__17794, G__17795, G__17796, G__17797) : target_fn.call(null, G__17792, G__17793, G__17794, G__17795, G__17796, G__17797);
  };
  var G__18603__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17798 = a;
      var G__17799 = b;
      var G__17800 = c;
      var G__17801 = d;
      var G__17802 = e;
      var G__17803 = f;
      var G__17804 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804) : self__.dispatch_fn.call(null, G__17798, G__17799, G__17800, G__17801, G__17802, G__17803, G__17804);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17805 = a;
    var G__17806 = b;
    var G__17807 = c;
    var G__17808 = d;
    var G__17809 = e;
    var G__17810 = f;
    var G__17811 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811) : target_fn.call(null, G__17805, G__17806, G__17807, G__17808, G__17809, G__17810, G__17811);
  };
  var G__18603__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17812 = a;
      var G__17813 = b;
      var G__17814 = c;
      var G__17815 = d;
      var G__17816 = e;
      var G__17817 = f;
      var G__17818 = g;
      var G__17819 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819) : self__.dispatch_fn.call(null, G__17812, G__17813, G__17814, G__17815, G__17816, G__17817, G__17818, G__17819);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17820 = a;
    var G__17821 = b;
    var G__17822 = c;
    var G__17823 = d;
    var G__17824 = e;
    var G__17825 = f;
    var G__17826 = g;
    var G__17827 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827) : target_fn.call(null, G__17820, G__17821, G__17822, G__17823, G__17824, G__17825, G__17826, G__17827);
  };
  var G__18603__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17828 = a;
      var G__17829 = b;
      var G__17830 = c;
      var G__17831 = d;
      var G__17832 = e;
      var G__17833 = f;
      var G__17834 = g;
      var G__17835 = h;
      var G__17836 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17828, G__17829, G__17830, G__17831, G__17832, G__17833, G__17834, G__17835, G__17836) : self__.dispatch_fn.call(null, G__17828, G__17829, G__17830, G__17831, G__17832, G__17833, G__17834, G__17835, G__17836);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17837 = a;
    var G__17838 = b;
    var G__17839 = c;
    var G__17840 = d;
    var G__17841 = e;
    var G__17842 = f;
    var G__17843 = g;
    var G__17844 = h;
    var G__17845 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845) : target_fn.call(null, G__17837, G__17838, G__17839, G__17840, G__17841, G__17842, G__17843, G__17844, G__17845);
  };
  var G__18603__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17846 = a;
      var G__17847 = b;
      var G__17848 = c;
      var G__17849 = d;
      var G__17850 = e;
      var G__17851 = f;
      var G__17852 = g;
      var G__17853 = h;
      var G__17854 = i;
      var G__17855 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17846, G__17847, G__17848, G__17849, G__17850, G__17851, G__17852, G__17853, G__17854, G__17855) : self__.dispatch_fn.call(null, G__17846, G__17847, G__17848, G__17849, G__17850, G__17851, G__17852, G__17853, G__17854, G__17855);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17856 = a;
    var G__17857 = b;
    var G__17858 = c;
    var G__17859 = d;
    var G__17860 = e;
    var G__17861 = f;
    var G__17862 = g;
    var G__17863 = h;
    var G__17864 = i;
    var G__17865 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864, G__17865) : target_fn.call(null, G__17856, G__17857, G__17858, G__17859, G__17860, G__17861, G__17862, G__17863, G__17864, G__17865);
  };
  var G__18603__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17866 = a;
      var G__17867 = b;
      var G__17868 = c;
      var G__17869 = d;
      var G__17870 = e;
      var G__17871 = f;
      var G__17872 = g;
      var G__17873 = h;
      var G__17874 = i;
      var G__17875 = j;
      var G__17876 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872, G__17873, G__17874, G__17875, G__17876) : self__.dispatch_fn.call(null, G__17866, G__17867, G__17868, G__17869, G__17870, G__17871, G__17872, G__17873, G__17874, G__17875, G__17876);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17877 = a;
    var G__17878 = b;
    var G__17879 = c;
    var G__17880 = d;
    var G__17881 = e;
    var G__17882 = f;
    var G__17883 = g;
    var G__17884 = h;
    var G__17885 = i;
    var G__17886 = j;
    var G__17887 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17877, G__17878, G__17879, G__17880, G__17881, G__17882, G__17883, G__17884, G__17885, G__17886, G__17887) : target_fn.call(null, G__17877, G__17878, G__17879, G__17880, G__17881, G__17882, G__17883, G__17884, G__17885, G__17886, G__17887);
  };
  var G__18603__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17888 = a;
      var G__17889 = b;
      var G__17890 = c;
      var G__17891 = d;
      var G__17892 = e;
      var G__17893 = f;
      var G__17894 = g;
      var G__17895 = h;
      var G__17896 = i;
      var G__17897 = j;
      var G__17898 = k;
      var G__17899 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17888, G__17889, G__17890, G__17891, G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899) : self__.dispatch_fn.call(null, G__17888, G__17889, G__17890, G__17891, G__17892, G__17893, G__17894, G__17895, G__17896, G__17897, G__17898, G__17899);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17900 = a;
    var G__17901 = b;
    var G__17902 = c;
    var G__17903 = d;
    var G__17904 = e;
    var G__17905 = f;
    var G__17906 = g;
    var G__17907 = h;
    var G__17908 = i;
    var G__17909 = j;
    var G__17910 = k;
    var G__17911 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910, G__17911) : target_fn.call(null, G__17900, G__17901, G__17902, G__17903, G__17904, G__17905, G__17906, G__17907, G__17908, G__17909, G__17910, G__17911);
  };
  var G__18603__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17912 = a;
      var G__17913 = b;
      var G__17914 = c;
      var G__17915 = d;
      var G__17916 = e;
      var G__17917 = f;
      var G__17918 = g;
      var G__17919 = h;
      var G__17920 = i;
      var G__17921 = j;
      var G__17922 = k;
      var G__17923 = l;
      var G__17924 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, G__17918, G__17919, G__17920, G__17921, G__17922, G__17923, G__17924) : self__.dispatch_fn.call(null, G__17912, G__17913, G__17914, G__17915, G__17916, G__17917, G__17918, G__17919, G__17920, G__17921, G__17922, G__17923, G__17924);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17925 = a;
    var G__17926 = b;
    var G__17927 = c;
    var G__17928 = d;
    var G__17929 = e;
    var G__17930 = f;
    var G__17931 = g;
    var G__17932 = h;
    var G__17933 = i;
    var G__17934 = j;
    var G__17935 = k;
    var G__17936 = l;
    var G__17937 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17925, G__17926, G__17927, G__17928, G__17929, G__17930, G__17931, G__17932, G__17933, G__17934, G__17935, G__17936, G__17937) : target_fn.call(null, G__17925, G__17926, G__17927, G__17928, G__17929, G__17930, G__17931, G__17932, G__17933, G__17934, G__17935, G__17936, G__17937);
  };
  var G__18603__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17938 = a;
      var G__17939 = b;
      var G__17940 = c;
      var G__17941 = d;
      var G__17942 = e;
      var G__17943 = f;
      var G__17944 = g;
      var G__17945 = h;
      var G__17946 = i;
      var G__17947 = j;
      var G__17948 = k;
      var G__17949 = l;
      var G__17950 = m;
      var G__17951 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17938, G__17939, G__17940, G__17941, G__17942, G__17943, G__17944, G__17945, G__17946, G__17947, G__17948, G__17949, G__17950, G__17951) : self__.dispatch_fn.call(null, G__17938, G__17939, G__17940, G__17941, G__17942, G__17943, G__17944, G__17945, G__17946, G__17947, G__17948, G__17949, G__17950, G__17951);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17952 = a;
    var G__17953 = b;
    var G__17954 = c;
    var G__17955 = d;
    var G__17956 = e;
    var G__17957 = f;
    var G__17958 = g;
    var G__17959 = h;
    var G__17960 = i;
    var G__17961 = j;
    var G__17962 = k;
    var G__17963 = l;
    var G__17964 = m;
    var G__17965 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17952, G__17953, G__17954, G__17955, G__17956, G__17957, G__17958, G__17959, G__17960, G__17961, G__17962, G__17963, G__17964, G__17965) : target_fn.call(null, G__17952, G__17953, G__17954, G__17955, G__17956, G__17957, G__17958, G__17959, G__17960, G__17961, G__17962, G__17963, G__17964, G__17965);
  };
  var G__18603__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17966 = a;
      var G__17967 = b;
      var G__17968 = c;
      var G__17969 = d;
      var G__17970 = e;
      var G__17971 = f;
      var G__17972 = g;
      var G__17973 = h;
      var G__17974 = i;
      var G__17975 = j;
      var G__17976 = k;
      var G__17977 = l;
      var G__17978 = m;
      var G__17979 = n;
      var G__17980 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17966, G__17967, G__17968, G__17969, G__17970, G__17971, G__17972, G__17973, G__17974, G__17975, G__17976, G__17977, G__17978, G__17979, G__17980) : self__.dispatch_fn.call(null, G__17966, G__17967, G__17968, G__17969, G__17970, G__17971, G__17972, G__17973, G__17974, G__17975, G__17976, G__17977, G__17978, G__17979, G__17980);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__17981 = a;
    var G__17982 = b;
    var G__17983 = c;
    var G__17984 = d;
    var G__17985 = e;
    var G__17986 = f;
    var G__17987 = g;
    var G__17988 = h;
    var G__17989 = i;
    var G__17990 = j;
    var G__17991 = k;
    var G__17992 = l;
    var G__17993 = m;
    var G__17994 = n;
    var G__17995 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17981, G__17982, G__17983, G__17984, G__17985, G__17986, G__17987, G__17988, G__17989, G__17990, G__17991, G__17992, G__17993, G__17994, G__17995) : target_fn.call(null, G__17981, G__17982, G__17983, G__17984, G__17985, G__17986, G__17987, G__17988, G__17989, G__17990, G__17991, G__17992, G__17993, G__17994, G__17995);
  };
  var G__18603__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__17996 = a;
      var G__17997 = b;
      var G__17998 = c;
      var G__17999 = d;
      var G__18000 = e;
      var G__18001 = f;
      var G__18002 = g;
      var G__18003 = h;
      var G__18004 = i;
      var G__18005 = j;
      var G__18006 = k;
      var G__18007 = l;
      var G__18008 = m;
      var G__18009 = n;
      var G__18010 = o;
      var G__18011 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17996, G__17997, G__17998, G__17999, G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006, G__18007, G__18008, G__18009, G__18010, G__18011) : self__.dispatch_fn.call(null, G__17996, G__17997, G__17998, G__17999, G__18000, G__18001, G__18002, G__18003, G__18004, G__18005, G__18006, G__18007, G__18008, G__18009, G__18010, G__18011);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__18012 = a;
    var G__18013 = b;
    var G__18014 = c;
    var G__18015 = d;
    var G__18016 = e;
    var G__18017 = f;
    var G__18018 = g;
    var G__18019 = h;
    var G__18020 = i;
    var G__18021 = j;
    var G__18022 = k;
    var G__18023 = l;
    var G__18024 = m;
    var G__18025 = n;
    var G__18026 = o;
    var G__18027 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18012, G__18013, G__18014, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023, G__18024, G__18025, G__18026, G__18027) : target_fn.call(null, G__18012, G__18013, G__18014, G__18015, G__18016, G__18017, G__18018, G__18019, G__18020, G__18021, G__18022, G__18023, G__18024, G__18025, G__18026, G__18027);
  };
  var G__18603__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__18028 = a;
      var G__18029 = b;
      var G__18030 = c;
      var G__18031 = d;
      var G__18032 = e;
      var G__18033 = f;
      var G__18034 = g;
      var G__18035 = h;
      var G__18036 = i;
      var G__18037 = j;
      var G__18038 = k;
      var G__18039 = l;
      var G__18040 = m;
      var G__18041 = n;
      var G__18042 = o;
      var G__18043 = p;
      var G__18044 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18028, G__18029, G__18030, G__18031, G__18032, G__18033, G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044) : self__.dispatch_fn.call(null, G__18028, G__18029, G__18030, G__18031, G__18032, G__18033, G__18034, G__18035, G__18036, G__18037, G__18038, G__18039, G__18040, G__18041, G__18042, G__18043, G__18044);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__18045 = a;
    var G__18046 = b;
    var G__18047 = c;
    var G__18048 = d;
    var G__18049 = e;
    var G__18050 = f;
    var G__18051 = g;
    var G__18052 = h;
    var G__18053 = i;
    var G__18054 = j;
    var G__18055 = k;
    var G__18056 = l;
    var G__18057 = m;
    var G__18058 = n;
    var G__18059 = o;
    var G__18060 = p;
    var G__18061 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18045, G__18046, G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059, G__18060, G__18061) : target_fn.call(null, G__18045, G__18046, G__18047, G__18048, G__18049, G__18050, G__18051, G__18052, G__18053, G__18054, G__18055, G__18056, G__18057, G__18058, G__18059, G__18060, G__18061);
  };
  var G__18603__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__18062 = a;
      var G__18063 = b;
      var G__18064 = c;
      var G__18065 = d;
      var G__18066 = e;
      var G__18067 = f;
      var G__18068 = g;
      var G__18069 = h;
      var G__18070 = i;
      var G__18071 = j;
      var G__18072 = k;
      var G__18073 = l;
      var G__18074 = m;
      var G__18075 = n;
      var G__18076 = o;
      var G__18077 = p;
      var G__18078 = q;
      var G__18079 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079) : self__.dispatch_fn.call(null, G__18062, G__18063, G__18064, G__18065, G__18066, G__18067, G__18068, G__18069, G__18070, G__18071, G__18072, G__18073, G__18074, G__18075, G__18076, G__18077, G__18078, G__18079);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__18080 = a;
    var G__18081 = b;
    var G__18082 = c;
    var G__18083 = d;
    var G__18084 = e;
    var G__18085 = f;
    var G__18086 = g;
    var G__18087 = h;
    var G__18088 = i;
    var G__18089 = j;
    var G__18090 = k;
    var G__18091 = l;
    var G__18092 = m;
    var G__18093 = n;
    var G__18094 = o;
    var G__18095 = p;
    var G__18096 = q;
    var G__18097 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097) : target_fn.call(null, G__18080, G__18081, G__18082, G__18083, G__18084, G__18085, G__18086, G__18087, G__18088, G__18089, G__18090, G__18091, G__18092, G__18093, G__18094, G__18095, G__18096, G__18097);
  };
  var G__18603__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__18098 = a;
      var G__18099 = b;
      var G__18100 = c;
      var G__18101 = d;
      var G__18102 = e;
      var G__18103 = f;
      var G__18104 = g;
      var G__18105 = h;
      var G__18106 = i;
      var G__18107 = j;
      var G__18108 = k;
      var G__18109 = l;
      var G__18110 = m;
      var G__18111 = n;
      var G__18112 = o;
      var G__18113 = p;
      var G__18114 = q;
      var G__18115 = r;
      var G__18116 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, G__18115, G__18116) : self__.dispatch_fn.call(null, G__18098, G__18099, G__18100, G__18101, G__18102, G__18103, G__18104, G__18105, G__18106, G__18107, G__18108, G__18109, G__18110, G__18111, G__18112, G__18113, G__18114, 
      G__18115, G__18116);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__18117 = a;
    var G__18118 = b;
    var G__18119 = c;
    var G__18120 = d;
    var G__18121 = e;
    var G__18122 = f;
    var G__18123 = g;
    var G__18124 = h;
    var G__18125 = i;
    var G__18126 = j;
    var G__18127 = k;
    var G__18128 = l;
    var G__18129 = m;
    var G__18130 = n;
    var G__18131 = o;
    var G__18132 = p;
    var G__18133 = q;
    var G__18134 = r;
    var G__18135 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135) : target_fn.call(null, G__18117, G__18118, G__18119, G__18120, G__18121, G__18122, G__18123, G__18124, G__18125, G__18126, G__18127, G__18128, G__18129, G__18130, G__18131, G__18132, G__18133, G__18134, G__18135);
  };
  var G__18603__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__18136 = a;
      var G__18137 = b;
      var G__18138 = c;
      var G__18139 = d;
      var G__18140 = e;
      var G__18141 = f;
      var G__18142 = g;
      var G__18143 = h;
      var G__18144 = i;
      var G__18145 = j;
      var G__18146 = k;
      var G__18147 = l;
      var G__18148 = m;
      var G__18149 = n;
      var G__18150 = o;
      var G__18151 = p;
      var G__18152 = q;
      var G__18153 = r;
      var G__18154 = s;
      var G__18155 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149, G__18150, G__18151, G__18152, G__18153, G__18154, G__18155) : self__.dispatch_fn.call(null, G__18136, G__18137, G__18138, G__18139, G__18140, G__18141, G__18142, G__18143, G__18144, G__18145, G__18146, G__18147, G__18148, G__18149, G__18150, G__18151, 
      G__18152, G__18153, G__18154, G__18155);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__18156 = a;
    var G__18157 = b;
    var G__18158 = c;
    var G__18159 = d;
    var G__18160 = e;
    var G__18161 = f;
    var G__18162 = g;
    var G__18163 = h;
    var G__18164 = i;
    var G__18165 = j;
    var G__18166 = k;
    var G__18167 = l;
    var G__18168 = m;
    var G__18169 = n;
    var G__18170 = o;
    var G__18171 = p;
    var G__18172 = q;
    var G__18173 = r;
    var G__18174 = s;
    var G__18175 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, G__18175) : target_fn.call(null, G__18156, G__18157, G__18158, G__18159, G__18160, G__18161, G__18162, G__18163, G__18164, G__18165, G__18166, G__18167, G__18168, G__18169, G__18170, G__18171, G__18172, G__18173, G__18174, 
    G__18175);
  };
  var G__18603__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__18603 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__18603__1.call(this, self__);
      case 2:
        return G__18603__2.call(this, self__, a);
      case 3:
        return G__18603__3.call(this, self__, a, b);
      case 4:
        return G__18603__4.call(this, self__, a, b, c);
      case 5:
        return G__18603__5.call(this, self__, a, b, c, d);
      case 6:
        return G__18603__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__18603__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__18603__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__18603__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__18603__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__18603__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__18603__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__18603__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__18603__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__18603__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__18603__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__18603__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__18603__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__18603__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__18603__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__18603__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__18603__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__18603.cljs$core$IFn$_invoke$arity$1 = G__18603__1;
  G__18603.cljs$core$IFn$_invoke$arity$2 = G__18603__2;
  G__18603.cljs$core$IFn$_invoke$arity$3 = G__18603__3;
  G__18603.cljs$core$IFn$_invoke$arity$4 = G__18603__4;
  G__18603.cljs$core$IFn$_invoke$arity$5 = G__18603__5;
  G__18603.cljs$core$IFn$_invoke$arity$6 = G__18603__6;
  G__18603.cljs$core$IFn$_invoke$arity$7 = G__18603__7;
  G__18603.cljs$core$IFn$_invoke$arity$8 = G__18603__8;
  G__18603.cljs$core$IFn$_invoke$arity$9 = G__18603__9;
  G__18603.cljs$core$IFn$_invoke$arity$10 = G__18603__10;
  G__18603.cljs$core$IFn$_invoke$arity$11 = G__18603__11;
  G__18603.cljs$core$IFn$_invoke$arity$12 = G__18603__12;
  G__18603.cljs$core$IFn$_invoke$arity$13 = G__18603__13;
  G__18603.cljs$core$IFn$_invoke$arity$14 = G__18603__14;
  G__18603.cljs$core$IFn$_invoke$arity$15 = G__18603__15;
  G__18603.cljs$core$IFn$_invoke$arity$16 = G__18603__16;
  G__18603.cljs$core$IFn$_invoke$arity$17 = G__18603__17;
  G__18603.cljs$core$IFn$_invoke$arity$18 = G__18603__18;
  G__18603.cljs$core$IFn$_invoke$arity$19 = G__18603__19;
  G__18603.cljs$core$IFn$_invoke$arity$20 = G__18603__20;
  G__18603.cljs$core$IFn$_invoke$arity$21 = G__18603__21;
  G__18603.cljs$core$IFn$_invoke$arity$22 = G__18603__22;
  return G__18603;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args17755) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args17755)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18176 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__18176) : self__.dispatch_fn.call(null, G__18176);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18177 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__18177) : target_fn.call(null, G__18177);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18178 = a;
    var G__18179 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__18178, G__18179) : self__.dispatch_fn.call(null, G__18178, G__18179);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18180 = a;
  var G__18181 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__18180, G__18181) : target_fn.call(null, G__18180, G__18181);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18182 = a;
    var G__18183 = b;
    var G__18184 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__18182, G__18183, G__18184) : self__.dispatch_fn.call(null, G__18182, G__18183, G__18184);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18185 = a;
  var G__18186 = b;
  var G__18187 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__18185, G__18186, G__18187) : target_fn.call(null, G__18185, G__18186, G__18187);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18188 = a;
    var G__18189 = b;
    var G__18190 = c;
    var G__18191 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__18188, G__18189, G__18190, G__18191) : self__.dispatch_fn.call(null, G__18188, G__18189, G__18190, G__18191);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18192 = a;
  var G__18193 = b;
  var G__18194 = c;
  var G__18195 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__18192, G__18193, G__18194, G__18195) : target_fn.call(null, G__18192, G__18193, G__18194, G__18195);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18196 = a;
    var G__18197 = b;
    var G__18198 = c;
    var G__18199 = d;
    var G__18200 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__18196, G__18197, G__18198, G__18199, G__18200) : self__.dispatch_fn.call(null, G__18196, G__18197, G__18198, G__18199, G__18200);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18201 = a;
  var G__18202 = b;
  var G__18203 = c;
  var G__18204 = d;
  var G__18205 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__18201, G__18202, G__18203, G__18204, G__18205) : target_fn.call(null, G__18201, G__18202, G__18203, G__18204, G__18205);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18206 = a;
    var G__18207 = b;
    var G__18208 = c;
    var G__18209 = d;
    var G__18210 = e;
    var G__18211 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__18206, G__18207, G__18208, G__18209, G__18210, G__18211) : self__.dispatch_fn.call(null, G__18206, G__18207, G__18208, G__18209, G__18210, G__18211);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18212 = a;
  var G__18213 = b;
  var G__18214 = c;
  var G__18215 = d;
  var G__18216 = e;
  var G__18217 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__18212, G__18213, G__18214, G__18215, G__18216, G__18217) : target_fn.call(null, G__18212, G__18213, G__18214, G__18215, G__18216, G__18217);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18218 = a;
    var G__18219 = b;
    var G__18220 = c;
    var G__18221 = d;
    var G__18222 = e;
    var G__18223 = f;
    var G__18224 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__18218, G__18219, G__18220, G__18221, G__18222, G__18223, G__18224) : self__.dispatch_fn.call(null, G__18218, G__18219, G__18220, G__18221, G__18222, G__18223, G__18224);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18225 = a;
  var G__18226 = b;
  var G__18227 = c;
  var G__18228 = d;
  var G__18229 = e;
  var G__18230 = f;
  var G__18231 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__18225, G__18226, G__18227, G__18228, G__18229, G__18230, G__18231) : target_fn.call(null, G__18225, G__18226, G__18227, G__18228, G__18229, G__18230, G__18231);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18232 = a;
    var G__18233 = b;
    var G__18234 = c;
    var G__18235 = d;
    var G__18236 = e;
    var G__18237 = f;
    var G__18238 = g;
    var G__18239 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239) : self__.dispatch_fn.call(null, G__18232, G__18233, G__18234, G__18235, G__18236, G__18237, G__18238, G__18239);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18240 = a;
  var G__18241 = b;
  var G__18242 = c;
  var G__18243 = d;
  var G__18244 = e;
  var G__18245 = f;
  var G__18246 = g;
  var G__18247 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247) : target_fn.call(null, G__18240, G__18241, G__18242, G__18243, G__18244, G__18245, G__18246, G__18247);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18248 = a;
    var G__18249 = b;
    var G__18250 = c;
    var G__18251 = d;
    var G__18252 = e;
    var G__18253 = f;
    var G__18254 = g;
    var G__18255 = h;
    var G__18256 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256) : self__.dispatch_fn.call(null, G__18248, G__18249, G__18250, G__18251, G__18252, G__18253, G__18254, G__18255, G__18256);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18257 = a;
  var G__18258 = b;
  var G__18259 = c;
  var G__18260 = d;
  var G__18261 = e;
  var G__18262 = f;
  var G__18263 = g;
  var G__18264 = h;
  var G__18265 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265) : target_fn.call(null, G__18257, G__18258, G__18259, G__18260, G__18261, G__18262, G__18263, G__18264, G__18265);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18266 = a;
    var G__18267 = b;
    var G__18268 = c;
    var G__18269 = d;
    var G__18270 = e;
    var G__18271 = f;
    var G__18272 = g;
    var G__18273 = h;
    var G__18274 = i;
    var G__18275 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__18266, G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274, G__18275) : self__.dispatch_fn.call(null, G__18266, G__18267, G__18268, G__18269, G__18270, G__18271, G__18272, G__18273, G__18274, G__18275);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18276 = a;
  var G__18277 = b;
  var G__18278 = c;
  var G__18279 = d;
  var G__18280 = e;
  var G__18281 = f;
  var G__18282 = g;
  var G__18283 = h;
  var G__18284 = i;
  var G__18285 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__18276, G__18277, G__18278, G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285) : target_fn.call(null, G__18276, G__18277, G__18278, G__18279, G__18280, G__18281, G__18282, G__18283, G__18284, G__18285);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18286 = a;
    var G__18287 = b;
    var G__18288 = c;
    var G__18289 = d;
    var G__18290 = e;
    var G__18291 = f;
    var G__18292 = g;
    var G__18293 = h;
    var G__18294 = i;
    var G__18295 = j;
    var G__18296 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__18286, G__18287, G__18288, G__18289, G__18290, G__18291, G__18292, G__18293, G__18294, G__18295, G__18296) : self__.dispatch_fn.call(null, G__18286, G__18287, G__18288, G__18289, G__18290, G__18291, G__18292, G__18293, G__18294, G__18295, G__18296);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18297 = a;
  var G__18298 = b;
  var G__18299 = c;
  var G__18300 = d;
  var G__18301 = e;
  var G__18302 = f;
  var G__18303 = g;
  var G__18304 = h;
  var G__18305 = i;
  var G__18306 = j;
  var G__18307 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305, G__18306, G__18307) : target_fn.call(null, G__18297, G__18298, G__18299, G__18300, G__18301, G__18302, G__18303, G__18304, G__18305, G__18306, G__18307);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18308 = a;
    var G__18309 = b;
    var G__18310 = c;
    var G__18311 = d;
    var G__18312 = e;
    var G__18313 = f;
    var G__18314 = g;
    var G__18315 = h;
    var G__18316 = i;
    var G__18317 = j;
    var G__18318 = k;
    var G__18319 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319) : self__.dispatch_fn.call(null, G__18308, G__18309, G__18310, G__18311, G__18312, G__18313, G__18314, G__18315, G__18316, G__18317, G__18318, G__18319);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18320 = a;
  var G__18321 = b;
  var G__18322 = c;
  var G__18323 = d;
  var G__18324 = e;
  var G__18325 = f;
  var G__18326 = g;
  var G__18327 = h;
  var G__18328 = i;
  var G__18329 = j;
  var G__18330 = k;
  var G__18331 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__18320, G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330, G__18331) : target_fn.call(null, G__18320, G__18321, G__18322, G__18323, G__18324, G__18325, G__18326, G__18327, G__18328, G__18329, G__18330, G__18331);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18332 = a;
    var G__18333 = b;
    var G__18334 = c;
    var G__18335 = d;
    var G__18336 = e;
    var G__18337 = f;
    var G__18338 = g;
    var G__18339 = h;
    var G__18340 = i;
    var G__18341 = j;
    var G__18342 = k;
    var G__18343 = l;
    var G__18344 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__18332, G__18333, G__18334, G__18335, G__18336, G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344) : self__.dispatch_fn.call(null, G__18332, G__18333, G__18334, G__18335, G__18336, G__18337, G__18338, G__18339, G__18340, G__18341, G__18342, G__18343, G__18344);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18345 = a;
  var G__18346 = b;
  var G__18347 = c;
  var G__18348 = d;
  var G__18349 = e;
  var G__18350 = f;
  var G__18351 = g;
  var G__18352 = h;
  var G__18353 = i;
  var G__18354 = j;
  var G__18355 = k;
  var G__18356 = l;
  var G__18357 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__18345, G__18346, G__18347, G__18348, G__18349, G__18350, G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357) : target_fn.call(null, G__18345, G__18346, G__18347, G__18348, G__18349, G__18350, G__18351, G__18352, G__18353, G__18354, G__18355, G__18356, G__18357);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18358 = a;
    var G__18359 = b;
    var G__18360 = c;
    var G__18361 = d;
    var G__18362 = e;
    var G__18363 = f;
    var G__18364 = g;
    var G__18365 = h;
    var G__18366 = i;
    var G__18367 = j;
    var G__18368 = k;
    var G__18369 = l;
    var G__18370 = m;
    var G__18371 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371) : self__.dispatch_fn.call(null, G__18358, G__18359, G__18360, G__18361, G__18362, G__18363, G__18364, G__18365, G__18366, G__18367, G__18368, G__18369, G__18370, G__18371);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18372 = a;
  var G__18373 = b;
  var G__18374 = c;
  var G__18375 = d;
  var G__18376 = e;
  var G__18377 = f;
  var G__18378 = g;
  var G__18379 = h;
  var G__18380 = i;
  var G__18381 = j;
  var G__18382 = k;
  var G__18383 = l;
  var G__18384 = m;
  var G__18385 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385) : target_fn.call(null, G__18372, G__18373, G__18374, G__18375, G__18376, G__18377, G__18378, G__18379, G__18380, G__18381, G__18382, G__18383, G__18384, G__18385);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18386 = a;
    var G__18387 = b;
    var G__18388 = c;
    var G__18389 = d;
    var G__18390 = e;
    var G__18391 = f;
    var G__18392 = g;
    var G__18393 = h;
    var G__18394 = i;
    var G__18395 = j;
    var G__18396 = k;
    var G__18397 = l;
    var G__18398 = m;
    var G__18399 = n;
    var G__18400 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__18386, G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393, G__18394, G__18395, G__18396, G__18397, G__18398, G__18399, G__18400) : self__.dispatch_fn.call(null, G__18386, G__18387, G__18388, G__18389, G__18390, G__18391, G__18392, G__18393, G__18394, G__18395, G__18396, G__18397, G__18398, G__18399, G__18400);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18401 = a;
  var G__18402 = b;
  var G__18403 = c;
  var G__18404 = d;
  var G__18405 = e;
  var G__18406 = f;
  var G__18407 = g;
  var G__18408 = h;
  var G__18409 = i;
  var G__18410 = j;
  var G__18411 = k;
  var G__18412 = l;
  var G__18413 = m;
  var G__18414 = n;
  var G__18415 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, G__18410, G__18411, G__18412, G__18413, G__18414, G__18415) : target_fn.call(null, G__18401, G__18402, G__18403, G__18404, G__18405, G__18406, G__18407, G__18408, G__18409, G__18410, G__18411, G__18412, G__18413, G__18414, G__18415);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18416 = a;
    var G__18417 = b;
    var G__18418 = c;
    var G__18419 = d;
    var G__18420 = e;
    var G__18421 = f;
    var G__18422 = g;
    var G__18423 = h;
    var G__18424 = i;
    var G__18425 = j;
    var G__18426 = k;
    var G__18427 = l;
    var G__18428 = m;
    var G__18429 = n;
    var G__18430 = o;
    var G__18431 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, G__18426, G__18427, G__18428, G__18429, G__18430, G__18431) : self__.dispatch_fn.call(null, G__18416, G__18417, G__18418, G__18419, G__18420, G__18421, G__18422, G__18423, G__18424, G__18425, G__18426, G__18427, G__18428, G__18429, G__18430, G__18431);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18432 = a;
  var G__18433 = b;
  var G__18434 = c;
  var G__18435 = d;
  var G__18436 = e;
  var G__18437 = f;
  var G__18438 = g;
  var G__18439 = h;
  var G__18440 = i;
  var G__18441 = j;
  var G__18442 = k;
  var G__18443 = l;
  var G__18444 = m;
  var G__18445 = n;
  var G__18446 = o;
  var G__18447 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__18432, G__18433, G__18434, G__18435, G__18436, G__18437, G__18438, G__18439, G__18440, G__18441, G__18442, G__18443, G__18444, G__18445, G__18446, G__18447) : target_fn.call(null, G__18432, G__18433, G__18434, G__18435, G__18436, G__18437, G__18438, G__18439, G__18440, G__18441, G__18442, G__18443, G__18444, G__18445, G__18446, G__18447);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18448 = a;
    var G__18449 = b;
    var G__18450 = c;
    var G__18451 = d;
    var G__18452 = e;
    var G__18453 = f;
    var G__18454 = g;
    var G__18455 = h;
    var G__18456 = i;
    var G__18457 = j;
    var G__18458 = k;
    var G__18459 = l;
    var G__18460 = m;
    var G__18461 = n;
    var G__18462 = o;
    var G__18463 = p;
    var G__18464 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__18448, G__18449, G__18450, G__18451, G__18452, G__18453, G__18454, G__18455, G__18456, G__18457, G__18458, G__18459, G__18460, G__18461, G__18462, G__18463, G__18464) : self__.dispatch_fn.call(null, G__18448, G__18449, G__18450, G__18451, G__18452, G__18453, G__18454, G__18455, G__18456, G__18457, G__18458, G__18459, G__18460, G__18461, G__18462, G__18463, G__18464);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18465 = a;
  var G__18466 = b;
  var G__18467 = c;
  var G__18468 = d;
  var G__18469 = e;
  var G__18470 = f;
  var G__18471 = g;
  var G__18472 = h;
  var G__18473 = i;
  var G__18474 = j;
  var G__18475 = k;
  var G__18476 = l;
  var G__18477 = m;
  var G__18478 = n;
  var G__18479 = o;
  var G__18480 = p;
  var G__18481 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__18465, G__18466, G__18467, G__18468, G__18469, G__18470, G__18471, G__18472, G__18473, G__18474, G__18475, G__18476, G__18477, G__18478, G__18479, G__18480, G__18481) : target_fn.call(null, G__18465, G__18466, G__18467, G__18468, G__18469, G__18470, G__18471, G__18472, G__18473, G__18474, G__18475, G__18476, G__18477, G__18478, G__18479, G__18480, G__18481);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18482 = a;
    var G__18483 = b;
    var G__18484 = c;
    var G__18485 = d;
    var G__18486 = e;
    var G__18487 = f;
    var G__18488 = g;
    var G__18489 = h;
    var G__18490 = i;
    var G__18491 = j;
    var G__18492 = k;
    var G__18493 = l;
    var G__18494 = m;
    var G__18495 = n;
    var G__18496 = o;
    var G__18497 = p;
    var G__18498 = q;
    var G__18499 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__18482, G__18483, G__18484, G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491, G__18492, G__18493, G__18494, G__18495, G__18496, G__18497, G__18498, G__18499) : self__.dispatch_fn.call(null, G__18482, G__18483, G__18484, G__18485, G__18486, G__18487, G__18488, G__18489, G__18490, G__18491, G__18492, G__18493, G__18494, G__18495, G__18496, G__18497, G__18498, G__18499);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18500 = a;
  var G__18501 = b;
  var G__18502 = c;
  var G__18503 = d;
  var G__18504 = e;
  var G__18505 = f;
  var G__18506 = g;
  var G__18507 = h;
  var G__18508 = i;
  var G__18509 = j;
  var G__18510 = k;
  var G__18511 = l;
  var G__18512 = m;
  var G__18513 = n;
  var G__18514 = o;
  var G__18515 = p;
  var G__18516 = q;
  var G__18517 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__18500, G__18501, G__18502, G__18503, G__18504, G__18505, G__18506, G__18507, G__18508, G__18509, G__18510, G__18511, G__18512, G__18513, G__18514, G__18515, G__18516, G__18517) : target_fn.call(null, G__18500, G__18501, G__18502, G__18503, G__18504, G__18505, G__18506, G__18507, G__18508, G__18509, G__18510, G__18511, G__18512, G__18513, G__18514, G__18515, G__18516, G__18517);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18518 = a;
    var G__18519 = b;
    var G__18520 = c;
    var G__18521 = d;
    var G__18522 = e;
    var G__18523 = f;
    var G__18524 = g;
    var G__18525 = h;
    var G__18526 = i;
    var G__18527 = j;
    var G__18528 = k;
    var G__18529 = l;
    var G__18530 = m;
    var G__18531 = n;
    var G__18532 = o;
    var G__18533 = p;
    var G__18534 = q;
    var G__18535 = r;
    var G__18536 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__18518, G__18519, G__18520, G__18521, G__18522, G__18523, G__18524, G__18525, G__18526, G__18527, G__18528, G__18529, G__18530, G__18531, G__18532, G__18533, G__18534, G__18535, G__18536) : self__.dispatch_fn.call(null, G__18518, G__18519, G__18520, G__18521, G__18522, G__18523, G__18524, G__18525, G__18526, G__18527, G__18528, G__18529, G__18530, G__18531, G__18532, G__18533, G__18534, 
    G__18535, G__18536);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18537 = a;
  var G__18538 = b;
  var G__18539 = c;
  var G__18540 = d;
  var G__18541 = e;
  var G__18542 = f;
  var G__18543 = g;
  var G__18544 = h;
  var G__18545 = i;
  var G__18546 = j;
  var G__18547 = k;
  var G__18548 = l;
  var G__18549 = m;
  var G__18550 = n;
  var G__18551 = o;
  var G__18552 = p;
  var G__18553 = q;
  var G__18554 = r;
  var G__18555 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__18537, G__18538, G__18539, G__18540, G__18541, G__18542, G__18543, G__18544, G__18545, G__18546, G__18547, G__18548, G__18549, G__18550, G__18551, G__18552, G__18553, G__18554, G__18555) : target_fn.call(null, G__18537, G__18538, G__18539, G__18540, G__18541, G__18542, G__18543, G__18544, G__18545, G__18546, G__18547, G__18548, G__18549, G__18550, G__18551, G__18552, G__18553, G__18554, G__18555);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__18556 = a;
    var G__18557 = b;
    var G__18558 = c;
    var G__18559 = d;
    var G__18560 = e;
    var G__18561 = f;
    var G__18562 = g;
    var G__18563 = h;
    var G__18564 = i;
    var G__18565 = j;
    var G__18566 = k;
    var G__18567 = l;
    var G__18568 = m;
    var G__18569 = n;
    var G__18570 = o;
    var G__18571 = p;
    var G__18572 = q;
    var G__18573 = r;
    var G__18574 = s;
    var G__18575 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__18556, G__18557, G__18558, G__18559, G__18560, G__18561, G__18562, G__18563, G__18564, G__18565, G__18566, G__18567, G__18568, G__18569, G__18570, G__18571, G__18572, G__18573, G__18574, G__18575) : self__.dispatch_fn.call(null, G__18556, G__18557, G__18558, G__18559, G__18560, G__18561, G__18562, G__18563, G__18564, G__18565, G__18566, G__18567, G__18568, G__18569, G__18570, G__18571, 
    G__18572, G__18573, G__18574, G__18575);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__18576 = a;
  var G__18577 = b;
  var G__18578 = c;
  var G__18579 = d;
  var G__18580 = e;
  var G__18581 = f;
  var G__18582 = g;
  var G__18583 = h;
  var G__18584 = i;
  var G__18585 = j;
  var G__18586 = k;
  var G__18587 = l;
  var G__18588 = m;
  var G__18589 = n;
  var G__18590 = o;
  var G__18591 = p;
  var G__18592 = q;
  var G__18593 = r;
  var G__18594 = s;
  var G__18595 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__18576, G__18577, G__18578, G__18579, G__18580, G__18581, G__18582, G__18583, G__18584, G__18585, G__18586, G__18587, G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, G__18595) : target_fn.call(null, G__18576, G__18577, G__18578, G__18579, G__18580, G__18581, G__18582, G__18583, G__18584, G__18585, G__18586, G__18587, G__18588, G__18589, G__18590, G__18591, G__18592, G__18593, G__18594, 
  G__18595);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__18596 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18596) : cljs.core.deref.call(null, G__18596);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__18597 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18597) : cljs.core.deref.call(null, G__18597);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__18599 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18599) : cljs.core.deref.call(null, G__18599);
  }(), function() {
    var G__18600 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18600) : cljs.core.deref.call(null, G__18600);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = function() {
    var G__18601 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18601) : cljs.core.deref.call(null, G__18601);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__18602 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18602) : cljs.core.deref.call(null, G__18602);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__18598 = this$__$1;
  return goog.getUid(G__18598);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = function() {
      var G__18604 = self__.uuid;
      return goog.string.hashCode(G__18604);
    }();
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__18605 = self__.uuid;
  var G__18606 = other.uuid;
  return goog.array.defaultCompare(G__18605, G__18606);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null)], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error;
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var G__18608 = arguments.length;
  switch(G__18608) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__18614 = x;
      var G__18615 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18614, G__18615) : pred.call(null, G__18614, G__18615);
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(function() {
        var G__18616 = y;
        var G__18617 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__18616, G__18617) : pred.call(null, G__18616, G__18617);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__18618 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__18618) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write(writer__4888__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
goog.provide("om.dom");
goog.require("cljs.core");
goog.require("goog.object");
om.dom.a = function om$dom$a() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.a.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.a.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.a.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.a.cljs$lang$maxFixedArity = 1;
om.dom.a.cljs$lang$applyTo = function(seq12032) {
  var G__12033 = cljs.core.first.call(null, seq12032);
  var seq12032__$1 = cljs.core.next.call(null, seq12032);
  return om.dom.a.cljs$core$IFn$_invoke$arity$variadic(G__12033, seq12032__$1);
};
om.dom.abbr = function om$dom$abbr() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.abbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.abbr.cljs$lang$maxFixedArity = 1;
om.dom.abbr.cljs$lang$applyTo = function(seq12034) {
  var G__12035 = cljs.core.first.call(null, seq12034);
  var seq12034__$1 = cljs.core.next.call(null, seq12034);
  return om.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(G__12035, seq12034__$1);
};
om.dom.address = function om$dom$address() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.address.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.address.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.address.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.address.cljs$lang$maxFixedArity = 1;
om.dom.address.cljs$lang$applyTo = function(seq12036) {
  var G__12037 = cljs.core.first.call(null, seq12036);
  var seq12036__$1 = cljs.core.next.call(null, seq12036);
  return om.dom.address.cljs$core$IFn$_invoke$arity$variadic(G__12037, seq12036__$1);
};
om.dom.area = function om$dom$area() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.area.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.area.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.area.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.area.cljs$lang$maxFixedArity = 1;
om.dom.area.cljs$lang$applyTo = function(seq12038) {
  var G__12039 = cljs.core.first.call(null, seq12038);
  var seq12038__$1 = cljs.core.next.call(null, seq12038);
  return om.dom.area.cljs$core$IFn$_invoke$arity$variadic(G__12039, seq12038__$1);
};
om.dom.article = function om$dom$article() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.article.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.article.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.article.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.article.cljs$lang$maxFixedArity = 1;
om.dom.article.cljs$lang$applyTo = function(seq12040) {
  var G__12041 = cljs.core.first.call(null, seq12040);
  var seq12040__$1 = cljs.core.next.call(null, seq12040);
  return om.dom.article.cljs$core$IFn$_invoke$arity$variadic(G__12041, seq12040__$1);
};
om.dom.aside = function om$dom$aside() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.aside.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.aside.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.aside.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.aside.cljs$lang$maxFixedArity = 1;
om.dom.aside.cljs$lang$applyTo = function(seq12042) {
  var G__12043 = cljs.core.first.call(null, seq12042);
  var seq12042__$1 = cljs.core.next.call(null, seq12042);
  return om.dom.aside.cljs$core$IFn$_invoke$arity$variadic(G__12043, seq12042__$1);
};
om.dom.audio = function om$dom$audio() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.audio.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.audio.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.audio.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.audio.cljs$lang$maxFixedArity = 1;
om.dom.audio.cljs$lang$applyTo = function(seq12044) {
  var G__12045 = cljs.core.first.call(null, seq12044);
  var seq12044__$1 = cljs.core.next.call(null, seq12044);
  return om.dom.audio.cljs$core$IFn$_invoke$arity$variadic(G__12045, seq12044__$1);
};
om.dom.b = function om$dom$b() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.b.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.b.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.b.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.b.cljs$lang$maxFixedArity = 1;
om.dom.b.cljs$lang$applyTo = function(seq12046) {
  var G__12047 = cljs.core.first.call(null, seq12046);
  var seq12046__$1 = cljs.core.next.call(null, seq12046);
  return om.dom.b.cljs$core$IFn$_invoke$arity$variadic(G__12047, seq12046__$1);
};
om.dom.base = function om$dom$base() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.base.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.base.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.base.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.base.cljs$lang$maxFixedArity = 1;
om.dom.base.cljs$lang$applyTo = function(seq12048) {
  var G__12049 = cljs.core.first.call(null, seq12048);
  var seq12048__$1 = cljs.core.next.call(null, seq12048);
  return om.dom.base.cljs$core$IFn$_invoke$arity$variadic(G__12049, seq12048__$1);
};
om.dom.bdi = function om$dom$bdi() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.bdi.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.bdi.cljs$lang$maxFixedArity = 1;
om.dom.bdi.cljs$lang$applyTo = function(seq12050) {
  var G__12051 = cljs.core.first.call(null, seq12050);
  var seq12050__$1 = cljs.core.next.call(null, seq12050);
  return om.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(G__12051, seq12050__$1);
};
om.dom.bdo = function om$dom$bdo() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.bdo.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.bdo.cljs$lang$maxFixedArity = 1;
om.dom.bdo.cljs$lang$applyTo = function(seq12052) {
  var G__12053 = cljs.core.first.call(null, seq12052);
  var seq12052__$1 = cljs.core.next.call(null, seq12052);
  return om.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(G__12053, seq12052__$1);
};
om.dom.big = function om$dom$big() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.big.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.big.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.big.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.big.cljs$lang$maxFixedArity = 1;
om.dom.big.cljs$lang$applyTo = function(seq12054) {
  var G__12055 = cljs.core.first.call(null, seq12054);
  var seq12054__$1 = cljs.core.next.call(null, seq12054);
  return om.dom.big.cljs$core$IFn$_invoke$arity$variadic(G__12055, seq12054__$1);
};
om.dom.blockquote = function om$dom$blockquote() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.blockquote.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.blockquote.cljs$lang$maxFixedArity = 1;
om.dom.blockquote.cljs$lang$applyTo = function(seq12056) {
  var G__12057 = cljs.core.first.call(null, seq12056);
  var seq12056__$1 = cljs.core.next.call(null, seq12056);
  return om.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(G__12057, seq12056__$1);
};
om.dom.body = function om$dom$body() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.body.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.body.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.body.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.body.cljs$lang$maxFixedArity = 1;
om.dom.body.cljs$lang$applyTo = function(seq12058) {
  var G__12059 = cljs.core.first.call(null, seq12058);
  var seq12058__$1 = cljs.core.next.call(null, seq12058);
  return om.dom.body.cljs$core$IFn$_invoke$arity$variadic(G__12059, seq12058__$1);
};
om.dom.br = function om$dom$br() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.br.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.br.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.br.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.br.cljs$lang$maxFixedArity = 1;
om.dom.br.cljs$lang$applyTo = function(seq12060) {
  var G__12061 = cljs.core.first.call(null, seq12060);
  var seq12060__$1 = cljs.core.next.call(null, seq12060);
  return om.dom.br.cljs$core$IFn$_invoke$arity$variadic(G__12061, seq12060__$1);
};
om.dom.button = function om$dom$button() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.button.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.button.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.button.cljs$lang$maxFixedArity = 1;
om.dom.button.cljs$lang$applyTo = function(seq12062) {
  var G__12063 = cljs.core.first.call(null, seq12062);
  var seq12062__$1 = cljs.core.next.call(null, seq12062);
  return om.dom.button.cljs$core$IFn$_invoke$arity$variadic(G__12063, seq12062__$1);
};
om.dom.canvas = function om$dom$canvas() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.canvas.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.canvas.cljs$lang$maxFixedArity = 1;
om.dom.canvas.cljs$lang$applyTo = function(seq12064) {
  var G__12065 = cljs.core.first.call(null, seq12064);
  var seq12064__$1 = cljs.core.next.call(null, seq12064);
  return om.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(G__12065, seq12064__$1);
};
om.dom.caption = function om$dom$caption() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.caption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.caption.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.caption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.caption.cljs$lang$maxFixedArity = 1;
om.dom.caption.cljs$lang$applyTo = function(seq12066) {
  var G__12067 = cljs.core.first.call(null, seq12066);
  var seq12066__$1 = cljs.core.next.call(null, seq12066);
  return om.dom.caption.cljs$core$IFn$_invoke$arity$variadic(G__12067, seq12066__$1);
};
om.dom.cite = function om$dom$cite() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.cite.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.cite.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.cite.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.cite.cljs$lang$maxFixedArity = 1;
om.dom.cite.cljs$lang$applyTo = function(seq12068) {
  var G__12069 = cljs.core.first.call(null, seq12068);
  var seq12068__$1 = cljs.core.next.call(null, seq12068);
  return om.dom.cite.cljs$core$IFn$_invoke$arity$variadic(G__12069, seq12068__$1);
};
om.dom.code = function om$dom$code() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.code.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.code.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.code.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.code.cljs$lang$maxFixedArity = 1;
om.dom.code.cljs$lang$applyTo = function(seq12070) {
  var G__12071 = cljs.core.first.call(null, seq12070);
  var seq12070__$1 = cljs.core.next.call(null, seq12070);
  return om.dom.code.cljs$core$IFn$_invoke$arity$variadic(G__12071, seq12070__$1);
};
om.dom.col = function om$dom$col() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.col.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.col.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.col.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.col.cljs$lang$maxFixedArity = 1;
om.dom.col.cljs$lang$applyTo = function(seq12072) {
  var G__12073 = cljs.core.first.call(null, seq12072);
  var seq12072__$1 = cljs.core.next.call(null, seq12072);
  return om.dom.col.cljs$core$IFn$_invoke$arity$variadic(G__12073, seq12072__$1);
};
om.dom.colgroup = function om$dom$colgroup() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.colgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.colgroup.cljs$lang$maxFixedArity = 1;
om.dom.colgroup.cljs$lang$applyTo = function(seq12074) {
  var G__12075 = cljs.core.first.call(null, seq12074);
  var seq12074__$1 = cljs.core.next.call(null, seq12074);
  return om.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(G__12075, seq12074__$1);
};
om.dom.data = function om$dom$data() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.data.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.data.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.data.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.data.cljs$lang$maxFixedArity = 1;
om.dom.data.cljs$lang$applyTo = function(seq12076) {
  var G__12077 = cljs.core.first.call(null, seq12076);
  var seq12076__$1 = cljs.core.next.call(null, seq12076);
  return om.dom.data.cljs$core$IFn$_invoke$arity$variadic(G__12077, seq12076__$1);
};
om.dom.datalist = function om$dom$datalist() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.datalist.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.datalist.cljs$lang$maxFixedArity = 1;
om.dom.datalist.cljs$lang$applyTo = function(seq12078) {
  var G__12079 = cljs.core.first.call(null, seq12078);
  var seq12078__$1 = cljs.core.next.call(null, seq12078);
  return om.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(G__12079, seq12078__$1);
};
om.dom.dd = function om$dom$dd() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.dd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.dd.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.dd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.dd.cljs$lang$maxFixedArity = 1;
om.dom.dd.cljs$lang$applyTo = function(seq12080) {
  var G__12081 = cljs.core.first.call(null, seq12080);
  var seq12080__$1 = cljs.core.next.call(null, seq12080);
  return om.dom.dd.cljs$core$IFn$_invoke$arity$variadic(G__12081, seq12080__$1);
};
om.dom.del = function om$dom$del() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.del.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.del.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.del.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.del.cljs$lang$maxFixedArity = 1;
om.dom.del.cljs$lang$applyTo = function(seq12082) {
  var G__12083 = cljs.core.first.call(null, seq12082);
  var seq12082__$1 = cljs.core.next.call(null, seq12082);
  return om.dom.del.cljs$core$IFn$_invoke$arity$variadic(G__12083, seq12082__$1);
};
om.dom.dfn = function om$dom$dfn() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.dfn.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.dfn.cljs$lang$maxFixedArity = 1;
om.dom.dfn.cljs$lang$applyTo = function(seq12084) {
  var G__12085 = cljs.core.first.call(null, seq12084);
  var seq12084__$1 = cljs.core.next.call(null, seq12084);
  return om.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(G__12085, seq12084__$1);
};
om.dom.div = function om$dom$div() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.div.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.div.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.div.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.div.cljs$lang$maxFixedArity = 1;
om.dom.div.cljs$lang$applyTo = function(seq12086) {
  var G__12087 = cljs.core.first.call(null, seq12086);
  var seq12086__$1 = cljs.core.next.call(null, seq12086);
  return om.dom.div.cljs$core$IFn$_invoke$arity$variadic(G__12087, seq12086__$1);
};
om.dom.dl = function om$dom$dl() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.dl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.dl.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.dl.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.dl.cljs$lang$maxFixedArity = 1;
om.dom.dl.cljs$lang$applyTo = function(seq12088) {
  var G__12089 = cljs.core.first.call(null, seq12088);
  var seq12088__$1 = cljs.core.next.call(null, seq12088);
  return om.dom.dl.cljs$core$IFn$_invoke$arity$variadic(G__12089, seq12088__$1);
};
om.dom.dt = function om$dom$dt() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.dt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.dt.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.dt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.dt.cljs$lang$maxFixedArity = 1;
om.dom.dt.cljs$lang$applyTo = function(seq12090) {
  var G__12091 = cljs.core.first.call(null, seq12090);
  var seq12090__$1 = cljs.core.next.call(null, seq12090);
  return om.dom.dt.cljs$core$IFn$_invoke$arity$variadic(G__12091, seq12090__$1);
};
om.dom.em = function om$dom$em() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.em.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.em.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.em.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.em.cljs$lang$maxFixedArity = 1;
om.dom.em.cljs$lang$applyTo = function(seq12092) {
  var G__12093 = cljs.core.first.call(null, seq12092);
  var seq12092__$1 = cljs.core.next.call(null, seq12092);
  return om.dom.em.cljs$core$IFn$_invoke$arity$variadic(G__12093, seq12092__$1);
};
om.dom.embed = function om$dom$embed() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.embed.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.embed.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.embed.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.embed.cljs$lang$maxFixedArity = 1;
om.dom.embed.cljs$lang$applyTo = function(seq12094) {
  var G__12095 = cljs.core.first.call(null, seq12094);
  var seq12094__$1 = cljs.core.next.call(null, seq12094);
  return om.dom.embed.cljs$core$IFn$_invoke$arity$variadic(G__12095, seq12094__$1);
};
om.dom.fieldset = function om$dom$fieldset() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.fieldset.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.fieldset.cljs$lang$maxFixedArity = 1;
om.dom.fieldset.cljs$lang$applyTo = function(seq12098) {
  var G__12099 = cljs.core.first.call(null, seq12098);
  var seq12098__$1 = cljs.core.next.call(null, seq12098);
  return om.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(G__12099, seq12098__$1);
};
om.dom.figcaption = function om$dom$figcaption() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.figcaption.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.figcaption.cljs$lang$maxFixedArity = 1;
om.dom.figcaption.cljs$lang$applyTo = function(seq12100) {
  var G__12101 = cljs.core.first.call(null, seq12100);
  var seq12100__$1 = cljs.core.next.call(null, seq12100);
  return om.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(G__12101, seq12100__$1);
};
om.dom.figure = function om$dom$figure() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.figure.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.figure.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.figure.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.figure.cljs$lang$maxFixedArity = 1;
om.dom.figure.cljs$lang$applyTo = function(seq12102) {
  var G__12103 = cljs.core.first.call(null, seq12102);
  var seq12102__$1 = cljs.core.next.call(null, seq12102);
  return om.dom.figure.cljs$core$IFn$_invoke$arity$variadic(G__12103, seq12102__$1);
};
om.dom.footer = function om$dom$footer() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.footer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.footer.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.footer.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.footer.cljs$lang$maxFixedArity = 1;
om.dom.footer.cljs$lang$applyTo = function(seq12104) {
  var G__12105 = cljs.core.first.call(null, seq12104);
  var seq12104__$1 = cljs.core.next.call(null, seq12104);
  return om.dom.footer.cljs$core$IFn$_invoke$arity$variadic(G__12105, seq12104__$1);
};
om.dom.form = function om$dom$form() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.form.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.form.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.form.cljs$lang$maxFixedArity = 1;
om.dom.form.cljs$lang$applyTo = function(seq12106) {
  var G__12107 = cljs.core.first.call(null, seq12106);
  var seq12106__$1 = cljs.core.next.call(null, seq12106);
  return om.dom.form.cljs$core$IFn$_invoke$arity$variadic(G__12107, seq12106__$1);
};
om.dom.h1 = function om$dom$h1() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h1.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h1.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h1.cljs$lang$maxFixedArity = 1;
om.dom.h1.cljs$lang$applyTo = function(seq12108) {
  var G__12109 = cljs.core.first.call(null, seq12108);
  var seq12108__$1 = cljs.core.next.call(null, seq12108);
  return om.dom.h1.cljs$core$IFn$_invoke$arity$variadic(G__12109, seq12108__$1);
};
om.dom.h2 = function om$dom$h2() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h2.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h2.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h2.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h2.cljs$lang$maxFixedArity = 1;
om.dom.h2.cljs$lang$applyTo = function(seq12110) {
  var G__12111 = cljs.core.first.call(null, seq12110);
  var seq12110__$1 = cljs.core.next.call(null, seq12110);
  return om.dom.h2.cljs$core$IFn$_invoke$arity$variadic(G__12111, seq12110__$1);
};
om.dom.h3 = function om$dom$h3() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h3.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h3.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h3.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h3.cljs$lang$maxFixedArity = 1;
om.dom.h3.cljs$lang$applyTo = function(seq12112) {
  var G__12113 = cljs.core.first.call(null, seq12112);
  var seq12112__$1 = cljs.core.next.call(null, seq12112);
  return om.dom.h3.cljs$core$IFn$_invoke$arity$variadic(G__12113, seq12112__$1);
};
om.dom.h4 = function om$dom$h4() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h4.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h4.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h4.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h4.cljs$lang$maxFixedArity = 1;
om.dom.h4.cljs$lang$applyTo = function(seq12114) {
  var G__12115 = cljs.core.first.call(null, seq12114);
  var seq12114__$1 = cljs.core.next.call(null, seq12114);
  return om.dom.h4.cljs$core$IFn$_invoke$arity$variadic(G__12115, seq12114__$1);
};
om.dom.h5 = function om$dom$h5() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h5.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h5.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h5.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h5.cljs$lang$maxFixedArity = 1;
om.dom.h5.cljs$lang$applyTo = function(seq12116) {
  var G__12117 = cljs.core.first.call(null, seq12116);
  var seq12116__$1 = cljs.core.next.call(null, seq12116);
  return om.dom.h5.cljs$core$IFn$_invoke$arity$variadic(G__12117, seq12116__$1);
};
om.dom.h6 = function om$dom$h6() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.h6.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.h6.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.h6.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.h6.cljs$lang$maxFixedArity = 1;
om.dom.h6.cljs$lang$applyTo = function(seq12118) {
  var G__12119 = cljs.core.first.call(null, seq12118);
  var seq12118__$1 = cljs.core.next.call(null, seq12118);
  return om.dom.h6.cljs$core$IFn$_invoke$arity$variadic(G__12119, seq12118__$1);
};
om.dom.head = function om$dom$head() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.head.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.head.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.head.cljs$lang$maxFixedArity = 1;
om.dom.head.cljs$lang$applyTo = function(seq12120) {
  var G__12121 = cljs.core.first.call(null, seq12120);
  var seq12120__$1 = cljs.core.next.call(null, seq12120);
  return om.dom.head.cljs$core$IFn$_invoke$arity$variadic(G__12121, seq12120__$1);
};
om.dom.header = function om$dom$header() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.header.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.header.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.header.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.header.cljs$lang$maxFixedArity = 1;
om.dom.header.cljs$lang$applyTo = function(seq12122) {
  var G__12123 = cljs.core.first.call(null, seq12122);
  var seq12122__$1 = cljs.core.next.call(null, seq12122);
  return om.dom.header.cljs$core$IFn$_invoke$arity$variadic(G__12123, seq12122__$1);
};
om.dom.hr = function om$dom$hr() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.hr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.hr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.hr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.hr.cljs$lang$maxFixedArity = 1;
om.dom.hr.cljs$lang$applyTo = function(seq12124) {
  var G__12125 = cljs.core.first.call(null, seq12124);
  var seq12124__$1 = cljs.core.next.call(null, seq12124);
  return om.dom.hr.cljs$core$IFn$_invoke$arity$variadic(G__12125, seq12124__$1);
};
om.dom.html = function om$dom$html() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.html.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.html.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.html.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.html.cljs$lang$maxFixedArity = 1;
om.dom.html.cljs$lang$applyTo = function(seq12126) {
  var G__12127 = cljs.core.first.call(null, seq12126);
  var seq12126__$1 = cljs.core.next.call(null, seq12126);
  return om.dom.html.cljs$core$IFn$_invoke$arity$variadic(G__12127, seq12126__$1);
};
om.dom.i = function om$dom$i() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.i.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.i.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.i.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.i.cljs$lang$maxFixedArity = 1;
om.dom.i.cljs$lang$applyTo = function(seq12128) {
  var G__12129 = cljs.core.first.call(null, seq12128);
  var seq12128__$1 = cljs.core.next.call(null, seq12128);
  return om.dom.i.cljs$core$IFn$_invoke$arity$variadic(G__12129, seq12128__$1);
};
om.dom.iframe = function om$dom$iframe() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.iframe.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.iframe.cljs$lang$maxFixedArity = 1;
om.dom.iframe.cljs$lang$applyTo = function(seq12130) {
  var G__12131 = cljs.core.first.call(null, seq12130);
  var seq12130__$1 = cljs.core.next.call(null, seq12130);
  return om.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(G__12131, seq12130__$1);
};
om.dom.img = function om$dom$img() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.img.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.img.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.img.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.img.cljs$lang$maxFixedArity = 1;
om.dom.img.cljs$lang$applyTo = function(seq12132) {
  var G__12133 = cljs.core.first.call(null, seq12132);
  var seq12132__$1 = cljs.core.next.call(null, seq12132);
  return om.dom.img.cljs$core$IFn$_invoke$arity$variadic(G__12133, seq12132__$1);
};
om.dom.ins = function om$dom$ins() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.ins.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.ins.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.ins.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.ins.cljs$lang$maxFixedArity = 1;
om.dom.ins.cljs$lang$applyTo = function(seq12134) {
  var G__12135 = cljs.core.first.call(null, seq12134);
  var seq12134__$1 = cljs.core.next.call(null, seq12134);
  return om.dom.ins.cljs$core$IFn$_invoke$arity$variadic(G__12135, seq12134__$1);
};
om.dom.kbd = function om$dom$kbd() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.kbd.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.kbd.cljs$lang$maxFixedArity = 1;
om.dom.kbd.cljs$lang$applyTo = function(seq12136) {
  var G__12137 = cljs.core.first.call(null, seq12136);
  var seq12136__$1 = cljs.core.next.call(null, seq12136);
  return om.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(G__12137, seq12136__$1);
};
om.dom.keygen = function om$dom$keygen() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.keygen.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.keygen.cljs$lang$maxFixedArity = 1;
om.dom.keygen.cljs$lang$applyTo = function(seq12138) {
  var G__12139 = cljs.core.first.call(null, seq12138);
  var seq12138__$1 = cljs.core.next.call(null, seq12138);
  return om.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(G__12139, seq12138__$1);
};
om.dom.label = function om$dom$label() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.label.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.label.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.label.cljs$lang$maxFixedArity = 1;
om.dom.label.cljs$lang$applyTo = function(seq12140) {
  var G__12141 = cljs.core.first.call(null, seq12140);
  var seq12140__$1 = cljs.core.next.call(null, seq12140);
  return om.dom.label.cljs$core$IFn$_invoke$arity$variadic(G__12141, seq12140__$1);
};
om.dom.legend = function om$dom$legend() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.legend.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.legend.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.legend.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.legend.cljs$lang$maxFixedArity = 1;
om.dom.legend.cljs$lang$applyTo = function(seq12142) {
  var G__12143 = cljs.core.first.call(null, seq12142);
  var seq12142__$1 = cljs.core.next.call(null, seq12142);
  return om.dom.legend.cljs$core$IFn$_invoke$arity$variadic(G__12143, seq12142__$1);
};
om.dom.li = function om$dom$li() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.li.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.li.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.li.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.li.cljs$lang$maxFixedArity = 1;
om.dom.li.cljs$lang$applyTo = function(seq12144) {
  var G__12145 = cljs.core.first.call(null, seq12144);
  var seq12144__$1 = cljs.core.next.call(null, seq12144);
  return om.dom.li.cljs$core$IFn$_invoke$arity$variadic(G__12145, seq12144__$1);
};
om.dom.link = function om$dom$link() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.link.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.link.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.link.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.link.cljs$lang$maxFixedArity = 1;
om.dom.link.cljs$lang$applyTo = function(seq12146) {
  var G__12147 = cljs.core.first.call(null, seq12146);
  var seq12146__$1 = cljs.core.next.call(null, seq12146);
  return om.dom.link.cljs$core$IFn$_invoke$arity$variadic(G__12147, seq12146__$1);
};
om.dom.main = function om$dom$main() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.main.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.main.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.main.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.main.cljs$lang$maxFixedArity = 1;
om.dom.main.cljs$lang$applyTo = function(seq12148) {
  var G__12149 = cljs.core.first.call(null, seq12148);
  var seq12148__$1 = cljs.core.next.call(null, seq12148);
  return om.dom.main.cljs$core$IFn$_invoke$arity$variadic(G__12149, seq12148__$1);
};
om.dom.map = function om$dom$map() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.map.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.map.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.map.cljs$lang$maxFixedArity = 1;
om.dom.map.cljs$lang$applyTo = function(seq12150) {
  var G__12151 = cljs.core.first.call(null, seq12150);
  var seq12150__$1 = cljs.core.next.call(null, seq12150);
  return om.dom.map.cljs$core$IFn$_invoke$arity$variadic(G__12151, seq12150__$1);
};
om.dom.mark = function om$dom$mark() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.mark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.mark.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.mark.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.mark.cljs$lang$maxFixedArity = 1;
om.dom.mark.cljs$lang$applyTo = function(seq12152) {
  var G__12153 = cljs.core.first.call(null, seq12152);
  var seq12152__$1 = cljs.core.next.call(null, seq12152);
  return om.dom.mark.cljs$core$IFn$_invoke$arity$variadic(G__12153, seq12152__$1);
};
om.dom.marquee = function om$dom$marquee() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.marquee.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.marquee.cljs$lang$maxFixedArity = 1;
om.dom.marquee.cljs$lang$applyTo = function(seq12154) {
  var G__12155 = cljs.core.first.call(null, seq12154);
  var seq12154__$1 = cljs.core.next.call(null, seq12154);
  return om.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(G__12155, seq12154__$1);
};
om.dom.menu = function om$dom$menu() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.menu.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.menu.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.menu.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.menu.cljs$lang$maxFixedArity = 1;
om.dom.menu.cljs$lang$applyTo = function(seq12156) {
  var G__12157 = cljs.core.first.call(null, seq12156);
  var seq12156__$1 = cljs.core.next.call(null, seq12156);
  return om.dom.menu.cljs$core$IFn$_invoke$arity$variadic(G__12157, seq12156__$1);
};
om.dom.menuitem = function om$dom$menuitem() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.menuitem.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.menuitem.cljs$lang$maxFixedArity = 1;
om.dom.menuitem.cljs$lang$applyTo = function(seq12158) {
  var G__12159 = cljs.core.first.call(null, seq12158);
  var seq12158__$1 = cljs.core.next.call(null, seq12158);
  return om.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(G__12159, seq12158__$1);
};
om.dom.meta = function om$dom$meta() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.meta.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.meta.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.meta.cljs$lang$maxFixedArity = 1;
om.dom.meta.cljs$lang$applyTo = function(seq12160) {
  var G__12161 = cljs.core.first.call(null, seq12160);
  var seq12160__$1 = cljs.core.next.call(null, seq12160);
  return om.dom.meta.cljs$core$IFn$_invoke$arity$variadic(G__12161, seq12160__$1);
};
om.dom.meter = function om$dom$meter() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.meter.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.meter.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.meter.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.meter.cljs$lang$maxFixedArity = 1;
om.dom.meter.cljs$lang$applyTo = function(seq12162) {
  var G__12163 = cljs.core.first.call(null, seq12162);
  var seq12162__$1 = cljs.core.next.call(null, seq12162);
  return om.dom.meter.cljs$core$IFn$_invoke$arity$variadic(G__12163, seq12162__$1);
};
om.dom.nav = function om$dom$nav() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.nav.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.nav.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.nav.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.nav.cljs$lang$maxFixedArity = 1;
om.dom.nav.cljs$lang$applyTo = function(seq12164) {
  var G__12165 = cljs.core.first.call(null, seq12164);
  var seq12164__$1 = cljs.core.next.call(null, seq12164);
  return om.dom.nav.cljs$core$IFn$_invoke$arity$variadic(G__12165, seq12164__$1);
};
om.dom.noscript = function om$dom$noscript() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.noscript.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.noscript.cljs$lang$maxFixedArity = 1;
om.dom.noscript.cljs$lang$applyTo = function(seq12166) {
  var G__12167 = cljs.core.first.call(null, seq12166);
  var seq12166__$1 = cljs.core.next.call(null, seq12166);
  return om.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(G__12167, seq12166__$1);
};
om.dom.object = function om$dom$object() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.object.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.object.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.object.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.object.cljs$lang$maxFixedArity = 1;
om.dom.object.cljs$lang$applyTo = function(seq12168) {
  var G__12169 = cljs.core.first.call(null, seq12168);
  var seq12168__$1 = cljs.core.next.call(null, seq12168);
  return om.dom.object.cljs$core$IFn$_invoke$arity$variadic(G__12169, seq12168__$1);
};
om.dom.ol = function om$dom$ol() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.ol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.ol.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.ol.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.ol.cljs$lang$maxFixedArity = 1;
om.dom.ol.cljs$lang$applyTo = function(seq12170) {
  var G__12171 = cljs.core.first.call(null, seq12170);
  var seq12170__$1 = cljs.core.next.call(null, seq12170);
  return om.dom.ol.cljs$core$IFn$_invoke$arity$variadic(G__12171, seq12170__$1);
};
om.dom.optgroup = function om$dom$optgroup() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.optgroup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.optgroup.cljs$lang$maxFixedArity = 1;
om.dom.optgroup.cljs$lang$applyTo = function(seq12172) {
  var G__12173 = cljs.core.first.call(null, seq12172);
  var seq12172__$1 = cljs.core.next.call(null, seq12172);
  return om.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(G__12173, seq12172__$1);
};
om.dom.output = function om$dom$output() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.output.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.output.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.output.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.output.cljs$lang$maxFixedArity = 1;
om.dom.output.cljs$lang$applyTo = function(seq12174) {
  var G__12175 = cljs.core.first.call(null, seq12174);
  var seq12174__$1 = cljs.core.next.call(null, seq12174);
  return om.dom.output.cljs$core$IFn$_invoke$arity$variadic(G__12175, seq12174__$1);
};
om.dom.p = function om$dom$p() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.p.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.p.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.p.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.p.cljs$lang$maxFixedArity = 1;
om.dom.p.cljs$lang$applyTo = function(seq12176) {
  var G__12177 = cljs.core.first.call(null, seq12176);
  var seq12176__$1 = cljs.core.next.call(null, seq12176);
  return om.dom.p.cljs$core$IFn$_invoke$arity$variadic(G__12177, seq12176__$1);
};
om.dom.param = function om$dom$param() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.param.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.param.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.param.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.param.cljs$lang$maxFixedArity = 1;
om.dom.param.cljs$lang$applyTo = function(seq12178) {
  var G__12179 = cljs.core.first.call(null, seq12178);
  var seq12178__$1 = cljs.core.next.call(null, seq12178);
  return om.dom.param.cljs$core$IFn$_invoke$arity$variadic(G__12179, seq12178__$1);
};
om.dom.pre = function om$dom$pre() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.pre.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.pre.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.pre.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.pre.cljs$lang$maxFixedArity = 1;
om.dom.pre.cljs$lang$applyTo = function(seq12180) {
  var G__12181 = cljs.core.first.call(null, seq12180);
  var seq12180__$1 = cljs.core.next.call(null, seq12180);
  return om.dom.pre.cljs$core$IFn$_invoke$arity$variadic(G__12181, seq12180__$1);
};
om.dom.progress = function om$dom$progress() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.progress.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.progress.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.progress.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.progress.cljs$lang$maxFixedArity = 1;
om.dom.progress.cljs$lang$applyTo = function(seq12182) {
  var G__12183 = cljs.core.first.call(null, seq12182);
  var seq12182__$1 = cljs.core.next.call(null, seq12182);
  return om.dom.progress.cljs$core$IFn$_invoke$arity$variadic(G__12183, seq12182__$1);
};
om.dom.q = function om$dom$q() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.q.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.q.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.q.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.q.cljs$lang$maxFixedArity = 1;
om.dom.q.cljs$lang$applyTo = function(seq12184) {
  var G__12185 = cljs.core.first.call(null, seq12184);
  var seq12184__$1 = cljs.core.next.call(null, seq12184);
  return om.dom.q.cljs$core$IFn$_invoke$arity$variadic(G__12185, seq12184__$1);
};
om.dom.rp = function om$dom$rp() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.rp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.rp.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.rp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.rp.cljs$lang$maxFixedArity = 1;
om.dom.rp.cljs$lang$applyTo = function(seq12186) {
  var G__12187 = cljs.core.first.call(null, seq12186);
  var seq12186__$1 = cljs.core.next.call(null, seq12186);
  return om.dom.rp.cljs$core$IFn$_invoke$arity$variadic(G__12187, seq12186__$1);
};
om.dom.rt = function om$dom$rt() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.rt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.rt.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.rt.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.rt.cljs$lang$maxFixedArity = 1;
om.dom.rt.cljs$lang$applyTo = function(seq12188) {
  var G__12189 = cljs.core.first.call(null, seq12188);
  var seq12188__$1 = cljs.core.next.call(null, seq12188);
  return om.dom.rt.cljs$core$IFn$_invoke$arity$variadic(G__12189, seq12188__$1);
};
om.dom.ruby = function om$dom$ruby() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.ruby.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.ruby.cljs$lang$maxFixedArity = 1;
om.dom.ruby.cljs$lang$applyTo = function(seq12190) {
  var G__12191 = cljs.core.first.call(null, seq12190);
  var seq12190__$1 = cljs.core.next.call(null, seq12190);
  return om.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(G__12191, seq12190__$1);
};
om.dom.s = function om$dom$s() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.s.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.s.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.s.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.s.cljs$lang$maxFixedArity = 1;
om.dom.s.cljs$lang$applyTo = function(seq12192) {
  var G__12193 = cljs.core.first.call(null, seq12192);
  var seq12192__$1 = cljs.core.next.call(null, seq12192);
  return om.dom.s.cljs$core$IFn$_invoke$arity$variadic(G__12193, seq12192__$1);
};
om.dom.samp = function om$dom$samp() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.samp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.samp.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.samp.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.samp.cljs$lang$maxFixedArity = 1;
om.dom.samp.cljs$lang$applyTo = function(seq12194) {
  var G__12195 = cljs.core.first.call(null, seq12194);
  var seq12194__$1 = cljs.core.next.call(null, seq12194);
  return om.dom.samp.cljs$core$IFn$_invoke$arity$variadic(G__12195, seq12194__$1);
};
om.dom.script = function om$dom$script() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.script.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.script.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.script.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.script.cljs$lang$maxFixedArity = 1;
om.dom.script.cljs$lang$applyTo = function(seq12196) {
  var G__12197 = cljs.core.first.call(null, seq12196);
  var seq12196__$1 = cljs.core.next.call(null, seq12196);
  return om.dom.script.cljs$core$IFn$_invoke$arity$variadic(G__12197, seq12196__$1);
};
om.dom.section = function om$dom$section() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.section.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.section.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.section.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.section.cljs$lang$maxFixedArity = 1;
om.dom.section.cljs$lang$applyTo = function(seq12198) {
  var G__12199 = cljs.core.first.call(null, seq12198);
  var seq12198__$1 = cljs.core.next.call(null, seq12198);
  return om.dom.section.cljs$core$IFn$_invoke$arity$variadic(G__12199, seq12198__$1);
};
om.dom.select = function om$dom$select() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.select.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.select.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.select.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.select.cljs$lang$maxFixedArity = 1;
om.dom.select.cljs$lang$applyTo = function(seq12200) {
  var G__12201 = cljs.core.first.call(null, seq12200);
  var seq12200__$1 = cljs.core.next.call(null, seq12200);
  return om.dom.select.cljs$core$IFn$_invoke$arity$variadic(G__12201, seq12200__$1);
};
om.dom.small = function om$dom$small() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.small.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.small.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.small.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.small.cljs$lang$maxFixedArity = 1;
om.dom.small.cljs$lang$applyTo = function(seq12202) {
  var G__12203 = cljs.core.first.call(null, seq12202);
  var seq12202__$1 = cljs.core.next.call(null, seq12202);
  return om.dom.small.cljs$core$IFn$_invoke$arity$variadic(G__12203, seq12202__$1);
};
om.dom.source = function om$dom$source() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.source.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.source.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.source.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.source.cljs$lang$maxFixedArity = 1;
om.dom.source.cljs$lang$applyTo = function(seq12204) {
  var G__12205 = cljs.core.first.call(null, seq12204);
  var seq12204__$1 = cljs.core.next.call(null, seq12204);
  return om.dom.source.cljs$core$IFn$_invoke$arity$variadic(G__12205, seq12204__$1);
};
om.dom.span = function om$dom$span() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.span.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.span.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.span.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.span.cljs$lang$maxFixedArity = 1;
om.dom.span.cljs$lang$applyTo = function(seq12206) {
  var G__12207 = cljs.core.first.call(null, seq12206);
  var seq12206__$1 = cljs.core.next.call(null, seq12206);
  return om.dom.span.cljs$core$IFn$_invoke$arity$variadic(G__12207, seq12206__$1);
};
om.dom.strong = function om$dom$strong() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.strong.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.strong.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.strong.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.strong.cljs$lang$maxFixedArity = 1;
om.dom.strong.cljs$lang$applyTo = function(seq12208) {
  var G__12209 = cljs.core.first.call(null, seq12208);
  var seq12208__$1 = cljs.core.next.call(null, seq12208);
  return om.dom.strong.cljs$core$IFn$_invoke$arity$variadic(G__12209, seq12208__$1);
};
om.dom.style = function om$dom$style() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.style.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.style.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.style.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.style.cljs$lang$maxFixedArity = 1;
om.dom.style.cljs$lang$applyTo = function(seq12210) {
  var G__12211 = cljs.core.first.call(null, seq12210);
  var seq12210__$1 = cljs.core.next.call(null, seq12210);
  return om.dom.style.cljs$core$IFn$_invoke$arity$variadic(G__12211, seq12210__$1);
};
om.dom.sub = function om$dom$sub() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.sub.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.sub.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.sub.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.sub.cljs$lang$maxFixedArity = 1;
om.dom.sub.cljs$lang$applyTo = function(seq12212) {
  var G__12213 = cljs.core.first.call(null, seq12212);
  var seq12212__$1 = cljs.core.next.call(null, seq12212);
  return om.dom.sub.cljs$core$IFn$_invoke$arity$variadic(G__12213, seq12212__$1);
};
om.dom.summary = function om$dom$summary() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.summary.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.summary.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.summary.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.summary.cljs$lang$maxFixedArity = 1;
om.dom.summary.cljs$lang$applyTo = function(seq12214) {
  var G__12215 = cljs.core.first.call(null, seq12214);
  var seq12214__$1 = cljs.core.next.call(null, seq12214);
  return om.dom.summary.cljs$core$IFn$_invoke$arity$variadic(G__12215, seq12214__$1);
};
om.dom.sup = function om$dom$sup() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.sup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.sup.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.sup.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.sup.cljs$lang$maxFixedArity = 1;
om.dom.sup.cljs$lang$applyTo = function(seq12216) {
  var G__12217 = cljs.core.first.call(null, seq12216);
  var seq12216__$1 = cljs.core.next.call(null, seq12216);
  return om.dom.sup.cljs$core$IFn$_invoke$arity$variadic(G__12217, seq12216__$1);
};
om.dom.table = function om$dom$table() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.table.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.table.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.table.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.table.cljs$lang$maxFixedArity = 1;
om.dom.table.cljs$lang$applyTo = function(seq12218) {
  var G__12219 = cljs.core.first.call(null, seq12218);
  var seq12218__$1 = cljs.core.next.call(null, seq12218);
  return om.dom.table.cljs$core$IFn$_invoke$arity$variadic(G__12219, seq12218__$1);
};
om.dom.tbody = function om$dom$tbody() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.tbody.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.tbody.cljs$lang$maxFixedArity = 1;
om.dom.tbody.cljs$lang$applyTo = function(seq12220) {
  var G__12221 = cljs.core.first.call(null, seq12220);
  var seq12220__$1 = cljs.core.next.call(null, seq12220);
  return om.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(G__12221, seq12220__$1);
};
om.dom.td = function om$dom$td() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.td.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.td.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.td.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.td.cljs$lang$maxFixedArity = 1;
om.dom.td.cljs$lang$applyTo = function(seq12222) {
  var G__12223 = cljs.core.first.call(null, seq12222);
  var seq12222__$1 = cljs.core.next.call(null, seq12222);
  return om.dom.td.cljs$core$IFn$_invoke$arity$variadic(G__12223, seq12222__$1);
};
om.dom.tfoot = function om$dom$tfoot() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.tfoot.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.tfoot.cljs$lang$maxFixedArity = 1;
om.dom.tfoot.cljs$lang$applyTo = function(seq12224) {
  var G__12225 = cljs.core.first.call(null, seq12224);
  var seq12224__$1 = cljs.core.next.call(null, seq12224);
  return om.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(G__12225, seq12224__$1);
};
om.dom.th = function om$dom$th() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.th.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.th.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.th.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.th.cljs$lang$maxFixedArity = 1;
om.dom.th.cljs$lang$applyTo = function(seq12226) {
  var G__12227 = cljs.core.first.call(null, seq12226);
  var seq12226__$1 = cljs.core.next.call(null, seq12226);
  return om.dom.th.cljs$core$IFn$_invoke$arity$variadic(G__12227, seq12226__$1);
};
om.dom.thead = function om$dom$thead() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.thead.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.thead.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.thead.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.thead.cljs$lang$maxFixedArity = 1;
om.dom.thead.cljs$lang$applyTo = function(seq12228) {
  var G__12229 = cljs.core.first.call(null, seq12228);
  var seq12228__$1 = cljs.core.next.call(null, seq12228);
  return om.dom.thead.cljs$core$IFn$_invoke$arity$variadic(G__12229, seq12228__$1);
};
om.dom.time = function om$dom$time() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.time.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.time.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.time.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.time.cljs$lang$maxFixedArity = 1;
om.dom.time.cljs$lang$applyTo = function(seq12230) {
  var G__12231 = cljs.core.first.call(null, seq12230);
  var seq12230__$1 = cljs.core.next.call(null, seq12230);
  return om.dom.time.cljs$core$IFn$_invoke$arity$variadic(G__12231, seq12230__$1);
};
om.dom.title = function om$dom$title() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.title.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.title.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.title.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.title.cljs$lang$maxFixedArity = 1;
om.dom.title.cljs$lang$applyTo = function(seq12232) {
  var G__12233 = cljs.core.first.call(null, seq12232);
  var seq12232__$1 = cljs.core.next.call(null, seq12232);
  return om.dom.title.cljs$core$IFn$_invoke$arity$variadic(G__12233, seq12232__$1);
};
om.dom.tr = function om$dom$tr() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.tr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.tr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.tr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.tr.cljs$lang$maxFixedArity = 1;
om.dom.tr.cljs$lang$applyTo = function(seq12234) {
  var G__12235 = cljs.core.first.call(null, seq12234);
  var seq12234__$1 = cljs.core.next.call(null, seq12234);
  return om.dom.tr.cljs$core$IFn$_invoke$arity$variadic(G__12235, seq12234__$1);
};
om.dom.track = function om$dom$track() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.track.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.track.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.track.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.track.cljs$lang$maxFixedArity = 1;
om.dom.track.cljs$lang$applyTo = function(seq12236) {
  var G__12237 = cljs.core.first.call(null, seq12236);
  var seq12236__$1 = cljs.core.next.call(null, seq12236);
  return om.dom.track.cljs$core$IFn$_invoke$arity$variadic(G__12237, seq12236__$1);
};
om.dom.u = function om$dom$u() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.u.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.u.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.u.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.u.cljs$lang$maxFixedArity = 1;
om.dom.u.cljs$lang$applyTo = function(seq12238) {
  var G__12239 = cljs.core.first.call(null, seq12238);
  var seq12238__$1 = cljs.core.next.call(null, seq12238);
  return om.dom.u.cljs$core$IFn$_invoke$arity$variadic(G__12239, seq12238__$1);
};
om.dom.ul = function om$dom$ul() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.ul.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.ul.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.ul.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.ul.cljs$lang$maxFixedArity = 1;
om.dom.ul.cljs$lang$applyTo = function(seq12240) {
  var G__12241 = cljs.core.first.call(null, seq12240);
  var seq12240__$1 = cljs.core.next.call(null, seq12240);
  return om.dom.ul.cljs$core$IFn$_invoke$arity$variadic(G__12241, seq12240__$1);
};
om.dom.var$ = function om$dom$var() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.var$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.var$.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.var$.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.var$.cljs$lang$maxFixedArity = 1;
om.dom.var$.cljs$lang$applyTo = function(seq12242) {
  var G__12243 = cljs.core.first.call(null, seq12242);
  var seq12242__$1 = cljs.core.next.call(null, seq12242);
  return om.dom.var$.cljs$core$IFn$_invoke$arity$variadic(G__12243, seq12242__$1);
};
om.dom.video = function om$dom$video() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.video.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.video.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.video.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.video.cljs$lang$maxFixedArity = 1;
om.dom.video.cljs$lang$applyTo = function(seq12244) {
  var G__12245 = cljs.core.first.call(null, seq12244);
  var seq12244__$1 = cljs.core.next.call(null, seq12244);
  return om.dom.video.cljs$core$IFn$_invoke$arity$variadic(G__12245, seq12244__$1);
};
om.dom.wbr = function om$dom$wbr() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.wbr.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.wbr.cljs$lang$maxFixedArity = 1;
om.dom.wbr.cljs$lang$applyTo = function(seq12246) {
  var G__12247 = cljs.core.first.call(null, seq12246);
  var seq12246__$1 = cljs.core.next.call(null, seq12246);
  return om.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(G__12247, seq12246__$1);
};
om.dom.circle = function om$dom$circle() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.circle.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.circle.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.circle.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.circle.cljs$lang$maxFixedArity = 1;
om.dom.circle.cljs$lang$applyTo = function(seq12248) {
  var G__12249 = cljs.core.first.call(null, seq12248);
  var seq12248__$1 = cljs.core.next.call(null, seq12248);
  return om.dom.circle.cljs$core$IFn$_invoke$arity$variadic(G__12249, seq12248__$1);
};
om.dom.ellipse = function om$dom$ellipse() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.ellipse.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.ellipse.cljs$lang$maxFixedArity = 1;
om.dom.ellipse.cljs$lang$applyTo = function(seq12250) {
  var G__12251 = cljs.core.first.call(null, seq12250);
  var seq12250__$1 = cljs.core.next.call(null, seq12250);
  return om.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(G__12251, seq12250__$1);
};
om.dom.g = function om$dom$g() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.g.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.g.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.g.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.g.cljs$lang$maxFixedArity = 1;
om.dom.g.cljs$lang$applyTo = function(seq12252) {
  var G__12253 = cljs.core.first.call(null, seq12252);
  var seq12252__$1 = cljs.core.next.call(null, seq12252);
  return om.dom.g.cljs$core$IFn$_invoke$arity$variadic(G__12253, seq12252__$1);
};
om.dom.line = function om$dom$line() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.line.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.line.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.line.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.line.cljs$lang$maxFixedArity = 1;
om.dom.line.cljs$lang$applyTo = function(seq12254) {
  var G__12255 = cljs.core.first.call(null, seq12254);
  var seq12254__$1 = cljs.core.next.call(null, seq12254);
  return om.dom.line.cljs$core$IFn$_invoke$arity$variadic(G__12255, seq12254__$1);
};
om.dom.path = function om$dom$path() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.path.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.path.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.path.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.path.cljs$lang$maxFixedArity = 1;
om.dom.path.cljs$lang$applyTo = function(seq12256) {
  var G__12257 = cljs.core.first.call(null, seq12256);
  var seq12256__$1 = cljs.core.next.call(null, seq12256);
  return om.dom.path.cljs$core$IFn$_invoke$arity$variadic(G__12257, seq12256__$1);
};
om.dom.polyline = function om$dom$polyline() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.polyline.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.polyline.cljs$lang$maxFixedArity = 1;
om.dom.polyline.cljs$lang$applyTo = function(seq12258) {
  var G__12259 = cljs.core.first.call(null, seq12258);
  var seq12258__$1 = cljs.core.next.call(null, seq12258);
  return om.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(G__12259, seq12258__$1);
};
om.dom.rect = function om$dom$rect() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.rect.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.rect.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.rect.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.rect.cljs$lang$maxFixedArity = 1;
om.dom.rect.cljs$lang$applyTo = function(seq12260) {
  var G__12261 = cljs.core.first.call(null, seq12260);
  var seq12260__$1 = cljs.core.next.call(null, seq12260);
  return om.dom.rect.cljs$core$IFn$_invoke$arity$variadic(G__12261, seq12260__$1);
};
om.dom.svg = function om$dom$svg() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.svg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.svg.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.svg.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.svg.cljs$lang$maxFixedArity = 1;
om.dom.svg.cljs$lang$applyTo = function(seq12262) {
  var G__12263 = cljs.core.first.call(null, seq12262);
  var seq12262__$1 = cljs.core.next.call(null, seq12262);
  return om.dom.svg.cljs$core$IFn$_invoke$arity$variadic(G__12263, seq12262__$1);
};
om.dom.text = function om$dom$text() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.text.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.text.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.text.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.text.cljs$lang$maxFixedArity = 1;
om.dom.text.cljs$lang$applyTo = function(seq12264) {
  var G__12265 = cljs.core.first.call(null, seq12264);
  var seq12264__$1 = cljs.core.next.call(null, seq12264);
  return om.dom.text.cljs$core$IFn$_invoke$arity$variadic(G__12265, seq12264__$1);
};
om.dom.defs = function om$dom$defs() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.defs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.defs.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.defs.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.defs.cljs$lang$maxFixedArity = 1;
om.dom.defs.cljs$lang$applyTo = function(seq12266) {
  var G__12267 = cljs.core.first.call(null, seq12266);
  var seq12266__$1 = cljs.core.next.call(null, seq12266);
  return om.dom.defs.cljs$core$IFn$_invoke$arity$variadic(G__12267, seq12266__$1);
};
om.dom.linearGradient = function om$dom$linearGradient() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.linearGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.linearGradient.cljs$lang$maxFixedArity = 1;
om.dom.linearGradient.cljs$lang$applyTo = function(seq12268) {
  var G__12269 = cljs.core.first.call(null, seq12268);
  var seq12268__$1 = cljs.core.next.call(null, seq12268);
  return om.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(G__12269, seq12268__$1);
};
om.dom.polygon = function om$dom$polygon() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.polygon.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.polygon.cljs$lang$maxFixedArity = 1;
om.dom.polygon.cljs$lang$applyTo = function(seq12270) {
  var G__12271 = cljs.core.first.call(null, seq12270);
  var seq12270__$1 = cljs.core.next.call(null, seq12270);
  return om.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(G__12271, seq12270__$1);
};
om.dom.radialGradient = function om$dom$radialGradient() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.radialGradient.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.radialGradient.cljs$lang$maxFixedArity = 1;
om.dom.radialGradient.cljs$lang$applyTo = function(seq12272) {
  var G__12273 = cljs.core.first.call(null, seq12272);
  var seq12272__$1 = cljs.core.next.call(null, seq12272);
  return om.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(G__12273, seq12272__$1);
};
om.dom.stop = function om$dom$stop() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.stop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.stop.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.stop.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.stop.cljs$lang$maxFixedArity = 1;
om.dom.stop.cljs$lang$applyTo = function(seq12274) {
  var G__12275 = cljs.core.first.call(null, seq12274);
  var seq12274__$1 = cljs.core.next.call(null, seq12274);
  return om.dom.stop.cljs$core$IFn$_invoke$arity$variadic(G__12275, seq12274__$1);
};
om.dom.tspan = function om$dom$tspan() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic = function(opts__7032__auto__, children__7033__auto__) {
  return React.DOM.tspan.apply(null, cljs.core.into_array.call(null, cljs.core.cons.call(null, opts__7032__auto__, children__7033__auto__)));
};
om.dom.tspan.cljs$lang$maxFixedArity = 1;
om.dom.tspan.cljs$lang$applyTo = function(seq12096) {
  var G__12097 = cljs.core.first.call(null, seq12096);
  var seq12096__$1 = cljs.core.next.call(null, seq12096);
  return om.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(G__12097, seq12096__$1);
};
om.dom.wrap_form_element = function om$dom$wrap_form_element(ctor, display_name) {
  return React.createFactory(React.createClass({"getDisplayName":function() {
    return display_name;
  }, "getInitialState":function() {
    var this$ = this;
    return {"value":this$.props["value"]};
  }, "onChange":function(e) {
    var this$ = this;
    var handler = this$.props["onChange"];
    if (handler == null) {
      return null;
    } else {
      handler.call(null, e);
      return this$.setState({"value":e.target.value});
    }
  }, "componentWillReceiveProps":function(new_props) {
    var this$ = this;
    return this$.setState({"value":new_props["value"]});
  }, "render":function() {
    var this$ = this;
    var props = {};
    goog.object.extend(props, this$.props, {"value":this$.state["value"], "onChange":this$["onChange"], "children":this$.props["children"]});
    return ctor.call(null, props);
  }}));
};
om.dom.input = om.dom.wrap_form_element.call(null, React.DOM.input, "input");
om.dom.textarea = om.dom.wrap_form_element.call(null, React.DOM.textarea, "textarea");
om.dom.option = om.dom.wrap_form_element.call(null, React.DOM.option, "option");
om.dom.render = function om$dom$render(component, el) {
  return React.render(component, el);
};
om.dom.render_to_str = function om$dom$render_to_str(c) {
  return React.renderToString(c);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var G__13078 = arguments.length;
  switch(G__13078) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      var G__13080 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__13081 = cljs.core.next.call(null, coll__$1);
      sb = G__13080;
      coll__$1 = G__13081;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (coll__$1) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__13082 = sb;
      var G__13083 = coll__$2;
      sb = G__13082;
      coll__$1 = G__13083;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__13084 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__13084;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__13088 = cljs.core._EQ_;
    var expr__13089 = limit;
    if (cljs.core.truth_(pred__13088.call(null, 1, expr__13089))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__13088.call(null, 2, expr__13089))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var G__13092 = arguments.length;
  switch(G__13092) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (cljs.core._EQ_.call(null, limit__$1, 1)) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var temp__4423__auto__ = cljs.core.re_find.call(null, re, s__$1);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var m = temp__4423__auto__;
          var index = s__$1.indexOf(m);
          var G__13094 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__13095 = limit__$1 - 1;
          var G__13096 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__13094;
          limit__$1 = G__13095;
          parts = G__13096;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__13097 = index - 1;
        index = G__13097;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4423__auto___13098 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4423__auto___13098)) {
        var replacement_13099 = temp__4423__auto___13098;
        buffer.append([cljs.core.str(replacement_13099)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__13100 = index + 1;
      index = G__13100;
      continue;
    }
    break;
  }
};
goog.provide("om_tools.dom");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("om.dom");
om_tools.dom.camel_case = function om_tools$dom$camel_case(s) {
  return clojure.string.replace.call(null, s, /-(\w)/, cljs.core.comp.call(null, clojure.string.upper_case, cljs.core.second));
};
om_tools.dom.opt_key_case = function om_tools$dom$opt_key_case(attr) {
  if (cljs.core.truth_(function() {
    var or__4308__auto__ = cljs.core.count.call(null, attr) < 5;
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      var G__11394 = cljs.core.subs.call(null, attr, 0, 5);
      switch(G__11394) {
        case "data-":
        ;
        case "aria-":
          return true;
          break;
        default:
          return false;
      }
    }
  }())) {
    return attr;
  } else {
    return om_tools.dom.camel_case.call(null, attr);
  }
};
om_tools.dom.opt_key_alias = function om_tools$dom$opt_key_alias(opt) {
  var G__11397 = opt instanceof cljs.core.Keyword ? opt.fqn : null;
  switch(G__11397) {
    case "class":
      return new cljs.core.Keyword(null, "className", "className", -1983287057);
      break;
    case "for":
      return new cljs.core.Keyword(null, "htmlFor", "htmlFor", -1050291720);
      break;
    default:
      return opt;
  }
};
om_tools.dom.format_opt_key = function om_tools$dom$format_opt_key(opt_key) {
  return cljs.core.keyword.call(null, om_tools.dom.opt_key_case.call(null, cljs.core.name.call(null, om_tools.dom.opt_key_alias.call(null, opt_key))));
};
om_tools.dom.format_opt_val = function om_tools$dom$format_opt_val(opt_val) {
  if (cljs.core.map_QMARK_.call(null, opt_val)) {
    return om_tools.dom.format_opts.call(null, opt_val);
  } else {
    return opt_val;
  }
};
om_tools.dom.format_opts = function om_tools$dom$format_opts(opts) {
  if (cljs.core.map_QMARK_.call(null, opts)) {
    return cljs.core.clj__GT_js.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__11401) {
      var vec__11402 = p__11401;
      var k = cljs.core.nth.call(null, vec__11402, 0, null);
      var v = cljs.core.nth.call(null, vec__11402, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opt_key.call(null, k), om_tools.dom.format_opt_val.call(null, v)], null);
    }, opts)));
  } else {
    return opts;
  }
};
om_tools.dom.possible_coll_QMARK_ = function om_tools$dom$possible_coll_QMARK_(form) {
  return cljs.core.coll_QMARK_.call(null, form) || form instanceof cljs.core.Symbol || cljs.core.list_QMARK_.call(null, form);
};
om_tools.dom.valid_element_QMARK_ = function om_tools$dom$valid_element_QMARK_(x) {
  return function() {
    var or__4308__auto__ = React.isValidElement;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return React.isValidComponent;
    }
  }().call(null, x);
};
om_tools.dom.js_opts_QMARK_ = function om_tools$dom$js_opts_QMARK_(x) {
  return cljs.core.object_QMARK_.call(null, x) && !om_tools.dom.valid_element_QMARK_.call(null, x);
};
om_tools.dom.element_args = function om_tools$dom$element_args(opts, children) {
  if (opts == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, children], null);
  } else {
    if (cljs.core.map_QMARK_.call(null, opts)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.format_opts.call(null, opts), children], null);
    } else {
      if (cljs.core.truth_(om_tools.dom.js_opts_QMARK_.call(null, opts))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [opts, children], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.cons.call(null, opts, children)], null);
      }
    }
  }
};
om_tools.dom.element = function om_tools$dom$element(ctor, opts, children) {
  var vec__11404 = om_tools.dom.element_args.call(null, opts, children);
  var opts__$1 = cljs.core.nth.call(null, vec__11404, 0, null);
  var children__$1 = cljs.core.nth.call(null, vec__11404, 1, null);
  return cljs.core.apply.call(null, ctor, cljs.core.flatten.call(null, cljs.core.cons.call(null, opts__$1, children__$1)));
};
om_tools.dom.a = function om_tools$dom$a() {
  var G__11408 = arguments.length;
  switch(G__11408) {
    case 0:
      return om_tools.dom.a.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.a.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.a, null, null);
};
om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.a, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.a.cljs$lang$applyTo = function(seq11405) {
  var G__11406 = cljs.core.first.call(null, seq11405);
  var seq11405__$1 = cljs.core.next.call(null, seq11405);
  return om_tools.dom.a.cljs$core$IFn$_invoke$arity$variadic(G__11406, seq11405__$1);
};
om_tools.dom.a.cljs$lang$maxFixedArity = 1;
om_tools.dom.abbr = function om_tools$dom$abbr() {
  var G__11412 = arguments.length;
  switch(G__11412) {
    case 0:
      return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.abbr, null, null);
};
om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.abbr, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.abbr.cljs$lang$applyTo = function(seq11409) {
  var G__11410 = cljs.core.first.call(null, seq11409);
  var seq11409__$1 = cljs.core.next.call(null, seq11409);
  return om_tools.dom.abbr.cljs$core$IFn$_invoke$arity$variadic(G__11410, seq11409__$1);
};
om_tools.dom.abbr.cljs$lang$maxFixedArity = 1;
om_tools.dom.address = function om_tools$dom$address() {
  var G__11416 = arguments.length;
  switch(G__11416) {
    case 0:
      return om_tools.dom.address.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.address.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.address, null, null);
};
om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.address, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.address.cljs$lang$applyTo = function(seq11413) {
  var G__11414 = cljs.core.first.call(null, seq11413);
  var seq11413__$1 = cljs.core.next.call(null, seq11413);
  return om_tools.dom.address.cljs$core$IFn$_invoke$arity$variadic(G__11414, seq11413__$1);
};
om_tools.dom.address.cljs$lang$maxFixedArity = 1;
om_tools.dom.area = function om_tools$dom$area() {
  var G__11420 = arguments.length;
  switch(G__11420) {
    case 0:
      return om_tools.dom.area.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.area.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.area, null, null);
};
om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.area, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.area.cljs$lang$applyTo = function(seq11417) {
  var G__11418 = cljs.core.first.call(null, seq11417);
  var seq11417__$1 = cljs.core.next.call(null, seq11417);
  return om_tools.dom.area.cljs$core$IFn$_invoke$arity$variadic(G__11418, seq11417__$1);
};
om_tools.dom.area.cljs$lang$maxFixedArity = 1;
om_tools.dom.article = function om_tools$dom$article() {
  var G__11424 = arguments.length;
  switch(G__11424) {
    case 0:
      return om_tools.dom.article.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.article.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.article, null, null);
};
om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.article, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.article.cljs$lang$applyTo = function(seq11421) {
  var G__11422 = cljs.core.first.call(null, seq11421);
  var seq11421__$1 = cljs.core.next.call(null, seq11421);
  return om_tools.dom.article.cljs$core$IFn$_invoke$arity$variadic(G__11422, seq11421__$1);
};
om_tools.dom.article.cljs$lang$maxFixedArity = 1;
om_tools.dom.aside = function om_tools$dom$aside() {
  var G__11428 = arguments.length;
  switch(G__11428) {
    case 0:
      return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.aside.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.aside, null, null);
};
om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.aside, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.aside.cljs$lang$applyTo = function(seq11425) {
  var G__11426 = cljs.core.first.call(null, seq11425);
  var seq11425__$1 = cljs.core.next.call(null, seq11425);
  return om_tools.dom.aside.cljs$core$IFn$_invoke$arity$variadic(G__11426, seq11425__$1);
};
om_tools.dom.aside.cljs$lang$maxFixedArity = 1;
om_tools.dom.audio = function om_tools$dom$audio() {
  var G__11432 = arguments.length;
  switch(G__11432) {
    case 0:
      return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.audio.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.audio, null, null);
};
om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.audio, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.audio.cljs$lang$applyTo = function(seq11429) {
  var G__11430 = cljs.core.first.call(null, seq11429);
  var seq11429__$1 = cljs.core.next.call(null, seq11429);
  return om_tools.dom.audio.cljs$core$IFn$_invoke$arity$variadic(G__11430, seq11429__$1);
};
om_tools.dom.audio.cljs$lang$maxFixedArity = 1;
om_tools.dom.b = function om_tools$dom$b() {
  var G__11436 = arguments.length;
  switch(G__11436) {
    case 0:
      return om_tools.dom.b.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.b.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.b, null, null);
};
om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.b, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.b.cljs$lang$applyTo = function(seq11433) {
  var G__11434 = cljs.core.first.call(null, seq11433);
  var seq11433__$1 = cljs.core.next.call(null, seq11433);
  return om_tools.dom.b.cljs$core$IFn$_invoke$arity$variadic(G__11434, seq11433__$1);
};
om_tools.dom.b.cljs$lang$maxFixedArity = 1;
om_tools.dom.base = function om_tools$dom$base() {
  var G__11440 = arguments.length;
  switch(G__11440) {
    case 0:
      return om_tools.dom.base.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.base.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.base, null, null);
};
om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.base, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.base.cljs$lang$applyTo = function(seq11437) {
  var G__11438 = cljs.core.first.call(null, seq11437);
  var seq11437__$1 = cljs.core.next.call(null, seq11437);
  return om_tools.dom.base.cljs$core$IFn$_invoke$arity$variadic(G__11438, seq11437__$1);
};
om_tools.dom.base.cljs$lang$maxFixedArity = 1;
om_tools.dom.bdi = function om_tools$dom$bdi() {
  var G__11444 = arguments.length;
  switch(G__11444) {
    case 0:
      return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.bdi, null, null);
};
om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.bdi, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.bdi.cljs$lang$applyTo = function(seq11441) {
  var G__11442 = cljs.core.first.call(null, seq11441);
  var seq11441__$1 = cljs.core.next.call(null, seq11441);
  return om_tools.dom.bdi.cljs$core$IFn$_invoke$arity$variadic(G__11442, seq11441__$1);
};
om_tools.dom.bdi.cljs$lang$maxFixedArity = 1;
om_tools.dom.bdo = function om_tools$dom$bdo() {
  var G__11448 = arguments.length;
  switch(G__11448) {
    case 0:
      return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.bdo, null, null);
};
om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.bdo, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.bdo.cljs$lang$applyTo = function(seq11445) {
  var G__11446 = cljs.core.first.call(null, seq11445);
  var seq11445__$1 = cljs.core.next.call(null, seq11445);
  return om_tools.dom.bdo.cljs$core$IFn$_invoke$arity$variadic(G__11446, seq11445__$1);
};
om_tools.dom.bdo.cljs$lang$maxFixedArity = 1;
om_tools.dom.big = function om_tools$dom$big() {
  var G__11452 = arguments.length;
  switch(G__11452) {
    case 0:
      return om_tools.dom.big.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.big.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.big, null, null);
};
om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.big, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.big.cljs$lang$applyTo = function(seq11449) {
  var G__11450 = cljs.core.first.call(null, seq11449);
  var seq11449__$1 = cljs.core.next.call(null, seq11449);
  return om_tools.dom.big.cljs$core$IFn$_invoke$arity$variadic(G__11450, seq11449__$1);
};
om_tools.dom.big.cljs$lang$maxFixedArity = 1;
om_tools.dom.blockquote = function om_tools$dom$blockquote() {
  var G__11456 = arguments.length;
  switch(G__11456) {
    case 0:
      return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.blockquote, null, null);
};
om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.blockquote, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.blockquote.cljs$lang$applyTo = function(seq11453) {
  var G__11454 = cljs.core.first.call(null, seq11453);
  var seq11453__$1 = cljs.core.next.call(null, seq11453);
  return om_tools.dom.blockquote.cljs$core$IFn$_invoke$arity$variadic(G__11454, seq11453__$1);
};
om_tools.dom.blockquote.cljs$lang$maxFixedArity = 1;
om_tools.dom.body = function om_tools$dom$body() {
  var G__11460 = arguments.length;
  switch(G__11460) {
    case 0:
      return om_tools.dom.body.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.body.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.body, null, null);
};
om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.body, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.body.cljs$lang$applyTo = function(seq11457) {
  var G__11458 = cljs.core.first.call(null, seq11457);
  var seq11457__$1 = cljs.core.next.call(null, seq11457);
  return om_tools.dom.body.cljs$core$IFn$_invoke$arity$variadic(G__11458, seq11457__$1);
};
om_tools.dom.body.cljs$lang$maxFixedArity = 1;
om_tools.dom.br = function om_tools$dom$br() {
  var G__11464 = arguments.length;
  switch(G__11464) {
    case 0:
      return om_tools.dom.br.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.br.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.br, null, null);
};
om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.br, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.br.cljs$lang$applyTo = function(seq11461) {
  var G__11462 = cljs.core.first.call(null, seq11461);
  var seq11461__$1 = cljs.core.next.call(null, seq11461);
  return om_tools.dom.br.cljs$core$IFn$_invoke$arity$variadic(G__11462, seq11461__$1);
};
om_tools.dom.br.cljs$lang$maxFixedArity = 1;
om_tools.dom.button = function om_tools$dom$button() {
  var G__11468 = arguments.length;
  switch(G__11468) {
    case 0:
      return om_tools.dom.button.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.button.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.button, null, null);
};
om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.button, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.button.cljs$lang$applyTo = function(seq11465) {
  var G__11466 = cljs.core.first.call(null, seq11465);
  var seq11465__$1 = cljs.core.next.call(null, seq11465);
  return om_tools.dom.button.cljs$core$IFn$_invoke$arity$variadic(G__11466, seq11465__$1);
};
om_tools.dom.button.cljs$lang$maxFixedArity = 1;
om_tools.dom.canvas = function om_tools$dom$canvas() {
  var G__11472 = arguments.length;
  switch(G__11472) {
    case 0:
      return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.canvas, null, null);
};
om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.canvas, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.canvas.cljs$lang$applyTo = function(seq11469) {
  var G__11470 = cljs.core.first.call(null, seq11469);
  var seq11469__$1 = cljs.core.next.call(null, seq11469);
  return om_tools.dom.canvas.cljs$core$IFn$_invoke$arity$variadic(G__11470, seq11469__$1);
};
om_tools.dom.canvas.cljs$lang$maxFixedArity = 1;
om_tools.dom.caption = function om_tools$dom$caption() {
  var G__11476 = arguments.length;
  switch(G__11476) {
    case 0:
      return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.caption.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.caption, null, null);
};
om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.caption, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.caption.cljs$lang$applyTo = function(seq11473) {
  var G__11474 = cljs.core.first.call(null, seq11473);
  var seq11473__$1 = cljs.core.next.call(null, seq11473);
  return om_tools.dom.caption.cljs$core$IFn$_invoke$arity$variadic(G__11474, seq11473__$1);
};
om_tools.dom.caption.cljs$lang$maxFixedArity = 1;
om_tools.dom.cite = function om_tools$dom$cite() {
  var G__11480 = arguments.length;
  switch(G__11480) {
    case 0:
      return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.cite.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.cite, null, null);
};
om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.cite, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.cite.cljs$lang$applyTo = function(seq11477) {
  var G__11478 = cljs.core.first.call(null, seq11477);
  var seq11477__$1 = cljs.core.next.call(null, seq11477);
  return om_tools.dom.cite.cljs$core$IFn$_invoke$arity$variadic(G__11478, seq11477__$1);
};
om_tools.dom.cite.cljs$lang$maxFixedArity = 1;
om_tools.dom.code = function om_tools$dom$code() {
  var G__11484 = arguments.length;
  switch(G__11484) {
    case 0:
      return om_tools.dom.code.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.code.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.code, null, null);
};
om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.code, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.code.cljs$lang$applyTo = function(seq11481) {
  var G__11482 = cljs.core.first.call(null, seq11481);
  var seq11481__$1 = cljs.core.next.call(null, seq11481);
  return om_tools.dom.code.cljs$core$IFn$_invoke$arity$variadic(G__11482, seq11481__$1);
};
om_tools.dom.code.cljs$lang$maxFixedArity = 1;
om_tools.dom.col = function om_tools$dom$col() {
  var G__11488 = arguments.length;
  switch(G__11488) {
    case 0:
      return om_tools.dom.col.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.col.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.col, null, null);
};
om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.col, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.col.cljs$lang$applyTo = function(seq11485) {
  var G__11486 = cljs.core.first.call(null, seq11485);
  var seq11485__$1 = cljs.core.next.call(null, seq11485);
  return om_tools.dom.col.cljs$core$IFn$_invoke$arity$variadic(G__11486, seq11485__$1);
};
om_tools.dom.col.cljs$lang$maxFixedArity = 1;
om_tools.dom.colgroup = function om_tools$dom$colgroup() {
  var G__11492 = arguments.length;
  switch(G__11492) {
    case 0:
      return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.colgroup, null, null);
};
om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.colgroup, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.colgroup.cljs$lang$applyTo = function(seq11489) {
  var G__11490 = cljs.core.first.call(null, seq11489);
  var seq11489__$1 = cljs.core.next.call(null, seq11489);
  return om_tools.dom.colgroup.cljs$core$IFn$_invoke$arity$variadic(G__11490, seq11489__$1);
};
om_tools.dom.colgroup.cljs$lang$maxFixedArity = 1;
om_tools.dom.data = function om_tools$dom$data() {
  var G__11496 = arguments.length;
  switch(G__11496) {
    case 0:
      return om_tools.dom.data.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.data.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.data, null, null);
};
om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.data, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.data.cljs$lang$applyTo = function(seq11493) {
  var G__11494 = cljs.core.first.call(null, seq11493);
  var seq11493__$1 = cljs.core.next.call(null, seq11493);
  return om_tools.dom.data.cljs$core$IFn$_invoke$arity$variadic(G__11494, seq11493__$1);
};
om_tools.dom.data.cljs$lang$maxFixedArity = 1;
om_tools.dom.datalist = function om_tools$dom$datalist() {
  var G__11500 = arguments.length;
  switch(G__11500) {
    case 0:
      return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.datalist, null, null);
};
om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.datalist, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.datalist.cljs$lang$applyTo = function(seq11497) {
  var G__11498 = cljs.core.first.call(null, seq11497);
  var seq11497__$1 = cljs.core.next.call(null, seq11497);
  return om_tools.dom.datalist.cljs$core$IFn$_invoke$arity$variadic(G__11498, seq11497__$1);
};
om_tools.dom.datalist.cljs$lang$maxFixedArity = 1;
om_tools.dom.dd = function om_tools$dom$dd() {
  var G__11504 = arguments.length;
  switch(G__11504) {
    case 0:
      return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.dd.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dd, null, null);
};
om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dd, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.dd.cljs$lang$applyTo = function(seq11501) {
  var G__11502 = cljs.core.first.call(null, seq11501);
  var seq11501__$1 = cljs.core.next.call(null, seq11501);
  return om_tools.dom.dd.cljs$core$IFn$_invoke$arity$variadic(G__11502, seq11501__$1);
};
om_tools.dom.dd.cljs$lang$maxFixedArity = 1;
om_tools.dom.del = function om_tools$dom$del() {
  var G__11508 = arguments.length;
  switch(G__11508) {
    case 0:
      return om_tools.dom.del.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.del.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.del, null, null);
};
om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.del, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.del.cljs$lang$applyTo = function(seq11505) {
  var G__11506 = cljs.core.first.call(null, seq11505);
  var seq11505__$1 = cljs.core.next.call(null, seq11505);
  return om_tools.dom.del.cljs$core$IFn$_invoke$arity$variadic(G__11506, seq11505__$1);
};
om_tools.dom.del.cljs$lang$maxFixedArity = 1;
om_tools.dom.dfn = function om_tools$dom$dfn() {
  var G__11512 = arguments.length;
  switch(G__11512) {
    case 0:
      return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dfn, null, null);
};
om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dfn, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.dfn.cljs$lang$applyTo = function(seq11509) {
  var G__11510 = cljs.core.first.call(null, seq11509);
  var seq11509__$1 = cljs.core.next.call(null, seq11509);
  return om_tools.dom.dfn.cljs$core$IFn$_invoke$arity$variadic(G__11510, seq11509__$1);
};
om_tools.dom.dfn.cljs$lang$maxFixedArity = 1;
om_tools.dom.div = function om_tools$dom$div() {
  var G__11516 = arguments.length;
  switch(G__11516) {
    case 0:
      return om_tools.dom.div.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.div.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.div, null, null);
};
om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.div, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.div.cljs$lang$applyTo = function(seq11513) {
  var G__11514 = cljs.core.first.call(null, seq11513);
  var seq11513__$1 = cljs.core.next.call(null, seq11513);
  return om_tools.dom.div.cljs$core$IFn$_invoke$arity$variadic(G__11514, seq11513__$1);
};
om_tools.dom.div.cljs$lang$maxFixedArity = 1;
om_tools.dom.dl = function om_tools$dom$dl() {
  var G__11520 = arguments.length;
  switch(G__11520) {
    case 0:
      return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.dl.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dl, null, null);
};
om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dl, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.dl.cljs$lang$applyTo = function(seq11517) {
  var G__11518 = cljs.core.first.call(null, seq11517);
  var seq11517__$1 = cljs.core.next.call(null, seq11517);
  return om_tools.dom.dl.cljs$core$IFn$_invoke$arity$variadic(G__11518, seq11517__$1);
};
om_tools.dom.dl.cljs$lang$maxFixedArity = 1;
om_tools.dom.dt = function om_tools$dom$dt() {
  var G__11524 = arguments.length;
  switch(G__11524) {
    case 0:
      return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.dt.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.dt, null, null);
};
om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.dt, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.dt.cljs$lang$applyTo = function(seq11521) {
  var G__11522 = cljs.core.first.call(null, seq11521);
  var seq11521__$1 = cljs.core.next.call(null, seq11521);
  return om_tools.dom.dt.cljs$core$IFn$_invoke$arity$variadic(G__11522, seq11521__$1);
};
om_tools.dom.dt.cljs$lang$maxFixedArity = 1;
om_tools.dom.em = function om_tools$dom$em() {
  var G__11528 = arguments.length;
  switch(G__11528) {
    case 0:
      return om_tools.dom.em.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.em.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.em, null, null);
};
om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.em, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.em.cljs$lang$applyTo = function(seq11525) {
  var G__11526 = cljs.core.first.call(null, seq11525);
  var seq11525__$1 = cljs.core.next.call(null, seq11525);
  return om_tools.dom.em.cljs$core$IFn$_invoke$arity$variadic(G__11526, seq11525__$1);
};
om_tools.dom.em.cljs$lang$maxFixedArity = 1;
om_tools.dom.embed = function om_tools$dom$embed() {
  var G__11532 = arguments.length;
  switch(G__11532) {
    case 0:
      return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.embed.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.embed, null, null);
};
om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.embed, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.embed.cljs$lang$applyTo = function(seq11529) {
  var G__11530 = cljs.core.first.call(null, seq11529);
  var seq11529__$1 = cljs.core.next.call(null, seq11529);
  return om_tools.dom.embed.cljs$core$IFn$_invoke$arity$variadic(G__11530, seq11529__$1);
};
om_tools.dom.embed.cljs$lang$maxFixedArity = 1;
om_tools.dom.fieldset = function om_tools$dom$fieldset() {
  var G__11540 = arguments.length;
  switch(G__11540) {
    case 0:
      return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.fieldset, null, null);
};
om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.fieldset, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.fieldset.cljs$lang$applyTo = function(seq11537) {
  var G__11538 = cljs.core.first.call(null, seq11537);
  var seq11537__$1 = cljs.core.next.call(null, seq11537);
  return om_tools.dom.fieldset.cljs$core$IFn$_invoke$arity$variadic(G__11538, seq11537__$1);
};
om_tools.dom.fieldset.cljs$lang$maxFixedArity = 1;
om_tools.dom.figcaption = function om_tools$dom$figcaption() {
  var G__11544 = arguments.length;
  switch(G__11544) {
    case 0:
      return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.figcaption, null, null);
};
om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.figcaption, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.figcaption.cljs$lang$applyTo = function(seq11541) {
  var G__11542 = cljs.core.first.call(null, seq11541);
  var seq11541__$1 = cljs.core.next.call(null, seq11541);
  return om_tools.dom.figcaption.cljs$core$IFn$_invoke$arity$variadic(G__11542, seq11541__$1);
};
om_tools.dom.figcaption.cljs$lang$maxFixedArity = 1;
om_tools.dom.figure = function om_tools$dom$figure() {
  var G__11548 = arguments.length;
  switch(G__11548) {
    case 0:
      return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.figure.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.figure, null, null);
};
om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.figure, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.figure.cljs$lang$applyTo = function(seq11545) {
  var G__11546 = cljs.core.first.call(null, seq11545);
  var seq11545__$1 = cljs.core.next.call(null, seq11545);
  return om_tools.dom.figure.cljs$core$IFn$_invoke$arity$variadic(G__11546, seq11545__$1);
};
om_tools.dom.figure.cljs$lang$maxFixedArity = 1;
om_tools.dom.footer = function om_tools$dom$footer() {
  var G__11552 = arguments.length;
  switch(G__11552) {
    case 0:
      return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.footer.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.footer, null, null);
};
om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.footer, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.footer.cljs$lang$applyTo = function(seq11549) {
  var G__11550 = cljs.core.first.call(null, seq11549);
  var seq11549__$1 = cljs.core.next.call(null, seq11549);
  return om_tools.dom.footer.cljs$core$IFn$_invoke$arity$variadic(G__11550, seq11549__$1);
};
om_tools.dom.footer.cljs$lang$maxFixedArity = 1;
om_tools.dom.form = function om_tools$dom$form() {
  var G__11556 = arguments.length;
  switch(G__11556) {
    case 0:
      return om_tools.dom.form.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.form.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.form, null, null);
};
om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.form, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.form.cljs$lang$applyTo = function(seq11553) {
  var G__11554 = cljs.core.first.call(null, seq11553);
  var seq11553__$1 = cljs.core.next.call(null, seq11553);
  return om_tools.dom.form.cljs$core$IFn$_invoke$arity$variadic(G__11554, seq11553__$1);
};
om_tools.dom.form.cljs$lang$maxFixedArity = 1;
om_tools.dom.h1 = function om_tools$dom$h1() {
  var G__11560 = arguments.length;
  switch(G__11560) {
    case 0:
      return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h1.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h1, null, null);
};
om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h1, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h1.cljs$lang$applyTo = function(seq11557) {
  var G__11558 = cljs.core.first.call(null, seq11557);
  var seq11557__$1 = cljs.core.next.call(null, seq11557);
  return om_tools.dom.h1.cljs$core$IFn$_invoke$arity$variadic(G__11558, seq11557__$1);
};
om_tools.dom.h1.cljs$lang$maxFixedArity = 1;
om_tools.dom.h2 = function om_tools$dom$h2() {
  var G__11564 = arguments.length;
  switch(G__11564) {
    case 0:
      return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h2.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h2, null, null);
};
om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h2, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h2.cljs$lang$applyTo = function(seq11561) {
  var G__11562 = cljs.core.first.call(null, seq11561);
  var seq11561__$1 = cljs.core.next.call(null, seq11561);
  return om_tools.dom.h2.cljs$core$IFn$_invoke$arity$variadic(G__11562, seq11561__$1);
};
om_tools.dom.h2.cljs$lang$maxFixedArity = 1;
om_tools.dom.h3 = function om_tools$dom$h3() {
  var G__11568 = arguments.length;
  switch(G__11568) {
    case 0:
      return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h3.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h3, null, null);
};
om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h3, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h3.cljs$lang$applyTo = function(seq11565) {
  var G__11566 = cljs.core.first.call(null, seq11565);
  var seq11565__$1 = cljs.core.next.call(null, seq11565);
  return om_tools.dom.h3.cljs$core$IFn$_invoke$arity$variadic(G__11566, seq11565__$1);
};
om_tools.dom.h3.cljs$lang$maxFixedArity = 1;
om_tools.dom.h4 = function om_tools$dom$h4() {
  var G__11572 = arguments.length;
  switch(G__11572) {
    case 0:
      return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h4.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h4, null, null);
};
om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h4, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h4.cljs$lang$applyTo = function(seq11569) {
  var G__11570 = cljs.core.first.call(null, seq11569);
  var seq11569__$1 = cljs.core.next.call(null, seq11569);
  return om_tools.dom.h4.cljs$core$IFn$_invoke$arity$variadic(G__11570, seq11569__$1);
};
om_tools.dom.h4.cljs$lang$maxFixedArity = 1;
om_tools.dom.h5 = function om_tools$dom$h5() {
  var G__11576 = arguments.length;
  switch(G__11576) {
    case 0:
      return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h5.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h5, null, null);
};
om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h5, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h5.cljs$lang$applyTo = function(seq11573) {
  var G__11574 = cljs.core.first.call(null, seq11573);
  var seq11573__$1 = cljs.core.next.call(null, seq11573);
  return om_tools.dom.h5.cljs$core$IFn$_invoke$arity$variadic(G__11574, seq11573__$1);
};
om_tools.dom.h5.cljs$lang$maxFixedArity = 1;
om_tools.dom.h6 = function om_tools$dom$h6() {
  var G__11580 = arguments.length;
  switch(G__11580) {
    case 0:
      return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.h6.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.h6, null, null);
};
om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.h6, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.h6.cljs$lang$applyTo = function(seq11577) {
  var G__11578 = cljs.core.first.call(null, seq11577);
  var seq11577__$1 = cljs.core.next.call(null, seq11577);
  return om_tools.dom.h6.cljs$core$IFn$_invoke$arity$variadic(G__11578, seq11577__$1);
};
om_tools.dom.h6.cljs$lang$maxFixedArity = 1;
om_tools.dom.head = function om_tools$dom$head() {
  var G__11584 = arguments.length;
  switch(G__11584) {
    case 0:
      return om_tools.dom.head.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.head.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.head, null, null);
};
om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.head, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.head.cljs$lang$applyTo = function(seq11581) {
  var G__11582 = cljs.core.first.call(null, seq11581);
  var seq11581__$1 = cljs.core.next.call(null, seq11581);
  return om_tools.dom.head.cljs$core$IFn$_invoke$arity$variadic(G__11582, seq11581__$1);
};
om_tools.dom.head.cljs$lang$maxFixedArity = 1;
om_tools.dom.header = function om_tools$dom$header() {
  var G__11588 = arguments.length;
  switch(G__11588) {
    case 0:
      return om_tools.dom.header.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.header.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.header, null, null);
};
om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.header, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.header.cljs$lang$applyTo = function(seq11585) {
  var G__11586 = cljs.core.first.call(null, seq11585);
  var seq11585__$1 = cljs.core.next.call(null, seq11585);
  return om_tools.dom.header.cljs$core$IFn$_invoke$arity$variadic(G__11586, seq11585__$1);
};
om_tools.dom.header.cljs$lang$maxFixedArity = 1;
om_tools.dom.hr = function om_tools$dom$hr() {
  var G__11592 = arguments.length;
  switch(G__11592) {
    case 0:
      return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.hr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.hr, null, null);
};
om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.hr, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.hr.cljs$lang$applyTo = function(seq11589) {
  var G__11590 = cljs.core.first.call(null, seq11589);
  var seq11589__$1 = cljs.core.next.call(null, seq11589);
  return om_tools.dom.hr.cljs$core$IFn$_invoke$arity$variadic(G__11590, seq11589__$1);
};
om_tools.dom.hr.cljs$lang$maxFixedArity = 1;
om_tools.dom.html = function om_tools$dom$html() {
  var G__11596 = arguments.length;
  switch(G__11596) {
    case 0:
      return om_tools.dom.html.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.html.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.html, null, null);
};
om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.html, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.html.cljs$lang$applyTo = function(seq11593) {
  var G__11594 = cljs.core.first.call(null, seq11593);
  var seq11593__$1 = cljs.core.next.call(null, seq11593);
  return om_tools.dom.html.cljs$core$IFn$_invoke$arity$variadic(G__11594, seq11593__$1);
};
om_tools.dom.html.cljs$lang$maxFixedArity = 1;
om_tools.dom.i = function om_tools$dom$i() {
  var G__11600 = arguments.length;
  switch(G__11600) {
    case 0:
      return om_tools.dom.i.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.i.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.i, null, null);
};
om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.i, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.i.cljs$lang$applyTo = function(seq11597) {
  var G__11598 = cljs.core.first.call(null, seq11597);
  var seq11597__$1 = cljs.core.next.call(null, seq11597);
  return om_tools.dom.i.cljs$core$IFn$_invoke$arity$variadic(G__11598, seq11597__$1);
};
om_tools.dom.i.cljs$lang$maxFixedArity = 1;
om_tools.dom.iframe = function om_tools$dom$iframe() {
  var G__11604 = arguments.length;
  switch(G__11604) {
    case 0:
      return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.iframe, null, null);
};
om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.iframe, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.iframe.cljs$lang$applyTo = function(seq11601) {
  var G__11602 = cljs.core.first.call(null, seq11601);
  var seq11601__$1 = cljs.core.next.call(null, seq11601);
  return om_tools.dom.iframe.cljs$core$IFn$_invoke$arity$variadic(G__11602, seq11601__$1);
};
om_tools.dom.iframe.cljs$lang$maxFixedArity = 1;
om_tools.dom.img = function om_tools$dom$img() {
  var G__11608 = arguments.length;
  switch(G__11608) {
    case 0:
      return om_tools.dom.img.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.img.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.img, null, null);
};
om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.img, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.img.cljs$lang$applyTo = function(seq11605) {
  var G__11606 = cljs.core.first.call(null, seq11605);
  var seq11605__$1 = cljs.core.next.call(null, seq11605);
  return om_tools.dom.img.cljs$core$IFn$_invoke$arity$variadic(G__11606, seq11605__$1);
};
om_tools.dom.img.cljs$lang$maxFixedArity = 1;
om_tools.dom.ins = function om_tools$dom$ins() {
  var G__11612 = arguments.length;
  switch(G__11612) {
    case 0:
      return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.ins.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ins, null, null);
};
om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ins, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.ins.cljs$lang$applyTo = function(seq11609) {
  var G__11610 = cljs.core.first.call(null, seq11609);
  var seq11609__$1 = cljs.core.next.call(null, seq11609);
  return om_tools.dom.ins.cljs$core$IFn$_invoke$arity$variadic(G__11610, seq11609__$1);
};
om_tools.dom.ins.cljs$lang$maxFixedArity = 1;
om_tools.dom.kbd = function om_tools$dom$kbd() {
  var G__11616 = arguments.length;
  switch(G__11616) {
    case 0:
      return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.kbd, null, null);
};
om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.kbd, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.kbd.cljs$lang$applyTo = function(seq11613) {
  var G__11614 = cljs.core.first.call(null, seq11613);
  var seq11613__$1 = cljs.core.next.call(null, seq11613);
  return om_tools.dom.kbd.cljs$core$IFn$_invoke$arity$variadic(G__11614, seq11613__$1);
};
om_tools.dom.kbd.cljs$lang$maxFixedArity = 1;
om_tools.dom.keygen = function om_tools$dom$keygen() {
  var G__11620 = arguments.length;
  switch(G__11620) {
    case 0:
      return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.keygen, null, null);
};
om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.keygen, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.keygen.cljs$lang$applyTo = function(seq11617) {
  var G__11618 = cljs.core.first.call(null, seq11617);
  var seq11617__$1 = cljs.core.next.call(null, seq11617);
  return om_tools.dom.keygen.cljs$core$IFn$_invoke$arity$variadic(G__11618, seq11617__$1);
};
om_tools.dom.keygen.cljs$lang$maxFixedArity = 1;
om_tools.dom.label = function om_tools$dom$label() {
  var G__11624 = arguments.length;
  switch(G__11624) {
    case 0:
      return om_tools.dom.label.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.label.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.label, null, null);
};
om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.label, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.label.cljs$lang$applyTo = function(seq11621) {
  var G__11622 = cljs.core.first.call(null, seq11621);
  var seq11621__$1 = cljs.core.next.call(null, seq11621);
  return om_tools.dom.label.cljs$core$IFn$_invoke$arity$variadic(G__11622, seq11621__$1);
};
om_tools.dom.label.cljs$lang$maxFixedArity = 1;
om_tools.dom.legend = function om_tools$dom$legend() {
  var G__11628 = arguments.length;
  switch(G__11628) {
    case 0:
      return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.legend.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.legend, null, null);
};
om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.legend, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.legend.cljs$lang$applyTo = function(seq11625) {
  var G__11626 = cljs.core.first.call(null, seq11625);
  var seq11625__$1 = cljs.core.next.call(null, seq11625);
  return om_tools.dom.legend.cljs$core$IFn$_invoke$arity$variadic(G__11626, seq11625__$1);
};
om_tools.dom.legend.cljs$lang$maxFixedArity = 1;
om_tools.dom.li = function om_tools$dom$li() {
  var G__11632 = arguments.length;
  switch(G__11632) {
    case 0:
      return om_tools.dom.li.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.li.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.li, null, null);
};
om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.li, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.li.cljs$lang$applyTo = function(seq11629) {
  var G__11630 = cljs.core.first.call(null, seq11629);
  var seq11629__$1 = cljs.core.next.call(null, seq11629);
  return om_tools.dom.li.cljs$core$IFn$_invoke$arity$variadic(G__11630, seq11629__$1);
};
om_tools.dom.li.cljs$lang$maxFixedArity = 1;
om_tools.dom.link = function om_tools$dom$link() {
  var G__11636 = arguments.length;
  switch(G__11636) {
    case 0:
      return om_tools.dom.link.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.link.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.link, null, null);
};
om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.link, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.link.cljs$lang$applyTo = function(seq11633) {
  var G__11634 = cljs.core.first.call(null, seq11633);
  var seq11633__$1 = cljs.core.next.call(null, seq11633);
  return om_tools.dom.link.cljs$core$IFn$_invoke$arity$variadic(G__11634, seq11633__$1);
};
om_tools.dom.link.cljs$lang$maxFixedArity = 1;
om_tools.dom.main = function om_tools$dom$main() {
  var G__11640 = arguments.length;
  switch(G__11640) {
    case 0:
      return om_tools.dom.main.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.main.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.main, null, null);
};
om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.main, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.main.cljs$lang$applyTo = function(seq11637) {
  var G__11638 = cljs.core.first.call(null, seq11637);
  var seq11637__$1 = cljs.core.next.call(null, seq11637);
  return om_tools.dom.main.cljs$core$IFn$_invoke$arity$variadic(G__11638, seq11637__$1);
};
om_tools.dom.main.cljs$lang$maxFixedArity = 1;
om_tools.dom.map = function om_tools$dom$map() {
  var G__11644 = arguments.length;
  switch(G__11644) {
    case 0:
      return om_tools.dom.map.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.map.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.map, null, null);
};
om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.map, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.map.cljs$lang$applyTo = function(seq11641) {
  var G__11642 = cljs.core.first.call(null, seq11641);
  var seq11641__$1 = cljs.core.next.call(null, seq11641);
  return om_tools.dom.map.cljs$core$IFn$_invoke$arity$variadic(G__11642, seq11641__$1);
};
om_tools.dom.map.cljs$lang$maxFixedArity = 1;
om_tools.dom.mark = function om_tools$dom$mark() {
  var G__11648 = arguments.length;
  switch(G__11648) {
    case 0:
      return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.mark.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.mark, null, null);
};
om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.mark, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.mark.cljs$lang$applyTo = function(seq11645) {
  var G__11646 = cljs.core.first.call(null, seq11645);
  var seq11645__$1 = cljs.core.next.call(null, seq11645);
  return om_tools.dom.mark.cljs$core$IFn$_invoke$arity$variadic(G__11646, seq11645__$1);
};
om_tools.dom.mark.cljs$lang$maxFixedArity = 1;
om_tools.dom.marquee = function om_tools$dom$marquee() {
  var G__11652 = arguments.length;
  switch(G__11652) {
    case 0:
      return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.marquee, null, null);
};
om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.marquee, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.marquee.cljs$lang$applyTo = function(seq11649) {
  var G__11650 = cljs.core.first.call(null, seq11649);
  var seq11649__$1 = cljs.core.next.call(null, seq11649);
  return om_tools.dom.marquee.cljs$core$IFn$_invoke$arity$variadic(G__11650, seq11649__$1);
};
om_tools.dom.marquee.cljs$lang$maxFixedArity = 1;
om_tools.dom.menu = function om_tools$dom$menu() {
  var G__11656 = arguments.length;
  switch(G__11656) {
    case 0:
      return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.menu.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.menu, null, null);
};
om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.menu, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.menu.cljs$lang$applyTo = function(seq11653) {
  var G__11654 = cljs.core.first.call(null, seq11653);
  var seq11653__$1 = cljs.core.next.call(null, seq11653);
  return om_tools.dom.menu.cljs$core$IFn$_invoke$arity$variadic(G__11654, seq11653__$1);
};
om_tools.dom.menu.cljs$lang$maxFixedArity = 1;
om_tools.dom.menuitem = function om_tools$dom$menuitem() {
  var G__11660 = arguments.length;
  switch(G__11660) {
    case 0:
      return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.menuitem, null, null);
};
om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.menuitem, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.menuitem.cljs$lang$applyTo = function(seq11657) {
  var G__11658 = cljs.core.first.call(null, seq11657);
  var seq11657__$1 = cljs.core.next.call(null, seq11657);
  return om_tools.dom.menuitem.cljs$core$IFn$_invoke$arity$variadic(G__11658, seq11657__$1);
};
om_tools.dom.menuitem.cljs$lang$maxFixedArity = 1;
om_tools.dom.meta = function om_tools$dom$meta() {
  var G__11664 = arguments.length;
  switch(G__11664) {
    case 0:
      return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.meta.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.meta, null, null);
};
om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.meta, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.meta.cljs$lang$applyTo = function(seq11661) {
  var G__11662 = cljs.core.first.call(null, seq11661);
  var seq11661__$1 = cljs.core.next.call(null, seq11661);
  return om_tools.dom.meta.cljs$core$IFn$_invoke$arity$variadic(G__11662, seq11661__$1);
};
om_tools.dom.meta.cljs$lang$maxFixedArity = 1;
om_tools.dom.meter = function om_tools$dom$meter() {
  var G__11668 = arguments.length;
  switch(G__11668) {
    case 0:
      return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.meter.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.meter, null, null);
};
om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.meter, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.meter.cljs$lang$applyTo = function(seq11665) {
  var G__11666 = cljs.core.first.call(null, seq11665);
  var seq11665__$1 = cljs.core.next.call(null, seq11665);
  return om_tools.dom.meter.cljs$core$IFn$_invoke$arity$variadic(G__11666, seq11665__$1);
};
om_tools.dom.meter.cljs$lang$maxFixedArity = 1;
om_tools.dom.nav = function om_tools$dom$nav() {
  var G__11672 = arguments.length;
  switch(G__11672) {
    case 0:
      return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.nav.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.nav, null, null);
};
om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.nav, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.nav.cljs$lang$applyTo = function(seq11669) {
  var G__11670 = cljs.core.first.call(null, seq11669);
  var seq11669__$1 = cljs.core.next.call(null, seq11669);
  return om_tools.dom.nav.cljs$core$IFn$_invoke$arity$variadic(G__11670, seq11669__$1);
};
om_tools.dom.nav.cljs$lang$maxFixedArity = 1;
om_tools.dom.noscript = function om_tools$dom$noscript() {
  var G__11676 = arguments.length;
  switch(G__11676) {
    case 0:
      return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.noscript, null, null);
};
om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.noscript, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.noscript.cljs$lang$applyTo = function(seq11673) {
  var G__11674 = cljs.core.first.call(null, seq11673);
  var seq11673__$1 = cljs.core.next.call(null, seq11673);
  return om_tools.dom.noscript.cljs$core$IFn$_invoke$arity$variadic(G__11674, seq11673__$1);
};
om_tools.dom.noscript.cljs$lang$maxFixedArity = 1;
om_tools.dom.object = function om_tools$dom$object() {
  var G__11680 = arguments.length;
  switch(G__11680) {
    case 0:
      return om_tools.dom.object.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.object.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.object, null, null);
};
om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.object, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.object.cljs$lang$applyTo = function(seq11677) {
  var G__11678 = cljs.core.first.call(null, seq11677);
  var seq11677__$1 = cljs.core.next.call(null, seq11677);
  return om_tools.dom.object.cljs$core$IFn$_invoke$arity$variadic(G__11678, seq11677__$1);
};
om_tools.dom.object.cljs$lang$maxFixedArity = 1;
om_tools.dom.ol = function om_tools$dom$ol() {
  var G__11684 = arguments.length;
  switch(G__11684) {
    case 0:
      return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.ol.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ol, null, null);
};
om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ol, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.ol.cljs$lang$applyTo = function(seq11681) {
  var G__11682 = cljs.core.first.call(null, seq11681);
  var seq11681__$1 = cljs.core.next.call(null, seq11681);
  return om_tools.dom.ol.cljs$core$IFn$_invoke$arity$variadic(G__11682, seq11681__$1);
};
om_tools.dom.ol.cljs$lang$maxFixedArity = 1;
om_tools.dom.optgroup = function om_tools$dom$optgroup() {
  var G__11688 = arguments.length;
  switch(G__11688) {
    case 0:
      return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.optgroup, null, null);
};
om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.optgroup, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.optgroup.cljs$lang$applyTo = function(seq11685) {
  var G__11686 = cljs.core.first.call(null, seq11685);
  var seq11685__$1 = cljs.core.next.call(null, seq11685);
  return om_tools.dom.optgroup.cljs$core$IFn$_invoke$arity$variadic(G__11686, seq11685__$1);
};
om_tools.dom.optgroup.cljs$lang$maxFixedArity = 1;
om_tools.dom.output = function om_tools$dom$output() {
  var G__11692 = arguments.length;
  switch(G__11692) {
    case 0:
      return om_tools.dom.output.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.output.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.output, null, null);
};
om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.output, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.output.cljs$lang$applyTo = function(seq11689) {
  var G__11690 = cljs.core.first.call(null, seq11689);
  var seq11689__$1 = cljs.core.next.call(null, seq11689);
  return om_tools.dom.output.cljs$core$IFn$_invoke$arity$variadic(G__11690, seq11689__$1);
};
om_tools.dom.output.cljs$lang$maxFixedArity = 1;
om_tools.dom.p = function om_tools$dom$p() {
  var G__11696 = arguments.length;
  switch(G__11696) {
    case 0:
      return om_tools.dom.p.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.p.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.p, null, null);
};
om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.p, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.p.cljs$lang$applyTo = function(seq11693) {
  var G__11694 = cljs.core.first.call(null, seq11693);
  var seq11693__$1 = cljs.core.next.call(null, seq11693);
  return om_tools.dom.p.cljs$core$IFn$_invoke$arity$variadic(G__11694, seq11693__$1);
};
om_tools.dom.p.cljs$lang$maxFixedArity = 1;
om_tools.dom.param = function om_tools$dom$param() {
  var G__11700 = arguments.length;
  switch(G__11700) {
    case 0:
      return om_tools.dom.param.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.param.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.param, null, null);
};
om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.param, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.param.cljs$lang$applyTo = function(seq11697) {
  var G__11698 = cljs.core.first.call(null, seq11697);
  var seq11697__$1 = cljs.core.next.call(null, seq11697);
  return om_tools.dom.param.cljs$core$IFn$_invoke$arity$variadic(G__11698, seq11697__$1);
};
om_tools.dom.param.cljs$lang$maxFixedArity = 1;
om_tools.dom.pre = function om_tools$dom$pre() {
  var G__11704 = arguments.length;
  switch(G__11704) {
    case 0:
      return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.pre.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.pre, null, null);
};
om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.pre, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.pre.cljs$lang$applyTo = function(seq11701) {
  var G__11702 = cljs.core.first.call(null, seq11701);
  var seq11701__$1 = cljs.core.next.call(null, seq11701);
  return om_tools.dom.pre.cljs$core$IFn$_invoke$arity$variadic(G__11702, seq11701__$1);
};
om_tools.dom.pre.cljs$lang$maxFixedArity = 1;
om_tools.dom.progress = function om_tools$dom$progress() {
  var G__11708 = arguments.length;
  switch(G__11708) {
    case 0:
      return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.progress.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.progress, null, null);
};
om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.progress, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.progress.cljs$lang$applyTo = function(seq11705) {
  var G__11706 = cljs.core.first.call(null, seq11705);
  var seq11705__$1 = cljs.core.next.call(null, seq11705);
  return om_tools.dom.progress.cljs$core$IFn$_invoke$arity$variadic(G__11706, seq11705__$1);
};
om_tools.dom.progress.cljs$lang$maxFixedArity = 1;
om_tools.dom.q = function om_tools$dom$q() {
  var G__11712 = arguments.length;
  switch(G__11712) {
    case 0:
      return om_tools.dom.q.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.q.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.q, null, null);
};
om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.q, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.q.cljs$lang$applyTo = function(seq11709) {
  var G__11710 = cljs.core.first.call(null, seq11709);
  var seq11709__$1 = cljs.core.next.call(null, seq11709);
  return om_tools.dom.q.cljs$core$IFn$_invoke$arity$variadic(G__11710, seq11709__$1);
};
om_tools.dom.q.cljs$lang$maxFixedArity = 1;
om_tools.dom.rp = function om_tools$dom$rp() {
  var G__11716 = arguments.length;
  switch(G__11716) {
    case 0:
      return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.rp.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rp, null, null);
};
om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rp, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.rp.cljs$lang$applyTo = function(seq11713) {
  var G__11714 = cljs.core.first.call(null, seq11713);
  var seq11713__$1 = cljs.core.next.call(null, seq11713);
  return om_tools.dom.rp.cljs$core$IFn$_invoke$arity$variadic(G__11714, seq11713__$1);
};
om_tools.dom.rp.cljs$lang$maxFixedArity = 1;
om_tools.dom.rt = function om_tools$dom$rt() {
  var G__11720 = arguments.length;
  switch(G__11720) {
    case 0:
      return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.rt.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rt, null, null);
};
om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rt, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.rt.cljs$lang$applyTo = function(seq11717) {
  var G__11718 = cljs.core.first.call(null, seq11717);
  var seq11717__$1 = cljs.core.next.call(null, seq11717);
  return om_tools.dom.rt.cljs$core$IFn$_invoke$arity$variadic(G__11718, seq11717__$1);
};
om_tools.dom.rt.cljs$lang$maxFixedArity = 1;
om_tools.dom.ruby = function om_tools$dom$ruby() {
  var G__11724 = arguments.length;
  switch(G__11724) {
    case 0:
      return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ruby, null, null);
};
om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ruby, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.ruby.cljs$lang$applyTo = function(seq11721) {
  var G__11722 = cljs.core.first.call(null, seq11721);
  var seq11721__$1 = cljs.core.next.call(null, seq11721);
  return om_tools.dom.ruby.cljs$core$IFn$_invoke$arity$variadic(G__11722, seq11721__$1);
};
om_tools.dom.ruby.cljs$lang$maxFixedArity = 1;
om_tools.dom.s = function om_tools$dom$s() {
  var G__11728 = arguments.length;
  switch(G__11728) {
    case 0:
      return om_tools.dom.s.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.s.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.s, null, null);
};
om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.s, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.s.cljs$lang$applyTo = function(seq11725) {
  var G__11726 = cljs.core.first.call(null, seq11725);
  var seq11725__$1 = cljs.core.next.call(null, seq11725);
  return om_tools.dom.s.cljs$core$IFn$_invoke$arity$variadic(G__11726, seq11725__$1);
};
om_tools.dom.s.cljs$lang$maxFixedArity = 1;
om_tools.dom.samp = function om_tools$dom$samp() {
  var G__11732 = arguments.length;
  switch(G__11732) {
    case 0:
      return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.samp.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.samp, null, null);
};
om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.samp, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.samp.cljs$lang$applyTo = function(seq11729) {
  var G__11730 = cljs.core.first.call(null, seq11729);
  var seq11729__$1 = cljs.core.next.call(null, seq11729);
  return om_tools.dom.samp.cljs$core$IFn$_invoke$arity$variadic(G__11730, seq11729__$1);
};
om_tools.dom.samp.cljs$lang$maxFixedArity = 1;
om_tools.dom.script = function om_tools$dom$script() {
  var G__11736 = arguments.length;
  switch(G__11736) {
    case 0:
      return om_tools.dom.script.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.script.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.script, null, null);
};
om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.script, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.script.cljs$lang$applyTo = function(seq11733) {
  var G__11734 = cljs.core.first.call(null, seq11733);
  var seq11733__$1 = cljs.core.next.call(null, seq11733);
  return om_tools.dom.script.cljs$core$IFn$_invoke$arity$variadic(G__11734, seq11733__$1);
};
om_tools.dom.script.cljs$lang$maxFixedArity = 1;
om_tools.dom.section = function om_tools$dom$section() {
  var G__11740 = arguments.length;
  switch(G__11740) {
    case 0:
      return om_tools.dom.section.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.section.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.section, null, null);
};
om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.section, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.section.cljs$lang$applyTo = function(seq11737) {
  var G__11738 = cljs.core.first.call(null, seq11737);
  var seq11737__$1 = cljs.core.next.call(null, seq11737);
  return om_tools.dom.section.cljs$core$IFn$_invoke$arity$variadic(G__11738, seq11737__$1);
};
om_tools.dom.section.cljs$lang$maxFixedArity = 1;
om_tools.dom.select = function om_tools$dom$select() {
  var G__11744 = arguments.length;
  switch(G__11744) {
    case 0:
      return om_tools.dom.select.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.select.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.select, null, null);
};
om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.select, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.select.cljs$lang$applyTo = function(seq11741) {
  var G__11742 = cljs.core.first.call(null, seq11741);
  var seq11741__$1 = cljs.core.next.call(null, seq11741);
  return om_tools.dom.select.cljs$core$IFn$_invoke$arity$variadic(G__11742, seq11741__$1);
};
om_tools.dom.select.cljs$lang$maxFixedArity = 1;
om_tools.dom.small = function om_tools$dom$small() {
  var G__11748 = arguments.length;
  switch(G__11748) {
    case 0:
      return om_tools.dom.small.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.small.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.small, null, null);
};
om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.small, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.small.cljs$lang$applyTo = function(seq11745) {
  var G__11746 = cljs.core.first.call(null, seq11745);
  var seq11745__$1 = cljs.core.next.call(null, seq11745);
  return om_tools.dom.small.cljs$core$IFn$_invoke$arity$variadic(G__11746, seq11745__$1);
};
om_tools.dom.small.cljs$lang$maxFixedArity = 1;
om_tools.dom.source = function om_tools$dom$source() {
  var G__11752 = arguments.length;
  switch(G__11752) {
    case 0:
      return om_tools.dom.source.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.source.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.source, null, null);
};
om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.source, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.source.cljs$lang$applyTo = function(seq11749) {
  var G__11750 = cljs.core.first.call(null, seq11749);
  var seq11749__$1 = cljs.core.next.call(null, seq11749);
  return om_tools.dom.source.cljs$core$IFn$_invoke$arity$variadic(G__11750, seq11749__$1);
};
om_tools.dom.source.cljs$lang$maxFixedArity = 1;
om_tools.dom.span = function om_tools$dom$span() {
  var G__11756 = arguments.length;
  switch(G__11756) {
    case 0:
      return om_tools.dom.span.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.span.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.span, null, null);
};
om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.span, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.span.cljs$lang$applyTo = function(seq11753) {
  var G__11754 = cljs.core.first.call(null, seq11753);
  var seq11753__$1 = cljs.core.next.call(null, seq11753);
  return om_tools.dom.span.cljs$core$IFn$_invoke$arity$variadic(G__11754, seq11753__$1);
};
om_tools.dom.span.cljs$lang$maxFixedArity = 1;
om_tools.dom.strong = function om_tools$dom$strong() {
  var G__11760 = arguments.length;
  switch(G__11760) {
    case 0:
      return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.strong.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.strong, null, null);
};
om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.strong, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.strong.cljs$lang$applyTo = function(seq11757) {
  var G__11758 = cljs.core.first.call(null, seq11757);
  var seq11757__$1 = cljs.core.next.call(null, seq11757);
  return om_tools.dom.strong.cljs$core$IFn$_invoke$arity$variadic(G__11758, seq11757__$1);
};
om_tools.dom.strong.cljs$lang$maxFixedArity = 1;
om_tools.dom.style = function om_tools$dom$style() {
  var G__11764 = arguments.length;
  switch(G__11764) {
    case 0:
      return om_tools.dom.style.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.style.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.style, null, null);
};
om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.style, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.style.cljs$lang$applyTo = function(seq11761) {
  var G__11762 = cljs.core.first.call(null, seq11761);
  var seq11761__$1 = cljs.core.next.call(null, seq11761);
  return om_tools.dom.style.cljs$core$IFn$_invoke$arity$variadic(G__11762, seq11761__$1);
};
om_tools.dom.style.cljs$lang$maxFixedArity = 1;
om_tools.dom.sub = function om_tools$dom$sub() {
  var G__11768 = arguments.length;
  switch(G__11768) {
    case 0:
      return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.sub.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.sub, null, null);
};
om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.sub, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.sub.cljs$lang$applyTo = function(seq11765) {
  var G__11766 = cljs.core.first.call(null, seq11765);
  var seq11765__$1 = cljs.core.next.call(null, seq11765);
  return om_tools.dom.sub.cljs$core$IFn$_invoke$arity$variadic(G__11766, seq11765__$1);
};
om_tools.dom.sub.cljs$lang$maxFixedArity = 1;
om_tools.dom.summary = function om_tools$dom$summary() {
  var G__11772 = arguments.length;
  switch(G__11772) {
    case 0:
      return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.summary.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.summary, null, null);
};
om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.summary, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.summary.cljs$lang$applyTo = function(seq11769) {
  var G__11770 = cljs.core.first.call(null, seq11769);
  var seq11769__$1 = cljs.core.next.call(null, seq11769);
  return om_tools.dom.summary.cljs$core$IFn$_invoke$arity$variadic(G__11770, seq11769__$1);
};
om_tools.dom.summary.cljs$lang$maxFixedArity = 1;
om_tools.dom.sup = function om_tools$dom$sup() {
  var G__11776 = arguments.length;
  switch(G__11776) {
    case 0:
      return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.sup.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.sup, null, null);
};
om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.sup, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.sup.cljs$lang$applyTo = function(seq11773) {
  var G__11774 = cljs.core.first.call(null, seq11773);
  var seq11773__$1 = cljs.core.next.call(null, seq11773);
  return om_tools.dom.sup.cljs$core$IFn$_invoke$arity$variadic(G__11774, seq11773__$1);
};
om_tools.dom.sup.cljs$lang$maxFixedArity = 1;
om_tools.dom.table = function om_tools$dom$table() {
  var G__11780 = arguments.length;
  switch(G__11780) {
    case 0:
      return om_tools.dom.table.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.table.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.table, null, null);
};
om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.table, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.table.cljs$lang$applyTo = function(seq11777) {
  var G__11778 = cljs.core.first.call(null, seq11777);
  var seq11777__$1 = cljs.core.next.call(null, seq11777);
  return om_tools.dom.table.cljs$core$IFn$_invoke$arity$variadic(G__11778, seq11777__$1);
};
om_tools.dom.table.cljs$lang$maxFixedArity = 1;
om_tools.dom.tbody = function om_tools$dom$tbody() {
  var G__11784 = arguments.length;
  switch(G__11784) {
    case 0:
      return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tbody, null, null);
};
om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tbody, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.tbody.cljs$lang$applyTo = function(seq11781) {
  var G__11782 = cljs.core.first.call(null, seq11781);
  var seq11781__$1 = cljs.core.next.call(null, seq11781);
  return om_tools.dom.tbody.cljs$core$IFn$_invoke$arity$variadic(G__11782, seq11781__$1);
};
om_tools.dom.tbody.cljs$lang$maxFixedArity = 1;
om_tools.dom.td = function om_tools$dom$td() {
  var G__11788 = arguments.length;
  switch(G__11788) {
    case 0:
      return om_tools.dom.td.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.td.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.td, null, null);
};
om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.td, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.td.cljs$lang$applyTo = function(seq11785) {
  var G__11786 = cljs.core.first.call(null, seq11785);
  var seq11785__$1 = cljs.core.next.call(null, seq11785);
  return om_tools.dom.td.cljs$core$IFn$_invoke$arity$variadic(G__11786, seq11785__$1);
};
om_tools.dom.td.cljs$lang$maxFixedArity = 1;
om_tools.dom.tfoot = function om_tools$dom$tfoot() {
  var G__11792 = arguments.length;
  switch(G__11792) {
    case 0:
      return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tfoot, null, null);
};
om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tfoot, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.tfoot.cljs$lang$applyTo = function(seq11789) {
  var G__11790 = cljs.core.first.call(null, seq11789);
  var seq11789__$1 = cljs.core.next.call(null, seq11789);
  return om_tools.dom.tfoot.cljs$core$IFn$_invoke$arity$variadic(G__11790, seq11789__$1);
};
om_tools.dom.tfoot.cljs$lang$maxFixedArity = 1;
om_tools.dom.th = function om_tools$dom$th() {
  var G__11796 = arguments.length;
  switch(G__11796) {
    case 0:
      return om_tools.dom.th.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.th.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.th, null, null);
};
om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.th, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.th.cljs$lang$applyTo = function(seq11793) {
  var G__11794 = cljs.core.first.call(null, seq11793);
  var seq11793__$1 = cljs.core.next.call(null, seq11793);
  return om_tools.dom.th.cljs$core$IFn$_invoke$arity$variadic(G__11794, seq11793__$1);
};
om_tools.dom.th.cljs$lang$maxFixedArity = 1;
om_tools.dom.thead = function om_tools$dom$thead() {
  var G__11800 = arguments.length;
  switch(G__11800) {
    case 0:
      return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.thead.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.thead, null, null);
};
om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.thead, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.thead.cljs$lang$applyTo = function(seq11797) {
  var G__11798 = cljs.core.first.call(null, seq11797);
  var seq11797__$1 = cljs.core.next.call(null, seq11797);
  return om_tools.dom.thead.cljs$core$IFn$_invoke$arity$variadic(G__11798, seq11797__$1);
};
om_tools.dom.thead.cljs$lang$maxFixedArity = 1;
om_tools.dom.time = function om_tools$dom$time() {
  var G__11804 = arguments.length;
  switch(G__11804) {
    case 0:
      return om_tools.dom.time.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.time.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.time, null, null);
};
om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.time, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.time.cljs$lang$applyTo = function(seq11801) {
  var G__11802 = cljs.core.first.call(null, seq11801);
  var seq11801__$1 = cljs.core.next.call(null, seq11801);
  return om_tools.dom.time.cljs$core$IFn$_invoke$arity$variadic(G__11802, seq11801__$1);
};
om_tools.dom.time.cljs$lang$maxFixedArity = 1;
om_tools.dom.title = function om_tools$dom$title() {
  var G__11808 = arguments.length;
  switch(G__11808) {
    case 0:
      return om_tools.dom.title.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.title.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.title, null, null);
};
om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.title, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.title.cljs$lang$applyTo = function(seq11805) {
  var G__11806 = cljs.core.first.call(null, seq11805);
  var seq11805__$1 = cljs.core.next.call(null, seq11805);
  return om_tools.dom.title.cljs$core$IFn$_invoke$arity$variadic(G__11806, seq11805__$1);
};
om_tools.dom.title.cljs$lang$maxFixedArity = 1;
om_tools.dom.tr = function om_tools$dom$tr() {
  var G__11812 = arguments.length;
  switch(G__11812) {
    case 0:
      return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.tr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tr, null, null);
};
om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tr, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.tr.cljs$lang$applyTo = function(seq11809) {
  var G__11810 = cljs.core.first.call(null, seq11809);
  var seq11809__$1 = cljs.core.next.call(null, seq11809);
  return om_tools.dom.tr.cljs$core$IFn$_invoke$arity$variadic(G__11810, seq11809__$1);
};
om_tools.dom.tr.cljs$lang$maxFixedArity = 1;
om_tools.dom.track = function om_tools$dom$track() {
  var G__11816 = arguments.length;
  switch(G__11816) {
    case 0:
      return om_tools.dom.track.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.track.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.track, null, null);
};
om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.track, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.track.cljs$lang$applyTo = function(seq11813) {
  var G__11814 = cljs.core.first.call(null, seq11813);
  var seq11813__$1 = cljs.core.next.call(null, seq11813);
  return om_tools.dom.track.cljs$core$IFn$_invoke$arity$variadic(G__11814, seq11813__$1);
};
om_tools.dom.track.cljs$lang$maxFixedArity = 1;
om_tools.dom.u = function om_tools$dom$u() {
  var G__11820 = arguments.length;
  switch(G__11820) {
    case 0:
      return om_tools.dom.u.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.u.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.u, null, null);
};
om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.u, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.u.cljs$lang$applyTo = function(seq11817) {
  var G__11818 = cljs.core.first.call(null, seq11817);
  var seq11817__$1 = cljs.core.next.call(null, seq11817);
  return om_tools.dom.u.cljs$core$IFn$_invoke$arity$variadic(G__11818, seq11817__$1);
};
om_tools.dom.u.cljs$lang$maxFixedArity = 1;
om_tools.dom.ul = function om_tools$dom$ul() {
  var G__11824 = arguments.length;
  switch(G__11824) {
    case 0:
      return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.ul.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ul, null, null);
};
om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ul, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.ul.cljs$lang$applyTo = function(seq11821) {
  var G__11822 = cljs.core.first.call(null, seq11821);
  var seq11821__$1 = cljs.core.next.call(null, seq11821);
  return om_tools.dom.ul.cljs$core$IFn$_invoke$arity$variadic(G__11822, seq11821__$1);
};
om_tools.dom.ul.cljs$lang$maxFixedArity = 1;
om_tools.dom.var$ = function om_tools$dom$var() {
  var G__11828 = arguments.length;
  switch(G__11828) {
    case 0:
      return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.var$.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.var$, null, null);
};
om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.var$, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.var$.cljs$lang$applyTo = function(seq11825) {
  var G__11826 = cljs.core.first.call(null, seq11825);
  var seq11825__$1 = cljs.core.next.call(null, seq11825);
  return om_tools.dom.var$.cljs$core$IFn$_invoke$arity$variadic(G__11826, seq11825__$1);
};
om_tools.dom.var$.cljs$lang$maxFixedArity = 1;
om_tools.dom.video = function om_tools$dom$video() {
  var G__11832 = arguments.length;
  switch(G__11832) {
    case 0:
      return om_tools.dom.video.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.video.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.video, null, null);
};
om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.video, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.video.cljs$lang$applyTo = function(seq11829) {
  var G__11830 = cljs.core.first.call(null, seq11829);
  var seq11829__$1 = cljs.core.next.call(null, seq11829);
  return om_tools.dom.video.cljs$core$IFn$_invoke$arity$variadic(G__11830, seq11829__$1);
};
om_tools.dom.video.cljs$lang$maxFixedArity = 1;
om_tools.dom.wbr = function om_tools$dom$wbr() {
  var G__11836 = arguments.length;
  switch(G__11836) {
    case 0:
      return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.wbr, null, null);
};
om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.wbr, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.wbr.cljs$lang$applyTo = function(seq11833) {
  var G__11834 = cljs.core.first.call(null, seq11833);
  var seq11833__$1 = cljs.core.next.call(null, seq11833);
  return om_tools.dom.wbr.cljs$core$IFn$_invoke$arity$variadic(G__11834, seq11833__$1);
};
om_tools.dom.wbr.cljs$lang$maxFixedArity = 1;
om_tools.dom.circle = function om_tools$dom$circle() {
  var G__11840 = arguments.length;
  switch(G__11840) {
    case 0:
      return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.circle.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.circle, null, null);
};
om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.circle, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.circle.cljs$lang$applyTo = function(seq11837) {
  var G__11838 = cljs.core.first.call(null, seq11837);
  var seq11837__$1 = cljs.core.next.call(null, seq11837);
  return om_tools.dom.circle.cljs$core$IFn$_invoke$arity$variadic(G__11838, seq11837__$1);
};
om_tools.dom.circle.cljs$lang$maxFixedArity = 1;
om_tools.dom.ellipse = function om_tools$dom$ellipse() {
  var G__11844 = arguments.length;
  switch(G__11844) {
    case 0:
      return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.ellipse, null, null);
};
om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.ellipse, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.ellipse.cljs$lang$applyTo = function(seq11841) {
  var G__11842 = cljs.core.first.call(null, seq11841);
  var seq11841__$1 = cljs.core.next.call(null, seq11841);
  return om_tools.dom.ellipse.cljs$core$IFn$_invoke$arity$variadic(G__11842, seq11841__$1);
};
om_tools.dom.ellipse.cljs$lang$maxFixedArity = 1;
om_tools.dom.g = function om_tools$dom$g() {
  var G__11848 = arguments.length;
  switch(G__11848) {
    case 0:
      return om_tools.dom.g.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.g.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.g, null, null);
};
om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.g, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.g.cljs$lang$applyTo = function(seq11845) {
  var G__11846 = cljs.core.first.call(null, seq11845);
  var seq11845__$1 = cljs.core.next.call(null, seq11845);
  return om_tools.dom.g.cljs$core$IFn$_invoke$arity$variadic(G__11846, seq11845__$1);
};
om_tools.dom.g.cljs$lang$maxFixedArity = 1;
om_tools.dom.line = function om_tools$dom$line() {
  var G__11852 = arguments.length;
  switch(G__11852) {
    case 0:
      return om_tools.dom.line.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.line.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.line, null, null);
};
om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.line, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.line.cljs$lang$applyTo = function(seq11849) {
  var G__11850 = cljs.core.first.call(null, seq11849);
  var seq11849__$1 = cljs.core.next.call(null, seq11849);
  return om_tools.dom.line.cljs$core$IFn$_invoke$arity$variadic(G__11850, seq11849__$1);
};
om_tools.dom.line.cljs$lang$maxFixedArity = 1;
om_tools.dom.path = function om_tools$dom$path() {
  var G__11856 = arguments.length;
  switch(G__11856) {
    case 0:
      return om_tools.dom.path.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.path.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.path, null, null);
};
om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.path, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.path.cljs$lang$applyTo = function(seq11853) {
  var G__11854 = cljs.core.first.call(null, seq11853);
  var seq11853__$1 = cljs.core.next.call(null, seq11853);
  return om_tools.dom.path.cljs$core$IFn$_invoke$arity$variadic(G__11854, seq11853__$1);
};
om_tools.dom.path.cljs$lang$maxFixedArity = 1;
om_tools.dom.polyline = function om_tools$dom$polyline() {
  var G__11860 = arguments.length;
  switch(G__11860) {
    case 0:
      return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.polyline, null, null);
};
om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.polyline, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.polyline.cljs$lang$applyTo = function(seq11857) {
  var G__11858 = cljs.core.first.call(null, seq11857);
  var seq11857__$1 = cljs.core.next.call(null, seq11857);
  return om_tools.dom.polyline.cljs$core$IFn$_invoke$arity$variadic(G__11858, seq11857__$1);
};
om_tools.dom.polyline.cljs$lang$maxFixedArity = 1;
om_tools.dom.rect = function om_tools$dom$rect() {
  var G__11864 = arguments.length;
  switch(G__11864) {
    case 0:
      return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.rect.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.rect, null, null);
};
om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.rect, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.rect.cljs$lang$applyTo = function(seq11861) {
  var G__11862 = cljs.core.first.call(null, seq11861);
  var seq11861__$1 = cljs.core.next.call(null, seq11861);
  return om_tools.dom.rect.cljs$core$IFn$_invoke$arity$variadic(G__11862, seq11861__$1);
};
om_tools.dom.rect.cljs$lang$maxFixedArity = 1;
om_tools.dom.svg = function om_tools$dom$svg() {
  var G__11868 = arguments.length;
  switch(G__11868) {
    case 0:
      return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.svg.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.svg, null, null);
};
om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.svg, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.svg.cljs$lang$applyTo = function(seq11865) {
  var G__11866 = cljs.core.first.call(null, seq11865);
  var seq11865__$1 = cljs.core.next.call(null, seq11865);
  return om_tools.dom.svg.cljs$core$IFn$_invoke$arity$variadic(G__11866, seq11865__$1);
};
om_tools.dom.svg.cljs$lang$maxFixedArity = 1;
om_tools.dom.text = function om_tools$dom$text() {
  var G__11872 = arguments.length;
  switch(G__11872) {
    case 0:
      return om_tools.dom.text.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.text.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.text, null, null);
};
om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.text, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.text.cljs$lang$applyTo = function(seq11869) {
  var G__11870 = cljs.core.first.call(null, seq11869);
  var seq11869__$1 = cljs.core.next.call(null, seq11869);
  return om_tools.dom.text.cljs$core$IFn$_invoke$arity$variadic(G__11870, seq11869__$1);
};
om_tools.dom.text.cljs$lang$maxFixedArity = 1;
om_tools.dom.defs = function om_tools$dom$defs() {
  var G__11876 = arguments.length;
  switch(G__11876) {
    case 0:
      return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.defs.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.defs, null, null);
};
om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.defs, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.defs.cljs$lang$applyTo = function(seq11873) {
  var G__11874 = cljs.core.first.call(null, seq11873);
  var seq11873__$1 = cljs.core.next.call(null, seq11873);
  return om_tools.dom.defs.cljs$core$IFn$_invoke$arity$variadic(G__11874, seq11873__$1);
};
om_tools.dom.defs.cljs$lang$maxFixedArity = 1;
om_tools.dom.linearGradient = function om_tools$dom$linearGradient() {
  var G__11880 = arguments.length;
  switch(G__11880) {
    case 0:
      return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.linearGradient, null, null);
};
om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.linearGradient, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.linearGradient.cljs$lang$applyTo = function(seq11877) {
  var G__11878 = cljs.core.first.call(null, seq11877);
  var seq11877__$1 = cljs.core.next.call(null, seq11877);
  return om_tools.dom.linearGradient.cljs$core$IFn$_invoke$arity$variadic(G__11878, seq11877__$1);
};
om_tools.dom.linearGradient.cljs$lang$maxFixedArity = 1;
om_tools.dom.polygon = function om_tools$dom$polygon() {
  var G__11884 = arguments.length;
  switch(G__11884) {
    case 0:
      return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.polygon, null, null);
};
om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.polygon, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.polygon.cljs$lang$applyTo = function(seq11881) {
  var G__11882 = cljs.core.first.call(null, seq11881);
  var seq11881__$1 = cljs.core.next.call(null, seq11881);
  return om_tools.dom.polygon.cljs$core$IFn$_invoke$arity$variadic(G__11882, seq11881__$1);
};
om_tools.dom.polygon.cljs$lang$maxFixedArity = 1;
om_tools.dom.radialGradient = function om_tools$dom$radialGradient() {
  var G__11888 = arguments.length;
  switch(G__11888) {
    case 0:
      return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.radialGradient, null, null);
};
om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.radialGradient, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.radialGradient.cljs$lang$applyTo = function(seq11885) {
  var G__11886 = cljs.core.first.call(null, seq11885);
  var seq11885__$1 = cljs.core.next.call(null, seq11885);
  return om_tools.dom.radialGradient.cljs$core$IFn$_invoke$arity$variadic(G__11886, seq11885__$1);
};
om_tools.dom.radialGradient.cljs$lang$maxFixedArity = 1;
om_tools.dom.stop = function om_tools$dom$stop() {
  var G__11892 = arguments.length;
  switch(G__11892) {
    case 0:
      return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.stop, null, null);
};
om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.stop, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.stop.cljs$lang$applyTo = function(seq11889) {
  var G__11890 = cljs.core.first.call(null, seq11889);
  var seq11889__$1 = cljs.core.next.call(null, seq11889);
  return om_tools.dom.stop.cljs$core$IFn$_invoke$arity$variadic(G__11890, seq11889__$1);
};
om_tools.dom.stop.cljs$lang$maxFixedArity = 1;
om_tools.dom.tspan = function om_tools$dom$tspan() {
  var G__11896 = arguments.length;
  switch(G__11896) {
    case 0:
      return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, React.DOM.tspan, null, null);
};
om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, React.DOM.tspan, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.tspan.cljs$lang$applyTo = function(seq11893) {
  var G__11894 = cljs.core.first.call(null, seq11893);
  var seq11893__$1 = cljs.core.next.call(null, seq11893);
  return om_tools.dom.tspan.cljs$core$IFn$_invoke$arity$variadic(G__11894, seq11893__$1);
};
om_tools.dom.tspan.cljs$lang$maxFixedArity = 1;
om_tools.dom.input = function om_tools$dom$input() {
  var G__11900 = arguments.length;
  switch(G__11900) {
    case 0:
      return om_tools.dom.input.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.input.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.input, null, null);
};
om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, om.dom.input, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.input.cljs$lang$applyTo = function(seq11897) {
  var G__11898 = cljs.core.first.call(null, seq11897);
  var seq11897__$1 = cljs.core.next.call(null, seq11897);
  return om_tools.dom.input.cljs$core$IFn$_invoke$arity$variadic(G__11898, seq11897__$1);
};
om_tools.dom.input.cljs$lang$maxFixedArity = 1;
om_tools.dom.textarea = function om_tools$dom$textarea() {
  var G__11904 = arguments.length;
  switch(G__11904) {
    case 0:
      return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.textarea, null, null);
};
om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, om.dom.textarea, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.textarea.cljs$lang$applyTo = function(seq11901) {
  var G__11902 = cljs.core.first.call(null, seq11901);
  var seq11901__$1 = cljs.core.next.call(null, seq11901);
  return om_tools.dom.textarea.cljs$core$IFn$_invoke$arity$variadic(G__11902, seq11901__$1);
};
om_tools.dom.textarea.cljs$lang$maxFixedArity = 1;
om_tools.dom.option = function om_tools$dom$option() {
  var G__11536 = arguments.length;
  switch(G__11536) {
    case 0:
      return om_tools.dom.option.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0);
      return om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5359__auto__);
  }
};
om_tools.dom.option.cljs$core$IFn$_invoke$arity$0 = function() {
  return om_tools.dom.element.call(null, om.dom.option, null, null);
};
om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic = function(opts__9085__auto__, children__9086__auto__) {
  return om_tools.dom.element.call(null, om.dom.option, opts__9085__auto__, children__9086__auto__);
};
om_tools.dom.option.cljs$lang$applyTo = function(seq11533) {
  var G__11534 = cljs.core.first.call(null, seq11533);
  var seq11533__$1 = cljs.core.next.call(null, seq11533);
  return om_tools.dom.option.cljs$core$IFn$_invoke$arity$variadic(G__11534, seq11533__$1);
};
om_tools.dom.option.cljs$lang$maxFixedArity = 1;
om_tools.dom.class_set = function om_tools$dom$class_set(m) {
  var temp__4425__auto__ = cljs.core.seq.call(null, cljs.core.distinct.call(null, cljs.core.map.call(null, cljs.core.name, cljs.core.keys.call(null, cljs.core.filter.call(null, cljs.core.val, m)))));
  if (temp__4425__auto__) {
    var ks = temp__4425__auto__;
    return clojure.string.join.call(null, " ", ks);
  } else {
    return null;
  }
};
goog.provide("goog.date.DateLike");
goog.date.DateLike;
goog.provide("goog.i18n.DateTimeSymbols");
goog.provide("goog.i18n.DateTimeSymbols_af");
goog.provide("goog.i18n.DateTimeSymbols_am");
goog.provide("goog.i18n.DateTimeSymbols_ar");
goog.provide("goog.i18n.DateTimeSymbols_az");
goog.provide("goog.i18n.DateTimeSymbols_bg");
goog.provide("goog.i18n.DateTimeSymbols_bn");
goog.provide("goog.i18n.DateTimeSymbols_br");
goog.provide("goog.i18n.DateTimeSymbols_ca");
goog.provide("goog.i18n.DateTimeSymbols_chr");
goog.provide("goog.i18n.DateTimeSymbols_cs");
goog.provide("goog.i18n.DateTimeSymbols_cy");
goog.provide("goog.i18n.DateTimeSymbols_da");
goog.provide("goog.i18n.DateTimeSymbols_de");
goog.provide("goog.i18n.DateTimeSymbols_de_AT");
goog.provide("goog.i18n.DateTimeSymbols_de_CH");
goog.provide("goog.i18n.DateTimeSymbols_el");
goog.provide("goog.i18n.DateTimeSymbols_en");
goog.provide("goog.i18n.DateTimeSymbols_en_AU");
goog.provide("goog.i18n.DateTimeSymbols_en_GB");
goog.provide("goog.i18n.DateTimeSymbols_en_IE");
goog.provide("goog.i18n.DateTimeSymbols_en_IN");
goog.provide("goog.i18n.DateTimeSymbols_en_ISO");
goog.provide("goog.i18n.DateTimeSymbols_en_SG");
goog.provide("goog.i18n.DateTimeSymbols_en_US");
goog.provide("goog.i18n.DateTimeSymbols_en_ZA");
goog.provide("goog.i18n.DateTimeSymbols_es");
goog.provide("goog.i18n.DateTimeSymbols_es_419");
goog.provide("goog.i18n.DateTimeSymbols_es_ES");
goog.provide("goog.i18n.DateTimeSymbols_et");
goog.provide("goog.i18n.DateTimeSymbols_eu");
goog.provide("goog.i18n.DateTimeSymbols_fa");
goog.provide("goog.i18n.DateTimeSymbols_fi");
goog.provide("goog.i18n.DateTimeSymbols_fil");
goog.provide("goog.i18n.DateTimeSymbols_fr");
goog.provide("goog.i18n.DateTimeSymbols_fr_CA");
goog.provide("goog.i18n.DateTimeSymbols_ga");
goog.provide("goog.i18n.DateTimeSymbols_gl");
goog.provide("goog.i18n.DateTimeSymbols_gsw");
goog.provide("goog.i18n.DateTimeSymbols_gu");
goog.provide("goog.i18n.DateTimeSymbols_haw");
goog.provide("goog.i18n.DateTimeSymbols_he");
goog.provide("goog.i18n.DateTimeSymbols_hi");
goog.provide("goog.i18n.DateTimeSymbols_hr");
goog.provide("goog.i18n.DateTimeSymbols_hu");
goog.provide("goog.i18n.DateTimeSymbols_hy");
goog.provide("goog.i18n.DateTimeSymbols_id");
goog.provide("goog.i18n.DateTimeSymbols_in");
goog.provide("goog.i18n.DateTimeSymbols_is");
goog.provide("goog.i18n.DateTimeSymbols_it");
goog.provide("goog.i18n.DateTimeSymbols_iw");
goog.provide("goog.i18n.DateTimeSymbols_ja");
goog.provide("goog.i18n.DateTimeSymbols_ka");
goog.provide("goog.i18n.DateTimeSymbols_kk");
goog.provide("goog.i18n.DateTimeSymbols_km");
goog.provide("goog.i18n.DateTimeSymbols_kn");
goog.provide("goog.i18n.DateTimeSymbols_ko");
goog.provide("goog.i18n.DateTimeSymbols_ky");
goog.provide("goog.i18n.DateTimeSymbols_ln");
goog.provide("goog.i18n.DateTimeSymbols_lo");
goog.provide("goog.i18n.DateTimeSymbols_lt");
goog.provide("goog.i18n.DateTimeSymbols_lv");
goog.provide("goog.i18n.DateTimeSymbols_mk");
goog.provide("goog.i18n.DateTimeSymbols_ml");
goog.provide("goog.i18n.DateTimeSymbols_mn");
goog.provide("goog.i18n.DateTimeSymbols_mr");
goog.provide("goog.i18n.DateTimeSymbols_ms");
goog.provide("goog.i18n.DateTimeSymbols_mt");
goog.provide("goog.i18n.DateTimeSymbols_my");
goog.provide("goog.i18n.DateTimeSymbols_nb");
goog.provide("goog.i18n.DateTimeSymbols_ne");
goog.provide("goog.i18n.DateTimeSymbols_nl");
goog.provide("goog.i18n.DateTimeSymbols_no");
goog.provide("goog.i18n.DateTimeSymbols_no_NO");
goog.provide("goog.i18n.DateTimeSymbols_or");
goog.provide("goog.i18n.DateTimeSymbols_pa");
goog.provide("goog.i18n.DateTimeSymbols_pl");
goog.provide("goog.i18n.DateTimeSymbols_pt");
goog.provide("goog.i18n.DateTimeSymbols_pt_BR");
goog.provide("goog.i18n.DateTimeSymbols_pt_PT");
goog.provide("goog.i18n.DateTimeSymbols_ro");
goog.provide("goog.i18n.DateTimeSymbols_ru");
goog.provide("goog.i18n.DateTimeSymbols_si");
goog.provide("goog.i18n.DateTimeSymbols_sk");
goog.provide("goog.i18n.DateTimeSymbols_sl");
goog.provide("goog.i18n.DateTimeSymbols_sq");
goog.provide("goog.i18n.DateTimeSymbols_sr");
goog.provide("goog.i18n.DateTimeSymbols_sv");
goog.provide("goog.i18n.DateTimeSymbols_sw");
goog.provide("goog.i18n.DateTimeSymbols_ta");
goog.provide("goog.i18n.DateTimeSymbols_te");
goog.provide("goog.i18n.DateTimeSymbols_th");
goog.provide("goog.i18n.DateTimeSymbols_tl");
goog.provide("goog.i18n.DateTimeSymbols_tr");
goog.provide("goog.i18n.DateTimeSymbols_uk");
goog.provide("goog.i18n.DateTimeSymbols_ur");
goog.provide("goog.i18n.DateTimeSymbols_uz");
goog.provide("goog.i18n.DateTimeSymbols_vi");
goog.provide("goog.i18n.DateTimeSymbols_zh");
goog.provide("goog.i18n.DateTimeSymbols_zh_CN");
goog.provide("goog.i18n.DateTimeSymbols_zh_HK");
goog.provide("goog.i18n.DateTimeSymbols_zh_TW");
goog.provide("goog.i18n.DateTimeSymbols_zu");
goog.i18n.DateTimeSymbols_en_ISO = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yyyy-MM-dd"], TIMEFORMATS:["HH:mm:ss v", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], AVAILABLEFORMATS:{"Md":"M/d", 
"MMMMd":"MMMM d", "MMMd":"MMM d"}, FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_af = {ERAS:["v.C.", "n.C."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januarie", "Februarie", "Maart", "April", "Mei", "Junie", "Julie", "Augustus", "September", 
"Oktober", "November", "Desember"], SHORTMONTHS:["Jan.", "Feb.", "Mrt.", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan.", "Feb.", "Mrt.", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], STANDALONEWEEKDAYS:["Sondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrydag", "Saterdag"], SHORTWEEKDAYS:["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"], STANDALONESHORTWEEKDAYS:["So", 
"Ma", "Di", "Wo", "Do", "Vr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "W", "D", "V", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1ste kwartaal", "2de kwartaal", "3de kwartaal", "4de kwartaal"], AMPMS:["vm.", "nm."], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y-MM-dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_am = {ERAS:["\u12d3/\u12d3", "\u12d3/\u121d"], ERANAMES:["\u12d3\u1218\u1270 \u12d3\u1208\u121d", "\u12d3\u1218\u1270 \u121d\u1215\u1228\u1275"], NARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], STANDALONENARROWMONTHS:["\u1303", "\u134c", "\u121b", "\u12a4", "\u121c", "\u1301", "\u1301", "\u12a6", "\u1234", "\u12a6", "\u1296", "\u12f2"], MONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", 
"\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", "\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], STANDALONEMONTHS:["\u1303\u1295\u12e9\u12c8\u122a", "\u134c\u1265\u1229\u12c8\u122a", "\u121b\u122d\u127d", "\u12a4\u1355\u122a\u120d", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235\u1275", "\u1234\u1355\u1274\u121d\u1260\u122d", 
"\u12a6\u12ad\u1276\u1260\u122d", "\u1296\u126c\u121d\u1260\u122d", "\u12f2\u1234\u121d\u1260\u122d"], SHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", "\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], STANDALONESHORTMONTHS:["\u1303\u1295\u12e9", "\u134c\u1265\u1229", "\u121b\u122d\u127d", "\u12a4\u1355\u122a", "\u121c\u12ed", "\u1301\u1295", 
"\u1301\u120b\u12ed", "\u12a6\u1308\u1235", "\u1234\u1355\u1274", "\u12a6\u12ad\u1276", "\u1296\u126c\u121d", "\u12f2\u1234\u121d"], WEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONEWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230\u129e", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], SHORTWEEKDAYS:["\u12a5\u1211\u12f5", 
"\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], STANDALONESHORTWEEKDAYS:["\u12a5\u1211\u12f5", "\u1230\u129e", "\u121b\u12ad\u1230", "\u1228\u1261\u12d5", "\u1210\u1219\u1235", "\u12d3\u122d\u1265", "\u1245\u12f3\u121c"], NARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], STANDALONENARROWWEEKDAYS:["\u12a5", "\u1230", "\u121b", "\u1228", "\u1210", "\u12d3", "\u1245"], SHORTQUARTERS:["\u1229\u12651", 
"\u1229\u12652", "\u1229\u12653", "\u1229\u12654"], QUARTERS:["1\u129b\u12cd \u1229\u1265", "\u1201\u1208\u1270\u129b\u12cd \u1229\u1265", "3\u129b\u12cd \u1229\u1265", "4\u129b\u12cd \u1229\u1265"], AMPMS:["\u1325\u12cb\u1275", "\u12a8\u1230\u12d3\u1275"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ar = {ZERODIGIT:1632, ERAS:["\u0642.\u0645", "\u0645"], ERANAMES:["\u0642\u0628\u0644 \u0627\u0644\u0645\u064a\u0644\u0627\u062f", "\u0645\u064a\u0644\u0627\u062f\u064a"], NARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], STANDALONENARROWMONTHS:["\u064a", "\u0641", "\u0645", "\u0623", "\u0648", "\u0646", "\u0644", "\u063a", "\u0633", "\u0643", "\u0628", "\u062f"], MONTHS:["\u064a\u0646\u0627\u064a\u0631", 
"\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", 
"\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", 
"\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", "\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u064a\u0646\u0627\u064a\u0631", "\u0641\u0628\u0631\u0627\u064a\u0631", "\u0645\u0627\u0631\u0633", "\u0623\u0628\u0631\u064a\u0644", "\u0645\u0627\u064a\u0648", "\u064a\u0648\u0646\u064a\u0648", "\u064a\u0648\u0644\u064a\u0648", 
"\u0623\u063a\u0633\u0637\u0633", "\u0633\u0628\u062a\u0645\u0628\u0631", "\u0623\u0643\u062a\u0648\u0628\u0631", "\u0646\u0648\u0641\u0645\u0628\u0631", "\u062f\u064a\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], 
STANDALONEWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], SHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", 
"\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], STANDALONESHORTWEEKDAYS:["\u0627\u0644\u0623\u062d\u062f", "\u0627\u0644\u0627\u062b\u0646\u064a\u0646", "\u0627\u0644\u062b\u0644\u0627\u062b\u0627\u0621", "\u0627\u0644\u0623\u0631\u0628\u0639\u0627\u0621", "\u0627\u0644\u062e\u0645\u064a\u0633", "\u0627\u0644\u062c\u0645\u0639\u0629", "\u0627\u0644\u0633\u0628\u062a"], NARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", 
"\u062c", "\u0633"], STANDALONENARROWWEEKDAYS:["\u062d", "\u0646", "\u062b", "\u0631", "\u062e", "\u062c", "\u0633"], SHORTQUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], QUARTERS:["\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0623\u0648\u0644", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0646\u064a", 
"\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u062b\u0627\u0644\u062b", "\u0627\u0644\u0631\u0628\u0639 \u0627\u0644\u0631\u0627\u0628\u0639"], AMPMS:["\u0635", "\u0645"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "dd\u200f/MM\u200f/y", "d\u200f/M\u200f/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_az = {ERAS:["e.\u0259.", "b.e."], ERANAMES:["eram\u0131zdan \u0259vv\u0259l", "bizim eram\u0131z\u0131n"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["yanvar", "fevral", "mart", "aprel", "may", "iyun", "iyul", "avqust", "sentyabr", "oktyabr", "noyabr", "dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "\u0130yun", "\u0130yul", 
"Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"], SHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], STANDALONESHORTMONTHS:["yan", "fev", "mar", "apr", "may", "iyn", "iyl", "avq", "sen", "okt", "noy", "dek"], WEEKDAYS:["bazar", "bazar ert\u0259si", "\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], STANDALONEWEEKDAYS:["bazar", "bazar ert\u0259si", 
"\u00e7\u0259r\u015f\u0259nb\u0259 ax\u015fam\u0131", "\u00e7\u0259r\u015f\u0259nb\u0259", "c\u00fcm\u0259 ax\u015fam\u0131", "c\u00fcm\u0259", "\u015f\u0259nb\u0259"], SHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C.", "\u015e."], STANDALONESHORTWEEKDAYS:["B.", "B.E.", "\u00c7.A.", "\u00c7.", "C.A.", "C.", "\u015e."], NARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], STANDALONENARROWWEEKDAYS:["7", "1", "2", "3", "4", "5", "6"], SHORTQUARTERS:["1-ci kv.", "2-ci kv.", "3-c\u00fc kv.", 
"4-c\u00fc kv."], QUARTERS:["1-ci kvartal", "2-ci kvartal", "3-c\u00fc kvartal", "4-c\u00fc kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["d MMMM y, EEEE", "d MMMM y", "d MMM y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_bg = {ERAS:["\u043f\u0440.\u0425\u0440.", "\u0441\u043b.\u0425\u0440."], ERANAMES:["\u043f\u0440\u0435\u0434\u0438 \u0425\u0440\u0438\u0441\u0442\u0430", "\u0441\u043b\u0435\u0434 \u0425\u0440\u0438\u0441\u0442\u0430"], NARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u044f", "\u0444", "\u043c", "\u0430", "\u043c", "\u044e", "\u044e", "\u0430", "\u0441", "\u043e", 
"\u043d", "\u0434"], MONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], STANDALONEMONTHS:["\u044f\u043d\u0443\u0430\u0440\u0438", 
"\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], SHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u044e\u043d\u0438", "\u044e\u043b\u0438", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", 
"\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", 
"\u0441\u0440\u044f\u0434\u0430", "\u0447\u0435\u0442\u0432\u044a\u0440\u0442\u044a\u043a", "\u043f\u0435\u0442\u044a\u043a", "\u0441\u044a\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0434", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", 
"\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["1. \u0442\u0440\u0438\u043c.", "2. \u0442\u0440\u0438\u043c.", "3. \u0442\u0440\u0438\u043c.", "4. \u0442\u0440\u0438\u043c."], QUARTERS:["1. \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "2. \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "3. \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435", "4. \u0442\u0440\u0438\u043c\u0435\u0441\u0435\u0447\u0438\u0435"], 
AMPMS:["\u043f\u0440.\u043e\u0431.", "\u0441\u043b.\u043e\u0431."], DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d.MM.y '\u0433'.", "d.MM.yy '\u0433'."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_bn = {ZERODIGIT:2534, ERAS:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], ERANAMES:["\u0996\u09cd\u09b0\u09bf\u09b8\u09cd\u099f\u09aa\u09c2\u09b0\u09cd\u09ac", "\u0996\u09c3\u09b7\u09cd\u099f\u09be\u09ac\u09cd\u09a6"], NARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", 
"\u09a1\u09bf"], STANDALONENARROWMONTHS:["\u099c\u09be", "\u09ab\u09c7", "\u09ae\u09be", "\u098f", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1", "\u0986", "\u09b8\u09c7", "\u0985", "\u09a8", "\u09a1\u09bf"], MONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", 
"\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONEMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], SHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", "\u099c\u09c1\u09b2\u09be\u0987", 
"\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], STANDALONESHORTMONTHS:["\u099c\u09be\u09a8\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ab\u09c7\u09ac\u09cd\u09b0\u09c1\u09af\u09bc\u09be\u09b0\u09c0", "\u09ae\u09be\u09b0\u09cd\u099a", "\u098f\u09aa\u09cd\u09b0\u09bf\u09b2", "\u09ae\u09c7", "\u099c\u09c1\u09a8", 
"\u099c\u09c1\u09b2\u09be\u0987", "\u0986\u0997\u09b8\u09cd\u099f", "\u09b8\u09c7\u09aa\u09cd\u099f\u09c7\u09ae\u09cd\u09ac\u09b0", "\u0985\u0995\u09cd\u099f\u09cb\u09ac\u09b0", "\u09a8\u09ad\u09c7\u09ae\u09cd\u09ac\u09b0", "\u09a1\u09bf\u09b8\u09c7\u09ae\u09cd\u09ac\u09b0"], WEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", 
"\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], STANDALONEWEEKDAYS:["\u09b0\u09ac\u09bf\u09ac\u09be\u09b0", "\u09b8\u09cb\u09ae\u09ac\u09be\u09b0", "\u09ae\u0999\u09cd\u0997\u09b2\u09ac\u09be\u09b0", "\u09ac\u09c1\u09a7\u09ac\u09be\u09b0", "\u09ac\u09c3\u09b9\u09b7\u09cd\u09aa\u09a4\u09bf\u09ac\u09be\u09b0", "\u09b6\u09c1\u0995\u09cd\u09b0\u09ac\u09be\u09b0", "\u09b6\u09a8\u09bf\u09ac\u09be\u09b0"], SHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", 
"\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], STANDALONESHORTWEEKDAYS:["\u09b0\u09ac\u09bf", "\u09b8\u09cb\u09ae", "\u09ae\u0999\u09cd\u0997\u09b2", "\u09ac\u09c1\u09a7", "\u09ac\u09c3\u09b9\u09b8\u09cd\u09aa\u09a4\u09bf", "\u09b6\u09c1\u0995\u09cd\u09b0", "\u09b6\u09a8\u09bf"], NARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], 
STANDALONENARROWWEEKDAYS:["\u09b0", "\u09b8\u09cb", "\u09ae", "\u09ac\u09c1", "\u09ac\u09c3", "\u09b6\u09c1", "\u09b6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995", "\u09b7\u09be\u09a3\u09cd\u09ae\u09be\u09b8\u09bf\u0995", "\u09a4\u09c3\u09a4\u09c0\u09af\u09bc \u099a\u09a4\u09c1\u09b0\u09cd\u09a5\u09be\u0982\u09b6", "\u099a\u09a4\u09c1\u09b0\u09cd\u09a5 \u09a4\u09cd\u09b0\u09c8\u09ae\u09be\u09b8\u09bf\u0995"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM, y", 
"d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:4, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_br = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"], STANDALONENARROWMONTHS:["01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"], MONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"], STANDALONEMONTHS:["Genver", "C\u02bchwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", 
"Here", "Du", "Kerzu"], SHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], STANDALONESHORTMONTHS:["Gen", "C\u02bchwe", "Meur", "Ebr", "Mae", "Mezh", "Goue", "Eost", "Gwen", "Here", "Du", "Ker"], WEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], STANDALONEWEEKDAYS:["Sul", "Lun", "Meurzh", "Merc\u02bcher", "Yaou", "Gwener", "Sadorn"], SHORTWEEKDAYS:["Sul", "Lun", "Meu.", "Mer.", "Yaou", "Gwe.", "Sad."], STANDALONESHORTWEEKDAYS:["Sul", 
"Lun", "Meu.", "Mer.", "Yaou", "Gwe.", "Sad."], NARROWWEEKDAYS:["Su", "L", "Mz", "Mc", "Y", "G", "Sa"], STANDALONENARROWWEEKDAYS:["Su", "L", "Mz", "Mc", "Y", "G", "Sa"], SHORTQUARTERS:["1a\u00f1 trim.", "2l trim.", "3e trim.", "4e trim."], QUARTERS:["1a\u00f1 trimiziad", "2l trimiziad", "3e trimiziad", "4e trimiziad"], AMPMS:["A.M.", "G.M."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ca = {ERAS:["aC", "dC"], ERANAMES:["abans de Crist", "despr\u00e9s de Crist"], NARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], STANDALONENARROWMONTHS:["GN", "FB", "M\u00c7", "AB", "MG", "JN", "JL", "AG", "ST", "OC", "NV", "DS"], MONTHS:["de gener", "de febrer", "de mar\u00e7", "d\u2019abril", "de maig", "de juny", "de juliol", "d\u2019agost", "de setembre", "d\u2019octubre", "de novembre", "de desembre"], STANDALONEMONTHS:["gener", 
"febrer", "mar\u00e7", "abril", "maig", "juny", "juliol", "agost", "setembre", "octubre", "novembre", "desembre"], SHORTMONTHS:["gen.", "febr.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], STANDALONESHORTMONTHS:["gen.", "febr.", "mar\u00e7", "abr.", "maig", "juny", "jul.", "ag.", "set.", "oct.", "nov.", "des."], WEEKDAYS:["diumenge", "dilluns", "dimarts", "dimecres", "dijous", "divendres", "dissabte"], STANDALONEWEEKDAYS:["diumenge", "dilluns", "dimarts", 
"dimecres", "dijous", "divendres", "dissabte"], SHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], STANDALONESHORTWEEKDAYS:["dg.", "dl.", "dt.", "dc.", "dj.", "dv.", "ds."], NARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], STANDALONENARROWWEEKDAYS:["dg", "dl", "dt", "dc", "dj", "dv", "ds"], SHORTQUARTERS:["1T", "2T", "3T", "4T"], QUARTERS:["1r trimestre", "2n trimestre", "3r trimestre", "4t trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d MMMM 'de' y", "d MMMM 'de' y", 
"d MMM y", "d/M/yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} 'a les' {0}", "{1}, {0}", "{1} , {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_chr = {ERAS:["\u13a4\u13d3\u13b7\u13b8", "\u13a4\u13b6\u13d0\u13c5"], ERANAMES:["\u13cf \u13e5\u13cc \u13be\u13d5\u13b2\u13cd\u13ac\u13be", "\u13a0\u13a9\u13c3\u13ae\u13b5\u13d3\u13cd\u13d7\u13f1 \u13a0\u13d5\u13d8\u13f1\u13cd\u13ac \u13f1\u13b0\u13e9 \u13e7\u13d3\u13c2\u13b8\u13a2\u13cd\u13d7"], NARROWMONTHS:["\u13a4", "\u13a7", "\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], STANDALONENARROWMONTHS:["\u13a4", "\u13a7", 
"\u13a0", "\u13a7", "\u13a0", "\u13d5", "\u13ab", "\u13a6", "\u13da", "\u13da", "\u13c5", "\u13a5"], MONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", "\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], STANDALONEMONTHS:["\u13a4\u13c3\u13b8\u13d4\u13c5", "\u13a7\u13a6\u13b5", 
"\u13a0\u13c5\u13f1", "\u13a7\u13ec\u13c2", "\u13a0\u13c2\u13cd\u13ac\u13d8", "\u13d5\u13ad\u13b7\u13f1", "\u13ab\u13f0\u13c9\u13c2", "\u13a6\u13b6\u13c2", "\u13da\u13b5\u13cd\u13d7", "\u13da\u13c2\u13c5\u13d7", "\u13c5\u13d3\u13d5\u13c6", "\u13a5\u13cd\u13a9\u13f1"], SHORTMONTHS:["\u13a4\u13c3", "\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], STANDALONESHORTMONTHS:["\u13a4\u13c3", 
"\u13a7\u13a6", "\u13a0\u13c5", "\u13a7\u13ec", "\u13a0\u13c2", "\u13d5\u13ad", "\u13ab\u13f0", "\u13a6\u13b6", "\u13da\u13b5", "\u13da\u13c2", "\u13c5\u13d3", "\u13a5\u13cd"], WEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", "\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], STANDALONEWEEKDAYS:["\u13a4\u13be\u13d9\u13d3\u13c6\u13cd\u13ac", 
"\u13a4\u13be\u13d9\u13d3\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1\u13a2\u13a6", "\u13e6\u13a2\u13c1\u13a2\u13a6", "\u13c5\u13a9\u13c1\u13a2\u13a6", "\u13e7\u13be\u13a9\u13b6\u13cd\u13d7", "\u13a4\u13be\u13d9\u13d3\u13c8\u13d5\u13be"], SHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", "\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], STANDALONESHORTWEEKDAYS:["\u13c6\u13cd\u13ac", "\u13c9\u13c5\u13af", "\u13d4\u13b5\u13c1", "\u13e6\u13a2\u13c1", 
"\u13c5\u13a9\u13c1", "\u13e7\u13be\u13a9", "\u13c8\u13d5\u13be"], NARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], STANDALONENARROWWEEKDAYS:["\u13c6", "\u13c9", "\u13d4", "\u13e6", "\u13c5", "\u13e7", "\u13a4"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["\u13cc\u13be\u13b4", "\u13d2\u13af\u13f1\u13a2\u13d7\u13e2"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", 
"h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_cs = {ERAS:["p\u0159. n. l.", "n. l."], ERANAMES:["p\u0159. n. l.", "n. l."], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["ledna", "\u00fanora", "b\u0159ezna", "dubna", "kv\u011btna", "\u010dervna", "\u010dervence", "srpna", "z\u00e1\u0159\u00ed", "\u0159\u00edjna", "listopadu", "prosince"], STANDALONEMONTHS:["leden", "\u00fanor", "b\u0159ezen", 
"duben", "kv\u011bten", "\u010derven", "\u010dervenec", "srpen", "z\u00e1\u0159\u00ed", "\u0159\u00edjen", "listopad", "prosinec"], SHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], STANDALONESHORTMONTHS:["led", "\u00fano", "b\u0159e", "dub", "kv\u011b", "\u010dvn", "\u010dvc", "srp", "z\u00e1\u0159", "\u0159\u00edj", "lis", "pro"], WEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", 
"\u010dtvrtek", "p\u00e1tek", "sobota"], STANDALONEWEEKDAYS:["ned\u011ble", "pond\u011bl\u00ed", "\u00fater\u00fd", "st\u0159eda", "\u010dtvrtek", "p\u00e1tek", "sobota"], SHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "\u00fat", "st", "\u010dt", "p\u00e1", "so"], NARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "\u00da", "S", "\u010c", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], 
QUARTERS:["1. \u010dtvrtlet\u00ed", "2. \u010dtvrtlet\u00ed", "3. \u010dtvrtlet\u00ed", "4. \u010dtvrtlet\u00ed"], AMPMS:["dopoledne", "odpoledne"], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_cy = {ERAS:["CC", "OC"], ERANAMES:["Cyn Crist", "Oed Crist"], NARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], STANDALONENARROWMONTHS:["I", "Ch", "M", "E", "M", "M", "G", "A", "M", "H", "T", "Rh"], MONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"], STANDALONEMONTHS:["Ionawr", "Chwefror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorffennaf", "Awst", "Medi", "Hydref", 
"Tachwedd", "Rhagfyr"], SHORTMONTHS:["Ion", "Chwef", "Mawrth", "Ebrill", "Mai", "Meh", "Gorff", "Awst", "Medi", "Hyd", "Tach", "Rhag"], STANDALONESHORTMONTHS:["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Awst", "Medi", "Hyd", "Tach", "Rhag"], WEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], STANDALONEWEEKDAYS:["Dydd Sul", "Dydd Llun", "Dydd Mawrth", "Dydd Mercher", "Dydd Iau", "Dydd Gwener", "Dydd Sadwrn"], SHORTWEEKDAYS:["Sul", "Llun", 
"Maw", "Mer", "Iau", "Gwen", "Sad"], STANDALONESHORTWEEKDAYS:["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"], NARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], STANDALONENARROWWEEKDAYS:["S", "Ll", "M", "M", "I", "G", "S"], SHORTQUARTERS:["Ch1", "Ch2", "Ch3", "Ch4"], QUARTERS:["Chwarter 1af", "2il chwarter", "3ydd chwarter", "4ydd chwarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} 'am' {0}", "{1} 'am' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_da = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marts", "april", "maj", "juni", "juli", "august", "september", "oktober", "november", 
"december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], 
STANDALONESHORTWEEKDAYS:["s\u00f8n", "man", "tir", "ons", "tor", "fre", "l\u00f8r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE 'den' d. MMMM y", "d. MMMM y", "d. MMM y", "dd/MM/y"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", 
"{1} 'kl.' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", 
"November", "Dezember"], SHORTMONTHS:["Jan.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", 
"Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'um' {0}", "{1} 'um' {0}", 
"{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_AT = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"], STANDALONEMONTHS:["J\u00e4nner", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "August", "September", 
"Oktober", "November", "Dezember"], SHORTMONTHS:["J\u00e4n.", "Feb.", "M\u00e4rz", "Apr.", "Mai", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dez."], STANDALONESHORTMONTHS:["J\u00e4n", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], STANDALONEWEEKDAYS:["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"], SHORTWEEKDAYS:["So.", "Mo.", "Di.", 
"Mi.", "Do.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nachm."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'um' {0}", 
"{1} 'um' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_de_CH = goog.i18n.DateTimeSymbols_de;
goog.i18n.DateTimeSymbols_el = {ERAS:["\u03c0.\u03a7.", "\u03bc.\u03a7."], ERANAMES:["\u03c0\u03c1\u03bf \u03a7\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd", "\u03bc\u03b5\u03c4\u03ac \u03a7\u03c1\u03b9\u03c3\u03c4\u03cc\u03bd"], NARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], STANDALONENARROWMONTHS:["\u0399", "\u03a6", "\u039c", "\u0391", "\u039c", "\u0399", "\u0399", "\u0391", "\u03a3", "\u039f", "\u039d", "\u0394"], 
MONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03b1\u03c1\u03af\u03bf\u03c5", "\u039c\u03b1\u03c1\u03c4\u03af\u03bf\u03c5", "\u0391\u03c0\u03c1\u03b9\u03bb\u03af\u03bf\u03c5", "\u039c\u03b1\u0390\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5", "\u0399\u03bf\u03c5\u03bb\u03af\u03bf\u03c5", "\u0391\u03c5\u03b3\u03bf\u03cd\u03c3\u03c4\u03bf\u03c5", "\u03a3\u03b5\u03c0\u03c4\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u039f\u03ba\u03c4\u03c9\u03b2\u03c1\u03af\u03bf\u03c5", 
"\u039d\u03bf\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5", "\u0394\u03b5\u03ba\u03b5\u03bc\u03b2\u03c1\u03af\u03bf\u03c5"], STANDALONEMONTHS:["\u0399\u03b1\u03bd\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u03a6\u03b5\u03b2\u03c1\u03bf\u03c5\u03ac\u03c1\u03b9\u03bf\u03c2", "\u039c\u03ac\u03c1\u03c4\u03b9\u03bf\u03c2", "\u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf\u03c2", "\u039c\u03ac\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bd\u03b9\u03bf\u03c2", "\u0399\u03bf\u03cd\u03bb\u03b9\u03bf\u03c2", "\u0391\u03cd\u03b3\u03bf\u03c5\u03c3\u03c4\u03bf\u03c2", 
"\u03a3\u03b5\u03c0\u03c4\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039f\u03ba\u03c4\u03ce\u03b2\u03c1\u03b9\u03bf\u03c2", "\u039d\u03bf\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2", "\u0394\u03b5\u03ba\u03ad\u03bc\u03b2\u03c1\u03b9\u03bf\u03c2"], SHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03b1\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03b1\u0390", "\u0399\u03bf\u03c5\u03bd", "\u0399\u03bf\u03c5\u03bb", "\u0391\u03c5\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03b5", 
"\u0394\u03b5\u03ba"], STANDALONESHORTMONTHS:["\u0399\u03b1\u03bd", "\u03a6\u03b5\u03b2", "\u039c\u03ac\u03c1", "\u0391\u03c0\u03c1", "\u039c\u03ac\u03b9", "\u0399\u03bf\u03cd\u03bd", "\u0399\u03bf\u03cd\u03bb", "\u0391\u03cd\u03b3", "\u03a3\u03b5\u03c0", "\u039f\u03ba\u03c4", "\u039d\u03bf\u03ad", "\u0394\u03b5\u03ba"], WEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", 
"\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], STANDALONEWEEKDAYS:["\u039a\u03c5\u03c1\u03b9\u03b1\u03ba\u03ae", "\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1", "\u03a4\u03c1\u03af\u03c4\u03b7", "\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7", "\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7", "\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae", "\u03a3\u03ac\u03b2\u03b2\u03b1\u03c4\u03bf"], SHORTWEEKDAYS:["\u039a\u03c5\u03c1", 
"\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], STANDALONESHORTWEEKDAYS:["\u039a\u03c5\u03c1", "\u0394\u03b5\u03c5", "\u03a4\u03c1\u03af", "\u03a4\u03b5\u03c4", "\u03a0\u03ad\u03bc", "\u03a0\u03b1\u03c1", "\u03a3\u03ac\u03b2"], NARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], STANDALONENARROWWEEKDAYS:["\u039a", "\u0394", "\u03a4", "\u03a4", "\u03a0", "\u03a0", "\u03a3"], SHORTQUARTERS:["\u03a41", 
"\u03a42", "\u03a43", "\u03a44"], QUARTERS:["1\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "2\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "3\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf", "4\u03bf \u03c4\u03c1\u03af\u03bc\u03b7\u03bd\u03bf"], AMPMS:["\u03c0.\u03bc.", "\u03bc.\u03bc."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} - {0}", "{1} - {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_AU = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_GB = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_en_IE = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_en_IN = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd-MMM-y", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_SG = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_en_US = goog.i18n.DateTimeSymbols_en;
goog.i18n.DateTimeSymbols_en_ZA = {ERAS:["BC", "AD"], ERANAMES:["Before Christ", "Anno Domini"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], STANDALONEMONTHS:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", 
"November", "December"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], WEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], STANDALONEWEEKDAYS:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], SHORTWEEKDAYS:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], STANDALONESHORTWEEKDAYS:["Sun", 
"Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd MMM y", "y/MM/dd"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'at' {0}", "{1} 'at' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_es = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "despu\u00e9s de Cristo"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", 
"Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", "lun.", 
"mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "X", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H:mm:ss (zzzz)", 
"H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_419 = {ERAS:["a. C.", "d. C."], ERANAMES:["antes de Cristo", "despu\u00e9s de Cristo"], NARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["enero", "febrero", "marzo", "abril", "mayo", "junio", "julio", "agosto", "septiembre", "octubre", "noviembre", "diciembre"], STANDALONEMONTHS:["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", 
"Septiembre", "Octubre", "Noviembre", "Diciembre"], SHORTMONTHS:["ene.", "feb.", "mar.", "abr.", "may.", "jun.", "jul.", "ago.", "sept.", "oct.", "nov.", "dic."], STANDALONESHORTMONTHS:["Ene.", "Feb.", "Mar.", "Abr.", "May.", "Jun.", "Jul.", "Ago.", "Sept.", "Oct.", "Nov.", "Dic."], WEEKDAYS:["domingo", "lunes", "martes", "mi\u00e9rcoles", "jueves", "viernes", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Lunes", "Martes", "Mi\u00e9rcoles", "Jueves", "Viernes", "S\u00e1bado"], SHORTWEEKDAYS:["dom.", 
"lun.", "mar.", "mi\u00e9.", "jue.", "vie.", "s\u00e1b."], STANDALONESHORTWEEKDAYS:["Dom.", "Lun.", "Mar.", "Mi\u00e9.", "Jue.", "Vie.", "S\u00e1b."], NARROWWEEKDAYS:["d", "l", "m", "m", "j", "v", "s"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.er trimestre", "2.\u00ba trimestre", "3.er trimestre", "4.\u00ba trimestre"], AMPMS:["a. m.", "p. m."], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d MMM y", "d/M/yy"], 
TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_es_ES = goog.i18n.DateTimeSymbols_es;
goog.i18n.DateTimeSymbols_et = {ERAS:["e.m.a.", "m.a.j."], ERANAMES:["enne meie aega", "meie aja j\u00e4rgi"], NARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", "august", "september", "oktoober", "november", "detsember"], STANDALONEMONTHS:["jaanuar", "veebruar", "m\u00e4rts", "aprill", "mai", "juuni", "juuli", 
"august", "september", "oktoober", "november", "detsember"], SHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], STANDALONESHORTMONTHS:["jaan", "veebr", "m\u00e4rts", "apr", "mai", "juuni", "juuli", "aug", "sept", "okt", "nov", "dets"], WEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", "kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], STANDALONEWEEKDAYS:["p\u00fchap\u00e4ev", "esmasp\u00e4ev", "teisip\u00e4ev", 
"kolmap\u00e4ev", "neljap\u00e4ev", "reede", "laup\u00e4ev"], SHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONESHORTWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], NARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], STANDALONENARROWWEEKDAYS:["P", "E", "T", "K", "N", "R", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.yy"], TIMEFORMATS:["H:mm.ss zzzz", 
"H:mm.ss z", "H:mm.ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_eu = {ERAS:["K.a.", "K.o."], ERANAMES:["K.a.", "K.o."], NARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], STANDALONENARROWMONTHS:["U", "O", "M", "A", "M", "E", "U", "A", "I", "U", "A", "A"], MONTHS:["urtarrilak", "otsailak", "martxoak", "apirilak", "maiatzak", "ekainak", "uztailak", "abuztuak", "irailak", "urriak", "azaroak", "abenduak"], STANDALONEMONTHS:["Urtarrila", "Otsaila", "Martxoa", "Apirila", "Maiatza", "Ekaina", "Uztaila", "Abuztua", "Iraila", 
"Urria", "Azaroa", "Abendua"], SHORTMONTHS:["urt.", "ots.", "mar.", "api.", "mai.", "eka.", "uzt.", "abu.", "ira.", "urr.", "aza.", "abe."], STANDALONESHORTMONTHS:["Urt.", "Ots.", "Mar.", "Api.", "Mai.", "Eka.", "Uzt.", "Abu.", "Ira.", "Urr.", "Aza.", "Abe."], WEEKDAYS:["igandea", "astelehena", "asteartea", "asteazkena", "osteguna", "ostirala", "larunbata"], STANDALONEWEEKDAYS:["Igandea", "Astelehena", "Asteartea", "Asteazkena", "Osteguna", "Ostirala", "Larunbata"], SHORTWEEKDAYS:["ig.", "al.", "ar.", 
"az.", "og.", "or.", "lr."], STANDALONESHORTWEEKDAYS:["Ig.", "Al.", "Ar.", "Az.", "Og.", "Or.", "Lr."], NARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], STANDALONENARROWWEEKDAYS:["I", "A", "A", "A", "O", "O", "L"], SHORTQUARTERS:["1Hh", "2Hh", "3Hh", "4Hh"], QUARTERS:["1. hiruhilekoa", "2. hiruhilekoa", "3. hiruhilekoa", "4. hiruhilekoa"], AMPMS:["AM", "PM"], DATEFORMATS:["y('e')'ko' MMMM d, EEEE", "y('e')'ko' MMMM d", "y MMM d", "y/MM/dd"], TIMEFORMATS:["HH:mm:ss (zzzz)", "HH:mm:ss (z)", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fa = {ZERODIGIT:1776, ERAS:["\u0642.\u0645.", "\u0645."], ERANAMES:["\u0642\u0628\u0644 \u0627\u0632 \u0645\u06cc\u0644\u0627\u062f", "\u0645\u06cc\u0644\u0627\u062f\u06cc"], NARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], STANDALONENARROWMONTHS:["\u0698", "\u0641", "\u0645", "\u0622", "\u0645", "\u0698", "\u0698", "\u0627", "\u0633", "\u0627", "\u0646", "\u062f"], MONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", 
"\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONEMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", 
"\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], SHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647\u0654", "\u0641\u0648\u0631\u06cc\u0647\u0654", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647\u0654", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647\u0654", 
"\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", "\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u0698\u0627\u0646\u0648\u06cc\u0647", "\u0641\u0648\u0631\u06cc\u0647", "\u0645\u0627\u0631\u0633", "\u0622\u0648\u0631\u06cc\u0644", "\u0645\u0647", "\u0698\u0648\u0626\u0646", "\u0698\u0648\u0626\u06cc\u0647", "\u0627\u0648\u062a", "\u0633\u067e\u062a\u0627\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0628\u0631", 
"\u0646\u0648\u0627\u0645\u0628\u0631", "\u062f\u0633\u0627\u0645\u0628\u0631"], WEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONEWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", 
"\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], SHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", "\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], STANDALONESHORTWEEKDAYS:["\u06cc\u06a9\u0634\u0646\u0628\u0647", 
"\u062f\u0648\u0634\u0646\u0628\u0647", "\u0633\u0647\u200c\u0634\u0646\u0628\u0647", "\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647", "\u067e\u0646\u062c\u0634\u0646\u0628\u0647", "\u062c\u0645\u0639\u0647", "\u0634\u0646\u0628\u0647"], NARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], STANDALONENARROWWEEKDAYS:["\u06cc", "\u062f", "\u0633", "\u0686", "\u067e", "\u062c", "\u0634"], SHORTQUARTERS:["\u0633\u200c\u0645\u06f1", "\u0633\u200c\u0645\u06f2", "\u0633\u200c\u0645\u06f3", 
"\u0633\u200c\u0645\u06f4"], QUARTERS:["\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0627\u0648\u0644", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u062f\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0633\u0648\u0645", "\u0633\u0647\u200c\u0645\u0627\u0647\u0647\u0654 \u0686\u0647\u0627\u0631\u0645"], AMPMS:["\u0642\u0628\u0644\u200c\u0627\u0632\u0638\u0647\u0631", "\u0628\u0639\u062f\u0627\u0632\u0638\u0647\u0631"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", 
"y/M/d"], TIMEFORMATS:["H:mm:ss (zzzz)", "H:mm:ss (z)", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c \u0633\u0627\u0639\u062a {0}", "{1}\u060c\u200f {0}", "{1}\u060c\u200f {0}"], FIRSTDAYOFWEEK:5, WEEKENDRANGE:[4, 4], FIRSTWEEKCUTOFFDAY:4};
goog.i18n.DateTimeSymbols_fi = {ERAS:["eKr.", "jKr."], ERANAMES:["ennen Kristuksen syntym\u00e4\u00e4", "j\u00e4lkeen Kristuksen syntym\u00e4n"], NARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], STANDALONENARROWMONTHS:["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"], MONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONEMONTHS:["tammikuu", 
"helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kes\u00e4kuu", "hein\u00e4kuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"], SHORTMONTHS:["tammikuuta", "helmikuuta", "maaliskuuta", "huhtikuuta", "toukokuuta", "kes\u00e4kuuta", "hein\u00e4kuuta", "elokuuta", "syyskuuta", "lokakuuta", "marraskuuta", "joulukuuta"], STANDALONESHORTMONTHS:["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], WEEKDAYS:["sunnuntaina", "maanantaina", 
"tiistaina", "keskiviikkona", "torstaina", "perjantaina", "lauantaina"], STANDALONEWEEKDAYS:["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"], SHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], STANDALONESHORTWEEKDAYS:["su", "ma", "ti", "ke", "to", "pe", "la"], NARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "K", "T", "P", "L"], SHORTQUARTERS:["1. nelj.", "2. nelj.", "3. nelj.", "4. nelj."], QUARTERS:["1. nelj\u00e4nnes", 
"2. nelj\u00e4nnes", "3. nelj\u00e4nnes", "4. nelj\u00e4nnes"], AMPMS:["ap.", "ip."], DATEFORMATS:["cccc d. MMMM y", "d. MMMM y", "d.M.y", "d.M.y"], TIMEFORMATS:["H.mm.ss zzzz", "H.mm.ss z", "H.mm.ss", "H.mm"], DATETIMEFORMATS:["{1} 'klo' {0}", "{1} 'klo' {0}", "{1} 'klo' {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fil = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'nang' {0}", "{1} 'nang' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_fr = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["Janvier", "F\u00e9vrier", "Mars", "Avril", 
"Mai", "Juin", "Juillet", "Ao\u00fbt", "Septembre", "Octobre", "Novembre", "D\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["Janv.", "F\u00e9vr.", "Mars", "Avr.", "Mai", "Juin", "Juil.", "Ao\u00fbt", "Sept.", "Oct.", "Nov.", "D\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["Dimanche", "Lundi", "Mardi", "Mercredi", 
"Jeudi", "Vendredi", "Samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["Dim.", "Lun.", "Mar.", "Mer.", "Jeu.", "Ven.", "Sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_fr_CA = {ERAS:["av. J.-C.", "ap. J.-C."], ERANAMES:["avant J\u00e9sus-Christ", "apr\u00e8s J\u00e9sus-Christ"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janvier", "f\u00e9vrier", "mars", "avril", "mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], STANDALONEMONTHS:["janvier", "f\u00e9vrier", "mars", "avril", 
"mai", "juin", "juillet", "ao\u00fbt", "septembre", "octobre", "novembre", "d\u00e9cembre"], SHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], STANDALONESHORTMONTHS:["janv.", "f\u00e9vr.", "mars", "avr.", "mai", "juin", "juil.", "ao\u00fbt", "sept.", "oct.", "nov.", "d\u00e9c."], WEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"], STANDALONEWEEKDAYS:["dimanche", "lundi", "mardi", "mercredi", 
"jeudi", "vendredi", "samedi"], SHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], STANDALONESHORTWEEKDAYS:["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1er trimestre", "2e trimestre", "3e trimestre", "4e trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "yy-MM-dd"], 
TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ga = {ERAS:["RC", "AD"], ERANAMES:["Roimh Chr\u00edost", "Anno Domini"], NARROWMONTHS:["E", "F", "M", "A", "B", "M", "I", "L", "M", "D", "S", "N"], STANDALONENARROWMONTHS:["E", "F", "M", "A", "B", "M", "I", "L", "M", "D", "S", "N"], MONTHS:["Ean\u00e1ir", "Feabhra", "M\u00e1rta", "Aibre\u00e1n", "Bealtaine", "Meitheamh", "I\u00fail", "L\u00fanasa", "Me\u00e1n F\u00f3mhair", "Deireadh F\u00f3mhair", "Samhain", "Nollaig"], STANDALONEMONTHS:["Ean\u00e1ir", "Feabhra", "M\u00e1rta", 
"Aibre\u00e1n", "Bealtaine", "Meitheamh", "I\u00fail", "L\u00fanasa", "Me\u00e1n F\u00f3mhair", "Deireadh F\u00f3mhair", "Samhain", "Nollaig"], SHORTMONTHS:["Ean", "Feabh", "M\u00e1rta", "Aib", "Beal", "Meith", "I\u00fail", "L\u00fan", "MF\u00f3mh", "DF\u00f3mh", "Samh", "Noll"], STANDALONESHORTMONTHS:["Ean", "Feabh", "M\u00e1rta", "Aib", "Beal", "Meith", "I\u00fail", "L\u00fan", "MF\u00f3mh", "DF\u00f3mh", "Samh", "Noll"], WEEKDAYS:["D\u00e9 Domhnaigh", "D\u00e9 Luain", "D\u00e9 M\u00e1irt", "D\u00e9 C\u00e9adaoin", 
"D\u00e9ardaoin", "D\u00e9 hAoine", "D\u00e9 Sathairn"], STANDALONEWEEKDAYS:["D\u00e9 Domhnaigh", "D\u00e9 Luain", "D\u00e9 M\u00e1irt", "D\u00e9 C\u00e9adaoin", "D\u00e9ardaoin", "D\u00e9 hAoine", "D\u00e9 Sathairn"], SHORTWEEKDAYS:["Domh", "Luan", "M\u00e1irt", "C\u00e9ad", "D\u00e9ar", "Aoine", "Sath"], STANDALONESHORTWEEKDAYS:["Domh", "Luan", "M\u00e1irt", "C\u00e9ad", "D\u00e9ar", "Aoine", "Sath"], NARROWWEEKDAYS:["D", "L", "M", "C", "D", "A", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "C", 
"D", "A", "S"], SHORTQUARTERS:["R1", "R2", "R3", "R4"], QUARTERS:["1\u00fa r\u00e1ithe", "2\u00fa r\u00e1ithe", "3\u00fa r\u00e1ithe", "4\u00fa r\u00e1ithe"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:2};
goog.i18n.DateTimeSymbols_gl = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "despois de Cristo"], NARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["X", "F", "M", "A", "M", "X", "X", "A", "S", "O", "N", "D"], MONTHS:["xaneiro", "febreiro", "marzo", "abril", "maio", "xu\u00f1o", "xullo", "agosto", "setembro", "outubro", "novembro", "decembro"], STANDALONEMONTHS:["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xu\u00f1o", "Xullo", "Agosto", 
"Setembro", "Outubro", "Novembro", "Decembro"], SHORTMONTHS:["xan", "feb", "mar", "abr", "mai", "xu\u00f1", "xul", "ago", "set", "out", "nov", "dec"], STANDALONESHORTMONTHS:["Xan", "Feb", "Mar", "Abr", "Mai", "Xu\u00f1", "Xul", "Ago", "Set", "Out", "Nov", "Dec"], WEEKDAYS:["domingo", "luns", "martes", "m\u00e9rcores", "xoves", "venres", "s\u00e1bado"], STANDALONEWEEKDAYS:["Domingo", "Luns", "Martes", "M\u00e9rcores", "Xoves", "Venres", "S\u00e1bado"], SHORTWEEKDAYS:["dom", "lun", "mar", "m\u00e9r", 
"xov", "ven", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["Dom", "Lun", "Mar", "M\u00e9r", "Xov", "Ven", "S\u00e1b"], NARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "X", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1o trimestre", "2o trimestre", "3o trimestre", "4o trimestre"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE dd MMMM y", "dd MMMM y", "d MMM, y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gsw = {ERAS:["v. Chr.", "n. Chr."], ERANAMES:["v. Chr.", "n. Chr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", "Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], STANDALONEMONTHS:["Januar", "Februar", "M\u00e4rz", "April", "Mai", "Juni", "Juli", "Auguscht", 
"Sept\u00e4mber", "Oktoober", "Nov\u00e4mber", "Dez\u00e4mber"], SHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], STANDALONESHORTMONTHS:["Jan", "Feb", "M\u00e4r", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"], WEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], STANDALONEWEEKDAYS:["Sunntig", "M\u00e4\u00e4ntig", "Ziischtig", "Mittwuch", "Dunschtig", "Friitig", "Samschtig"], 
SHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], STANDALONESHORTWEEKDAYS:["Su.", "M\u00e4.", "Zi.", "Mi.", "Du.", "Fr.", "Sa."], NARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "D", "M", "D", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], AMPMS:["vorm.", "nam."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "dd.MM.y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", 
"HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_gu = {ERAS:["\u0a88\u0ab8\u0ac1\u0aa8\u0abe \u0a9c\u0aa8\u0acd\u0aae \u0aaa\u0ab9\u0ac7\u0ab2\u0abe", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], ERANAMES:["\u0a88\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8 \u0aaa\u0ac2\u0ab0\u0acd\u0ab5\u0ac7", "\u0a87\u0ab8\u0ab5\u0ac0\u0ab8\u0aa8"], NARROWMONTHS:["\u0a9c\u0abe", "\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], STANDALONENARROWMONTHS:["\u0a9c\u0abe", 
"\u0aab\u0ac7", "\u0aae\u0abe", "\u0a8f", "\u0aae\u0ac7", "\u0a9c\u0ac2", "\u0a9c\u0ac1", "\u0a91", "\u0ab8", "\u0a91", "\u0aa8", "\u0aa1\u0abf"], MONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], STANDALONEMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1\u0a86\u0ab0\u0ac0", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1\u0a86\u0ab0\u0ac0", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7\u0aae\u0acd\u0aac\u0ab0", 
"\u0a91\u0a95\u0acd\u0a9f\u0acb\u0aac\u0ab0", "\u0aa8\u0ab5\u0ac7\u0aae\u0acd\u0aac\u0ab0", "\u0aa1\u0abf\u0ab8\u0ac7\u0aae\u0acd\u0aac\u0ab0"], SHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], 
STANDALONESHORTMONTHS:["\u0a9c\u0abe\u0aa8\u0acd\u0aaf\u0ac1", "\u0aab\u0ac7\u0aac\u0acd\u0ab0\u0ac1", "\u0aae\u0abe\u0ab0\u0acd\u0a9a", "\u0a8f\u0aaa\u0acd\u0ab0\u0abf\u0ab2", "\u0aae\u0ac7", "\u0a9c\u0ac2\u0aa8", "\u0a9c\u0ac1\u0ab2\u0abe\u0a88", "\u0a91\u0a97\u0ab8\u0acd\u0a9f", "\u0ab8\u0aaa\u0acd\u0a9f\u0ac7", "\u0a91\u0a95\u0acd\u0a9f\u0acb", "\u0aa8\u0ab5\u0ac7", "\u0aa1\u0abf\u0ab8\u0ac7"], WEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", 
"\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], STANDALONEWEEKDAYS:["\u0ab0\u0ab5\u0abf\u0ab5\u0abe\u0ab0", "\u0ab8\u0acb\u0aae\u0ab5\u0abe\u0ab0", "\u0aae\u0a82\u0a97\u0ab3\u0ab5\u0abe\u0ab0", "\u0aac\u0ac1\u0aa7\u0ab5\u0abe\u0ab0", "\u0a97\u0ac1\u0ab0\u0ac1\u0ab5\u0abe\u0ab0", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0\u0ab5\u0abe\u0ab0", "\u0ab6\u0aa8\u0abf\u0ab5\u0abe\u0ab0"], 
SHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], STANDALONESHORTWEEKDAYS:["\u0ab0\u0ab5\u0abf", "\u0ab8\u0acb\u0aae", "\u0aae\u0a82\u0a97\u0ab3", "\u0aac\u0ac1\u0aa7", "\u0a97\u0ac1\u0ab0\u0ac1", "\u0ab6\u0ac1\u0a95\u0acd\u0ab0", "\u0ab6\u0aa8\u0abf"], NARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", 
"\u0ab6"], STANDALONENARROWWEEKDAYS:["\u0ab0", "\u0ab8\u0acb", "\u0aae\u0a82", "\u0aac\u0ac1", "\u0a97\u0ac1", "\u0ab6\u0ac1", "\u0ab6"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u0aaa\u0ab9\u0ac7\u0ab2\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aac\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0aa4\u0acd\u0ab0\u0ac0\u0a9c\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8", "\u0a9a\u0acb\u0aa5\u0acb \u0aa4\u0acd\u0ab0\u0abf\u0aae\u0abe\u0ab8"], AMPMS:["AM", 
"PM"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_haw = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", "Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], STANDALONEMONTHS:["Ianuali", "Pepeluali", "Malaki", "\u02bbApelila", "Mei", "Iune", "Iulai", "\u02bbAukake", 
"Kepakemapa", "\u02bbOkakopa", "Nowemapa", "Kekemapa"], SHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], STANDALONESHORTMONTHS:["Ian.", "Pep.", "Mal.", "\u02bbAp.", "Mei", "Iun.", "Iul.", "\u02bbAu.", "Kep.", "\u02bbOk.", "Now.", "Kek."], WEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", "Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], STANDALONEWEEKDAYS:["L\u0101pule", "Po\u02bbakahi", "Po\u02bbalua", 
"Po\u02bbakolu", "Po\u02bbah\u0101", "Po\u02bbalima", "Po\u02bbaono"], SHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], STANDALONESHORTWEEKDAYS:["LP", "P1", "P2", "P3", "P4", "P5", "P6"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_he = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", 
"\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", 
"\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", 
"\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", 
"\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], 
QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hi = {ERAS:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u094d\u0935\u0940"], ERANAMES:["\u0908\u0938\u093e-\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940 \u0938\u0928"], NARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", "\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], STANDALONENARROWMONTHS:["\u091c", "\u092b\u093c", "\u092e\u093e", "\u0905", "\u092e", "\u091c\u0942", 
"\u091c\u0941", "\u0905", "\u0938\u093f", "\u0905", "\u0928", "\u0926\u093f"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u093c\u0930\u0935\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u0924", "\u0938\u093f\u0924\u0902\u092c\u0930", "\u0905\u0915\u094d\u0924\u0942\u092c\u0930", "\u0928\u0935\u0902\u092c\u0930", "\u0926\u093f\u0938\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u0928\u0970", "\u092b\u093c\u0930\u0970", "\u092e\u093e\u0930\u094d\u091a", 
"\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0970", "\u0905\u0917\u0970", "\u0938\u093f\u0924\u0970", "\u0905\u0915\u094d\u0924\u0942\u0970", "\u0928\u0935\u0970", "\u0926\u093f\u0938\u0970"], STANDALONESHORTMONTHS:["\u091c\u0928\u0970", "\u092b\u093c\u0930\u0970", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u0948\u0932", "\u092e\u0908", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0970", "\u0905\u0917\u0970", "\u0938\u093f\u0924\u0970", 
"\u0905\u0915\u094d\u0924\u0942\u0970", "\u0928\u0935\u0970", "\u0926\u093f\u0938\u0970"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", 
"\u092e\u0902\u0917\u0932\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0932", 
"\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f1", "\u0924\u093f2", "\u0924\u093f3", "\u0924\u093f4"], QUARTERS:["\u092a\u0939\u0932\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", 
"\u0926\u0942\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0940\u0938\u0930\u0940 \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u094c\u0925\u0940 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd/MM/y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u0915\u094b {0}", "{1} \u0915\u094b {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_hr = {ERAS:["pr. Kr.", "p. Kr."], ERANAMES:["Prije Krista", "Poslije Krista"], NARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], STANDALONENARROWMONTHS:["1.", "2.", "3.", "4.", "5.", "6.", "7.", "8.", "9.", "10.", "11.", "12."], MONTHS:["sije\u010dnja", "velja\u010de", "o\u017eujka", "travnja", "svibnja", "lipnja", "srpnja", "kolovoza", "rujna", "listopada", "studenoga", "prosinca"], STANDALONEMONTHS:["sije\u010danj", "velja\u010da", 
"o\u017eujak", "travanj", "svibanj", "lipanj", "srpanj", "kolovoz", "rujan", "listopad", "studeni", "prosinac"], SHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], STANDALONESHORTMONTHS:["sij", "velj", "o\u017eu", "tra", "svi", "lip", "srp", "kol", "ruj", "lis", "stu", "pro"], WEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", "petak", "subota"], STANDALONEWEEKDAYS:["nedjelja", "ponedjeljak", "utorak", "srijeda", "\u010detvrtak", 
"petak", "subota"], SHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], STANDALONESHORTWEEKDAYS:["ned", "pon", "uto", "sri", "\u010det", "pet", "sub"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u010c", "P", "S"], STANDALONENARROWWEEKDAYS:["n", "p", "u", "s", "\u010d", "p", "s"], SHORTQUARTERS:["1kv", "2kv", "3kv", "4kv"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d. MMMM y.", "d. MMMM y.", "d. MMM y.", "dd.MM.y."], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'u' {0}", "{1} 'u' {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_hu = {ERAS:["i. e.", "i. sz."], ERANAMES:["id\u0151sz\u00e1m\u00edt\u00e1sunk el\u0151tt", "id\u0151sz\u00e1m\u00edt\u00e1sunk szerint"], NARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "\u00c1", "M", "J", "J", "A", "Sz", "O", "N", "D"], MONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", 
"december"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "m\u00e1rcius", "\u00e1prilis", "m\u00e1jus", "j\u00fanius", "j\u00falius", "augusztus", "szeptember", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan.", "febr.", "m\u00e1rc.", "\u00e1pr.", "m\u00e1j.", "j\u00fan.", "j\u00fal.", "aug.", "szept.", "okt.", "nov.", "dec."], WEEKDAYS:["vas\u00e1rnap", 
"h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], STANDALONEWEEKDAYS:["vas\u00e1rnap", "h\u00e9tf\u0151", "kedd", "szerda", "cs\u00fct\u00f6rt\u00f6k", "p\u00e9ntek", "szombat"], SHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], STANDALONESHORTWEEKDAYS:["V", "H", "K", "Sze", "Cs", "P", "Szo"], NARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], STANDALONENARROWWEEKDAYS:["V", "H", "K", "Sz", "Cs", "P", "Sz"], SHORTQUARTERS:["N1", "N2", "N3", "N4"], 
QUARTERS:["I. negyed\u00e9v", "II. negyed\u00e9v", "III. negyed\u00e9v", "IV. negyed\u00e9v"], AMPMS:["de.", "du."], DATEFORMATS:["y. MMMM d., EEEE", "y. MMMM d.", "y. MMM d.", "y. MM. dd."], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_hy = {ERAS:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], ERANAMES:["\u0574.\u0569.\u0561.", "\u0574.\u0569."], NARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], STANDALONENARROWMONTHS:["\u0540", "\u0553", "\u0544", "\u0531", "\u0544", "\u0540", "\u0540", "\u0555", "\u054d", "\u0540", "\u0546", "\u0534"], MONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580\u056b", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580\u056b", 
"\u0574\u0561\u0580\u057f\u056b", "\u0561\u057a\u0580\u056b\u056c\u056b", "\u0574\u0561\u0575\u056b\u057d\u056b", "\u0570\u0578\u0582\u0576\u056b\u057d\u056b", "\u0570\u0578\u0582\u056c\u056b\u057d\u056b", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d\u056b", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580\u056b", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580\u056b"], 
STANDALONEMONTHS:["\u0570\u0578\u0582\u0576\u057e\u0561\u0580", "\u0583\u0565\u057f\u0580\u057e\u0561\u0580", "\u0574\u0561\u0580\u057f", "\u0561\u057a\u0580\u056b\u056c", "\u0574\u0561\u0575\u056b\u057d", "\u0570\u0578\u0582\u0576\u056b\u057d", "\u0570\u0578\u0582\u056c\u056b\u057d", "\u0585\u0563\u0578\u057d\u057f\u0578\u057d", "\u057d\u0565\u057a\u057f\u0565\u0574\u0562\u0565\u0580", "\u0570\u0578\u056f\u057f\u0565\u0574\u0562\u0565\u0580", "\u0576\u0578\u0575\u0565\u0574\u0562\u0565\u0580", "\u0564\u0565\u056f\u057f\u0565\u0574\u0562\u0565\u0580"], 
SHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u0565\u057a", "\u0570\u0578\u056f", "\u0576\u0578\u0575", "\u0564\u0565\u056f"], STANDALONESHORTMONTHS:["\u0570\u0576\u057e", "\u0583\u057f\u057e", "\u0574\u0580\u057f", "\u0561\u057a\u0580", "\u0574\u0575\u057d", "\u0570\u0576\u057d", "\u0570\u056c\u057d", "\u0585\u0563\u057d", "\u057d\u0565\u057a", "\u0570\u0578\u056f", 
"\u0576\u0578\u0575", "\u0564\u0565\u056f"], WEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", "\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], STANDALONEWEEKDAYS:["\u056f\u056b\u0580\u0561\u056f\u056b", "\u0565\u0580\u056f\u0578\u0582\u0577\u0561\u0562\u0569\u056b", 
"\u0565\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0579\u0578\u0580\u0565\u0584\u0577\u0561\u0562\u0569\u056b", "\u0570\u056b\u0576\u0563\u0577\u0561\u0562\u0569\u056b", "\u0578\u0582\u0580\u0562\u0561\u0569", "\u0577\u0561\u0562\u0561\u0569"], SHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", "\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], STANDALONESHORTWEEKDAYS:["\u056f\u056b\u0580", "\u0565\u0580\u056f", "\u0565\u0580\u0584", 
"\u0579\u0580\u0584", "\u0570\u0576\u0563", "\u0578\u0582\u0580", "\u0577\u0562\u0569"], NARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], STANDALONENARROWWEEKDAYS:["\u053f", "\u0535", "\u0535", "\u0549", "\u0540", "\u0548\u0582", "\u0547"], SHORTQUARTERS:["1-\u056b\u0576 \u0565\u057c\u0574\u057d.", "2-\u0580\u0564 \u0565\u057c\u0574\u057d.", "3-\u0580\u0564 \u0565\u057c\u0574\u057d.", "4-\u0580\u0564 \u0565\u057c\u0574\u057d."], QUARTERS:["1-\u056b\u0576 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", 
"2-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "3-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f", "4-\u0580\u0564 \u0565\u057c\u0561\u0574\u057d\u0575\u0561\u056f"], AMPMS:["\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0561\u057c\u0561\u057b", "\u056f\u0565\u057d\u0585\u0580\u056b\u0581 \u0570\u0565\u057f\u0578"], DATEFORMATS:["y\u0569. MMMM d, EEEE", "dd MMMM, y\u0569.", "dd MMM, y\u0569.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss, zzzz", "H:mm:ss, z", "H:mm:ss", "H:mm"], 
DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_id = {ERAS:["SM", "M"], ERANAMES:["Sebelum Masehi", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", 
"Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", 
"Jum", "Sab"], NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_in = {ERAS:["SM", "M"], ERANAMES:["Sebelum Masehi", "M"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"], STANDALONEMONTHS:["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", 
"Desember"], SHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Agt", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], STANDALONEWEEKDAYS:["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"], SHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Min", "Sen", "Sel", "Rab", "Kam", 
"Jum", "Sab"], NARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["M", "S", "S", "R", "K", "J", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["Kuartal ke-1", "Kuartal ke-2", "Kuartal ke-3", "Kuartal ke-4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM y", "d MMMM y", "d MMM y", "dd/MM/yy"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_is = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["fyrir Krist", "eftir Krist"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "\u00c1", "S", "O", "N", "D"], MONTHS:["jan\u00faar", "febr\u00faar", "mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], STANDALONEMONTHS:["jan\u00faar", "febr\u00faar", 
"mars", "apr\u00edl", "ma\u00ed", "j\u00fan\u00ed", "j\u00fal\u00ed", "\u00e1g\u00fast", "september", "okt\u00f3ber", "n\u00f3vember", "desember"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], STANDALONESHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "ma\u00ed", "j\u00fan.", "j\u00fal.", "\u00e1g\u00fa.", "sep.", "okt.", "n\u00f3v.", "des."], WEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", 
"mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], STANDALONEWEEKDAYS:["sunnudagur", "m\u00e1nudagur", "\u00feri\u00f0judagur", "mi\u00f0vikudagur", "fimmtudagur", "f\u00f6studagur", "laugardagur"], SHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], STANDALONESHORTWEEKDAYS:["sun.", "m\u00e1n.", "\u00feri.", "mi\u00f0.", "fim.", "f\u00f6s.", "lau."], NARROWWEEKDAYS:["S", "M", "\u00de", "M", "F", "F", "L"], STANDALONENARROWWEEKDAYS:["S", 
"M", "\u00de", "M", "F", "F", "L"], SHORTQUARTERS:["F1", "F2", "F3", "F4"], QUARTERS:["1. fj\u00f3r\u00f0ungur", "2. fj\u00f3r\u00f0ungur", "3. fj\u00f3r\u00f0ungur", "4. fj\u00f3r\u00f0ungur"], AMPMS:["f.h.", "e.h."], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", "d. MMM y", "d.M.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'kl.' {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_it = {ERAS:["aC", "dC"], ERANAMES:["a.C.", "d.C."], NARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"], MONTHS:["gennaio", "febbraio", "marzo", "aprile", "maggio", "giugno", "luglio", "agosto", "settembre", "ottobre", "novembre", "dicembre"], STANDALONEMONTHS:["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", 
"Novembre", "Dicembre"], SHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], STANDALONESHORTMONTHS:["gen", "feb", "mar", "apr", "mag", "giu", "lug", "ago", "set", "ott", "nov", "dic"], WEEKDAYS:["domenica", "luned\u00ec", "marted\u00ec", "mercoled\u00ec", "gioved\u00ec", "venerd\u00ec", "sabato"], STANDALONEWEEKDAYS:["Domenica", "Luned\u00ec", "Marted\u00ec", "Mercoled\u00ec", "Gioved\u00ec", "Venerd\u00ec", "Sabato"], SHORTWEEKDAYS:["dom", "lun", "mar", 
"mer", "gio", "ven", "sab"], STANDALONESHORTWEEKDAYS:["dom", "lun", "mar", "mer", "gio", "ven", "sab"], NARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "G", "V", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "dd MMM y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_iw = {ERAS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e1", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], ERANAMES:["\u05dc\u05e4\u05e0\u05d9 \u05d4\u05e1\u05e4\u05d9\u05e8\u05d4", "\u05dc\u05e1\u05e4\u05d9\u05e8\u05d4"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", 
"\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], STANDALONEMONTHS:["\u05d9\u05e0\u05d5\u05d0\u05e8", "\u05e4\u05d1\u05e8\u05d5\u05d0\u05e8", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05d9\u05dc", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", 
"\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05d5\u05e1\u05d8", "\u05e1\u05e4\u05d8\u05de\u05d1\u05e8", "\u05d0\u05d5\u05e7\u05d8\u05d5\u05d1\u05e8", "\u05e0\u05d5\u05d1\u05de\u05d1\u05e8", "\u05d3\u05e6\u05de\u05d1\u05e8"], SHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", 
"\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], STANDALONESHORTMONTHS:["\u05d9\u05e0\u05d5\u05f3", "\u05e4\u05d1\u05e8\u05f3", "\u05de\u05e8\u05e5", "\u05d0\u05e4\u05e8\u05f3", "\u05de\u05d0\u05d9", "\u05d9\u05d5\u05e0\u05d9", "\u05d9\u05d5\u05dc\u05d9", "\u05d0\u05d5\u05d2\u05f3", "\u05e1\u05e4\u05d8\u05f3", "\u05d0\u05d5\u05e7\u05f3", "\u05e0\u05d5\u05d1\u05f3", "\u05d3\u05e6\u05de\u05f3"], WEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], STANDALONEWEEKDAYS:["\u05d9\u05d5\u05dd \u05e8\u05d0\u05e9\u05d5\u05df", "\u05d9\u05d5\u05dd \u05e9\u05e0\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05dc\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9", "\u05d9\u05d5\u05dd \u05d7\u05de\u05d9\u05e9\u05d9", 
"\u05d9\u05d5\u05dd \u05e9\u05d9\u05e9\u05d9", "\u05d9\u05d5\u05dd \u05e9\u05d1\u05ea"], SHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", "\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], STANDALONESHORTWEEKDAYS:["\u05d9\u05d5\u05dd \u05d0\u05f3", "\u05d9\u05d5\u05dd \u05d1\u05f3", "\u05d9\u05d5\u05dd \u05d2\u05f3", "\u05d9\u05d5\u05dd \u05d3\u05f3", 
"\u05d9\u05d5\u05dd \u05d4\u05f3", "\u05d9\u05d5\u05dd \u05d5\u05f3", "\u05e9\u05d1\u05ea"], NARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], STANDALONENARROWWEEKDAYS:["\u05d0\u05f3", "\u05d1\u05f3", "\u05d2\u05f3", "\u05d3\u05f3", "\u05d4\u05f3", "\u05d5\u05f3", "\u05e9\u05f3"], SHORTQUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], 
QUARTERS:["\u05e8\u05d1\u05e2\u05d5\u05df 1", "\u05e8\u05d1\u05e2\u05d5\u05df 2", "\u05e8\u05d1\u05e2\u05d5\u05df 3", "\u05e8\u05d1\u05e2\u05d5\u05df 4"], AMPMS:["\u05dc\u05e4\u05e0\u05d4\u05f4\u05e6", "\u05d0\u05d7\u05d4\u05f4\u05e6"], DATEFORMATS:["EEEE, d \u05d1MMMM y", "d \u05d1MMMM y", "d \u05d1MMM y", "d.M.y"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1} \u05d1\u05e9\u05e2\u05d4 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[4, 5], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ja = {ERAS:["\u7d00\u5143\u524d", "\u897f\u66a6"], ERANAMES:["\u7d00\u5143\u524d", "\u897f\u66a6"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", 
"6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", 
"\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], STANDALONEWEEKDAYS:["\u65e5\u66dc\u65e5", "\u6708\u66dc\u65e5", "\u706b\u66dc\u65e5", "\u6c34\u66dc\u65e5", "\u6728\u66dc\u65e5", "\u91d1\u66dc\u65e5", "\u571f\u66dc\u65e5"], SHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONESHORTWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], NARROWWEEKDAYS:["\u65e5", "\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], STANDALONENARROWWEEKDAYS:["\u65e5", 
"\u6708", "\u706b", "\u6c34", "\u6728", "\u91d1", "\u571f"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u56db\u534a\u671f", "\u7b2c2\u56db\u534a\u671f", "\u7b2c3\u56db\u534a\u671f", "\u7b2c4\u56db\u534a\u671f"], AMPMS:["\u5348\u524d", "\u5348\u5f8c"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y/MM/dd", "y/MM/dd"], TIMEFORMATS:["H\u6642mm\u5206ss\u79d2 zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ka = {ERAS:["\u10eb\u10d5. \u10ec.", "\u10d0\u10ee. \u10ec."], ERANAMES:["\u10eb\u10d5\u10d4\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7", "\u10d0\u10ee\u10d0\u10da\u10d8 \u10ec\u10d4\u10da\u10d7\u10d0\u10e6\u10e0\u10d8\u10ea\u10ee\u10d5\u10d8\u10d7"], NARROWMONTHS:["\u10d8", "\u10d7", "\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], STANDALONENARROWMONTHS:["\u10d8", "\u10d7", 
"\u10db", "\u10d0", "\u10db", "\u10d8", "\u10d8", "\u10d0", "\u10e1", "\u10dd", "\u10dc", "\u10d3"], MONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", "\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", 
"\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], STANDALONEMONTHS:["\u10d8\u10d0\u10dc\u10d5\u10d0\u10e0\u10d8", "\u10d7\u10d4\u10d1\u10d4\u10e0\u10d5\u10d0\u10da\u10d8", "\u10db\u10d0\u10e0\u10e2\u10d8", "\u10d0\u10de\u10e0\u10d8\u10da\u10d8", "\u10db\u10d0\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10dc\u10d8\u10e1\u10d8", "\u10d8\u10d5\u10da\u10d8\u10e1\u10d8", "\u10d0\u10d2\u10d5\u10d8\u10e1\u10e2\u10dd", 
"\u10e1\u10d4\u10e5\u10e2\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dd\u10e5\u10e2\u10dd\u10db\u10d1\u10d4\u10e0\u10d8", "\u10dc\u10dd\u10d4\u10db\u10d1\u10d4\u10e0\u10d8", "\u10d3\u10d4\u10d9\u10d4\u10db\u10d1\u10d4\u10e0\u10d8"], SHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], 
STANDALONESHORTMONTHS:["\u10d8\u10d0\u10dc", "\u10d7\u10d4\u10d1", "\u10db\u10d0\u10e0", "\u10d0\u10de\u10e0", "\u10db\u10d0\u10d8", "\u10d8\u10d5\u10dc", "\u10d8\u10d5\u10da", "\u10d0\u10d2\u10d5", "\u10e1\u10d4\u10e5", "\u10dd\u10e5\u10e2", "\u10dc\u10dd\u10d4", "\u10d3\u10d4\u10d9"], WEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", 
"\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], STANDALONEWEEKDAYS:["\u10d9\u10d5\u10d8\u10e0\u10d0", "\u10dd\u10e0\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10e1\u10d0\u10db\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10dd\u10d7\u10ee\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10ee\u10e3\u10d7\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8", "\u10de\u10d0\u10e0\u10d0\u10e1\u10d9\u10d4\u10d5\u10d8", "\u10e8\u10d0\u10d1\u10d0\u10d7\u10d8"], SHORTWEEKDAYS:["\u10d9\u10d5\u10d8", 
"\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], STANDALONESHORTWEEKDAYS:["\u10d9\u10d5\u10d8", "\u10dd\u10e0\u10e8", "\u10e1\u10d0\u10db", "\u10dd\u10d7\u10ee", "\u10ee\u10e3\u10d7", "\u10de\u10d0\u10e0", "\u10e8\u10d0\u10d1"], NARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], STANDALONENARROWWEEKDAYS:["\u10d9", "\u10dd", "\u10e1", "\u10dd", "\u10ee", "\u10de", "\u10e8"], SHORTQUARTERS:["I \u10d9\u10d5.", 
"II \u10d9\u10d5.", "III \u10d9\u10d5.", "IV \u10d9\u10d5."], QUARTERS:["I \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "II \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "III \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8", "IV \u10d9\u10d5\u10d0\u10e0\u10e2\u10d0\u10da\u10d8"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, dd MMMM, y", "d MMMM, y", "d MMM, y", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1}, {0}", "{1} {0}", 
"{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_kk = {ERAS:["\u0431.\u0437.\u0434.", "\u0431.\u0437."], ERANAMES:["\u0411\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437\u0493\u0430 \u0434\u0435\u0439\u0456\u043d", "\u0411\u0456\u0437\u0434\u0456\u04a3 \u0437\u0430\u043c\u0430\u043d\u044b\u043c\u044b\u0437"], NARROWMONTHS:["\u049a", "\u0410", "\u041d", "\u0421", "\u041c", "\u041c", "\u0428", "\u0422", "\u049a", "\u049a", "\u049a", "\u0416"], STANDALONENARROWMONTHS:["\u049a", "\u0410", 
"\u041d", "\u0421", "\u041c", "\u041c", "\u0428", "\u0422", "\u049a", "\u049a", "\u049a", "\u0416"], MONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", 
"\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], STANDALONEMONTHS:["\u049b\u0430\u04a3\u0442\u0430\u0440", "\u0430\u049b\u043f\u0430\u043d", "\u043d\u0430\u0443\u0440\u044b\u0437", "\u0441\u04d9\u0443\u0456\u0440", "\u043c\u0430\u043c\u044b\u0440", "\u043c\u0430\u0443\u0441\u044b\u043c", "\u0448\u0456\u043b\u0434\u0435", "\u0442\u0430\u043c\u044b\u0437", "\u049b\u044b\u0440\u043a\u04af\u0439\u0435\u043a", "\u049b\u0430\u0437\u0430\u043d", "\u049b\u0430\u0440\u0430\u0448\u0430", "\u0436\u0435\u043b\u0442\u043e\u049b\u0441\u0430\u043d"], 
SHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", "\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], STANDALONESHORTMONTHS:["\u049b\u0430\u04a3.", "\u0430\u049b\u043f.", "\u043d\u0430\u0443.", "\u0441\u04d9\u0443.", "\u043c\u0430\u043c.", "\u043c\u0430\u0443.", "\u0448\u0456\u043b.", "\u0442\u0430\u043c.", 
"\u049b\u044b\u0440.", "\u049b\u0430\u0437.", "\u049b\u0430\u0440.", "\u0436\u0435\u043b\u0442."], WEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", "\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0441\u0435\u043d\u0431\u0456", 
"\u0434\u04af\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0441\u04d9\u0440\u0441\u0435\u043d\u0431\u0456", "\u0431\u0435\u0439\u0441\u0435\u043d\u0431\u0456", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d\u0431\u0456"], SHORTWEEKDAYS:["\u0436\u0435\u043a", "\u0434\u04af\u0439", "\u0441\u0435\u0439", "\u0441\u04d9\u0440", "\u0431\u0435\u0439", "\u0436\u04b1\u043c\u0430", "\u0441\u0435\u043d"], STANDALONESHORTWEEKDAYS:["\u0436\u0435\u043a", "\u0434\u04af\u0439", 
"\u0441\u0435\u0439", "\u0441\u04d9\u0440", "\u0431\u0435\u0439", "\u0436\u04b1\u043c\u0430", "\u0441\u0431."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0421", "\u0421", "\u0411", "\u0416", "\u0421"], SHORTQUARTERS:["\u04221", "\u04222", "\u04223", "\u04224"], QUARTERS:["1-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "2-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", "3-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d", 
"4-\u0456\u043d\u0448\u0456 \u0442\u043e\u049b\u0441\u0430\u043d"], AMPMS:["\u0442\u0430\u04a3\u0435\u0440\u0442\u0435\u04a3\u0433\u0456", "\u0442\u04af\u0441\u0442\u0435\u043d \u043a\u0435\u0439\u0456\u043d\u0433\u0456"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "y, dd-MMM", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_km = {ERAS:["\u1798\u17bb\u1793 \u1782.\u179f.", "\u1782.\u179f."], ERANAMES:["\u1798\u17bb\u1793\u200b\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787", "\u1782\u17d2\u179a\u17b7\u179f\u17d2\u178f\u179f\u1780\u179a\u17b6\u1787"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", 
"\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONEMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", 
"\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], SHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", 
"\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", "\u1792\u17d2\u1793\u17bc"], STANDALONESHORTMONTHS:["\u1798\u1780\u179a\u17b6", "\u1780\u17bb\u1798\u17d2\u1797\u17c8", "\u1798\u17b8\u1793\u17b6", "\u1798\u17c1\u179f\u17b6", "\u17a7\u179f\u1797\u17b6", "\u1798\u17b7\u1790\u17bb\u1793\u17b6", "\u1780\u1780\u17d2\u1780\u178a\u17b6", "\u179f\u17b8\u17a0\u17b6", "\u1780\u1789\u17d2\u1789\u17b6", "\u178f\u17bb\u179b\u17b6", "\u179c\u17b7\u1785\u17d2\u1786\u17b7\u1780\u17b6", 
"\u1792\u17d2\u1793\u17bc"], WEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONEWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", 
"\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], SHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", "\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], STANDALONESHORTWEEKDAYS:["\u17a2\u17b6\u1791\u17b7\u178f\u17d2\u1799", "\u1785\u1793\u17d2\u1791", "\u17a2\u1784\u17d2\u1782\u17b6\u179a", "\u1796\u17bb\u1792", 
"\u1796\u17d2\u179a\u17a0\u179f\u17d2\u1794\u178f\u17b7\u17cd", "\u179f\u17bb\u1780\u17d2\u179a", "\u179f\u17c5\u179a\u17cd"], NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], 
QUARTERS:["\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e1", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e2", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e3", "\u178f\u17d2\u179a\u17b8\u1798\u17b6\u179f\u1791\u17b8 \u17e4"], AMPMS:["\u1796\u17d2\u179a\u17b9\u1780", "\u179b\u17d2\u1784\u17b6\u1785"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u1793\u17c5 {0}", 
"{1} \u1793\u17c5 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_kn = {ERAS:["\u0c95\u0ccd\u0cb0\u0cbf.\u0caa\u0cc2", "\u0c95\u0ccd\u0cb0\u0cbf.\u0cb6"], ERANAMES:["\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0caa\u0cc2\u0cb0\u0ccd\u0cb5", "\u0c95\u0ccd\u0cb0\u0cbf\u0cb8\u0ccd\u0ca4 \u0cb6\u0c95"], NARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", "\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], STANDALONENARROWMONTHS:["\u0c9c", "\u0cab\u0cc6", "\u0cae\u0cbe", 
"\u0c8f", "\u0cae\u0cc7", "\u0c9c\u0cc2", "\u0c9c\u0cc1", "\u0c86", "\u0cb8\u0cc6", "\u0c85", "\u0ca8", "\u0ca1\u0cbf"], MONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", 
"\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], STANDALONEMONTHS:["\u0c9c\u0ca8\u0cb5\u0cb0\u0cbf", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0\u0cb5\u0cb0\u0cbf", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf\u0cb2\u0ccd", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97\u0cb8\u0ccd\u0c9f\u0ccd", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb\u0cac\u0cb0\u0ccd", 
"\u0ca8\u0cb5\u0cc6\u0c82\u0cac\u0cb0\u0ccd", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82\u0cac\u0cb0\u0ccd"], SHORTMONTHS:["\u0c9c\u0ca8", "\u0cab\u0cc6\u0cac\u0ccd\u0cb0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb", "\u0ca8\u0cb5\u0cc6\u0c82", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82"], STANDALONESHORTMONTHS:["\u0c9c\u0ca8", 
"\u0cab\u0cc6\u0cac\u0ccd\u0cb0", "\u0cae\u0cbe\u0cb0\u0ccd\u0c9a\u0ccd", "\u0c8f\u0caa\u0ccd\u0cb0\u0cbf", "\u0cae\u0cc7", "\u0c9c\u0cc2\u0ca8\u0ccd", "\u0c9c\u0cc1\u0cb2\u0cc8", "\u0c86\u0c97", "\u0cb8\u0cc6\u0caa\u0ccd\u0c9f\u0cc6\u0c82", "\u0c85\u0c95\u0ccd\u0c9f\u0ccb", "\u0ca8\u0cb5\u0cc6\u0c82", "\u0ca1\u0cbf\u0cb8\u0cc6\u0c82"], WEEKDAYS:["\u0cad\u0cbe\u0ca8\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", 
"\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], STANDALONEWEEKDAYS:["\u0cad\u0cbe\u0ca8\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb8\u0ccb\u0cae\u0cb5\u0cbe\u0cb0", "\u0cae\u0c82\u0c97\u0cb3\u0cb5\u0cbe\u0cb0", "\u0cac\u0cc1\u0ca7\u0cb5\u0cbe\u0cb0", "\u0c97\u0cc1\u0cb0\u0cc1\u0cb5\u0cbe\u0cb0", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0\u0cb5\u0cbe\u0cb0", "\u0cb6\u0ca8\u0cbf\u0cb5\u0cbe\u0cb0"], SHORTWEEKDAYS:["\u0cad\u0cbe\u0ca8\u0cc1", 
"\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], STANDALONESHORTWEEKDAYS:["\u0cad\u0cbe\u0ca8\u0cc1", "\u0cb8\u0ccb\u0cae", "\u0cae\u0c82\u0c97\u0cb3", "\u0cac\u0cc1\u0ca7", "\u0c97\u0cc1\u0cb0\u0cc1", "\u0cb6\u0cc1\u0c95\u0ccd\u0cb0", "\u0cb6\u0ca8\u0cbf"], NARROWWEEKDAYS:["\u0cad\u0cbe", "\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], STANDALONENARROWWEEKDAYS:["\u0cad\u0cbe", 
"\u0cb8\u0ccb", "\u0cae\u0c82", "\u0cac\u0cc1", "\u0c97\u0cc1", "\u0cb6\u0cc1", "\u0cb6"], SHORTQUARTERS:["\u0ca4\u0ccd\u0cb0\u0cc8 1", "\u0ca4\u0ccd\u0cb0\u0cc8 2", "\u0ca4\u0ccd\u0cb0\u0cc8 3", "\u0ca4\u0ccd\u0cb0\u0cc8 4"], QUARTERS:["1\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "2\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "3\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95", "4\u0ca8\u0cc7 \u0ca4\u0ccd\u0cb0\u0cc8\u0cae\u0cbe\u0cb8\u0cbf\u0c95"], 
AMPMS:["\u0caa\u0cc2\u0cb0\u0ccd\u0cb5\u0cbe\u0cb9\u0ccd\u0ca8", "\u0c85\u0caa\u0cb0\u0cbe\u0cb9\u0ccd\u0ca8"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["hh:mm:ss a zzzz", "hh:mm:ss a z", "hh:mm:ss a", "hh:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ko = {ERAS:["\uae30\uc6d0\uc804", "\uc11c\uae30"], ERANAMES:["\uae30\uc6d0\uc804", "\uc11c\uae30"], NARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONENARROWMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], MONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", 
"7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONEMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], SHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", "11\uc6d4", "12\uc6d4"], STANDALONESHORTMONTHS:["1\uc6d4", "2\uc6d4", "3\uc6d4", "4\uc6d4", "5\uc6d4", "6\uc6d4", "7\uc6d4", "8\uc6d4", "9\uc6d4", "10\uc6d4", 
"11\uc6d4", "12\uc6d4"], WEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], STANDALONEWEEKDAYS:["\uc77c\uc694\uc77c", "\uc6d4\uc694\uc77c", "\ud654\uc694\uc77c", "\uc218\uc694\uc77c", "\ubaa9\uc694\uc77c", "\uae08\uc694\uc77c", "\ud1a0\uc694\uc77c"], SHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONESHORTWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", 
"\uc218", "\ubaa9", "\uae08", "\ud1a0"], NARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], STANDALONENARROWWEEKDAYS:["\uc77c", "\uc6d4", "\ud654", "\uc218", "\ubaa9", "\uae08", "\ud1a0"], SHORTQUARTERS:["1\ubd84\uae30", "2\ubd84\uae30", "3\ubd84\uae30", "4\ubd84\uae30"], QUARTERS:["\uc81c 1/4\ubd84\uae30", "\uc81c 2/4\ubd84\uae30", "\uc81c 3/4\ubd84\uae30", "\uc81c 4/4\ubd84\uae30"], AMPMS:["\uc624\uc804", "\uc624\ud6c4"], DATEFORMATS:["y\ub144 M\uc6d4 d\uc77c EEEE", 
"y\ub144 M\uc6d4 d\uc77c", "y. M. d.", "yy. M. d."], TIMEFORMATS:["a h\uc2dc m\ubd84 s\ucd08 zzzz", "a h\uc2dc m\ubd84 s\ucd08 z", "a h:mm:ss", "a h:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ky = {ERAS:["\u0431.\u0437.\u0447.", "\u0431.\u0437."], ERANAMES:["\u0431\u0438\u0437\u0434\u0438\u043d \u0437\u0430\u043c\u0430\u043d\u0433\u0430 \u0447\u0435\u0439\u0438\u043d", "\u0431\u0438\u0437\u0434\u0438\u043d \u0437\u0430\u043c\u0430\u043d"], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", 
"\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], 
STANDALONEMONTHS:["\u042f\u043d\u0432\u0430\u0440\u044c", "\u0424\u0435\u0432\u0440\u0430\u043b\u044c", "\u041c\u0430\u0440\u0442", "\u0410\u043f\u0440\u0435\u043b\u044c", "\u041c\u0430\u0439", "\u0418\u044e\u043d\u044c", "\u0418\u044e\u043b\u044c", "\u0410\u0432\u0433\u0443\u0441\u0442", "\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u041e\u043a\u0442\u044f\u0431\u0440\u044c", "\u041d\u043e\u044f\u0431\u0440\u044c", "\u0414\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", 
"\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d.", "\u0438\u044e\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043d.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u042f\u043d\u0432", "\u0424\u0435\u0432", "\u041c\u0430\u0440", "\u0410\u043f\u0440", "\u041c\u0430\u0439", "\u0418\u044e\u043d", "\u0418\u044e\u043b", "\u0410\u0432\u0433", "\u0421\u0435\u043d", "\u041e\u043a\u0442", "\u041d\u043e\u044f", 
"\u0414\u0435\u043a"], WEEKDAYS:["\u0436\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0434\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0448\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0448\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0431\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0436\u0443\u043c\u0430", "\u0438\u0448\u0435\u043c\u0431\u0438"], STANDALONEWEEKDAYS:["\u0436\u0435\u043a\u0448\u0435\u043c\u0431\u0438", "\u0434\u04af\u0439\u0448\u04e9\u043c\u0431\u04af", "\u0448\u0435\u0439\u0448\u0435\u043c\u0431\u0438", 
"\u0448\u0430\u0440\u0448\u0435\u043c\u0431\u0438", "\u0431\u0435\u0439\u0448\u0435\u043c\u0431\u0438", "\u0436\u0443\u043c\u0430", "\u0438\u0448\u0435\u043c\u0431\u0438"], SHORTWEEKDAYS:["\u0436\u0435\u043a.", "\u0434\u04af\u0439.", "\u0448\u0435\u0439\u0448.", "\u0448\u0430\u0440\u0448.", "\u0431\u0435\u0439\u0448.", "\u0436\u0443\u043c\u0430", "\u0438\u0448\u043c."], STANDALONESHORTWEEKDAYS:["\u0436\u0435\u043a.", "\u0434\u04af\u0439.", "\u0448\u0435\u0439\u0448.", "\u0448\u0430\u0440\u0448.", 
"\u0431\u0435\u0439\u0448.", "\u0436\u0443\u043c\u0430", "\u0438\u0448\u043c."], NARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], STANDALONENARROWWEEKDAYS:["\u0416", "\u0414", "\u0428", "\u0428", "\u0411", "\u0416", "\u0418"], SHORTQUARTERS:["1-\u0447\u0435\u0439.", "2-\u0447\u0435\u0439.", "3-\u0447\u0435\u0439.", "4-\u0447\u0435\u0439."], QUARTERS:["1-\u0447\u0435\u0439\u0440\u0435\u043a", "2-\u0447\u0435\u0439\u0440\u0435\u043a", "3-\u0447\u0435\u0439\u0440\u0435\u043a", 
"4-\u0447\u0435\u0439\u0440\u0435\u043a"], AMPMS:["\u0442\u0430\u04a3\u043a\u044b", "\u0442\u04af\u0448\u0442\u04e9\u043d \u043a\u0438\u0439\u0438\u043d"], DATEFORMATS:["EEEE, d-MMMM, y-'\u0436'.", "y MMMM d", "y MMM d", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ln = {ERAS:["lib\u00f3so ya", "nsima ya Y"], ERANAMES:["Yambo ya Y\u00e9zu Kr\u00eds", "Nsima ya Y\u00e9zu Kr\u00eds"], NARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], STANDALONENARROWMONTHS:["y", "f", "m", "a", "m", "y", "y", "a", "s", "\u0254", "n", "d"], MONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", 
"s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", "s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], STANDALONEMONTHS:["s\u00e1nz\u00e1 ya yambo", "s\u00e1nz\u00e1 ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 ya m\u00ednei", "s\u00e1nz\u00e1 ya m\u00edt\u00e1no", "s\u00e1nz\u00e1 ya mot\u00f3b\u00e1", 
"s\u00e1nz\u00e1 ya nsambo", "s\u00e1nz\u00e1 ya mwambe", "s\u00e1nz\u00e1 ya libwa", "s\u00e1nz\u00e1 ya z\u00f3mi", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u0254\u030ck\u0254\u0301", "s\u00e1nz\u00e1 ya z\u00f3mi na m\u00edbal\u00e9"], SHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], STANDALONESHORTMONTHS:["yan", "fbl", "msi", "apl", "mai", "yun", "yul", "agt", "stb", "\u0254tb", "nvb", "dsb"], WEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", 
"mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], STANDALONEWEEKDAYS:["eyenga", "mok\u0254l\u0254 mwa yambo", "mok\u0254l\u0254 mwa m\u00edbal\u00e9", "mok\u0254l\u0254 mwa m\u00eds\u00e1to", "mok\u0254l\u0254 ya m\u00edn\u00e9i", "mok\u0254l\u0254 ya m\u00edt\u00e1no", "mp\u0254\u0301s\u0254"], SHORTWEEKDAYS:["eye", "ybo", "mbl", "mst", "min", "mtn", "mps"], STANDALONESHORTWEEKDAYS:["eye", "ybo", "mbl", 
"mst", "min", "mtn", "mps"], NARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], STANDALONENARROWWEEKDAYS:["e", "y", "m", "m", "m", "m", "p"], SHORTQUARTERS:["SM1", "SM2", "SM3", "SM4"], QUARTERS:["s\u00e1nz\u00e1 m\u00eds\u00e1to ya yambo", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00edbal\u00e9", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00eds\u00e1to", "s\u00e1nz\u00e1 m\u00eds\u00e1to ya m\u00ednei"], AMPMS:["nt\u0254\u0301ng\u0254\u0301", "mp\u00f3kwa"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", 
"d MMM y", "d/M/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_lo = {ERAS:["\u0e81\u0ec8\u0ead\u0e99 \u0e84.\u0eaa.", "\u0e84.\u0eaa."], ERANAMES:["\u0e81\u0ec8\u0ead\u0e99\u0e84\u0ea3\u0eb4\u0e94\u0eaa\u0eb1\u0e81\u0e81\u0eb0\u0ea5\u0eb2\u0e94", "\u0e84\u0ea3\u0eb4\u0e94\u0eaa\u0eb1\u0e81\u0e81\u0eb0\u0ea5\u0eb2\u0e94"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", 
"\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", "\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], STANDALONEMONTHS:["\u0ea1\u0eb1\u0e87\u0e81\u0ead\u0e99", "\u0e81\u0eb8\u0ea1\u0e9e\u0eb2", "\u0ea1\u0eb5\u0e99\u0eb2", 
"\u0ec0\u0ea1\u0eaa\u0eb2", "\u0e9e\u0eb6\u0e94\u0eaa\u0eb0\u0e9e\u0eb2", "\u0ea1\u0eb4\u0e96\u0eb8\u0e99\u0eb2", "\u0e81\u0ecd\u0ea5\u0eb0\u0e81\u0ebb\u0e94", "\u0eaa\u0eb4\u0e87\u0eab\u0eb2", "\u0e81\u0eb1\u0e99\u0e8d\u0eb2", "\u0e95\u0eb8\u0ea5\u0eb2", "\u0e9e\u0eb0\u0e88\u0eb4\u0e81", "\u0e97\u0eb1\u0e99\u0ea7\u0eb2"], SHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", 
"\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], STANDALONESHORTMONTHS:["\u0ea1.\u0e81.", "\u0e81.\u0e9e.", "\u0ea1.\u0e99.", "\u0ea1.\u0eaa.", "\u0e9e.\u0e9e.", "\u0ea1\u0eb4.\u0e96.", "\u0e81.\u0ea5.", "\u0eaa.\u0eab.", "\u0e81.\u0e8d.", "\u0e95.\u0ea5.", "\u0e9e.\u0e88.", "\u0e97.\u0ea7."], WEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONEWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], SHORTWEEKDAYS:["\u0ea7\u0eb1\u0e99\u0ead\u0eb2\u0e97\u0eb4\u0e94", 
"\u0ea7\u0eb1\u0e99\u0e88\u0eb1\u0e99", "\u0ea7\u0eb1\u0e99\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb8\u0e94", "\u0ea7\u0eb1\u0e99\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0ea7\u0eb1\u0e99\u0eaa\u0eb8\u0e81", "\u0ea7\u0eb1\u0e99\u0ec0\u0eaa\u0ebb\u0eb2"], STANDALONESHORTWEEKDAYS:["\u0ead\u0eb2\u0e97\u0eb4\u0e94", "\u0e88\u0eb1\u0e99", "\u0ead\u0eb1\u0e87\u0e84\u0eb2\u0e99", "\u0e9e\u0eb8\u0e94", "\u0e9e\u0eb0\u0eab\u0eb1\u0e94", "\u0eaa\u0eb8\u0e81", "\u0ec0\u0eaa\u0ebb\u0eb2"], 
NARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["\u0ead", "\u0e88", "\u0ead", "\u0e9e", "\u0e9e\u0eab", "\u0eaa\u0eb8", "\u0eaa"], SHORTQUARTERS:["\u0e95\u0ea11", "\u0e95\u0ea12", "\u0e95\u0ea13", "\u0e95\u0ea14"], QUARTERS:["\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 1", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 2", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 3", "\u0ec4\u0e95\u0ea3\u0ea1\u0eb2\u0e94 4"], AMPMS:["\u0e81\u0ec8\u0ead\u0e99\u0e97\u0ec8\u0ebd\u0e87", "\u0eab\u0ebc\u0eb1\u0e87\u0e97\u0ec8\u0ebd\u0e87"], 
DATEFORMATS:["EEEE \u0e97\u0eb5 d MMMM G y", "d MMMM y", "d MMM y", "d/M/y"], TIMEFORMATS:["H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 zzzz", "H \u0ec2\u0ea1\u0e87 m \u0e99\u0eb2\u0e97\u0eb5 ss \u0ea7\u0eb4\u0e99\u0eb2\u0e97\u0eb5 z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_lt = {ERAS:["pr. Kr.", "po Kr."], ERANAMES:["prie\u0161 Krist\u0173", "po Kristaus"], NARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], STANDALONENARROWMONTHS:["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"], MONTHS:["sausio", "vasario", "kovo", "baland\u017eio", "gegu\u017e\u0117s", "bir\u017eelio", "liepos", "rugpj\u016b\u010dio", "rugs\u0117jo", "spalio", "lapkri\u010dio", "gruod\u017eio"], STANDALONEMONTHS:["sausis", "vasaris", "kovas", 
"balandis", "gegu\u017e\u0117", "bir\u017eelis", "liepa", "rugpj\u016btis", "rugs\u0117jis", "spalis", "lapkritis", "gruodis"], SHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], STANDALONESHORTMONTHS:["saus.", "vas.", "kov.", "bal.", "geg.", "bir\u017e.", "liep.", "rugp.", "rugs.", "spal.", "lapkr.", "gruod."], WEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], 
STANDALONEWEEKDAYS:["sekmadienis", "pirmadienis", "antradienis", "tre\u010diadienis", "ketvirtadienis", "penktadienis", "\u0161e\u0161tadienis"], SHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], STANDALONESHORTWEEKDAYS:["sk", "pr", "an", "tr", "kt", "pn", "\u0161t"], NARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], STANDALONENARROWWEEKDAYS:["S", "P", "A", "T", "K", "P", "\u0160"], SHORTQUARTERS:["I k.", "II k.", "III k.", "IV k."], QUARTERS:["I ketvirtis", "II ketvirtis", "III ketvirtis", 
"IV ketvirtis"], AMPMS:["prie\u0161piet", "popiet"], DATEFORMATS:["y 'm'. MMMM d 'd'., EEEE", "y 'm'. MMMM d 'd'.", "y-MM-dd", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_lv = {ERAS:["p.m.\u0113.", "m.\u0113."], ERANAMES:["pirms m\u016bsu \u0113ras", "m\u016bsu \u0113r\u0101"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janv\u0101ris", "febru\u0101ris", "marts", "apr\u012blis", "maijs", "j\u016bnijs", "j\u016blijs", "augusts", "septembris", "oktobris", "novembris", "decembris"], STANDALONEMONTHS:["Janv\u0101ris", "Febru\u0101ris", 
"Marts", "Apr\u012blis", "Maijs", "J\u016bnijs", "J\u016blijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"], SHORTMONTHS:["janv.", "febr.", "marts", "apr.", "maijs", "j\u016bn.", "j\u016bl.", "aug.", "sept.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Janv.", "Febr.", "Marts", "Apr.", "Maijs", "J\u016bn.", "J\u016bl.", "Aug.", "Sept.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["sv\u0113tdiena", "pirmdiena", "otrdiena", "tre\u0161diena", "ceturtdiena", "piektdiena", "sestdiena"], 
STANDALONEWEEKDAYS:["Sv\u0113tdiena", "Pirmdiena", "Otrdiena", "Tre\u0161diena", "Ceturtdiena", "Piektdiena", "Sestdiena"], SHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], STANDALONESHORTWEEKDAYS:["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"], NARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["S", "P", "O", "T", "C", "P", "S"], SHORTQUARTERS:["1.\u00a0cet.", "2.\u00a0cet.", "3.\u00a0cet.", "4.\u00a0cet."], QUARTERS:["1. ceturksnis", "2. ceturksnis", "3. ceturksnis", 
"4. ceturksnis"], AMPMS:["priek\u0161pusdien\u0101", "p\u0113cpusdien\u0101"], DATEFORMATS:["EEEE, y. 'gada' d. MMMM", "y. 'gada' d. MMMM", "y. 'gada' d. MMM", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mk = {ERAS:["\u043f\u0440.\u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u043f\u0440\u0435\u0434 \u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430", "\u043e\u0434 \u043d\u0430\u0448\u0430\u0442\u0430 \u0435\u0440\u0430"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", 
"\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], 
STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440\u0438", "\u0444\u0435\u0432\u0440\u0443\u0430\u0440\u0438", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d\u0438", "\u0458\u0443\u043b\u0438", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0432\u0440\u0438", "\u043e\u043a\u0442\u043e\u043c\u0432\u0440\u0438", "\u043d\u043e\u0435\u043c\u0432\u0440\u0438", "\u0434\u0435\u043a\u0435\u043c\u0432\u0440\u0438"], 
SHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", "\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u0458\u0430\u043d.", "\u0444\u0435\u0432.", "\u043c\u0430\u0440.", "\u0430\u043f\u0440.", "\u043c\u0430\u0458", "\u0458\u0443\u043d.", "\u0458\u0443\u043b.", "\u0430\u0432\u0433.", 
"\u0441\u0435\u043f\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u0435\u043c.", "\u0434\u0435\u043a."], WEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u043b\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u043d\u0438\u043a", 
"\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e\u043a", "\u043f\u0435\u0442\u043e\u043a", "\u0441\u0430\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", "\u043f\u0435\u0442.", "\u0441\u0430\u0431."], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434.", "\u043f\u043e\u043d.", "\u0432\u0442.", "\u0441\u0440\u0435.", "\u0447\u0435\u0442.", 
"\u043f\u0435\u0442.", "\u0441\u0430\u0431."], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0432", "\u0441", "\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u0458\u0430\u043d-\u043c\u0430\u0440", "\u0430\u043f\u0440-\u0458\u0443\u043d", "\u0458\u0443\u043b-\u0441\u0435\u043f", "\u043e\u043a\u0442-\u0434\u0435\u043a"], QUARTERS:["\u043f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", 
"\u0432\u0442\u043e\u0440\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0442\u0440\u0435\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0447\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435\u0442\u043f\u043b\u0430\u0434\u043d\u0435", "\u043f\u043e\u043f\u043b\u0430\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd MMMM y", "dd MMMM y", "dd.M.y", "dd.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ml = {ERAS:["\u0d15\u0d4d\u0d30\u0d3f.\u0d2e\u0d41.", "\u0d0e\u0d21\u0d3f"], ERANAMES:["\u0d15\u0d4d\u0d30\u0d3f\u0d38\u0d4d\u200c\u0d24\u0d41\u0d35\u0d3f\u0d28\u0d4d \u0d2e\u0d41\u0d2e\u0d4d\u0d2a\u0d4d", "\u0d06\u0d28\u0d4d\u0d28\u0d4b \u0d21\u0d4a\u0d2e\u0d3f\u0d28\u0d3f"], NARROWMONTHS:["\u0d1c", "\u0d2b", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d46", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38", "\u0d12", "\u0d28", "\u0d21\u0d3f"], STANDALONENARROWMONTHS:["\u0d1c", 
"\u0d2b", "\u0d2e\u0d3e", "\u0d0f", "\u0d2e\u0d47", "\u0d1c\u0d42", "\u0d1c\u0d42", "\u0d13", "\u0d38", "\u0d12", "\u0d28", "\u0d21\u0d3f"], MONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", 
"\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], STANDALONEMONTHS:["\u0d1c\u0d28\u0d41\u0d35\u0d30\u0d3f", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41\u0d35\u0d30\u0d3f", "\u0d2e\u0d3e\u0d7c\u0d1a\u0d4d\u0d1a\u0d4d", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f\u0d7d", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d06\u0d17\u0d38\u0d4d\u0d31\u0d4d\u0d31\u0d4d", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02\u0d2c\u0d7c", 
"\u0d12\u0d15\u0d4d\u200c\u0d1f\u0d4b\u0d2c\u0d7c", "\u0d28\u0d35\u0d02\u0d2c\u0d7c", "\u0d21\u0d3f\u0d38\u0d02\u0d2c\u0d7c"], SHORTMONTHS:["\u0d1c\u0d28\u0d41", "\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], STANDALONESHORTMONTHS:["\u0d1c\u0d28\u0d41", 
"\u0d2b\u0d46\u0d2c\u0d4d\u0d30\u0d41", "\u0d2e\u0d3e\u0d7c", "\u0d0f\u0d2a\u0d4d\u0d30\u0d3f", "\u0d2e\u0d47\u0d2f\u0d4d", "\u0d1c\u0d42\u0d7a", "\u0d1c\u0d42\u0d32\u0d48", "\u0d13\u0d17", "\u0d38\u0d46\u0d2a\u0d4d\u0d31\u0d4d\u0d31\u0d02", "\u0d12\u0d15\u0d4d\u0d1f\u0d4b", "\u0d28\u0d35\u0d02", "\u0d21\u0d3f\u0d38\u0d02"], WEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u0d1a", 
"\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], STANDALONEWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d31\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d33\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d2c\u0d41\u0d27\u0d28\u0d3e\u0d34\u0d4d\u200c\u0d1a", 
"\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a", "\u0d36\u0d28\u0d3f\u0d2f\u0d3e\u0d34\u0d4d\u200c\u0d1a"], SHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", "\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], STANDALONESHORTWEEKDAYS:["\u0d1e\u0d3e\u0d2f\u0d7c", "\u0d24\u0d3f\u0d19\u0d4d\u0d15\u0d7e", 
"\u0d1a\u0d4a\u0d35\u0d4d\u0d35", "\u0d2c\u0d41\u0d27\u0d7b", "\u0d35\u0d4d\u0d2f\u0d3e\u0d34\u0d02", "\u0d35\u0d46\u0d33\u0d4d\u0d33\u0d3f", "\u0d36\u0d28\u0d3f"], NARROWWEEKDAYS:["\u0d1e", "\u0d24\u0d3f", "\u0d1a", "\u0d2c\u0d41", "\u0d35", "\u0d35\u0d46", "\u0d36"], STANDALONENARROWWEEKDAYS:["\u0d1e", "\u0d24\u0d3f", "\u0d1a", "\u0d2c\u0d41", "\u0d35", "\u0d35\u0d46", "\u0d36"], SHORTQUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", 
"\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], QUARTERS:["\u0d12\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d30\u0d23\u0d4d\u0d1f\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d2e\u0d42\u0d28\u0d4d\u0d28\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02", "\u0d28\u0d3e\u0d32\u0d3e\u0d02 \u0d2a\u0d3e\u0d26\u0d02"], AMPMS:["AM", "PM"], DATEFORMATS:["y, MMMM d, EEEE", "y, MMMM d", "y, MMM d", "dd/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mn = {ERAS:["\u041c\u042d\u04e8", "\u041c\u042d"], ERANAMES:["\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439 \u04e9\u043c\u043d\u04e9\u0445", "\u043c\u0430\u043d\u0430\u0439 \u044d\u0440\u0438\u043d\u0438\u0439"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], STANDALONEMONTHS:["\u041d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", 
"\u0425\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0413\u0443\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u04e9\u0440\u04e9\u0432\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0422\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0417\u0443\u0440\u0433\u0430\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0414\u043e\u043b\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", 
"\u041d\u0430\u0439\u043c\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0415\u0441\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0430\u0432\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u043d\u044d\u0433\u0434\u04af\u0433\u044d\u044d\u0440 \u0441\u0430\u0440", "\u0410\u0440\u0432\u0430\u043d \u0445\u043e\u0451\u0440\u0434\u0443\u0433\u0430\u0430\u0440 \u0441\u0430\u0440"], SHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", 
"2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", "6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], STANDALONESHORTMONTHS:["1-\u0440 \u0441\u0430\u0440", "2-\u0440 \u0441\u0430\u0440", "3-\u0440 \u0441\u0430\u0440", "4-\u0440 \u0441\u0430\u0440", "5-\u0440 \u0441\u0430\u0440", 
"6-\u0440 \u0441\u0430\u0440", "7-\u0440 \u0441\u0430\u0440", "8-\u0440 \u0441\u0430\u0440", "9-\u0440 \u0441\u0430\u0440", "10-\u0440 \u0441\u0430\u0440", "11-\u0440 \u0441\u0430\u0440", "12-\u0440 \u0441\u0430\u0440"], WEEKDAYS:["\u043d\u044f\u043c", "\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], STANDALONEWEEKDAYS:["\u043d\u044f\u043c", 
"\u0434\u0430\u0432\u0430\u0430", "\u043c\u044f\u0433\u043c\u0430\u0440", "\u043b\u0445\u0430\u0433\u0432\u0430", "\u043f\u04af\u0440\u044d\u0432", "\u0431\u0430\u0430\u0441\u0430\u043d", "\u0431\u044f\u043c\u0431\u0430"], SHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], STANDALONESHORTWEEKDAYS:["\u041d\u044f", "\u0414\u0430", "\u041c\u044f", "\u041b\u0445", "\u041f\u04af", "\u0411\u0430", "\u0411\u044f"], NARROWWEEKDAYS:["1", 
"2", "3", "4", "5", "6", "7"], STANDALONENARROWWEEKDAYS:["1", "2", "3", "4", "5", "6", "7"], SHORTQUARTERS:["\u04231", "\u04232", "\u04233", "\u04234"], QUARTERS:["1-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "2-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "3-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b", "4-\u0440 \u0443\u043b\u0438\u0440\u0430\u043b"], AMPMS:["\u04ae\u04e8", "\u04ae\u0425"], DATEFORMATS:["EEEE, y '\u043e\u043d\u044b' MM '\u0441\u0430\u0440\u044b\u043d' d", "y '\u043e\u043d\u044b' MM '\u0441\u0430\u0440\u044b\u043d' d", 
"y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_mr = {ZERODIGIT:2406, ERAS:["\u0907. \u0938. \u092a\u0942.", "\u0907. \u0938."], ERANAMES:["\u0908\u0938\u0935\u0940\u0938\u0928\u092a\u0942\u0930\u094d\u0935", "\u0908\u0938\u0935\u0940\u0938\u0928"], NARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", "\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], STANDALONENARROWMONTHS:["\u091c\u093e", "\u092b\u0947", "\u092e\u093e", "\u090f", "\u092e\u0947", 
"\u091c\u0942", "\u091c\u0941", "\u0911", "\u0938", "\u0911", "\u0928\u094b", "\u0921\u093f"], MONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], STANDALONEMONTHS:["\u091c\u093e\u0928\u0947\u0935\u093e\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0935\u093e\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917\u0938\u094d\u091f", "\u0938\u092a\u094d\u091f\u0947\u0902\u092c\u0930", "\u0911\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902\u092c\u0930", 
"\u0921\u093f\u0938\u0947\u0902\u092c\u0930"], SHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", "\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], STANDALONESHORTMONTHS:["\u091c\u093e\u0928\u0947", "\u092b\u0947\u092c\u094d\u0930\u0941", 
"\u092e\u093e\u0930\u094d\u091a", "\u090f\u092a\u094d\u0930\u093f", "\u092e\u0947", "\u091c\u0942\u0928", "\u091c\u0941\u0932\u0948", "\u0911\u0917", "\u0938\u092a\u094d\u091f\u0947\u0902", "\u0911\u0915\u094d\u091f\u094b", "\u0928\u094b\u0935\u094d\u0939\u0947\u0902", "\u0921\u093f\u0938\u0947\u0902"], WEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], STANDALONEWEEKDAYS:["\u0930\u0935\u093f\u0935\u093e\u0930", "\u0938\u094b\u092e\u0935\u093e\u0930", "\u092e\u0902\u0917\u0933\u0935\u093e\u0930", "\u092c\u0941\u0927\u0935\u093e\u0930", "\u0917\u0941\u0930\u0941\u0935\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u0935\u093e\u0930", "\u0936\u0928\u093f\u0935\u093e\u0930"], SHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", 
"\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0930\u0935\u093f", "\u0938\u094b\u092e", "\u092e\u0902\u0917\u0933", "\u092c\u0941\u0927", "\u0917\u0941\u0930\u0941", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], NARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", "\u0917\u0941", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0930", "\u0938\u094b", "\u092e\u0902", "\u092c\u0941", 
"\u0917\u0941", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u0924\u093f\u0967", "\u0924\u093f\u0968", "\u0924\u093f\u0969", "\u0924\u093f\u096a"], QUARTERS:["\u092a\u094d\u0930\u0925\u092e \u0924\u093f\u092e\u093e\u0939\u0940", "\u0926\u094d\u0935\u093f\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u0924\u0943\u0924\u0940\u092f \u0924\u093f\u092e\u093e\u0939\u0940", "\u091a\u0924\u0941\u0930\u094d\u0925 \u0924\u093f\u092e\u093e\u0939\u0940"], AMPMS:["\u092e.\u092a\u0942.", "\u092e.\u0909."], 
DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} '\u0930\u094b\u091c\u0940' {0}", "{1} '\u0930\u094b\u091c\u0940' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_ms = {ERAS:["S.M.", "TM"], ERANAMES:["S.M.", "TM"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], STANDALONEMONTHS:["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"], 
SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], STANDALONEWEEKDAYS:["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"], SHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], STANDALONESHORTWEEKDAYS:["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"], 
NARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], STANDALONENARROWWEEKDAYS:["A", "I", "S", "R", "K", "J", "S"], SHORTQUARTERS:["S1", "S2", "S3", "S4"], QUARTERS:["Suku pertama", "Suku Ke-2", "Suku Ke-3", "Suku Ke-4"], AMPMS:["PG", "PTG"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/MM/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_mt = {ERAS:["QK", "WK"], ERANAMES:["Qabel Kristu", "Wara Kristu"], NARROWMONTHS:["J", "F", "M", "A", "M", "\u0120", "L", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Jn", "Fr", "Mz", "Ap", "Mj", "\u0120n", "Lj", "Aw", "St", "Ob", "Nv", "D\u010b"], MONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", "Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], STANDALONEMONTHS:["Jannar", "Frar", "Marzu", "April", "Mejju", "\u0120unju", "Lulju", 
"Awwissu", "Settembru", "Ottubru", "Novembru", "Di\u010bembru"], SHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], STANDALONESHORTMONTHS:["Jan", "Fra", "Mar", "Apr", "Mej", "\u0120un", "Lul", "Aww", "Set", "Ott", "Nov", "Di\u010b"], WEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", "Il-\u0120img\u0127a", "Is-Sibt"], STANDALONEWEEKDAYS:["Il-\u0126add", "It-Tnejn", "It-Tlieta", "L-Erbg\u0127a", "Il-\u0126amis", 
"Il-\u0120img\u0127a", "Is-Sibt"], SHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], STANDALONESHORTWEEKDAYS:["\u0126ad", "Tne", "Tli", "Erb", "\u0126am", "\u0120im", "Sib"], NARROWWEEKDAYS:["\u0126", "T", "T", "E", "\u0126", "\u0120", "S"], STANDALONENARROWWEEKDAYS:["\u0126d", "Tn", "Tl", "Er", "\u0126m", "\u0120m", "Sb"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1el kwart", "2ni kwart", "3et kwart", "4ba\u2019 kwart"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'ta'\u2019 MMMM y", 
"d 'ta'\u2019 MMMM y", "dd MMM y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_my = {ZERODIGIT:4160, ERAS:["\u1018\u102e\u1005\u102e", "\u1021\u1031\u1012\u102e"], ERANAMES:["\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1019\u1015\u1031\u102b\u103a\u1019\u102e\u1000\u102c\u101c", "\u1001\u101b\u1005\u103a\u1010\u1031\u102c\u103a \u1015\u1031\u102b\u103a\u1011\u103d\u1014\u103a\u1038\u1015\u103c\u102e\u1038\u1000\u102c\u101c"], NARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", 
"\u1012"], STANDALONENARROWMONTHS:["\u1007", "\u1016", "\u1019", "\u1027", "\u1019", "\u1007", "\u1007", "\u1029", "\u1005", "\u1021", "\u1014", "\u1012"], MONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], STANDALONEMONTHS:["\u1007\u1014\u103a\u1014\u101d\u102b\u101b\u102e", "\u1016\u1031\u1016\u1031\u102c\u103a\u101d\u102b\u101b\u102e", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030\u101c\u102d\u102f\u1004\u103a", "\u1029\u1002\u102f\u1010\u103a", "\u1005\u1000\u103a\u1010\u1004\u103a\u1018\u102c", 
"\u1021\u1031\u102c\u1000\u103a\u1010\u102d\u102f\u1018\u102c", "\u1014\u102d\u102f\u101d\u1004\u103a\u1018\u102c", "\u1012\u102e\u1007\u1004\u103a\u1018\u102c"], SHORTMONTHS:["\u1007\u1014\u103a", "\u1016\u1031", "\u1019\u1010\u103a", "\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030", "\u1029", "\u1005\u1000\u103a", "\u1021\u1031\u102c\u1000\u103a", "\u1014\u102d\u102f", "\u1012\u102e"], STANDALONESHORTMONTHS:["\u1007\u1014\u103a", "\u1016\u1031", "\u1019\u1010\u103a", 
"\u1027\u1015\u103c\u102e", "\u1019\u1031", "\u1007\u103d\u1014\u103a", "\u1007\u1030", "\u1029", "\u1005\u1000\u103a", "\u1021\u1031\u102c\u1000\u103a", "\u1014\u102d\u102f", "\u1012\u102e"], WEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], 
STANDALONEWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], SHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", 
"\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], STANDALONESHORTWEEKDAYS:["\u1010\u1014\u1004\u103a\u1039\u1002\u1014\u103d\u1031", "\u1010\u1014\u1004\u103a\u1039\u101c\u102c", "\u1021\u1004\u103a\u1039\u1002\u102b", "\u1017\u102f\u1012\u1039\u1013\u101f\u1030\u1038", "\u1000\u103c\u102c\u101e\u1015\u1010\u1031\u1038", "\u101e\u1031\u102c\u1000\u103c\u102c", "\u1005\u1014\u1031"], NARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", 
"\u1000", "\u101e", "\u1005"], STANDALONENARROWWEEKDAYS:["\u1010", "\u1010", "\u1021", "\u1017", "\u1000", "\u101e", "\u1005"], SHORTQUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], QUARTERS:["\u1015\u1011\u1019 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", 
"\u1012\u102f\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1010\u1010\u102d\u101a \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a", "\u1005\u1010\u102f\u1010\u1039\u1011 \u101e\u102f\u1036\u1038\u101c\u1015\u1010\u103a"], AMPMS:["\u1014\u1036\u1014\u1000\u103a", "\u100a\u1014\u1031"], DATEFORMATS:["EEEE\u104a dd MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}\u1019\u103e\u102c {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nb = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.y"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ne = {ZERODIGIT:2406, ERAS:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], ERANAMES:["\u0908\u0938\u093e \u092a\u0942\u0930\u094d\u0935", "\u0938\u0928\u094d"], NARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", "\u0967\u0968"], STANDALONENARROWMONTHS:["\u0967", "\u0968", "\u0969", "\u096a", "\u096b", "\u096c", "\u096d", "\u096e", "\u096f", "\u0967\u0966", "\u0967\u0967", 
"\u0967\u0968"], MONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0908", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
STANDALONEMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], 
SHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", "\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], STANDALONESHORTMONTHS:["\u091c\u0928\u0935\u0930\u0940", 
"\u092b\u0947\u092c\u094d\u0930\u0941\u0905\u0930\u0940", "\u092e\u093e\u0930\u094d\u091a", "\u0905\u092a\u094d\u0930\u093f\u0932", "\u092e\u0947", "\u091c\u0941\u0928", "\u091c\u0941\u0932\u093e\u0908", "\u0905\u0917\u0938\u094d\u091f", "\u0938\u0947\u092a\u094d\u091f\u0947\u092e\u094d\u092c\u0930", "\u0905\u0915\u094d\u091f\u094b\u092c\u0930", "\u0928\u094b\u092d\u0947\u092e\u094d\u092c\u0930", "\u0921\u093f\u0938\u0947\u092e\u094d\u092c\u0930"], WEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", 
"\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u093f\u092c\u093e\u0930", "\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], STANDALONEWEEKDAYS:["\u0906\u0907\u0924\u092c\u093e\u0930", "\u0938\u094b\u092e\u092c\u093e\u0930", "\u092e\u0919\u094d\u0917\u0932\u092c\u093e\u0930", "\u092c\u0941\u0927\u092c\u093e\u0930", "\u092c\u093f\u0939\u093f\u092c\u093e\u0930", 
"\u0936\u0941\u0915\u094d\u0930\u092c\u093e\u0930", "\u0936\u0928\u093f\u092c\u093e\u0930"], SHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], STANDALONESHORTWEEKDAYS:["\u0906\u0907\u0924", "\u0938\u094b\u092e", "\u092e\u0919\u094d\u0917\u0932", "\u092c\u0941\u0927", "\u092c\u093f\u0939\u0940", "\u0936\u0941\u0915\u094d\u0930", "\u0936\u0928\u093f"], 
NARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], STANDALONENARROWWEEKDAYS:["\u0906", "\u0938\u094b", "\u092e", "\u092c\u0941", "\u092c\u093f", "\u0936\u0941", "\u0936"], SHORTQUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", "\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], QUARTERS:["\u092a\u0939\u093f\u0932\u094b \u0938\u0924\u094d\u0930", 
"\u0926\u094b\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u0924\u0947\u0938\u094d\u0930\u094b \u0938\u0924\u094d\u0930", "\u091a\u094c\u0925\u094b \u0938\u0924\u094d\u0930"], AMPMS:["\u092a\u0942\u0930\u094d\u0935\u093e\u0939\u094d\u0928", "\u0905\u092a\u0930\u093e\u0939\u094d\u0928"], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_nl = {ERAS:["v.Chr.", "n.Chr."], ERANAMES:["voor Christus", "na Christus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Maart", "April", "Mei", "Juni", "Juli", "Augustus", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan.", "feb.", "mrt.", "apr.", "mei", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Jan.", "Feb.", "Mrt.", "Apr.", "Mei", "Jun.", "Jul.", "Aug.", "Sep.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"], STANDALONEWEEKDAYS:["Zondag", "Maandag", "Dinsdag", "Woensdag", "Donderdag", "Vrijdag", "Zaterdag"], SHORTWEEKDAYS:["zo", "ma", "di", "wo", "do", 
"vr", "za"], STANDALONESHORTWEEKDAYS:["Zo", "Ma", "Di", "Wo", "Do", "Vr", "Za"], NARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], STANDALONENARROWWEEKDAYS:["Z", "M", "D", "W", "D", "V", "Z"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "dd-MM-yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f.Kr.", "e.Kr."], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], STANDALONEMONTHS:["januar", "februar", "mars", "april", "mai", "juni", "juli", "august", "september", "oktober", "november", "desember"], 
SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "mai", "jun.", "jul.", "aug.", "sep.", "okt.", "nov.", "des."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "mai", "jun", "jul", "aug", "sep", "okt", "nov", "des"], WEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], STANDALONEWEEKDAYS:["s\u00f8ndag", "mandag", "tirsdag", "onsdag", "torsdag", "fredag", "l\u00f8rdag"], SHORTWEEKDAYS:["s\u00f8n.", "man.", "tir.", "ons.", "tor.", "fre.", "l\u00f8r."], STANDALONESHORTWEEKDAYS:["s\u00f8.", 
"ma.", "ti.", "on.", "to.", "fr.", "l\u00f8."], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE d. MMMM y", "d. MMMM y", "d. MMM y", "dd.MM.y"], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} 'kl.' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, 
WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_no_NO = goog.i18n.DateTimeSymbols_no;
goog.i18n.DateTimeSymbols_or = {ERAS:["BCE", "CE"], ERANAMES:["BCE", "CE"], NARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b07", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], STANDALONENARROWMONTHS:["\u0b1c\u0b3e", "\u0b2b\u0b47", "\u0b2e\u0b3e", "\u0b05", "\u0b2e\u0b07", "\u0b1c\u0b41", "\u0b1c\u0b41", "\u0b05", "\u0b38\u0b47", "\u0b05", "\u0b28", "\u0b21\u0b3f"], MONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b43\u0b06\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b07", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONEMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b43\u0b06\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b07", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], SHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b43\u0b06\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b07", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], STANDALONESHORTMONTHS:["\u0b1c\u0b3e\u0b28\u0b41\u0b06\u0b30\u0b40", 
"\u0b2b\u0b47\u0b2c\u0b43\u0b06\u0b30\u0b40", "\u0b2e\u0b3e\u0b30\u0b4d\u0b1a\u0b4d\u0b1a", "\u0b05\u0b2a\u0b4d\u0b30\u0b47\u0b32", "\u0b2e\u0b07", "\u0b1c\u0b41\u0b28", "\u0b1c\u0b41\u0b32\u0b3e\u0b07", "\u0b05\u0b17\u0b37\u0b4d\u0b1f", "\u0b38\u0b47\u0b2a\u0b4d\u0b1f\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b05\u0b15\u0b4d\u0b1f\u0b4b\u0b2c\u0b30", "\u0b28\u0b2d\u0b47\u0b2e\u0b4d\u0b2c\u0b30", "\u0b21\u0b3f\u0b38\u0b47\u0b2e\u0b4d\u0b2c\u0b30"], WEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", 
"\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", "\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], STANDALONEWEEKDAYS:["\u0b30\u0b2c\u0b3f\u0b2c\u0b3e\u0b30", "\u0b38\u0b4b\u0b2e\u0b2c\u0b3e\u0b30", "\u0b2e\u0b19\u0b4d\u0b17\u0b33\u0b2c\u0b3e\u0b30", "\u0b2c\u0b41\u0b27\u0b2c\u0b3e\u0b30", "\u0b17\u0b41\u0b30\u0b41\u0b2c\u0b3e\u0b30", "\u0b36\u0b41\u0b15\u0b4d\u0b30\u0b2c\u0b3e\u0b30", 
"\u0b36\u0b28\u0b3f\u0b2c\u0b3e\u0b30"], SHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], STANDALONESHORTWEEKDAYS:["\u0b30\u0b2c\u0b3f", "\u0b38\u0b4b\u0b2e", "\u0b2e\u0b19\u0b4d\u0b17\u0b33", "\u0b2c\u0b41\u0b27", "\u0b17\u0b41\u0b30\u0b41", "\u0b36\u0b41\u0b15\u0b4d\u0b30", "\u0b36\u0b28\u0b3f"], NARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", 
"\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], STANDALONENARROWWEEKDAYS:["\u0b30", "\u0b38\u0b4b", "\u0b2e", "\u0b2c\u0b41", "\u0b17\u0b41", "\u0b36\u0b41", "\u0b36"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["Q1", "Q2", "Q3", "Q4"], AMPMS:["am", "pm"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pa = {ERAS:["\u0a08. \u0a2a\u0a42.", "\u0a38\u0a70\u0a28"], ERANAMES:["\u0a08\u0a38\u0a35\u0a40 \u0a2a\u0a42\u0a30\u0a35", "\u0a08\u0a38\u0a35\u0a40 \u0a38\u0a70\u0a28"], NARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", "\u0a28", "\u0a26"], STANDALONENARROWMONTHS:["\u0a1c", "\u0a2b\u0a3c", "\u0a2e\u0a3e", "\u0a05", "\u0a2e", "\u0a1c\u0a42", "\u0a1c\u0a41", "\u0a05", "\u0a38", "\u0a05", 
"\u0a28", "\u0a26"], MONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], STANDALONEMONTHS:["\u0a1c\u0a28\u0a35\u0a30\u0a40", "\u0a2b\u0a3c\u0a30\u0a35\u0a30\u0a40", 
"\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48\u0a32", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e\u0a08", "\u0a05\u0a17\u0a38\u0a24", "\u0a38\u0a24\u0a70\u0a2c\u0a30", "\u0a05\u0a15\u0a24\u0a42\u0a2c\u0a30", "\u0a28\u0a35\u0a70\u0a2c\u0a30", "\u0a26\u0a38\u0a70\u0a2c\u0a30"], SHORTMONTHS:["\u0a1c\u0a28", "\u0a2b\u0a3c\u0a30", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e", "\u0a05\u0a17", 
"\u0a38\u0a24\u0a70", "\u0a05\u0a15\u0a24\u0a42", "\u0a28\u0a35\u0a70", "\u0a26\u0a38\u0a70"], STANDALONESHORTMONTHS:["\u0a1c\u0a28", "\u0a2b\u0a3c\u0a30", "\u0a2e\u0a3e\u0a30\u0a1a", "\u0a05\u0a2a\u0a4d\u0a30\u0a48", "\u0a2e\u0a08", "\u0a1c\u0a42\u0a28", "\u0a1c\u0a41\u0a32\u0a3e", "\u0a05\u0a17", "\u0a38\u0a24\u0a70", "\u0a05\u0a15\u0a24\u0a42", "\u0a28\u0a35\u0a70", "\u0a26\u0a38\u0a70"], WEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", 
"\u0a2c\u0a41\u0a71\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a3f\u0a71\u0a1a\u0a30\u0a35\u0a3e\u0a30"], STANDALONEWEEKDAYS:["\u0a10\u0a24\u0a35\u0a3e\u0a30", "\u0a38\u0a4b\u0a2e\u0a35\u0a3e\u0a30", "\u0a2e\u0a70\u0a17\u0a32\u0a35\u0a3e\u0a30", "\u0a2c\u0a41\u0a71\u0a27\u0a35\u0a3e\u0a30", "\u0a35\u0a40\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30\u0a35\u0a3e\u0a30", "\u0a38\u0a3c\u0a28\u0a3f\u0a71\u0a1a\u0a30\u0a35\u0a3e\u0a30"], 
SHORTWEEKDAYS:["\u0a10\u0a24", "\u0a38\u0a4b\u0a2e", "\u0a2e\u0a70\u0a17\u0a32", "\u0a2c\u0a41\u0a71\u0a27", "\u0a35\u0a40\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30", "\u0a38\u0a3c\u0a28\u0a3f\u0a71\u0a1a\u0a30"], STANDALONESHORTWEEKDAYS:["\u0a10\u0a24", "\u0a38\u0a4b\u0a2e", "\u0a2e\u0a70\u0a17\u0a32", "\u0a2c\u0a41\u0a71\u0a27", "\u0a35\u0a40\u0a30", "\u0a38\u0a3c\u0a41\u0a71\u0a15\u0a30", "\u0a38\u0a3c\u0a28\u0a3f\u0a71\u0a1a\u0a30"], NARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", 
"\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], STANDALONENARROWWEEKDAYS:["\u0a10", "\u0a38\u0a4b", "\u0a2e\u0a70", "\u0a2c\u0a41\u0a71", "\u0a35\u0a40", "\u0a38\u0a3c\u0a41\u0a71", "\u0a38\u0a3c"], SHORTQUARTERS:["\u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a401", "\u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a402", "\u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a403", "\u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a404"], QUARTERS:["\u0a2a\u0a39\u0a3f\u0a32\u0a40 \u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a40", "\u0a26\u0a42\u0a1c\u0a40 \u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a40", 
"\u0a24\u0a40\u0a1c\u0a40 \u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a40", "\u0a1a\u0a4c\u0a25\u0a40 \u0a24\u0a3f\u0a2e\u0a3e\u0a39\u0a40"], AMPMS:["\u0a2a\u0a42.\u0a26\u0a41.", "\u0a2c\u0a3e.\u0a26\u0a41."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pl = {ERAS:["p.n.e.", "n.e."], ERANAMES:["p.n.e.", "n.e."], NARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], STANDALONENARROWMONTHS:["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"], MONTHS:["stycznia", "lutego", "marca", "kwietnia", "maja", "czerwca", "lipca", "sierpnia", "wrze\u015bnia", "pa\u017adziernika", "listopada", "grudnia"], STANDALONEMONTHS:["stycze\u0144", "luty", "marzec", "kwiecie\u0144", "maj", "czerwiec", "lipiec", "sierpie\u0144", 
"wrzesie\u0144", "pa\u017adziernik", "listopad", "grudzie\u0144"], SHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], STANDALONESHORTMONTHS:["sty", "lut", "mar", "kwi", "maj", "cze", "lip", "sie", "wrz", "pa\u017a", "lis", "gru"], WEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], STANDALONEWEEKDAYS:["niedziela", "poniedzia\u0142ek", "wtorek", "\u015broda", "czwartek", "pi\u0105tek", "sobota"], 
SHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], STANDALONESHORTWEEKDAYS:["niedz.", "pon.", "wt.", "\u015br.", "czw.", "pt.", "sob."], NARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "W", "\u015a", "C", "P", "S"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["I kwarta\u0142", "II kwarta\u0142", "III kwarta\u0142", "IV kwarta\u0142"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "dd.MM.y", "dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_pt = {ERAS:["a.C.", "d.C."], ERANAMES:["Antes de Cristo", "Ano do Senhor"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1\u00ba trimestre", "2\u00ba trimestre", "3\u00ba trimestre", "4\u00ba trimestre"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", "d 'de' MMM 'de' y", 
"dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_pt_BR = goog.i18n.DateTimeSymbols_pt;
goog.i18n.DateTimeSymbols_pt_PT = {ERAS:["a.C.", "d.C."], ERANAMES:["antes de Cristo", "depois de Cristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", "setembro", "outubro", "novembro", "dezembro"], STANDALONEMONTHS:["janeiro", "fevereiro", "mar\u00e7o", "abril", "maio", "junho", "julho", "agosto", 
"setembro", "outubro", "novembro", "dezembro"], SHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], STANDALONESHORTMONTHS:["jan", "fev", "mar", "abr", "mai", "jun", "jul", "ago", "set", "out", "nov", "dez"], WEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], STANDALONEWEEKDAYS:["domingo", "segunda-feira", "ter\u00e7a-feira", "quarta-feira", "quinta-feira", "sexta-feira", "s\u00e1bado"], 
SHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], STANDALONESHORTWEEKDAYS:["dom", "seg", "ter", "qua", "qui", "sex", "s\u00e1b"], NARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], STANDALONENARROWWEEKDAYS:["D", "S", "T", "Q", "Q", "S", "S"], SHORTQUARTERS:["T1", "T2", "T3", "T4"], QUARTERS:["1.\u00ba trimestre", "2.\u00ba trimestre", "3.\u00ba trimestre", "4.\u00ba trimestre"], AMPMS:["da manh\u00e3", "da tarde"], DATEFORMATS:["EEEE, d 'de' MMMM 'de' y", "d 'de' MMMM 'de' y", 
"dd/MM/y", "dd/MM/yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} '\u00e0s' {0}", "{1} '\u00e0s' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_ro = {ERAS:["\u00ee.Hr.", "d.Hr."], ERANAMES:["\u00eenainte de Hristos", "dup\u0103 Hristos"], NARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["ianuarie", "februarie", "martie", "aprilie", "mai", "iunie", "iulie", "august", "septembrie", "octombrie", "noiembrie", "decembrie"], STANDALONEMONTHS:["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", 
"Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"], SHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], STANDALONESHORTMONTHS:["ian.", "feb.", "mar.", "apr.", "mai", "iun.", "iul.", "aug.", "sept.", "oct.", "nov.", "dec."], WEEKDAYS:["duminic\u0103", "luni", "mar\u021bi", "miercuri", "joi", "vineri", "s\u00e2mb\u0103t\u0103"], STANDALONEWEEKDAYS:["Duminic\u0103", "Luni", "Mar\u021bi", "Miercuri", "Joi", "Vineri", "S\u00e2mb\u0103t\u0103"], 
SHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], STANDALONESHORTWEEKDAYS:["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "S\u00e2m"], NARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], STANDALONENARROWWEEKDAYS:["D", "L", "M", "M", "J", "V", "S"], SHORTQUARTERS:["trim. I", "trim. II", "trim. III", "trim. IV"], QUARTERS:["trimestrul I", "trimestrul al II-lea", "trimestrul al III-lea", "trimestrul al IV-lea"], AMPMS:["a.m.", "p.m."], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", 
"dd.MM.y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ru = {ERAS:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], ERANAMES:["\u0434\u043e \u043d. \u044d.", "\u043d. \u044d."], NARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], STANDALONENARROWMONTHS:["\u042f", "\u0424", "\u041c", "\u0410", "\u041c", "\u0418", "\u0418", "\u0410", "\u0421", "\u041e", "\u041d", "\u0414"], MONTHS:["\u044f\u043d\u0432\u0430\u0440\u044f", "\u0444\u0435\u0432\u0440\u0430\u043b\u044f", 
"\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440\u0435\u043b\u044f", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", "\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433\u0443\u0441\u0442\u0430", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044f", "\u043e\u043a\u0442\u044f\u0431\u0440\u044f", "\u043d\u043e\u044f\u0431\u0440\u044f", "\u0434\u0435\u043a\u0430\u0431\u0440\u044f"], STANDALONEMONTHS:["\u044f\u043d\u0432\u0430\u0440\u044c", "\u0444\u0435\u0432\u0440\u0430\u043b\u044c", "\u043c\u0430\u0440\u0442", 
"\u0430\u043f\u0440\u0435\u043b\u044c", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c", "\u043e\u043a\u0442\u044f\u0431\u0440\u044c", "\u043d\u043e\u044f\u0431\u0440\u044c", "\u0434\u0435\u043a\u0430\u0431\u0440\u044c"], SHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442\u0430", "\u0430\u043f\u0440.", "\u043c\u0430\u044f", "\u0438\u044e\u043d\u044f", 
"\u0438\u044e\u043b\u044f", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], STANDALONESHORTMONTHS:["\u044f\u043d\u0432.", "\u0444\u0435\u0432\u0440.", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440.", "\u043c\u0430\u0439", "\u0438\u044e\u043d\u044c", "\u0438\u044e\u043b\u044c", "\u0430\u0432\u0433.", "\u0441\u0435\u043d\u0442.", "\u043e\u043a\u0442.", "\u043d\u043e\u044f\u0431.", "\u0434\u0435\u043a."], WEEKDAYS:["\u0432\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", 
"\u043f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0432\u0442\u043e\u0440\u043d\u0438\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440\u0433", "\u043f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0441\u0443\u0431\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u0412\u043e\u0441\u043a\u0440\u0435\u0441\u0435\u043d\u044c\u0435", "\u041f\u043e\u043d\u0435\u0434\u0435\u043b\u044c\u043d\u0438\u043a", "\u0412\u0442\u043e\u0440\u043d\u0438\u043a", "\u0421\u0440\u0435\u0434\u0430", 
"\u0427\u0435\u0442\u0432\u0435\u0440\u0433", "\u041f\u044f\u0442\u043d\u0438\u0446\u0430", "\u0421\u0443\u0431\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", "\u043f\u0442", "\u0441\u0431"], STANDALONESHORTWEEKDAYS:["\u0412\u0441", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u0432\u0441", "\u043f\u043d", "\u0432\u0442", "\u0441\u0440", "\u0447\u0442", 
"\u043f\u0442", "\u0441\u0431"], STANDALONENARROWWEEKDAYS:["\u0412", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["1-\u0439 \u043a\u0432.", "2-\u0439 \u043a\u0432.", "3-\u0439 \u043a\u0432.", "4-\u0439 \u043a\u0432."], QUARTERS:["1-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "2-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "3-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "4-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], AMPMS:["AM", "PM"], 
DATEFORMATS:["EEEE, d MMMM y '\u0433'.", "d MMMM y '\u0433'.", "d MMM y '\u0433'.", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_si = {ERAS:["\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0db4\u0dd6.", "\u0d9a\u0dca\u200d\u0dbb\u0dd2.\u0dc0."], ERANAMES:["\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0db4\u0dd6\u0dbb\u0dca\u200d\u0dc0", "\u0d9a\u0dca\u200d\u0dbb\u0dd2\u0dc3\u0dca\u0dad\u0dd4 \u0dc0\u0dbb\u0dca\u200d\u0dc2"], NARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], 
STANDALONENARROWMONTHS:["\u0da2", "\u0db4\u0dd9", "\u0db8\u0dcf", "\u0d85", "\u0db8\u0dd0", "\u0da2\u0dd6", "\u0da2\u0dd6", "\u0d85", "\u0dc3\u0dd0", "\u0d94", "\u0db1\u0dd9", "\u0daf\u0dd9"], MONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", 
"\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], STANDALONEMONTHS:["\u0da2\u0db1\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db4\u0dd9\u0db6\u0dbb\u0dc0\u0dcf\u0dbb\u0dd2", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd\u0dc3\u0dca\u0dad\u0dd4", "\u0dc3\u0dd0\u0db4\u0dca\u0dad\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0d94\u0d9a\u0dca\u0dad\u0ddd\u0db6\u0dbb\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca", "\u0daf\u0dd9\u0dc3\u0dd0\u0db8\u0dca\u0db6\u0dbb\u0dca"], SHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca\u0dad\u0dd4", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", 
"\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], STANDALONESHORTMONTHS:["\u0da2\u0db1", "\u0db4\u0dd9\u0db6", "\u0db8\u0dcf\u0dbb\u0dca", "\u0d85\u0db4\u0dca\u200d\u0dbb\u0dda\u0dbd\u0dca", "\u0db8\u0dd0\u0dba\u0dd2", "\u0da2\u0dd6\u0db1\u0dd2", "\u0da2\u0dd6\u0dbd\u0dd2", "\u0d85\u0d9c\u0ddd", "\u0dc3\u0dd0\u0db4\u0dca", "\u0d94\u0d9a\u0dca", "\u0db1\u0ddc\u0dc0\u0dd0", "\u0daf\u0dd9\u0dc3\u0dd0"], WEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", 
"\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], STANDALONEWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4\u0dbb\u0dd4\u0dc0\u0dcf\u0daf\u0dcf", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", 
"\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca\u0db4\u0dad\u0dd2\u0db1\u0dca\u0daf\u0dcf", "\u0dc3\u0dd2\u0d9a\u0dd4\u0dbb\u0dcf\u0daf\u0dcf", "\u0dc3\u0dd9\u0db1\u0dc3\u0dd4\u0dbb\u0dcf\u0daf\u0dcf"], SHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", "\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], STANDALONESHORTWEEKDAYS:["\u0d89\u0dbb\u0dd2\u0daf\u0dcf", "\u0dc3\u0db3\u0dd4\u0daf\u0dcf", 
"\u0d85\u0d9f\u0dc4", "\u0db6\u0daf\u0dcf\u0daf\u0dcf", "\u0db6\u0dca\u200d\u0dbb\u0dc4\u0dc3\u0dca", "\u0dc3\u0dd2\u0d9a\u0dd4", "\u0dc3\u0dd9\u0db1"], NARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], STANDALONENARROWWEEKDAYS:["\u0d89", "\u0dc3", "\u0d85", "\u0db6", "\u0db6\u0dca\u200d\u0dbb", "\u0dc3\u0dd2", "\u0dc3\u0dd9"], SHORTQUARTERS:["\u0d9a\u0dcf\u0dbb\u0dca:1", "\u0d9a\u0dcf\u0dbb\u0dca:2", "\u0d9a\u0dcf\u0dbb\u0dca:3", 
"\u0d9a\u0dcf\u0dbb\u0dca:4"], QUARTERS:["1 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "2 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "3 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0", "4 \u0dc0\u0db1 \u0d9a\u0dcf\u0dbb\u0dca\u0dad\u0dd4\u0dc0"], AMPMS:["\u0db4\u0dd9.\u0dc0.", "\u0db4.\u0dc0."], DATEFORMATS:["y MMMM d, EEEE", "y MMMM d", "y MMM d", "y-MM-dd"], TIMEFORMATS:["a h.mm.ss zzzz", "a h.mm.ss z", "a h.mm.ss", "a h.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sk = {ERAS:["pred Kr.", "po Kr."], ERANAMES:["pred Kristom", "po Kristovi"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["janu\u00e1ra", "febru\u00e1ra", "marca", "apr\u00edla", "m\u00e1ja", "j\u00fana", "j\u00fala", "augusta", "septembra", "okt\u00f3bra", "novembra", "decembra"], STANDALONEMONTHS:["janu\u00e1r", "febru\u00e1r", "marec", "apr\u00edl", 
"m\u00e1j", "j\u00fan", "j\u00fal", "august", "september", "okt\u00f3ber", "november", "december"], SHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "m\u00e1j", "j\u00fan", "j\u00fal", "aug", "sep", "okt", "nov", "dec"], WEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", "piatok", "sobota"], STANDALONEWEEKDAYS:["nede\u013ea", "pondelok", "utorok", "streda", "\u0161tvrtok", 
"piatok", "sobota"], SHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], STANDALONESHORTWEEKDAYS:["ne", "po", "ut", "st", "\u0161t", "pi", "so"], NARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], STANDALONENARROWWEEKDAYS:["N", "P", "U", "S", "\u0160", "P", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u0161tvr\u0165rok", "2. \u0161tvr\u0165rok", "3. \u0161tvr\u0165rok", "4. \u0161tvr\u0165rok"], AMPMS:["dopoludnia", "odpoludnia"], DATEFORMATS:["EEEE, d. MMMM y", "d. MMMM y", 
"d. M. y", "dd.MM.yy"], TIMEFORMATS:["H:mm:ss zzzz", "H:mm:ss z", "H:mm:ss", "H:mm"], DATETIMEFORMATS:["{1}, {0}", "{1}, {0}", "{1}, {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sl = {ERAS:["pr. n. \u0161t.", "po Kr."], ERANAMES:["pred na\u0161im \u0161tetjem", "na\u0161e \u0161tetje"], NARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], STANDALONENARROWMONTHS:["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"], MONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", "avgust", "september", "oktober", "november", "december"], STANDALONEMONTHS:["januar", "februar", "marec", "april", "maj", "junij", "julij", 
"avgust", "september", "oktober", "november", "december"], SHORTMONTHS:["jan.", "feb.", "mar.", "apr.", "maj", "jun.", "jul.", "avg.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["jan", "feb", "mar", "apr", "maj", "jun", "jul", "avg", "sep", "okt", "nov", "dec"], WEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], STANDALONEWEEKDAYS:["nedelja", "ponedeljek", "torek", "sreda", "\u010detrtek", "petek", "sobota"], SHORTWEEKDAYS:["ned.", "pon.", "tor.", 
"sre.", "\u010det.", "pet.", "sob."], STANDALONESHORTWEEKDAYS:["ned", "pon", "tor", "sre", "\u010det", "pet", "sob"], NARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], STANDALONENARROWWEEKDAYS:["n", "p", "t", "s", "\u010d", "p", "s"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["1. \u010detrtletje", "2. \u010detrtletje", "3. \u010detrtletje", "4. \u010detrtletje"], AMPMS:["dop.", "pop."], DATEFORMATS:["EEEE, dd. MMMM y", "dd. MMMM y", "d. MMM y", "d. MM. yy"], TIMEFORMATS:["HH:mm:ss zzzz", 
"HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sq = {ERAS:["p.e.r.", "e.r."], ERANAMES:["para er\u00ebs s\u00eb re", "er\u00ebs s\u00eb re"], NARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], STANDALONENARROWMONTHS:["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"], MONTHS:["janar", "shkurt", "mars", "prill", "maj", "qershor", "korrik", "gusht", "shtator", "tetor", "n\u00ebntor", "dhjetor"], STANDALONEMONTHS:["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", 
"Tetor", "N\u00ebntor", "Dhjetor"], SHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], STANDALONESHORTMONTHS:["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Kor", "Gsh", "Sht", "Tet", "N\u00ebn", "Dhj"], WEEKDAYS:["e diel", "e h\u00ebn\u00eb", "e mart\u00eb", "e m\u00ebrkur\u00eb", "e enjte", "e premte", "e shtun\u00eb"], STANDALONEWEEKDAYS:["E diel", "E h\u00ebn\u00eb", "E mart\u00eb", "E m\u00ebrkur\u00eb", "E enjte", "E premte", "E shtun\u00eb"], 
SHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], STANDALONESHORTWEEKDAYS:["Die", "H\u00ebn", "Mar", "M\u00ebr", "Enj", "Pre", "Sht"], NARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], STANDALONENARROWWEEKDAYS:["D", "H", "M", "M", "E", "P", "S"], SHORTQUARTERS:["tremujori I", "tremujori II", "tremujori III", "tremujori IV"], QUARTERS:["tremujori i par\u00eb", "tremujori i dyt\u00eb", "tremujori i tret\u00eb", "tremujori i kat\u00ebrt"], AMPMS:["paradite", "pasdite"], DATEFORMATS:["EEEE, d MMMM y", 
"d MMMM y", "d MMM y", "d.M.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} 'n\u00eb' {0}", "{1} 'n\u00eb' {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sr = {ERAS:["\u043f. \u043d. \u0435.", "\u043d. \u0435."], ERANAMES:["\u041f\u0440\u0435 \u043d\u043e\u0432\u0435 \u0435\u0440\u0435", "\u041d\u043e\u0432\u0435 \u0435\u0440\u0435"], NARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], STANDALONENARROWMONTHS:["\u0458", "\u0444", "\u043c", "\u0430", "\u043c", "\u0458", "\u0458", "\u0430", "\u0441", "\u043e", "\u043d", "\u0434"], MONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", 
"\u0444\u0435\u0431\u0440\u0443\u0430\u0440", "\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], STANDALONEMONTHS:["\u0458\u0430\u043d\u0443\u0430\u0440", "\u0444\u0435\u0431\u0440\u0443\u0430\u0440", 
"\u043c\u0430\u0440\u0442", "\u0430\u043f\u0440\u0438\u043b", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433\u0443\u0441\u0442", "\u0441\u0435\u043f\u0442\u0435\u043c\u0431\u0430\u0440", "\u043e\u043a\u0442\u043e\u0431\u0430\u0440", "\u043d\u043e\u0432\u0435\u043c\u0431\u0430\u0440", "\u0434\u0435\u0446\u0435\u043c\u0431\u0430\u0440"], SHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", 
"\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], STANDALONESHORTMONTHS:["\u0458\u0430\u043d", "\u0444\u0435\u0431", "\u043c\u0430\u0440", "\u0430\u043f\u0440", "\u043c\u0430\u0458", "\u0458\u0443\u043d", "\u0458\u0443\u043b", "\u0430\u0432\u0433", "\u0441\u0435\u043f", "\u043e\u043a\u0442", "\u043d\u043e\u0432", "\u0434\u0435\u0446"], WEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", 
"\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u043d\u0435\u0434\u0435\u0459\u0430", "\u043f\u043e\u043d\u0435\u0434\u0435\u0459\u0430\u043a", "\u0443\u0442\u043e\u0440\u0430\u043a", "\u0441\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0440\u0442\u0430\u043a", "\u043f\u0435\u0442\u0430\u043a", "\u0441\u0443\u0431\u043e\u0442\u0430"], 
SHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], STANDALONESHORTWEEKDAYS:["\u043d\u0435\u0434", "\u043f\u043e\u043d", "\u0443\u0442\u043e", "\u0441\u0440\u0435", "\u0447\u0435\u0442", "\u043f\u0435\u0442", "\u0441\u0443\u0431"], NARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", "\u0447", "\u043f", "\u0441"], STANDALONENARROWWEEKDAYS:["\u043d", "\u043f", "\u0443", "\u0441", 
"\u0447", "\u043f", "\u0441"], SHORTQUARTERS:["\u041a1", "\u041a2", "\u041a3", "\u041a4"], QUARTERS:["\u041f\u0440\u0432\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0414\u0440\u0443\u0433\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0422\u0440\u0435\u045b\u0435 \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435", "\u0427\u0435\u0442\u0432\u0440\u0442\u043e \u0442\u0440\u043e\u043c\u0435\u0441\u0435\u0447\u0458\u0435"], AMPMS:["\u043f\u0440\u0435 \u043f\u043e\u0434\u043d\u0435", 
"\u043f\u043e \u043f\u043e\u0434\u043d\u0435"], DATEFORMATS:["EEEE, dd. MMMM y.", "dd. MMMM y.", "dd.MM.y.", "d.M.yy."], TIMEFORMATS:["HH.mm.ss zzzz", "HH.mm.ss z", "HH.mm.ss", "HH.mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_sv = {ERAS:["f.Kr.", "e.Kr."], ERANAMES:["f\u00f6re Kristus", "efter Kristus"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"], STANDALONEMONTHS:["Januari", "Februari", "Mars", "April", "Maj", "Juni", "Juli", "Augusti", "September", 
"Oktober", "November", "December"], SHORTMONTHS:["jan.", "feb.", "mars", "apr.", "maj", "juni", "juli", "aug.", "sep.", "okt.", "nov.", "dec."], STANDALONESHORTMONTHS:["Jan.", "Feb.", "Mars", "Apr.", "Maj", "Juni", "Juli", "Aug.", "Sep.", "Okt.", "Nov.", "Dec."], WEEKDAYS:["s\u00f6ndag", "m\u00e5ndag", "tisdag", "onsdag", "torsdag", "fredag", "l\u00f6rdag"], STANDALONEWEEKDAYS:["S\u00f6ndag", "M\u00e5ndag", "Tisdag", "Onsdag", "Torsdag", "Fredag", "L\u00f6rdag"], SHORTWEEKDAYS:["s\u00f6n", "m\u00e5n", 
"tis", "ons", "tors", "fre", "l\u00f6r"], STANDALONESHORTWEEKDAYS:["S\u00f6n", "M\u00e5n", "Tis", "Ons", "Tor", "Fre", "L\u00f6r"], NARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "O", "T", "F", "L"], SHORTQUARTERS:["K1", "K2", "K3", "K4"], QUARTERS:["1:a kvartalet", "2:a kvartalet", "3:e kvartalet", "4:e kvartalet"], AMPMS:["fm", "em"], DATEFORMATS:["EEEE d MMMM y", "d MMMM y", "d MMM y", "y-MM-dd"], TIMEFORMATS:["'kl'. HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", 
"HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:3};
goog.i18n.DateTimeSymbols_sw = {ERAS:["BC", "AD"], ERANAMES:["Kabla ya Kristo", "Baada ya Kristo"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"], STANDALONEMONTHS:["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", 
"Novemba", "Desemba"], SHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"], WEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], STANDALONEWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], SHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", 
"Jumamosi"], STANDALONESHORTWEEKDAYS:["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["R1", "R2", "R3", "R4"], QUARTERS:["Robo ya 1", "Robo ya 2", "Robo ya 3", "Robo ya 4"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, d MMMM y", "d MMMM y", "d MMM y", "dd/MM/y"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", 
"{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ta = {ERAS:["\u0b95\u0bbf.\u0bae\u0bc1.", "\u0b95\u0bbf.\u0baa\u0bbf."], ERANAMES:["\u0b95\u0bbf\u0bb1\u0bbf\u0bb8\u0bcd\u0ba4\u0bc1\u0bb5\u0bc1\u0b95\u0bcd\u0b95\u0bc1 \u0bae\u0bc1\u0ba9\u0bcd", "\u0b85\u0ba9\u0bcb \u0b9f\u0bcb\u0bae\u0bbf\u0ba9\u0bbf"], NARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", "\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], STANDALONENARROWMONTHS:["\u0b9c", "\u0baa\u0bbf", 
"\u0bae\u0bbe", "\u0b8f", "\u0bae\u0bc7", "\u0b9c\u0bc2", "\u0b9c\u0bc2", "\u0b86", "\u0b9a\u0bc6", "\u0b85", "\u0ba8", "\u0b9f\u0bbf"], MONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bcd", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], STANDALONEMONTHS:["\u0b9c\u0ba9\u0bb5\u0bb0\u0bbf", "\u0baa\u0bbf\u0baa\u0bcd\u0bb0\u0bb5\u0bb0\u0bbf", "\u0bae\u0bbe\u0bb0\u0bcd\u0b9a\u0bcd", "\u0b8f\u0baa\u0bcd\u0bb0\u0bb2\u0bcd", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95\u0bb8\u0bcd\u0b9f\u0bc1", "\u0b9a\u0bc6\u0baa\u0bcd\u0b9f\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b85\u0b95\u0bcd\u0b9f\u0bcb\u0baa\u0bb0\u0bcd", 
"\u0ba8\u0bb5\u0bae\u0bcd\u0baa\u0bb0\u0bcd", "\u0b9f\u0bbf\u0b9a\u0bae\u0bcd\u0baa\u0bb0\u0bcd"], SHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", "\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], STANDALONESHORTMONTHS:["\u0b9c\u0ba9.", "\u0baa\u0bbf\u0baa\u0bcd.", "\u0bae\u0bbe\u0bb0\u0bcd.", "\u0b8f\u0baa\u0bcd.", 
"\u0bae\u0bc7", "\u0b9c\u0bc2\u0ba9\u0bcd", "\u0b9c\u0bc2\u0bb2\u0bc8", "\u0b86\u0b95.", "\u0b9a\u0bc6\u0baa\u0bcd.", "\u0b85\u0b95\u0bcd.", "\u0ba8\u0bb5.", "\u0b9f\u0bbf\u0b9a."], WEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", "\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], STANDALONEWEEKDAYS:["\u0b9e\u0bbe\u0baf\u0bbf\u0bb1\u0bc1", 
"\u0ba4\u0bbf\u0b99\u0bcd\u0b95\u0bb3\u0bcd", "\u0b9a\u0bc6\u0bb5\u0bcd\u0bb5\u0bbe\u0baf\u0bcd", "\u0baa\u0bc1\u0ba4\u0ba9\u0bcd", "\u0bb5\u0bbf\u0baf\u0bbe\u0bb4\u0ba9\u0bcd", "\u0bb5\u0bc6\u0bb3\u0bcd\u0bb3\u0bbf", "\u0b9a\u0ba9\u0bbf"], SHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONESHORTWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], NARROWWEEKDAYS:["\u0b9e\u0bbe", 
"\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], STANDALONENARROWWEEKDAYS:["\u0b9e\u0bbe", "\u0ba4\u0bbf", "\u0b9a\u0bc6", "\u0baa\u0bc1", "\u0bb5\u0bbf", "\u0bb5\u0bc6", "\u0b9a"], SHORTQUARTERS:["\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc11", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc12", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc13", "\u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc14"], QUARTERS:["\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", 
"\u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0bae\u0bc2\u0ba9\u0bcd\u0bb1\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1", "\u0ba8\u0bbe\u0ba9\u0bcd\u0b95\u0bbe\u0bae\u0bcd \u0b95\u0bbe\u0bb2\u0bbe\u0ba3\u0bcd\u0b9f\u0bc1"], AMPMS:["\u0bae\u0bc1\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd", "\u0baa\u0bbf\u0bb1\u0bcd\u0baa\u0b95\u0bb2\u0bcd"], DATEFORMATS:["EEEE, d MMMM, y", "d MMMM, y", "d MMM, y", "d-M-yy"], TIMEFORMATS:["h:mm:ss a zzzz", 
"h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} \u2019\u0b85\u0ba9\u0bcd\u0bb1\u0bc1\u2019 {0}", "{1} \u2019\u0b85\u0ba9\u0bcd\u0bb1\u0bc1\u2019 {0}", "{1}, {0}", "{1}, {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_te = {ERAS:["\u0c15\u0c4d\u0c30\u0c40\u0c2a\u0c42", "\u0c15\u0c4d\u0c30\u0c40\u0c36"], ERANAMES:["\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41 \u0c2a\u0c42\u0c30\u0c4d\u0c35\u0c02", "\u0c15\u0c4d\u0c30\u0c40\u0c38\u0c4d\u0c24\u0c41 \u0c36\u0c15\u0c02"], NARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", "\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], STANDALONENARROWMONTHS:["\u0c1c", "\u0c2b\u0c3f", 
"\u0c2e\u0c3e", "\u0c0f", "\u0c2e\u0c47", "\u0c1c\u0c42", "\u0c1c\u0c41", "\u0c06", "\u0c38\u0c46", "\u0c05", "\u0c28", "\u0c21\u0c3f"], MONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", 
"\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], STANDALONEMONTHS:["\u0c1c\u0c28\u0c35\u0c30\u0c3f", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30\u0c35\u0c30\u0c3f", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f\u0c32\u0c4d", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02\u0c2c\u0c30\u0c4d", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b\u0c2c\u0c30\u0c4d", 
"\u0c28\u0c35\u0c02\u0c2c\u0c30\u0c4d", "\u0c21\u0c3f\u0c38\u0c46\u0c02\u0c2c\u0c30\u0c4d"], SHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", "\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], STANDALONESHORTMONTHS:["\u0c1c\u0c28", "\u0c2b\u0c3f\u0c2c\u0c4d\u0c30", 
"\u0c2e\u0c3e\u0c30\u0c4d\u0c1a\u0c3f", "\u0c0f\u0c2a\u0c4d\u0c30\u0c3f", "\u0c2e\u0c47", "\u0c1c\u0c42\u0c28\u0c4d", "\u0c1c\u0c41\u0c32\u0c48", "\u0c06\u0c17\u0c38\u0c4d\u0c1f\u0c41", "\u0c38\u0c46\u0c2a\u0c4d\u0c1f\u0c46\u0c02", "\u0c05\u0c15\u0c4d\u0c1f\u0c4b", "\u0c28\u0c35\u0c02", "\u0c21\u0c3f\u0c38\u0c46\u0c02"], WEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", 
"\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], STANDALONEWEEKDAYS:["\u0c06\u0c26\u0c3f\u0c35\u0c3e\u0c30\u0c02", "\u0c38\u0c4b\u0c2e\u0c35\u0c3e\u0c30\u0c02", "\u0c2e\u0c02\u0c17\u0c33\u0c35\u0c3e\u0c30\u0c02", "\u0c2c\u0c41\u0c27\u0c35\u0c3e\u0c30\u0c02", "\u0c17\u0c41\u0c30\u0c41\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c41\u0c15\u0c4d\u0c30\u0c35\u0c3e\u0c30\u0c02", "\u0c36\u0c28\u0c3f\u0c35\u0c3e\u0c30\u0c02"], 
SHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], STANDALONESHORTWEEKDAYS:["\u0c06\u0c26\u0c3f", "\u0c38\u0c4b\u0c2e", "\u0c2e\u0c02\u0c17\u0c33", "\u0c2c\u0c41\u0c27", "\u0c17\u0c41\u0c30\u0c41", "\u0c36\u0c41\u0c15\u0c4d\u0c30", "\u0c36\u0c28\u0c3f"], NARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], 
STANDALONENARROWWEEKDAYS:["\u0c06", "\u0c38\u0c4b", "\u0c2e", "\u0c2c\u0c41", "\u0c17\u0c41", "\u0c36\u0c41", "\u0c36"], SHORTQUARTERS:["\u0c24\u0c4d\u0c30\u0c481", "\u0c24\u0c4d\u0c30\u0c482", "\u0c24\u0c4d\u0c30\u0c483", "\u0c24\u0c4d\u0c30\u0c484"], QUARTERS:["1\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "2\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "3\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02", "4\u0c35 \u0c24\u0c4d\u0c30\u0c48\u0c2e\u0c3e\u0c38\u0c02"], 
AMPMS:["[AM]", "[PM]"], DATEFORMATS:["d, MMMM y, EEEE", "d MMMM, y", "d MMM, y", "dd-MM-yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[6, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_th = {ERAS:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19 \u0e04.\u0e28.", "\u0e04.\u0e28."], ERANAMES:["\u0e1b\u0e35\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a", "\u0e04\u0e23\u0e34\u0e2a\u0e15\u0e4c\u0e28\u0e31\u0e01\u0e23\u0e32\u0e0a"], NARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", 
"\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONENARROWMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], MONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", "\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", 
"\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], STANDALONEMONTHS:["\u0e21\u0e01\u0e23\u0e32\u0e04\u0e21", "\u0e01\u0e38\u0e21\u0e20\u0e32\u0e1e\u0e31\u0e19\u0e18\u0e4c", 
"\u0e21\u0e35\u0e19\u0e32\u0e04\u0e21", "\u0e40\u0e21\u0e29\u0e32\u0e22\u0e19", "\u0e1e\u0e24\u0e29\u0e20\u0e32\u0e04\u0e21", "\u0e21\u0e34\u0e16\u0e38\u0e19\u0e32\u0e22\u0e19", "\u0e01\u0e23\u0e01\u0e0e\u0e32\u0e04\u0e21", "\u0e2a\u0e34\u0e07\u0e2b\u0e32\u0e04\u0e21", "\u0e01\u0e31\u0e19\u0e22\u0e32\u0e22\u0e19", "\u0e15\u0e38\u0e25\u0e32\u0e04\u0e21", "\u0e1e\u0e24\u0e28\u0e08\u0e34\u0e01\u0e32\u0e22\u0e19", "\u0e18\u0e31\u0e19\u0e27\u0e32\u0e04\u0e21"], SHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", 
"\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], STANDALONESHORTMONTHS:["\u0e21.\u0e04.", "\u0e01.\u0e1e.", "\u0e21\u0e35.\u0e04.", "\u0e40\u0e21.\u0e22.", "\u0e1e.\u0e04.", "\u0e21\u0e34.\u0e22.", "\u0e01.\u0e04.", "\u0e2a.\u0e04.", "\u0e01.\u0e22.", "\u0e15.\u0e04.", "\u0e1e.\u0e22.", "\u0e18.\u0e04."], WEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", 
"\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", "\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], STANDALONEWEEKDAYS:["\u0e27\u0e31\u0e19\u0e2d\u0e32\u0e17\u0e34\u0e15\u0e22\u0e4c", "\u0e27\u0e31\u0e19\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e2d\u0e31\u0e07\u0e04\u0e32\u0e23", 
"\u0e27\u0e31\u0e19\u0e1e\u0e38\u0e18", "\u0e27\u0e31\u0e19\u0e1e\u0e24\u0e2b\u0e31\u0e2a\u0e1a\u0e14\u0e35", "\u0e27\u0e31\u0e19\u0e28\u0e38\u0e01\u0e23\u0e4c", "\u0e27\u0e31\u0e19\u0e40\u0e2a\u0e32\u0e23\u0e4c"], SHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], STANDALONESHORTWEEKDAYS:["\u0e2d\u0e32.", "\u0e08.", "\u0e2d.", "\u0e1e.", "\u0e1e\u0e24.", "\u0e28.", "\u0e2a."], NARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", 
"\u0e28", "\u0e2a"], STANDALONENARROWWEEKDAYS:["\u0e2d\u0e32", "\u0e08", "\u0e2d", "\u0e1e", "\u0e1e\u0e24", "\u0e28", "\u0e2a"], SHORTQUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], QUARTERS:["\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 1", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 2", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 3", "\u0e44\u0e15\u0e23\u0e21\u0e32\u0e2a 4"], AMPMS:["\u0e01\u0e48\u0e2d\u0e19\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07", 
"\u0e2b\u0e25\u0e31\u0e07\u0e40\u0e17\u0e35\u0e48\u0e22\u0e07"], DATEFORMATS:["EEEE\u0e17\u0e35\u0e48 d MMMM G y", "d MMMM G y", "d MMM y", "d/M/yy"], TIMEFORMATS:["H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 zzzz", "H \u0e19\u0e32\u0e2c\u0e34\u0e01\u0e32 mm \u0e19\u0e32\u0e17\u0e35 ss \u0e27\u0e34\u0e19\u0e32\u0e17\u0e35 z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tl = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["E", "P", "M", "A", "M", "H", "H", "A", "S", "O", "N", "D"], MONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], STANDALONEMONTHS:["Enero", "Pebrero", "Marso", "Abril", "Mayo", "Hunyo", "Hulyo", "Agosto", "Setyembre", "Oktubre", "Nobyembre", "Disyembre"], 
SHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], STANDALONESHORTMONTHS:["Ene", "Peb", "Mar", "Abr", "May", "Hun", "Hul", "Ago", "Set", "Okt", "Nob", "Dis"], WEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], STANDALONEWEEKDAYS:["Linggo", "Lunes", "Martes", "Miyerkules", "Huwebes", "Biyernes", "Sabado"], SHORTWEEKDAYS:["Lin", "Lun", "Mar", "Miy", "Huw", "Biy", "Sab"], STANDALONESHORTWEEKDAYS:["Lin", "Lun", "Mar", 
"Miy", "Huw", "Biy", "Sab"], NARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], STANDALONENARROWWEEKDAYS:["L", "L", "M", "M", "H", "B", "S"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ika-1 quarter", "ika-2 quarter", "ika-3 quarter", "ika-4 na quarter"], AMPMS:["AM", "PM"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} 'nang' {0}", "{1} 'nang' {0}", "{1}, {0}", "{1}, {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_tr = {ERAS:["M\u00d6", "MS"], ERANAMES:["Milattan \u00d6nce", "Milattan Sonra"], NARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], STANDALONENARROWMONTHS:["O", "\u015e", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"], MONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", "Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], STANDALONEMONTHS:["Ocak", "\u015eubat", "Mart", "Nisan", "May\u0131s", "Haziran", 
"Temmuz", "A\u011fustos", "Eyl\u00fcl", "Ekim", "Kas\u0131m", "Aral\u0131k"], SHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], STANDALONESHORTMONTHS:["Oca", "\u015eub", "Mar", "Nis", "May", "Haz", "Tem", "A\u011fu", "Eyl", "Eki", "Kas", "Ara"], WEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", "Cuma", "Cumartesi"], STANDALONEWEEKDAYS:["Pazar", "Pazartesi", "Sal\u0131", "\u00c7ar\u015famba", "Per\u015fembe", 
"Cuma", "Cumartesi"], SHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], STANDALONESHORTWEEKDAYS:["Paz", "Pzt", "Sal", "\u00c7ar", "Per", "Cum", "Cmt"], NARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], STANDALONENARROWWEEKDAYS:["P", "P", "S", "\u00c7", "P", "C", "C"], SHORTQUARTERS:["\u00c71", "\u00c72", "\u00c73", "\u00c74"], QUARTERS:["1. \u00e7eyrek", "2. \u00e7eyrek", "3. \u00e7eyrek", "4. \u00e7eyrek"], AMPMS:["\u00d6\u00d6", "\u00d6S"], DATEFORMATS:["d MMMM y EEEE", 
"d MMMM y", "d MMM y", "d MM y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_uk = {ERAS:["\u0434\u043e \u043d.\u0435.", "\u043d.\u0435."], ERANAMES:["\u0434\u043e \u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438", "\u043d\u0430\u0448\u043e\u0457 \u0435\u0440\u0438"], NARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], STANDALONENARROWMONTHS:["\u0421", "\u041b", "\u0411", "\u041a", "\u0422", "\u0427", "\u041b", "\u0421", "\u0412", "\u0416", "\u041b", "\u0413"], MONTHS:["\u0441\u0456\u0447\u043d\u044f", 
"\u043b\u044e\u0442\u043e\u0433\u043e", "\u0431\u0435\u0440\u0435\u0437\u043d\u044f", "\u043a\u0432\u0456\u0442\u043d\u044f", "\u0442\u0440\u0430\u0432\u043d\u044f", "\u0447\u0435\u0440\u0432\u043d\u044f", "\u043b\u0438\u043f\u043d\u044f", "\u0441\u0435\u0440\u043f\u043d\u044f", "\u0432\u0435\u0440\u0435\u0441\u043d\u044f", "\u0436\u043e\u0432\u0442\u043d\u044f", "\u043b\u0438\u0441\u0442\u043e\u043f\u0430\u0434\u0430", "\u0433\u0440\u0443\u0434\u043d\u044f"], STANDALONEMONTHS:["\u0421\u0456\u0447\u0435\u043d\u044c", 
"\u041b\u044e\u0442\u0438\u0439", "\u0411\u0435\u0440\u0435\u0437\u0435\u043d\u044c", "\u041a\u0432\u0456\u0442\u0435\u043d\u044c", "\u0422\u0440\u0430\u0432\u0435\u043d\u044c", "\u0427\u0435\u0440\u0432\u0435\u043d\u044c", "\u041b\u0438\u043f\u0435\u043d\u044c", "\u0421\u0435\u0440\u043f\u0435\u043d\u044c", "\u0412\u0435\u0440\u0435\u0441\u0435\u043d\u044c", "\u0416\u043e\u0432\u0442\u0435\u043d\u044c", "\u041b\u0438\u0441\u0442\u043e\u043f\u0430\u0434", "\u0413\u0440\u0443\u0434\u0435\u043d\u044c"], 
SHORTMONTHS:["\u0441\u0456\u0447.", "\u043b\u044e\u0442.", "\u0431\u0435\u0440.", "\u043a\u0432\u0456\u0442.", "\u0442\u0440\u0430\u0432.", "\u0447\u0435\u0440\u0432.", "\u043b\u0438\u043f.", "\u0441\u0435\u0440\u043f.", "\u0432\u0435\u0440.", "\u0436\u043e\u0432\u0442.", "\u043b\u0438\u0441\u0442.", "\u0433\u0440\u0443\u0434."], STANDALONESHORTMONTHS:["\u0421\u0456\u0447", "\u041b\u044e\u0442", "\u0411\u0435\u0440", "\u041a\u0432\u0456", "\u0422\u0440\u0430", "\u0427\u0435\u0440", "\u041b\u0438\u043f", 
"\u0421\u0435\u0440", "\u0412\u0435\u0440", "\u0416\u043e\u0432", "\u041b\u0438\u0441", "\u0413\u0440\u0443"], WEEKDAYS:["\u043d\u0435\u0434\u0456\u043b\u044f", "\u043f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0432\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0441\u0435\u0440\u0435\u0434\u0430", "\u0447\u0435\u0442\u0432\u0435\u0440", "\u043f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0441\u0443\u0431\u043e\u0442\u0430"], STANDALONEWEEKDAYS:["\u041d\u0435\u0434\u0456\u043b\u044f", 
"\u041f\u043e\u043d\u0435\u0434\u0456\u043b\u043e\u043a", "\u0412\u0456\u0432\u0442\u043e\u0440\u043e\u043a", "\u0421\u0435\u0440\u0435\u0434\u0430", "\u0427\u0435\u0442\u0432\u0435\u0440", "\u041f\u02bc\u044f\u0442\u043d\u0438\u0446\u044f", "\u0421\u0443\u0431\u043e\u0442\u0430"], SHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", "\u041f\u0442", "\u0421\u0431"], STANDALONESHORTWEEKDAYS:["\u041d\u0434", "\u041f\u043d", "\u0412\u0442", "\u0421\u0440", "\u0427\u0442", 
"\u041f\u0442", "\u0421\u0431"], NARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], STANDALONENARROWWEEKDAYS:["\u041d", "\u041f", "\u0412", "\u0421", "\u0427", "\u041f", "\u0421"], SHORTQUARTERS:["I \u043a\u0432.", "II \u043a\u0432.", "III \u043a\u0432.", "IV \u043a\u0432."], QUARTERS:["I \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "II \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "III \u043a\u0432\u0430\u0440\u0442\u0430\u043b", "IV \u043a\u0432\u0430\u0440\u0442\u0430\u043b"], 
AMPMS:["\u0434\u043f", "\u043f\u043f"], DATEFORMATS:["EEEE, d MMMM y '\u0440'.", "d MMMM y '\u0440'.", "d MMM y '\u0440'.", "dd.MM.yy"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_ur = {ERAS:["\u0642 \u0645", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], ERANAMES:["\u0642\u0628\u0644 \u0645\u0633\u06cc\u062d", "\u0639\u06cc\u0633\u0648\u06cc \u0633\u0646"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", 
"\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], STANDALONEMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", 
"\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], SHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", 
"\u062f\u0633\u0645\u0628\u0631"], STANDALONESHORTMONTHS:["\u062c\u0646\u0648\u0631\u06cc", "\u0641\u0631\u0648\u0631\u06cc", "\u0645\u0627\u0631\u0686", "\u0627\u067e\u0631\u06cc\u0644", "\u0645\u0626\u06cc", "\u062c\u0648\u0646", "\u062c\u0648\u0644\u0627\u0626\u06cc", "\u0627\u06af\u0633\u062a", "\u0633\u062a\u0645\u0628\u0631", "\u0627\u06a9\u062a\u0648\u0628\u0631", "\u0646\u0648\u0645\u0628\u0631", "\u062f\u0633\u0645\u0628\u0631"], WEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", 
"\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONEWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], SHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", 
"\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], STANDALONESHORTWEEKDAYS:["\u0627\u062a\u0648\u0627\u0631", "\u0633\u0648\u0645\u0648\u0627\u0631", "\u0645\u0646\u06af\u0644", "\u0628\u062f\u06be", "\u062c\u0645\u0639\u0631\u0627\u062a", "\u062c\u0645\u0639\u06c1", "\u06c1\u0641\u062a\u06c1"], NARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], STANDALONENARROWWEEKDAYS:["S", "M", "T", "W", "T", "F", "S"], SHORTQUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", 
"\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], QUARTERS:["\u067e\u06c1\u0644\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062f\u0648\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u062a\u06cc\u0633\u0631\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc", "\u0686\u0648\u062a\u0647\u06cc \u0633\u06c1 \u0645\u0627\u06c1\u06cc"], 
AMPMS:["\u0642\u0628\u0644 \u062f\u0648\u067e\u06c1\u0631", "\u0628\u0639\u062f \u062f\u0648\u067e\u06c1\u0631"], DATEFORMATS:["EEEE\u060c d MMMM\u060c y", "d MMMM\u060c y", "d MMM\u060c y", "d/M/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_uz = {ERAS:["M.A.", "E"], ERANAMES:["M.A.", "E"], NARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"], MONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"], STANDALONEMONTHS:["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"], SHORTMONTHS:["Yanv", 
"Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], STANDALONESHORTMONTHS:["Yanv", "Fev", "Mar", "Apr", "May", "Iyun", "Iyul", "Avg", "Sen", "Okt", "Noya", "Dek"], WEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], STANDALONEWEEKDAYS:["yakshanba", "dushanba", "seshanba", "chorshanba", "payshanba", "juma", "shanba"], SHORTWEEKDAYS:["Yaksh", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"], STANDALONESHORTWEEKDAYS:["Yaksh", "Dush", 
"Sesh", "Chor", "Pay", "Jum", "Shan"], NARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], STANDALONENARROWWEEKDAYS:["Y", "D", "S", "C", "P", "J", "S"], SHORTQUARTERS:["1-ch", "2-ch", "3-ch", "4-ch"], QUARTERS:["1-chorak", "2-chorak", "3-chorak", "4-chorak"], AMPMS:["TO", "TK"], DATEFORMATS:["EEEE, y MMMM dd", "y MMMM d", "y MMM d", "yy/MM/dd"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 
6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_vi = {ERAS:["tr. CN", "sau CN"], ERANAMES:["tr. CN", "sau CN"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["th\u00e1ng 1", "th\u00e1ng 2", "th\u00e1ng 3", "th\u00e1ng 4", "th\u00e1ng 5", "th\u00e1ng 6", "th\u00e1ng 7", "th\u00e1ng 8", "th\u00e1ng 9", "th\u00e1ng 10", "th\u00e1ng 11", "th\u00e1ng 12"], STANDALONEMONTHS:["Th\u00e1ng 1", "Th\u00e1ng 2", 
"Th\u00e1ng 3", "Th\u00e1ng 4", "Th\u00e1ng 5", "Th\u00e1ng 6", "Th\u00e1ng 7", "Th\u00e1ng 8", "Th\u00e1ng 9", "Th\u00e1ng 10", "Th\u00e1ng 11", "Th\u00e1ng 12"], SHORTMONTHS:["thg 1", "thg 2", "thg 3", "thg 4", "thg 5", "thg 6", "thg 7", "thg 8", "thg 9", "thg 10", "thg 11", "thg 12"], STANDALONESHORTMONTHS:["Thg 1", "Thg 2", "Thg 3", "Thg 4", "Thg 5", "Thg 6", "Thg 7", "Thg 8", "Thg 9", "Thg 10", "Thg 11", "Thg 12"], WEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", 
"Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], STANDALONEWEEKDAYS:["Ch\u1ee7 Nh\u1eadt", "Th\u1ee9 Hai", "Th\u1ee9 Ba", "Th\u1ee9 T\u01b0", "Th\u1ee9 N\u0103m", "Th\u1ee9 S\u00e1u", "Th\u1ee9 B\u1ea3y"], SHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], STANDALONESHORTWEEKDAYS:["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"], NARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], STANDALONENARROWWEEKDAYS:["CN", "T2", "T3", "T4", "T5", "T6", "T7"], SHORTQUARTERS:["Q1", 
"Q2", "Q3", "Q4"], QUARTERS:["Qu\u00fd 1", "Qu\u00fd 2", "Qu\u00fd 3", "Qu\u00fd 4"], AMPMS:["SA", "CH"], DATEFORMATS:["EEEE, 'ng\u00e0y' dd MMMM 'n\u0103m' y", "'Ng\u00e0y' dd 'th\u00e1ng' MM 'n\u0103m' y", "dd-MM-y", "dd/MM/y"], TIMEFORMATS:["HH:mm:ss zzzz", "HH:mm:ss z", "HH:mm:ss", "HH:mm"], DATETIMEFORMATS:["{0} {1}", "{0} {1}", "{0} {1}", "{0} {1}"], FIRSTDAYOFWEEK:0, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:6};
goog.i18n.DateTimeSymbols_zh = {ERAS:["\u516c\u5143\u524d", "\u516c\u5143"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], 
STANDALONEMONTHS:["\u4e00\u6708", "\u4e8c\u6708", "\u4e09\u6708", "\u56db\u6708", "\u4e94\u6708", "\u516d\u6708", "\u4e03\u6708", "\u516b\u6708", "\u4e5d\u6708", "\u5341\u6708", "\u5341\u4e00\u6708", "\u5341\u4e8c\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", 
"11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u5468\u65e5", "\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], STANDALONESHORTWEEKDAYS:["\u5468\u65e5", 
"\u5468\u4e00", "\u5468\u4e8c", "\u5468\u4e09", "\u5468\u56db", "\u5468\u4e94", "\u5468\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63\u5ea6", "2\u5b63\u5ea6", "3\u5b63\u5ea6", "4\u5b63\u5ea6"], QUARTERS:["\u7b2c\u4e00\u5b63\u5ea6", "\u7b2c\u4e8c\u5b63\u5ea6", "\u7b2c\u4e09\u5b63\u5ea6", "\u7b2c\u56db\u5b63\u5ea6"], AMPMS:["\u4e0a\u5348", 
"\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "yy/M/d"], TIMEFORMATS:["zzzz ah:mm:ss", "z ah:mm:ss", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_CN = goog.i18n.DateTimeSymbols_zh;
goog.i18n.DateTimeSymbols_zh_HK = {ERAS:["BC", "AD"], ERANAMES:["\u516c\u5143\u524d", "\u516c\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", 
"8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", 
"\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", 
"\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "d/M/yy"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", 
"{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zh_TW = {ERAS:["\u897f\u5143\u524d", "\u897f\u5143"], ERANAMES:["\u897f\u5143\u524d", "\u897f\u5143"], NARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], STANDALONENARROWMONTHS:["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"], MONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONEMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", 
"5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], SHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], STANDALONESHORTMONTHS:["1\u6708", "2\u6708", "3\u6708", "4\u6708", "5\u6708", "6\u6708", "7\u6708", "8\u6708", "9\u6708", "10\u6708", "11\u6708", "12\u6708"], WEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", 
"\u661f\u671f\u4e94", "\u661f\u671f\u516d"], STANDALONEWEEKDAYS:["\u661f\u671f\u65e5", "\u661f\u671f\u4e00", "\u661f\u671f\u4e8c", "\u661f\u671f\u4e09", "\u661f\u671f\u56db", "\u661f\u671f\u4e94", "\u661f\u671f\u516d"], SHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], STANDALONESHORTWEEKDAYS:["\u9031\u65e5", "\u9031\u4e00", "\u9031\u4e8c", "\u9031\u4e09", "\u9031\u56db", "\u9031\u4e94", "\u9031\u516d"], NARROWWEEKDAYS:["\u65e5", 
"\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], STANDALONENARROWWEEKDAYS:["\u65e5", "\u4e00", "\u4e8c", "\u4e09", "\u56db", "\u4e94", "\u516d"], SHORTQUARTERS:["1\u5b63", "2\u5b63", "3\u5b63", "4\u5b63"], QUARTERS:["\u7b2c1\u5b63", "\u7b2c2\u5b63", "\u7b2c3\u5b63", "\u7b2c4\u5b63"], AMPMS:["\u4e0a\u5348", "\u4e0b\u5348"], DATEFORMATS:["y\u5e74M\u6708d\u65e5 EEEE", "y\u5e74M\u6708d\u65e5", "y\u5e74M\u6708d\u65e5", "y/M/d"], TIMEFORMATS:["ah:mm:ss [zzzz]", "ah:mm:ss [z]", "ah:mm:ss", "ah:mm"], 
DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
goog.i18n.DateTimeSymbols_zu = {ERAS:["BC", "AD"], ERANAMES:["BC", "AD"], NARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], STANDALONENARROWMONTHS:["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], MONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", "Disemba"], STANDALONEMONTHS:["Januwari", "Februwari", "Mashi", "Apreli", "Meyi", "Juni", "Julayi", "Agasti", "Septhemba", "Okthoba", "Novemba", 
"Disemba"], SHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], STANDALONESHORTMONTHS:["Jan", "Feb", "Mas", "Apr", "Mey", "Jun", "Jul", "Aga", "Sep", "Okt", "Nov", "Dis"], WEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], STANDALONEWEEKDAYS:["Sonto", "Msombuluko", "Lwesibili", "Lwesithathu", "Lwesine", "Lwesihlanu", "Mgqibelo"], SHORTWEEKDAYS:["Son", "Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], STANDALONESHORTWEEKDAYS:["Son", 
"Mso", "Bil", "Tha", "Sin", "Hla", "Mgq"], NARROWWEEKDAYS:["S", "M", "T", "T", "S", "H", "M"], STANDALONENARROWWEEKDAYS:["S", "M", "B", "T", "S", "H", "M"], SHORTQUARTERS:["Q1", "Q2", "Q3", "Q4"], QUARTERS:["ikota engu-1", "ikota engu-2", "ikota engu-3", "ikota engu-4"], AMPMS:["Ekuseni", "Ntambama"], DATEFORMATS:["EEEE, MMMM d, y", "MMMM d, y", "MMM d, y", "M/d/yy"], TIMEFORMATS:["h:mm:ss a zzzz", "h:mm:ss a z", "h:mm:ss a", "h:mm a"], DATETIMEFORMATS:["{1} {0}", "{1} {0}", "{1} {0}", "{1} {0}"], 
FIRSTDAYOFWEEK:6, WEEKENDRANGE:[5, 6], FIRSTWEEKCUTOFFDAY:5};
if (goog.LOCALE == "af") {
  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_af;
} else {
  if (goog.LOCALE == "am") {
    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_am;
  } else {
    if (goog.LOCALE == "ar") {
      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ar;
    } else {
      if (goog.LOCALE == "az") {
        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_az;
      } else {
        if (goog.LOCALE == "bg") {
          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bg;
        } else {
          if (goog.LOCALE == "bn") {
            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_bn;
          } else {
            if (goog.LOCALE == "br") {
              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_br;
            } else {
              if (goog.LOCALE == "ca") {
                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ca;
              } else {
                if (goog.LOCALE == "chr") {
                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_chr;
                } else {
                  if (goog.LOCALE == "cs") {
                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cs;
                  } else {
                    if (goog.LOCALE == "cy") {
                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_cy;
                    } else {
                      if (goog.LOCALE == "da") {
                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_da;
                      } else {
                        if (goog.LOCALE == "de") {
                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                        } else {
                          if (goog.LOCALE == "de_AT" || goog.LOCALE == "de-AT") {
                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de_AT;
                          } else {
                            if (goog.LOCALE == "de_CH" || goog.LOCALE == "de-CH") {
                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_de;
                            } else {
                              if (goog.LOCALE == "el") {
                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_el;
                              } else {
                                if (goog.LOCALE == "en") {
                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                } else {
                                  if (goog.LOCALE == "en_AU" || goog.LOCALE == "en-AU") {
                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_AU;
                                  } else {
                                    if (goog.LOCALE == "en_GB" || goog.LOCALE == "en-GB") {
                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_GB;
                                    } else {
                                      if (goog.LOCALE == "en_IE" || goog.LOCALE == "en-IE") {
                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IE;
                                      } else {
                                        if (goog.LOCALE == "en_IN" || goog.LOCALE == "en-IN") {
                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_IN;
                                        } else {
                                          if (goog.LOCALE == "en_SG" || goog.LOCALE == "en-SG") {
                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_SG;
                                          } else {
                                            if (goog.LOCALE == "en_US" || goog.LOCALE == "en-US") {
                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                            } else {
                                              if (goog.LOCALE == "en_ZA" || goog.LOCALE == "en-ZA") {
                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en_ZA;
                                              } else {
                                                if (goog.LOCALE == "es") {
                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                } else {
                                                  if (goog.LOCALE == "es_419" || goog.LOCALE == "es-419") {
                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es_419;
                                                  } else {
                                                    if (goog.LOCALE == "es_ES" || goog.LOCALE == "es-ES") {
                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_es;
                                                    } else {
                                                      if (goog.LOCALE == "et") {
                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_et;
                                                      } else {
                                                        if (goog.LOCALE == "eu") {
                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_eu;
                                                        } else {
                                                          if (goog.LOCALE == "fa") {
                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fa;
                                                          } else {
                                                            if (goog.LOCALE == "fi") {
                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fi;
                                                            } else {
                                                              if (goog.LOCALE == "fil") {
                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fil;
                                                              } else {
                                                                if (goog.LOCALE == "fr") {
                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr;
                                                                } else {
                                                                  if (goog.LOCALE == "fr_CA" || goog.LOCALE == "fr-CA") {
                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_fr_CA;
                                                                  } else {
                                                                    if (goog.LOCALE == "ga") {
                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ga;
                                                                    } else {
                                                                      if (goog.LOCALE == "gl") {
                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gl;
                                                                      } else {
                                                                        if (goog.LOCALE == "gsw") {
                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gsw;
                                                                        } else {
                                                                          if (goog.LOCALE == "gu") {
                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_gu;
                                                                          } else {
                                                                            if (goog.LOCALE == "haw") {
                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_haw;
                                                                            } else {
                                                                              if (goog.LOCALE == "he") {
                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_he;
                                                                              } else {
                                                                                if (goog.LOCALE == "hi") {
                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hi;
                                                                                } else {
                                                                                  if (goog.LOCALE == "hr") {
                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hr;
                                                                                  } else {
                                                                                    if (goog.LOCALE == "hu") {
                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hu;
                                                                                    } else {
                                                                                      if (goog.LOCALE == "hy") {
                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_hy;
                                                                                      } else {
                                                                                        if (goog.LOCALE == "id") {
                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_id;
                                                                                        } else {
                                                                                          if (goog.LOCALE == "in") {
                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_in;
                                                                                          } else {
                                                                                            if (goog.LOCALE == "is") {
                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_is;
                                                                                            } else {
                                                                                              if (goog.LOCALE == "it") {
                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_it;
                                                                                              } else {
                                                                                                if (goog.LOCALE == "iw") {
                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_iw;
                                                                                                } else {
                                                                                                  if (goog.LOCALE == "ja") {
                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ja;
                                                                                                  } else {
                                                                                                    if (goog.LOCALE == "ka") {
                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ka;
                                                                                                    } else {
                                                                                                      if (goog.LOCALE == "kk") {
                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kk;
                                                                                                      } else {
                                                                                                        if (goog.LOCALE == "km") {
                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_km;
                                                                                                        } else {
                                                                                                          if (goog.LOCALE == "kn") {
                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_kn;
                                                                                                          } else {
                                                                                                            if (goog.LOCALE == "ko") {
                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ko;
                                                                                                            } else {
                                                                                                              if (goog.LOCALE == "ky") {
                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ky;
                                                                                                              } else {
                                                                                                                if (goog.LOCALE == "ln") {
                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ln;
                                                                                                                } else {
                                                                                                                  if (goog.LOCALE == "lo") {
                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lo;
                                                                                                                  } else {
                                                                                                                    if (goog.LOCALE == "lt") {
                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lt;
                                                                                                                    } else {
                                                                                                                      if (goog.LOCALE == "lv") {
                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_lv;
                                                                                                                      } else {
                                                                                                                        if (goog.LOCALE == "mk") {
                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mk;
                                                                                                                        } else {
                                                                                                                          if (goog.LOCALE == "ml") {
                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ml;
                                                                                                                          } else {
                                                                                                                            if (goog.LOCALE == "mn") {
                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mn;
                                                                                                                            } else {
                                                                                                                              if (goog.LOCALE == "mr") {
                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mr;
                                                                                                                              } else {
                                                                                                                                if (goog.LOCALE == "ms") {
                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ms;
                                                                                                                                } else {
                                                                                                                                  if (goog.LOCALE == "mt") {
                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_mt;
                                                                                                                                  } else {
                                                                                                                                    if (goog.LOCALE == "my") {
                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_my;
                                                                                                                                    } else {
                                                                                                                                      if (goog.LOCALE == "nb") {
                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nb;
                                                                                                                                      } else {
                                                                                                                                        if (goog.LOCALE == "ne") {
                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ne;
                                                                                                                                        } else {
                                                                                                                                          if (goog.LOCALE == "nl") {
                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_nl;
                                                                                                                                          } else {
                                                                                                                                            if (goog.LOCALE == "no") {
                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                            } else {
                                                                                                                                              if (goog.LOCALE == "no_NO" || goog.LOCALE == "no-NO") {
                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_no;
                                                                                                                                              } else {
                                                                                                                                                if (goog.LOCALE == "or") {
                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_or;
                                                                                                                                                } else {
                                                                                                                                                  if (goog.LOCALE == "pa") {
                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pa;
                                                                                                                                                  } else {
                                                                                                                                                    if (goog.LOCALE == "pl") {
                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pl;
                                                                                                                                                    } else {
                                                                                                                                                      if (goog.LOCALE == "pt") {
                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                      } else {
                                                                                                                                                        if (goog.LOCALE == "pt_BR" || goog.LOCALE == "pt-BR") {
                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt;
                                                                                                                                                        } else {
                                                                                                                                                          if (goog.LOCALE == "pt_PT" || goog.LOCALE == "pt-PT") {
                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_pt_PT;
                                                                                                                                                          } else {
                                                                                                                                                            if (goog.LOCALE == "ro") {
                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ro;
                                                                                                                                                            } else {
                                                                                                                                                              if (goog.LOCALE == "ru") {
                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ru;
                                                                                                                                                              } else {
                                                                                                                                                                if (goog.LOCALE == "si") {
                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_si;
                                                                                                                                                                } else {
                                                                                                                                                                  if (goog.LOCALE == "sk") {
                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sk;
                                                                                                                                                                  } else {
                                                                                                                                                                    if (goog.LOCALE == "sl") {
                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sl;
                                                                                                                                                                    } else {
                                                                                                                                                                      if (goog.LOCALE == "sq") {
                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sq;
                                                                                                                                                                      } else {
                                                                                                                                                                        if (goog.LOCALE == "sr") {
                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sr;
                                                                                                                                                                        } else {
                                                                                                                                                                          if (goog.LOCALE == "sv") {
                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sv;
                                                                                                                                                                          } else {
                                                                                                                                                                            if (goog.LOCALE == "sw") {
                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_sw;
                                                                                                                                                                            } else {
                                                                                                                                                                              if (goog.LOCALE == "ta") {
                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ta;
                                                                                                                                                                              } else {
                                                                                                                                                                                if (goog.LOCALE == "te") {
                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_te;
                                                                                                                                                                                } else {
                                                                                                                                                                                  if (goog.LOCALE == "th") {
                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_th;
                                                                                                                                                                                  } else {
                                                                                                                                                                                    if (goog.LOCALE == "tl") {
                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tl;
                                                                                                                                                                                    } else {
                                                                                                                                                                                      if (goog.LOCALE == "tr") {
                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_tr;
                                                                                                                                                                                      } else {
                                                                                                                                                                                        if (goog.LOCALE == "uk") {
                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uk;
                                                                                                                                                                                        } else {
                                                                                                                                                                                          if (goog.LOCALE == "ur") {
                                                                                                                                                                                            goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_ur;
                                                                                                                                                                                          } else {
                                                                                                                                                                                            if (goog.LOCALE == "uz") {
                                                                                                                                                                                              goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_uz;
                                                                                                                                                                                            } else {
                                                                                                                                                                                              if (goog.LOCALE == "vi") {
                                                                                                                                                                                                goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_vi;
                                                                                                                                                                                              } else {
                                                                                                                                                                                                if (goog.LOCALE == "zh") {
                                                                                                                                                                                                  goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                } else {
                                                                                                                                                                                                  if (goog.LOCALE == "zh_CN" || goog.LOCALE == "zh-CN") {
                                                                                                                                                                                                    goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh;
                                                                                                                                                                                                  } else {
                                                                                                                                                                                                    if (goog.LOCALE == "zh_HK" || goog.LOCALE == "zh-HK") {
                                                                                                                                                                                                      goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_HK;
                                                                                                                                                                                                    } else {
                                                                                                                                                                                                      if (goog.LOCALE == "zh_TW" || goog.LOCALE == "zh-TW") {
                                                                                                                                                                                                        goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zh_TW;
                                                                                                                                                                                                      } else {
                                                                                                                                                                                                        if (goog.LOCALE == "zu") {
                                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_zu;
                                                                                                                                                                                                        } else {
                                                                                                                                                                                                          goog.i18n.DateTimeSymbols = goog.i18n.DateTimeSymbols_en;
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
;goog.provide("goog.date");
goog.provide("goog.date.Date");
goog.provide("goog.date.DateTime");
goog.provide("goog.date.Interval");
goog.provide("goog.date.month");
goog.provide("goog.date.weekDay");
goog.require("goog.asserts");
goog.require("goog.date.DateLike");
goog.require("goog.i18n.DateTimeSymbols");
goog.require("goog.string");
goog.date.weekDay = {MON:0, TUE:1, WED:2, THU:3, FRI:4, SAT:5, SUN:6};
goog.date.month = {JAN:0, FEB:1, MAR:2, APR:3, MAY:4, JUN:5, JUL:6, AUG:7, SEP:8, OCT:9, NOV:10, DEC:11};
goog.date.formatMonthAndYear = function(monthName, yearNum) {
  var MSG_MONTH_AND_YEAR = goog.getMsg("{$monthName} {$yearNum}", {"monthName":monthName, "yearNum":yearNum});
  return MSG_MONTH_AND_YEAR;
};
goog.date.splitDateStringRegex_ = new RegExp("^(\\d{4})(?:(?:-?(\\d{2})(?:-?(\\d{2}))?)|" + "(?:-?(\\d{3}))|(?:-?W(\\d{2})(?:-?([1-7]))?))?$");
goog.date.splitTimeStringRegex_ = /^(\d{2})(?::?(\d{2})(?::?(\d{2})(\.\d+)?)?)?$/;
goog.date.splitTimezoneStringRegex_ = /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/;
goog.date.splitDurationRegex_ = new RegExp("^(-)?P(?:(\\d+)Y)?(?:(\\d+)M)?(?:(\\d+)D)?" + "(T(?:(\\d+)H)?(?:(\\d+)M)?(?:(\\d+(?:\\.\\d+)?)S)?)?$");
goog.date.MS_PER_DAY = 24 * 60 * 60 * 1E3;
goog.date.isLeapYear = function(year) {
  return year % 4 == 0 && (year % 100 != 0 || year % 400 == 0);
};
goog.date.isLongIsoYear = function(year) {
  var n = 5 * year + 12 - 4 * (Math.floor(year / 100) - Math.floor(year / 400));
  n += Math.floor((year - 100) / 400) - Math.floor((year - 102) / 400);
  n += Math.floor((year - 200) / 400) - Math.floor((year - 199) / 400);
  return n % 28 < 5;
};
goog.date.getNumberOfDaysInMonth = function(year, month) {
  switch(month) {
    case goog.date.month.FEB:
      return goog.date.isLeapYear(year) ? 29 : 28;
    case goog.date.month.JUN:
    ;
    case goog.date.month.SEP:
    ;
    case goog.date.month.NOV:
    ;
    case goog.date.month.APR:
      return 30;
  }
  return 31;
};
goog.date.isSameDay = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getDate() == now.getDate() && goog.date.isSameMonth(date, now);
};
goog.date.isSameMonth = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getMonth() == now.getMonth() && goog.date.isSameYear(date, now);
};
goog.date.isSameYear = function(date, opt_now) {
  var now = opt_now || new Date(goog.now());
  return date.getFullYear() == now.getFullYear();
};
goog.date.getWeekNumber = function(year, month, date, opt_weekDay, opt_firstDayOfWeek) {
  var d = new Date(year, month, date);
  var cutoff = opt_weekDay || goog.date.weekDay.THU;
  var firstday = opt_firstDayOfWeek || goog.date.weekDay.MON;
  var isoday = (d.getDay() + 6) % 7;
  var daypos = (isoday - firstday + 7) % 7;
  var cutoffpos = (cutoff - firstday + 7) % 7;
  var cutoffSameWeek = d.valueOf() + (cutoffpos - daypos) * goog.date.MS_PER_DAY;
  var jan1 = (new Date((new Date(cutoffSameWeek)).getFullYear(), 0, 1)).valueOf();
  return Math.floor(Math.round((cutoffSameWeek - jan1) / goog.date.MS_PER_DAY) / 7) + 1;
};
goog.date.min = function(date1, date2) {
  return date1 < date2 ? date1 : date2;
};
goog.date.max = function(date1, date2) {
  return date1 > date2 ? date1 : date2;
};
goog.date.fromIsoString = function(formatted) {
  var ret = new goog.date.DateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.setIso8601DateTime = function(dateTime, formatted) {
  formatted = goog.string.trim(formatted);
  var delim = formatted.indexOf("T") == -1 ? " " : "T";
  var parts = formatted.split(delim);
  return goog.date.setIso8601DateOnly_(dateTime, parts[0]) && (parts.length < 2 || goog.date.setIso8601TimeOnly_(dateTime, parts[1]));
};
goog.date.setIso8601DateOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitDateStringRegex_);
  if (!parts) {
    return false;
  }
  var year = Number(parts[1]);
  var month = Number(parts[2]);
  var date = Number(parts[3]);
  var dayOfYear = Number(parts[4]);
  var week = Number(parts[5]);
  var dayOfWeek = Number(parts[6]) || 1;
  d.setFullYear(year);
  if (dayOfYear) {
    d.setDate(1);
    d.setMonth(0);
    var offset = dayOfYear - 1;
    d.add(new goog.date.Interval(goog.date.Interval.DAYS, offset));
  } else {
    if (week) {
      goog.date.setDateFromIso8601Week_(d, week, dayOfWeek);
    } else {
      if (month) {
        d.setDate(1);
        d.setMonth(month - 1);
      }
      if (date) {
        d.setDate(date);
      }
    }
  }
  return true;
};
goog.date.setDateFromIso8601Week_ = function(d, week, dayOfWeek) {
  d.setMonth(0);
  d.setDate(1);
  var jsDay = d.getDay();
  var jan1WeekDay = jsDay || 7;
  var THURSDAY = 4;
  if (jan1WeekDay <= THURSDAY) {
    var startDelta = 1 - jan1WeekDay
  } else {
    startDelta = 8 - jan1WeekDay;
  }
  var absoluteDays = Number(dayOfWeek) + 7 * (Number(week) - 1);
  var delta = startDelta + absoluteDays - 1;
  var interval = new goog.date.Interval(goog.date.Interval.DAYS, delta);
  d.add(interval);
};
goog.date.setIso8601TimeOnly_ = function(d, formatted) {
  var parts = formatted.match(goog.date.splitTimezoneStringRegex_);
  var offset = 0;
  if (parts) {
    if (parts[0] != "Z") {
      offset = parts[2] * 60 + Number(parts[3]);
      offset *= parts[1] == "-" ? 1 : -1;
    }
    offset -= d.getTimezoneOffset();
    formatted = formatted.substr(0, formatted.length - parts[0].length);
  }
  parts = formatted.match(goog.date.splitTimeStringRegex_);
  if (!parts) {
    return false;
  }
  d.setHours(Number(parts[1]));
  d.setMinutes(Number(parts[2]) || 0);
  d.setSeconds(Number(parts[3]) || 0);
  d.setMilliseconds(parts[4] ? parts[4] * 1E3 : 0);
  if (offset != 0) {
    d.setTime(d.getTime() + offset * 6E4);
  }
  return true;
};
goog.date.Interval = function(opt_years, opt_months, opt_days, opt_hours, opt_minutes, opt_seconds) {
  if (goog.isString(opt_years)) {
    var type = opt_years;
    var interval = (opt_months);
    this.years = type == goog.date.Interval.YEARS ? interval : 0;
    this.months = type == goog.date.Interval.MONTHS ? interval : 0;
    this.days = type == goog.date.Interval.DAYS ? interval : 0;
    this.hours = type == goog.date.Interval.HOURS ? interval : 0;
    this.minutes = type == goog.date.Interval.MINUTES ? interval : 0;
    this.seconds = type == goog.date.Interval.SECONDS ? interval : 0;
  } else {
    this.years = (opt_years) || 0;
    this.months = opt_months || 0;
    this.days = opt_days || 0;
    this.hours = opt_hours || 0;
    this.minutes = opt_minutes || 0;
    this.seconds = opt_seconds || 0;
  }
};
goog.date.Interval.fromIsoString = function(duration) {
  var parts = duration.match(goog.date.splitDurationRegex_);
  if (!parts) {
    return null;
  }
  var timeEmpty = !(parts[6] || parts[7] || parts[8]);
  var dateTimeEmpty = timeEmpty && !(parts[2] || parts[3] || parts[4]);
  if (dateTimeEmpty || timeEmpty && parts[5]) {
    return null;
  }
  var negative = parts[1];
  var years = parseInt(parts[2], 10) || 0;
  var months = parseInt(parts[3], 10) || 0;
  var days = parseInt(parts[4], 10) || 0;
  var hours = parseInt(parts[6], 10) || 0;
  var minutes = parseInt(parts[7], 10) || 0;
  var seconds = parseFloat(parts[8]) || 0;
  return negative ? new goog.date.Interval(-years, -months, -days, -hours, -minutes, -seconds) : new goog.date.Interval(years, months, days, hours, minutes, seconds);
};
goog.date.Interval.prototype.toIsoString = function(opt_verbose) {
  var minField = Math.min(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  var maxField = Math.max(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
  if (minField < 0 && maxField > 0) {
    return null;
  }
  if (!opt_verbose && minField == 0 && maxField == 0) {
    return "PT0S";
  }
  var res = [];
  if (minField < 0) {
    res.push("-");
  }
  res.push("P");
  if (this.years || opt_verbose) {
    res.push(Math.abs(this.years) + "Y");
  }
  if (this.months || opt_verbose) {
    res.push(Math.abs(this.months) + "M");
  }
  if (this.days || opt_verbose) {
    res.push(Math.abs(this.days) + "D");
  }
  if (this.hours || this.minutes || this.seconds || opt_verbose) {
    res.push("T");
    if (this.hours || opt_verbose) {
      res.push(Math.abs(this.hours) + "H");
    }
    if (this.minutes || opt_verbose) {
      res.push(Math.abs(this.minutes) + "M");
    }
    if (this.seconds || opt_verbose) {
      res.push(Math.abs(this.seconds) + "S");
    }
  }
  return res.join("");
};
goog.date.Interval.prototype.equals = function(other) {
  return other.years == this.years && other.months == this.months && other.days == this.days && other.hours == this.hours && other.minutes == this.minutes && other.seconds == this.seconds;
};
goog.date.Interval.prototype.clone = function() {
  return new goog.date.Interval(this.years, this.months, this.days, this.hours, this.minutes, this.seconds);
};
goog.date.Interval.YEARS = "y";
goog.date.Interval.MONTHS = "m";
goog.date.Interval.DAYS = "d";
goog.date.Interval.HOURS = "h";
goog.date.Interval.MINUTES = "n";
goog.date.Interval.SECONDS = "s";
goog.date.Interval.prototype.isZero = function() {
  return this.years == 0 && this.months == 0 && this.days == 0 && this.hours == 0 && this.minutes == 0 && this.seconds == 0;
};
goog.date.Interval.prototype.getInverse = function() {
  return this.times(-1);
};
goog.date.Interval.prototype.times = function(n) {
  return new goog.date.Interval(this.years * n, this.months * n, this.days * n, this.hours * n, this.minutes * n, this.seconds * n);
};
goog.date.Interval.prototype.getTotalSeconds = function() {
  goog.asserts.assert(this.years == 0 && this.months == 0);
  return ((this.days * 24 + this.hours) * 60 + this.minutes) * 60 + this.seconds;
};
goog.date.Interval.prototype.add = function(interval) {
  this.years += interval.years;
  this.months += interval.months;
  this.days += interval.days;
  this.hours += interval.hours;
  this.minutes += interval.minutes;
  this.seconds += interval.seconds;
};
goog.date.Date = function(opt_year, opt_month, opt_date) {
  this.date;
  if (goog.isNumber(opt_year)) {
    this.date = this.buildDate_(opt_year, opt_month || 0, opt_date || 1);
    this.maybeFixDst_(opt_date || 1);
  } else {
    if (goog.isObject(opt_year)) {
      this.date = this.buildDate_(opt_year.getFullYear(), opt_year.getMonth(), opt_year.getDate());
      this.maybeFixDst_(opt_year.getDate());
    } else {
      this.date = new Date(goog.now());
      this.date.setHours(0);
      this.date.setMinutes(0);
      this.date.setSeconds(0);
      this.date.setMilliseconds(0);
    }
  }
};
goog.date.Date.prototype.buildDate_ = function(fullYear, month, date) {
  var d = new Date(fullYear, month, date);
  if (fullYear >= 0 && fullYear < 100) {
    d.setFullYear(d.getFullYear() - 1900);
  }
  return d;
};
goog.date.Date.prototype.firstDayOfWeek_ = goog.i18n.DateTimeSymbols.FIRSTDAYOFWEEK;
goog.date.Date.prototype.firstWeekCutOffDay_ = goog.i18n.DateTimeSymbols.FIRSTWEEKCUTOFFDAY;
goog.date.Date.prototype.clone = function() {
  var date = new goog.date.Date(this.date);
  date.firstDayOfWeek_ = this.firstDayOfWeek_;
  date.firstWeekCutOffDay_ = this.firstWeekCutOffDay_;
  return date;
};
goog.date.Date.prototype.getFullYear = function() {
  return this.date.getFullYear();
};
goog.date.Date.prototype.getYear = function() {
  return this.getFullYear();
};
goog.date.Date.prototype.getMonth = function() {
  return (this.date.getMonth());
};
goog.date.Date.prototype.getDate = function() {
  return this.date.getDate();
};
goog.date.Date.prototype.getTime = function() {
  return this.date.getTime();
};
goog.date.Date.prototype.getDay = function() {
  return this.date.getDay();
};
goog.date.Date.prototype.getIsoWeekday = function() {
  return ((this.getDay() + 6) % 7);
};
goog.date.Date.prototype.getWeekday = function() {
  return (this.getIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getUTCFullYear = function() {
  return this.date.getUTCFullYear();
};
goog.date.Date.prototype.getUTCMonth = function() {
  return (this.date.getUTCMonth());
};
goog.date.Date.prototype.getUTCDate = function() {
  return this.date.getUTCDate();
};
goog.date.Date.prototype.getUTCDay = function() {
  return this.date.getDay();
};
goog.date.Date.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.Date.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.Date.prototype.getUTCIsoWeekday = function() {
  return ((this.date.getUTCDay() + 6) % 7);
};
goog.date.Date.prototype.getUTCWeekday = function() {
  return (this.getUTCIsoWeekday() - this.firstDayOfWeek_ + 7) % 7;
};
goog.date.Date.prototype.getFirstDayOfWeek = function() {
  return this.firstDayOfWeek_;
};
goog.date.Date.prototype.getFirstWeekCutOffDay = function() {
  return this.firstWeekCutOffDay_;
};
goog.date.Date.prototype.getNumberOfDaysInMonth = function() {
  return goog.date.getNumberOfDaysInMonth(this.getFullYear(), this.getMonth());
};
goog.date.Date.prototype.getWeekNumber = function() {
  return goog.date.getWeekNumber(this.getFullYear(), this.getMonth(), this.getDate(), this.firstWeekCutOffDay_, this.firstDayOfWeek_);
};
goog.date.Date.prototype.getDayOfYear = function() {
  var dayOfYear = this.getDate();
  var year = this.getFullYear();
  for (var m = this.getMonth() - 1;m >= 0;m--) {
    dayOfYear += goog.date.getNumberOfDaysInMonth(year, m);
  }
  return dayOfYear;
};
goog.date.Date.prototype.getTimezoneOffset = function() {
  return this.date.getTimezoneOffset();
};
goog.date.Date.prototype.getTimezoneOffsetString = function() {
  var tz;
  var offset = this.getTimezoneOffset();
  if (offset == 0) {
    tz = "Z";
  } else {
    var n = Math.abs(offset) / 60;
    var h = Math.floor(n);
    var m = (n - h) * 60;
    tz = (offset > 0 ? "-" : "+") + goog.string.padNumber(h, 2) + ":" + goog.string.padNumber(m, 2);
  }
  return tz;
};
goog.date.Date.prototype.set = function(date) {
  this.date = new Date(date.getFullYear(), date.getMonth(), date.getDate());
};
goog.date.Date.prototype.setFullYear = function(year) {
  this.date.setFullYear(year);
};
goog.date.Date.prototype.setYear = function(year) {
  this.setFullYear(year);
};
goog.date.Date.prototype.setMonth = function(month) {
  this.date.setMonth(month);
};
goog.date.Date.prototype.setDate = function(date) {
  this.date.setDate(date);
};
goog.date.Date.prototype.setTime = function(ms) {
  this.date.setTime(ms);
};
goog.date.Date.prototype.setUTCFullYear = function(year) {
  this.date.setUTCFullYear(year);
};
goog.date.Date.prototype.setUTCMonth = function(month) {
  this.date.setUTCMonth(month);
};
goog.date.Date.prototype.setUTCDate = function(date) {
  this.date.setUTCDate(date);
};
goog.date.Date.prototype.setFirstDayOfWeek = function(day) {
  this.firstDayOfWeek_ = day;
};
goog.date.Date.prototype.setFirstWeekCutOffDay = function(day) {
  this.firstWeekCutOffDay_ = day;
};
goog.date.Date.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var month = this.getMonth() + interval.months + interval.years * 12;
    var year = this.getYear() + Math.floor(month / 12);
    month %= 12;
    if (month < 0) {
      month += 12;
    }
    var daysInTargetMonth = goog.date.getNumberOfDaysInMonth(year, month);
    var date = Math.min(daysInTargetMonth, this.getDate());
    this.setDate(1);
    this.setFullYear(year);
    this.setMonth(month);
    this.setDate(date);
  }
  if (interval.days) {
    var noon = new Date(this.getYear(), this.getMonth(), this.getDate(), 12);
    var result = new Date(noon.getTime() + interval.days * 864E5);
    this.setDate(1);
    this.setFullYear(result.getFullYear());
    this.setMonth(result.getMonth());
    this.setDate(result.getDate());
    this.maybeFixDst_(result.getDate());
  }
};
goog.date.Date.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getFullYear(), goog.string.padNumber(this.getMonth() + 1, 2), goog.string.padNumber(this.getDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.Date.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var str = [this.getUTCFullYear(), goog.string.padNumber(this.getUTCMonth() + 1, 2), goog.string.padNumber(this.getUTCDate(), 2)];
  return str.join(opt_verbose ? "-" : "") + (opt_tz ? "Z" : "");
};
goog.date.Date.prototype.equals = function(other) {
  return !!(other && this.getYear() == other.getYear() && this.getMonth() == other.getMonth() && this.getDate() == other.getDate());
};
goog.date.Date.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.Date.prototype.maybeFixDst_ = function(expected) {
  if (this.getDate() != expected) {
    var dir = this.getDate() < expected ? 1 : -1;
    this.date.setUTCHours(this.date.getUTCHours() + dir);
  }
};
goog.date.Date.prototype.valueOf = function() {
  return this.date.valueOf();
};
goog.date.Date.compare = function(date1, date2) {
  return date1.getTime() - date2.getTime();
};
goog.date.DateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  if (goog.isNumber(opt_year)) {
    this.date = new Date(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    this.date = new Date(opt_year ? opt_year.getTime() : goog.now());
  }
};
goog.inherits(goog.date.DateTime, goog.date.Date);
goog.date.DateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.DateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.DateTime.fromRfc822String = function(formatted) {
  var date = new Date(formatted);
  return !isNaN(date.getTime()) ? new goog.date.DateTime(date) : null;
};
goog.date.DateTime.prototype.getHours = function() {
  return this.date.getHours();
};
goog.date.DateTime.prototype.getMinutes = function() {
  return this.date.getMinutes();
};
goog.date.DateTime.prototype.getSeconds = function() {
  return this.date.getSeconds();
};
goog.date.DateTime.prototype.getMilliseconds = function() {
  return this.date.getMilliseconds();
};
goog.date.DateTime.prototype.getUTCDay = function() {
  return (this.date.getUTCDay());
};
goog.date.DateTime.prototype.getUTCHours = function() {
  return this.date.getUTCHours();
};
goog.date.DateTime.prototype.getUTCMinutes = function() {
  return this.date.getUTCMinutes();
};
goog.date.DateTime.prototype.getUTCSeconds = function() {
  return this.date.getUTCSeconds();
};
goog.date.DateTime.prototype.getUTCMilliseconds = function() {
  return this.date.getUTCMilliseconds();
};
goog.date.DateTime.prototype.setHours = function(hours) {
  this.date.setHours(hours);
};
goog.date.DateTime.prototype.setMinutes = function(minutes) {
  this.date.setMinutes(minutes);
};
goog.date.DateTime.prototype.setSeconds = function(seconds) {
  this.date.setSeconds(seconds);
};
goog.date.DateTime.prototype.setMilliseconds = function(ms) {
  this.date.setMilliseconds(ms);
};
goog.date.DateTime.prototype.setUTCHours = function(hours) {
  this.date.setUTCHours(hours);
};
goog.date.DateTime.prototype.setUTCMinutes = function(minutes) {
  this.date.setUTCMinutes(minutes);
};
goog.date.DateTime.prototype.setUTCSeconds = function(seconds) {
  this.date.setUTCSeconds(seconds);
};
goog.date.DateTime.prototype.setUTCMilliseconds = function(ms) {
  this.date.setUTCMilliseconds(ms);
};
goog.date.DateTime.prototype.isMidnight = function() {
  return this.getHours() == 0 && this.getMinutes() == 0 && this.getSeconds() == 0 && this.getMilliseconds() == 0;
};
goog.date.DateTime.prototype.add = function(interval) {
  goog.date.Date.prototype.add.call(this, interval);
  if (interval.hours) {
    this.setHours(this.date.getHours() + interval.hours);
  }
  if (interval.minutes) {
    this.setMinutes(this.date.getMinutes() + interval.minutes);
  }
  if (interval.seconds) {
    this.setSeconds(this.date.getSeconds() + interval.seconds);
  }
};
goog.date.DateTime.prototype.toIsoString = function(opt_verbose, opt_tz) {
  var dateString = goog.date.Date.prototype.toIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateString + " " + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
  }
  return dateString + "T" + goog.string.padNumber(this.getHours(), 2) + goog.string.padNumber(this.getMinutes(), 2) + goog.string.padNumber(this.getSeconds(), 2) + (opt_tz ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toXmlDateTime = function(opt_timezone) {
  return goog.date.Date.prototype.toIsoString.call(this, true) + "T" + goog.string.padNumber(this.getHours(), 2) + ":" + goog.string.padNumber(this.getMinutes(), 2) + ":" + goog.string.padNumber(this.getSeconds(), 2) + (opt_timezone ? this.getTimezoneOffsetString() : "");
};
goog.date.DateTime.prototype.toUTCIsoString = function(opt_verbose, opt_tz) {
  var dateStr = goog.date.Date.prototype.toUTCIsoString.call(this, opt_verbose);
  if (opt_verbose) {
    return dateStr + " " + goog.string.padNumber(this.getUTCHours(), 2) + ":" + goog.string.padNumber(this.getUTCMinutes(), 2) + ":" + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
  }
  return dateStr + "T" + goog.string.padNumber(this.getUTCHours(), 2) + goog.string.padNumber(this.getUTCMinutes(), 2) + goog.string.padNumber(this.getUTCSeconds(), 2) + (opt_tz ? "Z" : "");
};
goog.date.DateTime.prototype.equals = function(other) {
  return this.getTime() == other.getTime();
};
goog.date.DateTime.prototype.toString = function() {
  return this.toIsoString();
};
goog.date.DateTime.prototype.toUsTimeString = function(opt_padHours, opt_showAmPm, opt_omitZeroMinutes) {
  var hours = this.getHours();
  if (!goog.isDef(opt_showAmPm)) {
    opt_showAmPm = true;
  }
  var isPM = hours == 12;
  if (hours > 12) {
    hours -= 12;
    isPM = true;
  }
  if (hours == 0 && opt_showAmPm) {
    hours = 12;
  }
  var label = opt_padHours ? goog.string.padNumber(hours, 2) : String(hours);
  var minutes = this.getMinutes();
  if (!opt_omitZeroMinutes || minutes > 0) {
    label += ":" + goog.string.padNumber(minutes, 2);
  }
  if (opt_showAmPm) {
    var MSG_TIME_AM = goog.getMsg("am");
    var MSG_TIME_PM = goog.getMsg("pm");
    label += isPM ? MSG_TIME_PM : MSG_TIME_AM;
  }
  return label;
};
goog.date.DateTime.prototype.toIsoTimeString = function(opt_showSeconds) {
  var hours = this.getHours();
  var label = goog.string.padNumber(hours, 2) + ":" + goog.string.padNumber(this.getMinutes(), 2);
  if (!goog.isDef(opt_showSeconds) || opt_showSeconds) {
    label += ":" + goog.string.padNumber(this.getSeconds(), 2);
  }
  return label;
};
goog.date.DateTime.prototype.clone = function() {
  var date = new goog.date.DateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.provide("goog.date.UtcDateTime");
goog.require("goog.date");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.Interval");
goog.date.UtcDateTime = function(opt_year, opt_month, opt_date, opt_hours, opt_minutes, opt_seconds, opt_milliseconds) {
  var timestamp;
  if (goog.isNumber(opt_year)) {
    timestamp = Date.UTC(opt_year, opt_month || 0, opt_date || 1, opt_hours || 0, opt_minutes || 0, opt_seconds || 0, opt_milliseconds || 0);
  } else {
    timestamp = opt_year ? opt_year.getTime() : goog.now();
  }
  this.date = new Date(timestamp);
};
goog.inherits(goog.date.UtcDateTime, goog.date.DateTime);
goog.date.UtcDateTime.fromTimestamp = function(timestamp) {
  var date = new goog.date.UtcDateTime;
  date.setTime(timestamp);
  return date;
};
goog.date.UtcDateTime.fromIsoString = function(formatted) {
  var ret = new goog.date.UtcDateTime(2E3);
  return goog.date.setIso8601DateTime(ret, formatted) ? ret : null;
};
goog.date.UtcDateTime.prototype.clone = function() {
  var date = new goog.date.UtcDateTime(this.date);
  date.setFirstDayOfWeek(this.getFirstDayOfWeek());
  date.setFirstWeekCutOffDay(this.getFirstWeekCutOffDay());
  return date;
};
goog.date.UtcDateTime.prototype.add = function(interval) {
  if (interval.years || interval.months) {
    var yearsMonths = new goog.date.Interval(interval.years, interval.months);
    goog.date.Date.prototype.add.call(this, yearsMonths);
  }
  var daysAndTimeMillis = 1E3 * (interval.seconds + 60 * (interval.minutes + 60 * (interval.hours + 24 * interval.days)));
  this.date = new Date(this.date.getTime() + daysAndTimeMillis);
};
goog.date.UtcDateTime.prototype.getTimezoneOffset = function() {
  return 0;
};
goog.date.UtcDateTime.prototype.getFullYear = goog.date.DateTime.prototype.getUTCFullYear;
goog.date.UtcDateTime.prototype.getMonth = goog.date.DateTime.prototype.getUTCMonth;
goog.date.UtcDateTime.prototype.getDate = goog.date.DateTime.prototype.getUTCDate;
goog.date.UtcDateTime.prototype.getHours = goog.date.DateTime.prototype.getUTCHours;
goog.date.UtcDateTime.prototype.getMinutes = goog.date.DateTime.prototype.getUTCMinutes;
goog.date.UtcDateTime.prototype.getSeconds = goog.date.DateTime.prototype.getUTCSeconds;
goog.date.UtcDateTime.prototype.getMilliseconds = goog.date.DateTime.prototype.getUTCMilliseconds;
goog.date.UtcDateTime.prototype.getDay = goog.date.DateTime.prototype.getUTCDay;
goog.date.UtcDateTime.prototype.setFullYear = goog.date.DateTime.prototype.setUTCFullYear;
goog.date.UtcDateTime.prototype.setMonth = goog.date.DateTime.prototype.setUTCMonth;
goog.date.UtcDateTime.prototype.setDate = goog.date.DateTime.prototype.setUTCDate;
goog.date.UtcDateTime.prototype.setHours = goog.date.DateTime.prototype.setUTCHours;
goog.date.UtcDateTime.prototype.setMinutes = goog.date.DateTime.prototype.setUTCMinutes;
goog.date.UtcDateTime.prototype.setSeconds = goog.date.DateTime.prototype.setUTCSeconds;
goog.date.UtcDateTime.prototype.setMilliseconds = goog.date.DateTime.prototype.setUTCMilliseconds;
goog.provide("goog.i18n.TimeZone");
goog.require("goog.array");
goog.require("goog.date.DateLike");
goog.require("goog.string");
goog.i18n.TimeZone = function() {
  this.timeZoneId_;
  this.standardOffset_;
  this.tzNames_;
  this.transitions_;
};
goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_ = 3600 * 1E3;
goog.i18n.TimeZone.NameType = {STD_SHORT_NAME:0, STD_LONG_NAME:1, DLT_SHORT_NAME:2, DLT_LONG_NAME:3};
goog.i18n.TimeZone.createTimeZone = function(timeZoneData) {
  if (typeof timeZoneData == "number") {
    return goog.i18n.TimeZone.createSimpleTimeZone_(timeZoneData);
  }
  var tz = new goog.i18n.TimeZone;
  tz.timeZoneId_ = timeZoneData["id"];
  tz.standardOffset_ = -timeZoneData["std_offset"];
  tz.tzNames_ = timeZoneData["names"];
  tz.transitions_ = timeZoneData["transitions"];
  return tz;
};
goog.i18n.TimeZone.createSimpleTimeZone_ = function(timeZoneOffsetInMinutes) {
  var tz = new goog.i18n.TimeZone;
  tz.standardOffset_ = timeZoneOffsetInMinutes;
  tz.timeZoneId_ = goog.i18n.TimeZone.composePosixTimeZoneID_(timeZoneOffsetInMinutes);
  var str = goog.i18n.TimeZone.composeUTCString_(timeZoneOffsetInMinutes);
  tz.tzNames_ = [str, str];
  tz.transitions_ = [];
  return tz;
};
goog.i18n.TimeZone.composeGMTString_ = function(offset) {
  var parts = ["GMT"];
  parts.push(offset <= 0 ? "+" : "-");
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), ":", goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.composePosixTimeZoneID_ = function(offset) {
  if (offset == 0) {
    return "Etc/GMT";
  }
  var parts = ["Etc/GMT", offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", goog.string.padNumber(offset, 2));
  }
  return parts.join("");
};
goog.i18n.TimeZone.composeUTCString_ = function(offset) {
  if (offset == 0) {
    return "UTC";
  }
  var parts = ["UTC", offset < 0 ? "+" : "-"];
  offset = Math.abs(offset);
  parts.push(Math.floor(offset / 60) % 100);
  offset = offset % 60;
  if (offset != 0) {
    parts.push(":", offset);
  }
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getTimeZoneData = function() {
  return {"id":this.timeZoneId_, "std_offset":-this.standardOffset_, "names":goog.array.clone(this.tzNames_), "transitions":goog.array.clone(this.transitions_)};
};
goog.i18n.TimeZone.prototype.getDaylightAdjustment = function(date) {
  var timeInMs = Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes());
  var timeInHours = timeInMs / goog.i18n.TimeZone.MILLISECONDS_PER_HOUR_;
  var index = 0;
  while (index < this.transitions_.length && timeInHours >= this.transitions_[index]) {
    index += 2;
  }
  return index == 0 ? 0 : this.transitions_[index - 1];
};
goog.i18n.TimeZone.prototype.getGMTString = function(date) {
  return goog.i18n.TimeZone.composeGMTString_(this.getOffset(date));
};
goog.i18n.TimeZone.prototype.getLongName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_LONG_NAME : goog.i18n.TimeZone.NameType.STD_LONG_NAME];
};
goog.i18n.TimeZone.prototype.getOffset = function(date) {
  return this.standardOffset_ - this.getDaylightAdjustment(date);
};
goog.i18n.TimeZone.prototype.getRFCTimeZoneString = function(date) {
  var offset = -this.getOffset(date);
  var parts = [offset < 0 ? "-" : "+"];
  offset = Math.abs(offset);
  parts.push(goog.string.padNumber(Math.floor(offset / 60) % 100, 2), goog.string.padNumber(offset % 60, 2));
  return parts.join("");
};
goog.i18n.TimeZone.prototype.getShortName = function(date) {
  return this.tzNames_[this.isDaylightTime(date) ? goog.i18n.TimeZone.NameType.DLT_SHORT_NAME : goog.i18n.TimeZone.NameType.STD_SHORT_NAME];
};
goog.i18n.TimeZone.prototype.getTimeZoneId = function() {
  return this.timeZoneId_;
};
goog.i18n.TimeZone.prototype.isDaylightTime = function(date) {
  return this.getDaylightAdjustment(date) > 0;
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if (typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if (type == "%") {
      return "%";
    }
    var value = args.shift();
    if (typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments);
  }
  return template.replace(formatRe, replacerDemuxer);
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if (isNaN(width) || width == "" || replacement.length >= width) {
    return replacement;
  }
  if (flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length);
  } else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if (!(isNaN(precision) || precision == "")) {
    replacement = parseFloat(value).toFixed(precision);
  }
  var sign;
  if (value < 0) {
    sign = "-";
  } else {
    if (flags.indexOf("+") >= 0) {
      sign = "+";
    } else {
      if (flags.indexOf(" ") >= 0) {
        sign = " ";
      } else {
        sign = "";
      }
    }
  }
  if (value >= 0) {
    replacement = sign + replacement;
  }
  if (isNaN(width) || replacement.length >= width) {
    return replacement;
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if (flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount);
  } else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement;
  }
  return replacement;
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString);
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("cljs_time.internal.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.format");
cljs_time.internal.core._EQ_ = function cljs_time$internal$core$_EQ_() {
  var argseq__5348__auto__ = 0 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 0), 0) : null;
  return cljs_time.internal.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(argseq__5348__auto__);
};
cljs_time.internal.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.every_QMARK_.call(null, function(p1__11374_SHARP_) {
    return p1__11374_SHARP_ instanceof goog.date.Date;
  }, args)) {
    return cljs.core.apply.call(null, cljs.core._EQ_, cljs.core.map.call(null, function(p1__11375_SHARP_) {
      return p1__11375_SHARP_.getTime();
    }, args));
  } else {
    return cljs.core.apply.call(null, cljs.core._EQ_, args);
  }
};
cljs_time.internal.core._EQ_.cljs$lang$maxFixedArity = 0;
cljs_time.internal.core._EQ_.cljs$lang$applyTo = function(seq11376) {
  return cljs_time.internal.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11376));
};
cljs_time.internal.core.leap_year_QMARK_ = function cljs_time$internal$core$leap_year_QMARK_(y) {
  if (cljs.core.mod.call(null, y, 400) === 0) {
    return true;
  } else {
    if (cljs.core.mod.call(null, y, 100) === 0) {
      return false;
    } else {
      if (cljs.core.mod.call(null, y, 4) === 0) {
        return true;
      } else {
        return false;
      }
    }
  }
};
cljs_time.internal.core.days_in_month = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
cljs_time.internal.core.year_corrected_dim = function cljs_time$internal$core$year_corrected_dim(year, month) {
  var G__11378 = cljs_time.internal.core.days_in_month.call(null, cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, month, 1)) ? 11 : month - 1);
  var G__11378__$1 = cljs.core.truth_(function() {
    var and__4296__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, year);
    if (cljs.core.truth_(and__4296__auto__)) {
      return cljs_time.internal.core._EQ_.call(null, month, 2);
    } else {
      return and__4296__auto__;
    }
  }()) ? G__11378 + 1 : G__11378;
  return G__11378__$1;
};
cljs_time.internal.core.valid_date_QMARK_ = function cljs_time$internal$core$valid_date_QMARK_(p__11379) {
  var map__11381 = p__11379;
  var map__11381__$1 = cljs.core.seq_QMARK_.call(null, map__11381) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11381) : map__11381;
  var d = map__11381__$1;
  var years = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var months = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var days = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var hours = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var minutes = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var seconds = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var millis = cljs.core.get.call(null, map__11381__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var months__$1 = months + 1;
  var _GT__LT_ = function(months__$1, map__11381, map__11381__$1, d, years, months, days, hours, minutes, seconds, millis) {
    return function cljs_time$internal$core$valid_date_QMARK__$__GT__LT_(a, b, x) {
      return x >= a && x <= b;
    };
  }(months__$1, map__11381, map__11381__$1, d, years, months, days, hours, minutes, seconds, millis);
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = years;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = _GT__LT_.call(null, 1, 12, months__$1);
      if (cljs.core.truth_(and__4296__auto____$1)) {
        var and__4296__auto____$2 = _GT__LT_.call(null, 1, cljs_time.internal.core.year_corrected_dim.call(null, years, months__$1), days);
        if (cljs.core.truth_(and__4296__auto____$2)) {
          var and__4296__auto____$3 = _GT__LT_.call(null, 0, 23, hours);
          if (cljs.core.truth_(and__4296__auto____$3)) {
            var and__4296__auto____$4 = _GT__LT_.call(null, 0, 59, minutes);
            if (cljs.core.truth_(and__4296__auto____$4)) {
              var and__4296__auto____$5 = _GT__LT_.call(null, 0, 60, seconds);
              if (cljs.core.truth_(and__4296__auto____$5)) {
                return _GT__LT_.call(null, 0, 999, millis);
              } else {
                return and__4296__auto____$5;
              }
            } else {
              return and__4296__auto____$4;
            }
          } else {
            return and__4296__auto____$3;
          }
        } else {
          return and__4296__auto____$2;
        }
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "Date is not valid", new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "invalid-date", "invalid-date", 2030506573), new cljs.core.Keyword(null, "date", "date", -1463434462), d], null));
  }
};
cljs_time.internal.core.index_of = function cljs_time$internal$core$index_of(coll, x) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__11383_SHARP_, p2__11382_SHARP_) {
    if (cljs.core.truth_(cljs_time.internal.core._EQ_.call(null, p2__11382_SHARP_, x))) {
      return p1__11383_SHARP_;
    } else {
      return null;
    }
  }, coll));
};
cljs_time.internal.core.format = function cljs_time$internal$core$format() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs_time.internal.core.format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs_time.internal.core.format.cljs$core$IFn$_invoke$arity$variadic = function(fmt, args) {
  var args__$1 = cljs.core.map.call(null, function(x) {
    if (x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol) {
      return [cljs.core.str(x)].join("");
    } else {
      return x;
    }
  }, args);
  return cljs.core.apply.call(null, goog.string.format, fmt, args__$1);
};
cljs_time.internal.core.format.cljs$lang$maxFixedArity = 1;
cljs_time.internal.core.format.cljs$lang$applyTo = function(seq11384) {
  var G__11385 = cljs.core.first.call(null, seq11384);
  var seq11384__$1 = cljs.core.next.call(null, seq11384);
  return cljs_time.internal.core.format.cljs$core$IFn$_invoke$arity$variadic(G__11385, seq11384__$1);
};
cljs_time.internal.core.zero_pad = function cljs_time$internal$core$zero_pad() {
  var G__11387 = arguments.length;
  switch(G__11387) {
    case 1:
      return cljs_time.internal.core.zero_pad.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.internal.core.zero_pad.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.internal.core.zero_pad.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (0 <= n && n <= 9) {
    return [cljs.core.str("0"), cljs.core.str(n)].join("");
  } else {
    return [cljs.core.str(n)].join("");
  }
};
cljs_time.internal.core.zero_pad.cljs$core$IFn$_invoke$arity$2 = function(n, zeros) {
  if (1 > zeros) {
    return [cljs.core.str(n)].join("");
  } else {
    return [cljs.core.str(clojure.string.join.call(null, cljs.core.take.call(null, zeros - cljs.core.count.call(null, [cljs.core.str(n)].join("")), cljs.core.repeat.call(null, "0")))), cljs.core.str(n)].join("");
  }
};
cljs_time.internal.core.zero_pad.cljs$lang$maxFixedArity = 2;
cljs_time.internal.core.multiplied_by = function cljs_time$internal$core$multiplied_by(period, scalar) {
  var scale_fn = function cljs_time$internal$core$multiplied_by_$_scale_fn(field) {
    if (cljs.core.truth_(field)) {
      return field * scalar;
    } else {
      return null;
    }
  };
  return cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, cljs.core.update_in.call(null, period, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "millis", "millis", -1338288387)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "seconds", "seconds", -445266194)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "minutes", "minutes", 1319166394)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "hours", "hours", 58380855)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "days", "days", -1394072564)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "weeks", "weeks", 1844596125)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "months", "months", -45571637)], null), scale_fn), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "years", "years", 
  -1298579689)], null), scale_fn);
};
goog.provide("cljs_time.core");
goog.require("cljs.core");
goog.require("cljs_time.internal.core");
goog.require("clojure.string");
goog.require("goog.date.Date");
goog.require("goog.date.DateTime");
goog.require("goog.date.UtcDateTime");
goog.require("goog.i18n.TimeZone");
cljs_time.core._STAR_sys_time_STAR_ = null;
cljs_time.core._EQ_ = cljs_time.internal.core._EQ_;
cljs_time.core.DateTimeProtocol = function() {
  var obj11209 = {};
  return obj11209;
}();
cljs_time.core.year = function cljs_time$core$year(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$year$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$year$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.year[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.year["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.year", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.month = function cljs_time$core$month(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$month$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$month$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.month[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.month["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.month", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day = function cljs_time$core$day(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.day[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.day["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.day_of_week = function cljs_time$core$day_of_week(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$day_of_week$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.day_of_week[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.day_of_week["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.day-of-week", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.hour = function cljs_time$core$hour(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$hour$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$hour$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.hour[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.hour["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.hour", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.minute = function cljs_time$core$minute(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minute$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minute$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.minute[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.minute["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minute", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.sec = function cljs_time$core$sec(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$sec$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$sec$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.sec[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.sec["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.sec", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.second = function cljs_time$core$second(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$second$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$second$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.second[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.second["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.second", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.milli = function cljs_time$core$milli(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$milli$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$milli$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.milli[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.milli["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.milli", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.after_QMARK_ = function cljs_time$core$after_QMARK_(this$, that) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2(this$, that);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.after_QMARK_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.after_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.after?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.before_QMARK_ = function cljs_time$core$before_QMARK_(this$, that) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2(this$, that);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.before_QMARK_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.before_QMARK_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.before?", this$);
        }
      }
    }().call(null, this$, that);
  }
};
cljs_time.core.plus_ = function cljs_time$core$plus_(this$, period) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$plus_$arity$2(this$, period);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.plus_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.plus_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.plus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.minus_ = function cljs_time$core$minus_(this$, period) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$minus_$arity$2(this$, period);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.minus_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.minus_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.minus-", this$);
        }
      }
    }().call(null, this$, period);
  }
};
cljs_time.core.first_day_of_the_month_ = function cljs_time$core$first_day_of_the_month_(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$first_day_of_the_month_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$first_day_of_the_month_$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.first_day_of_the_month_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.first_day_of_the_month_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.first-day-of-the-month-", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.last_day_of_the_month_ = function cljs_time$core$last_day_of_the_month_(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$DateTimeProtocol$last_day_of_the_month_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$DateTimeProtocol$last_day_of_the_month_$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.last_day_of_the_month_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.last_day_of_the_month_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "DateTimeProtocol.last-day-of-the-month-", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.InTimeUnitProtocol = function() {
  var obj11211 = {};
  return obj11211;
}();
cljs_time.core.in_millis = function cljs_time$core$in_millis(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_millis$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_millis$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_millis[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_millis["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-millis", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_seconds = function cljs_time$core$in_seconds(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_seconds$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_seconds$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_seconds[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_seconds["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-seconds", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_minutes = function cljs_time$core$in_minutes(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_minutes$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_minutes$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_minutes[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_minutes["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-minutes", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_hours = function cljs_time$core$in_hours(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_hours$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_hours$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_hours[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_hours["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-hours", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_days = function cljs_time$core$in_days(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_days$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_days$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_days[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_days["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-days", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_weeks = function cljs_time$core$in_weeks(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_weeks$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_weeks$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_weeks[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_weeks["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-weeks", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_months = function cljs_time$core$in_months(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_months$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_months$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_months[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_months["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-months", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.in_years = function cljs_time$core$in_years(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.cljs_time$core$InTimeUnitProtocol$in_years$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.cljs_time$core$InTimeUnitProtocol$in_years$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = cljs_time.core.in_years[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.core.in_years["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "InTimeUnitProtocol.in-years", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs_time.core.Interval = function(start, end, __meta, __extmap, __hash) {
  this.start = start;
  this.end = end;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs_time.core.Interval.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4903__auto__, k__4904__auto__) {
  var self__ = this;
  var this__4903__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4903__auto____$1, k__4904__auto__, null);
};
cljs_time.core.Interval.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4905__auto__, k11213, else__4906__auto__) {
  var self__ = this;
  var this__4905__auto____$1 = this;
  var G__11215 = k11213 instanceof cljs.core.Keyword ? k11213.fqn : null;
  switch(G__11215) {
    case "start":
      return self__.start;
      break;
    case "end":
      return self__.end;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11213, else__4906__auto__);
  }
};
cljs_time.core.Interval.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4917__auto__, writer__4918__auto__, opts__4919__auto__) {
  var self__ = this;
  var this__4917__auto____$1 = this;
  var pr_pair__4920__auto__ = function(this__4917__auto____$1) {
    return function(keyval__4921__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4918__auto__, cljs.core.pr_writer, "", " ", "", opts__4919__auto__, keyval__4921__auto__);
    };
  }(this__4917__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4918__auto__, pr_pair__4920__auto__, "#cljs-time.core.Interval{", ", ", "}", opts__4919__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start", "start", -355208981), self__.start], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end", "end", -268185958), self__.end], null)], null), self__.__extmap));
};
cljs_time.core.Interval.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4901__auto__) {
  var self__ = this;
  var this__4901__auto____$1 = this;
  return self__.__meta;
};
cljs_time.core.Interval.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4897__auto__) {
  var self__ = this;
  var this__4897__auto____$1 = this;
  return new cljs_time.core.Interval(self__.start, self__.end, self__.__meta, self__.__extmap, self__.__hash);
};
cljs_time.core.Interval.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4907__auto__) {
  var self__ = this;
  var this__4907__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
cljs_time.core.Interval.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4898__auto__) {
  var self__ = this;
  var this__4898__auto____$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_imap.call(null, this__4898__auto____$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs_time.core.Interval.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4899__auto__, other__4900__auto__) {
  var self__ = this;
  var this__4899__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = other__4900__auto__;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = this__4899__auto____$1.constructor === other__4900__auto__.constructor;
      if (and__4296__auto____$1) {
        return cljs.core.equiv_map.call(null, this__4899__auto____$1, other__4900__auto__);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs_time.core.Interval.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4912__auto__, k__4913__auto__) {
  var self__ = this;
  var this__4912__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), null, new cljs.core.Keyword(null, "end", "end", -268185958), null], null), null), k__4913__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4912__auto____$1), self__.__meta), k__4913__auto__);
  } else {
    return new cljs_time.core.Interval(self__.start, self__.end, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4913__auto__)), null);
  }
};
cljs_time.core.Interval.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4910__auto__, k__4911__auto__, G__11212) {
  var self__ = this;
  var this__4910__auto____$1 = this;
  var pred__11216 = cljs.core.keyword_identical_QMARK_;
  var expr__11217 = k__4911__auto__;
  if (cljs.core.truth_(pred__11216.call(null, new cljs.core.Keyword(null, "start", "start", -355208981), expr__11217))) {
    return new cljs_time.core.Interval(G__11212, self__.end, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11216.call(null, new cljs.core.Keyword(null, "end", "end", -268185958), expr__11217))) {
      return new cljs_time.core.Interval(self__.start, G__11212, self__.__meta, self__.__extmap, null);
    } else {
      return new cljs_time.core.Interval(self__.start, self__.end, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4911__auto__, G__11212), null);
    }
  }
};
cljs_time.core.Interval.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4915__auto__) {
  var self__ = this;
  var this__4915__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start", "start", -355208981), self__.start], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end", "end", -268185958), self__.end], null)], null), self__.__extmap));
};
cljs_time.core.Interval.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4902__auto__, G__11212) {
  var self__ = this;
  var this__4902__auto____$1 = this;
  return new cljs_time.core.Interval(self__.start, self__.end, G__11212, self__.__extmap, self__.__hash);
};
cljs_time.core.Interval.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4908__auto__, entry__4909__auto__) {
  var self__ = this;
  var this__4908__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4909__auto__)) {
    return cljs.core._assoc.call(null, this__4908__auto____$1, cljs.core._nth.call(null, entry__4909__auto__, 0), cljs.core._nth.call(null, entry__4909__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4908__auto____$1, entry__4909__auto__);
  }
};
cljs_time.core.Interval.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs_time.core.Interval.cljs$lang$type = true;
cljs_time.core.Interval.cljs$lang$ctorPrSeq = function(this__4937__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs-time.core/Interval");
};
cljs_time.core.Interval.cljs$lang$ctorPrWriter = function(this__4937__auto__, writer__4938__auto__) {
  return cljs.core._write.call(null, writer__4938__auto__, "cljs-time.core/Interval");
};
cljs_time.core.__GT_Interval = function cljs_time$core$__GT_Interval(start, end) {
  return new cljs_time.core.Interval(start, end, null, null, null);
};
cljs_time.core.map__GT_Interval = function cljs_time$core$map__GT_Interval(G__11214) {
  return new cljs_time.core.Interval((new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(G__11214), (new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(G__11214), null, cljs.core.dissoc.call(null, G__11214, new cljs.core.Keyword(null, "start", "start", -355208981), new cljs.core.Keyword(null, "end", "end", -268185958)), null);
};
cljs_time.core.interval = function cljs_time$core$interval(start, end) {
  if (start.getTime() <= end.getTime()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c\x3d", "\x3c\x3d", 1244895369, null), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)), cljs.core.list(new cljs.core.Symbol(null, ".getTime", ".getTime", -1048557777, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)))))].join(""));
  }
  return cljs_time.core.__GT_Interval.call(null, start, end);
};
cljs_time.core.Period = function(years, months, weeks, days, hours, minutes, seconds, millis, __meta, __extmap, __hash) {
  this.years = years;
  this.months = months;
  this.weeks = weeks;
  this.days = days;
  this.hours = hours;
  this.minutes = minutes;
  this.seconds = seconds;
  this.millis = millis;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs_time.core.Period.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4903__auto__, k__4904__auto__) {
  var self__ = this;
  var this__4903__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4903__auto____$1, k__4904__auto__, null);
};
cljs_time.core.Period.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4905__auto__, k11221, else__4906__auto__) {
  var self__ = this;
  var this__4905__auto____$1 = this;
  var G__11223 = k11221 instanceof cljs.core.Keyword ? k11221.fqn : null;
  switch(G__11223) {
    case "years":
      return self__.years;
      break;
    case "months":
      return self__.months;
      break;
    case "weeks":
      return self__.weeks;
      break;
    case "days":
      return self__.days;
      break;
    case "hours":
      return self__.hours;
      break;
    case "minutes":
      return self__.minutes;
      break;
    case "seconds":
      return self__.seconds;
      break;
    case "millis":
      return self__.millis;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k11221, else__4906__auto__);
  }
};
cljs_time.core.Period.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4917__auto__, writer__4918__auto__, opts__4919__auto__) {
  var self__ = this;
  var this__4917__auto____$1 = this;
  var pr_pair__4920__auto__ = function(this__4917__auto____$1) {
    return function(keyval__4921__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4918__auto__, cljs.core.pr_writer, "", " ", "", opts__4919__auto__, keyval__4921__auto__);
    };
  }(this__4917__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4918__auto__, pr_pair__4920__auto__, "#cljs-time.core.Period{", ", ", "}", opts__4919__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "years", "years", -1298579689), self__.years], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "months", "months", -45571637), self__.months], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), self__.weeks], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "days", "days", -1394072564), self__.days], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "hours", "hours", 58380855), self__.hours], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), self__.minutes], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seconds", "seconds", -445266194), self__.seconds], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
  "millis", "millis", -1338288387), self__.millis], null)], null), self__.__extmap));
};
cljs_time.core.Period.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4901__auto__) {
  var self__ = this;
  var this__4901__auto____$1 = this;
  return self__.__meta;
};
cljs_time.core.Period.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4897__auto__) {
  var self__ = this;
  var this__4897__auto____$1 = this;
  return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, self__.__hash);
};
cljs_time.core.Period.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4907__auto__) {
  var self__ = this;
  var this__4907__auto____$1 = this;
  return 8 + cljs.core.count.call(null, self__.__extmap);
};
cljs_time.core.Period.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4898__auto__) {
  var self__ = this;
  var this__4898__auto____$1 = this;
  var h__4724__auto__ = self__.__hash;
  if (!(h__4724__auto__ == null)) {
    return h__4724__auto__;
  } else {
    var h__4724__auto____$1 = cljs.core.hash_imap.call(null, this__4898__auto____$1);
    self__.__hash = h__4724__auto____$1;
    return h__4724__auto____$1;
  }
};
cljs_time.core.Period.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4899__auto__, other__4900__auto__) {
  var self__ = this;
  var this__4899__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = other__4900__auto__;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = this__4899__auto____$1.constructor === other__4900__auto__.constructor;
      if (and__4296__auto____$1) {
        return cljs.core.equiv_map.call(null, this__4899__auto____$1, other__4900__auto__);
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs_time.core.Period.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4912__auto__, k__4913__auto__) {
  var self__ = this;
  var this__4912__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "months", "months", -45571637), null, new cljs.core.Keyword(null, "days", "days", -1394072564), null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), null, new cljs.core.Keyword(null, "hours", "hours", 58380855), null, new cljs.core.Keyword(null, "years", "years", -1298579689), null, new cljs.core.Keyword(null, "minutes", "minutes", 
  1319166394), null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), null], null), null), k__4913__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4912__auto____$1), self__.__meta), k__4913__auto__);
  } else {
    return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4913__auto__)), null);
  }
};
cljs_time.core.Period.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4910__auto__, k__4911__auto__, G__11220) {
  var self__ = this;
  var this__4910__auto____$1 = this;
  var pred__11224 = cljs.core.keyword_identical_QMARK_;
  var expr__11225 = k__4911__auto__;
  if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), expr__11225))) {
    return new cljs_time.core.Period(G__11220, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), expr__11225))) {
      return new cljs_time.core.Period(self__.years, G__11220, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), expr__11225))) {
        return new cljs_time.core.Period(self__.years, self__.months, G__11220, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), expr__11225))) {
          return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, G__11220, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), expr__11225))) {
            return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, G__11220, self__.minutes, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), expr__11225))) {
              return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, G__11220, self__.seconds, self__.millis, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), expr__11225))) {
                return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, G__11220, self__.millis, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__11224.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), expr__11225))) {
                  return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, G__11220, self__.__meta, self__.__extmap, null);
                } else {
                  return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4911__auto__, G__11220), null);
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs_time.core.Period.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4915__auto__) {
  var self__ = this;
  var this__4915__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "years", "years", -1298579689), self__.years], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "months", "months", -45571637), self__.months], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), self__.weeks], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "days", "days", -1394072564), self__.days], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "hours", "hours", 58380855), self__.hours], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), self__.minutes], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seconds", "seconds", -445266194), self__.seconds], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), self__.millis], null)], null), self__.__extmap));
};
cljs_time.core.Period.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4902__auto__, G__11220) {
  var self__ = this;
  var this__4902__auto____$1 = this;
  return new cljs_time.core.Period(self__.years, self__.months, self__.weeks, self__.days, self__.hours, self__.minutes, self__.seconds, self__.millis, G__11220, self__.__extmap, self__.__hash);
};
cljs_time.core.Period.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4908__auto__, entry__4909__auto__) {
  var self__ = this;
  var this__4908__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4909__auto__)) {
    return cljs.core._assoc.call(null, this__4908__auto____$1, cljs.core._nth.call(null, entry__4909__auto__, 0), cljs.core._nth.call(null, entry__4909__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4908__auto____$1, entry__4909__auto__);
  }
};
cljs_time.core.Period.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "years", "years", 341951838, null), new cljs.core.Symbol(null, "months", "months", 1594959890, null), new cljs.core.Symbol(null, "weeks", "weeks", -809839644, null), new cljs.core.Symbol(null, "days", "days", 246458963, null), new cljs.core.Symbol(null, "hours", "hours", 1698912382, null), new cljs.core.Symbol(null, "minutes", "minutes", -1335269375, null), new cljs.core.Symbol(null, 
  "seconds", "seconds", 1195265333, null), new cljs.core.Symbol(null, "millis", "millis", 302243140, null)], null);
};
cljs_time.core.Period.cljs$lang$type = true;
cljs_time.core.Period.cljs$lang$ctorPrSeq = function(this__4937__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs-time.core/Period");
};
cljs_time.core.Period.cljs$lang$ctorPrWriter = function(this__4937__auto__, writer__4938__auto__) {
  return cljs.core._write.call(null, writer__4938__auto__, "cljs-time.core/Period");
};
cljs_time.core.__GT_Period = function cljs_time$core$__GT_Period(years, months, weeks, days, hours, minutes, seconds, millis) {
  return new cljs_time.core.Period(years, months, weeks, days, hours, minutes, seconds, millis, null, null, null);
};
cljs_time.core.map__GT_Period = function cljs_time$core$map__GT_Period(G__11222) {
  return new cljs_time.core.Period((new cljs.core.Keyword(null, "years", "years", -1298579689)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "months", "months", -45571637)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "weeks", "weeks", 1844596125)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "days", "days", -1394072564)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "hours", "hours", 58380855)).cljs$core$IFn$_invoke$arity$1(G__11222), 
  (new cljs.core.Keyword(null, "minutes", "minutes", 1319166394)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "seconds", "seconds", -445266194)).cljs$core$IFn$_invoke$arity$1(G__11222), (new cljs.core.Keyword(null, "millis", "millis", -1338288387)).cljs$core$IFn$_invoke$arity$1(G__11222), null, cljs.core.dissoc.call(null, G__11222, new cljs.core.Keyword(null, "years", "years", -1298579689), new cljs.core.Keyword(null, "months", "months", -45571637), new cljs.core.Keyword(null, 
  "weeks", "weeks", 1844596125), new cljs.core.Keyword(null, "days", "days", -1394072564), new cljs.core.Keyword(null, "hours", "hours", 58380855), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), new cljs.core.Keyword(null, "millis", "millis", -1338288387)), null);
};
cljs_time.core.period = function cljs_time$core$period() {
  var G__11232 = arguments.length;
  switch(G__11232) {
    case 2:
      return cljs_time.core.period.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs_time.core.period.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs_time.core.period.cljs$core$IFn$_invoke$arity$2 = function(period, value) {
  return cljs_time.core.map__GT_Period.call(null, new cljs.core.PersistentArrayMap.fromArray([period, value], true, false));
};
cljs_time.core.period.cljs$core$IFn$_invoke$arity$variadic = function(p1, v1, kvs) {
  return cljs.core.apply.call(null, cljs.core.assoc, cljs_time.core.period.call(null, p1, v1), kvs);
};
cljs_time.core.period.cljs$lang$applyTo = function(seq11228) {
  var G__11229 = cljs.core.first.call(null, seq11228);
  var seq11228__$1 = cljs.core.next.call(null, seq11228);
  var G__11230 = cljs.core.first.call(null, seq11228__$1);
  var seq11228__$2 = cljs.core.next.call(null, seq11228__$1);
  return cljs_time.core.period.cljs$core$IFn$_invoke$arity$variadic(G__11229, G__11230, seq11228__$2);
};
cljs_time.core.period.cljs$lang$maxFixedArity = 2;
cljs_time.core.periods = function() {
  var fixed_time_fn = function(f, set_fn, op, date, value) {
    var date__$1 = date.clone();
    if (cljs.core.truth_(value)) {
      set_fn.call(null, date__$1, op.call(null, f.call(null, date__$1), value));
    } else {
    }
    return date__$1;
  };
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "millis", "millis", -1338288387), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.milli, function(fixed_time_fn) {
    return function(p1__11234_SHARP_, p2__11235_SHARP_) {
      return p1__11234_SHARP_.setMilliseconds(p2__11235_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "seconds", "seconds", -445266194), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.second, function(fixed_time_fn) {
    return function(p1__11236_SHARP_, p2__11237_SHARP_) {
      return p1__11236_SHARP_.setSeconds(p2__11237_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.minute, function(fixed_time_fn) {
    return function(p1__11238_SHARP_, p2__11239_SHARP_) {
      return p1__11238_SHARP_.setMinutes(p2__11239_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.hour, function(fixed_time_fn) {
    return function(p1__11240_SHARP_, p2__11241_SHARP_) {
      return p1__11240_SHARP_.setHours(p2__11241_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "days", "days", -1394072564), cljs.core.partial.call(null, fixed_time_fn, cljs_time.core.day, function(fixed_time_fn) {
    return function(p1__11242_SHARP_, p2__11243_SHARP_) {
      return p1__11242_SHARP_.setDate(p2__11243_SHARP_);
    };
  }(fixed_time_fn)), new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(value)) {
        date__$1.setDate(op.call(null, cljs_time.core.day.call(null, date__$1), 7 * value));
      } else {
      }
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "months", "months", -45571637), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(value)) {
        var m_11244 = op.call(null, cljs_time.core.month.call(null, date__$1), value);
        var y_11245 = cljs_time.core.year.call(null, date__$1);
        var y_11246__$1 = m_11244 > 12 ? y_11245 + 1 : m_11244 < 1 ? y_11245 - 1 : y_11245;
        var m_11247__$1 = m_11244 > 12 ? cljs.core.mod.call(null, m_11244, 12) : m_11244 < 1 ? m_11244 + 12 : m_11244;
        var ldom_11248 = cljs_time.core.day.call(null, cljs_time.core.last_day_of_the_month_.call(null, new goog.date.Date(y_11246__$1, m_11247__$1 - 1, 1)));
        if (ldom_11248 < cljs_time.core.day.call(null, date__$1)) {
          date__$1.setDate(ldom_11248);
        } else {
        }
        date__$1.setMonth(m_11247__$1 - 1);
        date__$1.setYear(y_11246__$1);
      } else {
      }
      return date__$1;
    };
  }(fixed_time_fn), new cljs.core.Keyword(null, "years", "years", -1298579689), function(fixed_time_fn) {
    return function(op, date, value) {
      var date__$1 = date.clone();
      if (cljs.core.truth_(value)) {
        if (cljs.core.truth_(function() {
          var and__4296__auto__ = cljs_time.internal.core.leap_year_QMARK_.call(null, cljs_time.core.year.call(null, date__$1));
          if (cljs.core.truth_(and__4296__auto__)) {
            var and__4296__auto____$1 = cljs_time.core._EQ_.call(null, 2, cljs_time.core.month.call(null, date__$1));
            if (cljs.core.truth_(and__4296__auto____$1)) {
              return cljs_time.core._EQ_.call(null, 29, cljs_time.core.day.call(null, date__$1));
            } else {
              return and__4296__auto____$1;
            }
          } else {
            return and__4296__auto__;
          }
        }())) {
          date__$1.setDate(28);
        } else {
        }
        date__$1.setYear(op.call(null, cljs_time.core.year.call(null, date__$1), value));
      } else {
      }
      return date__$1;
    };
  }(fixed_time_fn)], null);
}();
cljs_time.core.period_fn = function cljs_time$core$period_fn(p) {
  return function(operator, date) {
    return cljs.core.reduce.call(null, function(p1__11250_SHARP_, p2__11249_SHARP_) {
      return cljs_time.core.periods.call(null, cljs.core.key.call(null, p2__11249_SHARP_)).call(null, operator, p1__11250_SHARP_, cljs.core.val.call(null, p2__11249_SHARP_));
    }, date, p);
  };
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$first_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return new goog.date.UtcDateTime(this$__$1.getYear(), this$__$1.getMonth(), 1, 0, 0, 0, 0);
};
goog.date.UtcDateTime.prototype.cljs_time$core$DateTimeProtocol$last_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.minus_.call(null, new goog.date.UtcDateTime(this$__$1.getYear(), this$__$1.getMonth() + 1, 1, 0, 0, 0, 0), cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), 1));
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getHours();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMinutes();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getSeconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMilliseconds();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$first_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return new goog.date.DateTime(this$__$1.getYear(), this$__$1.getMonth(), 1, 0, 0, 0, 0);
};
goog.date.DateTime.prototype.cljs_time$core$DateTimeProtocol$last_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.minus_.call(null, new goog.date.DateTime(this$__$1.getYear(), this$__$1.getMonth() + 1, 1, 0, 0, 0, 0), cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), 1));
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$ = true;
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$year$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getYear();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$month$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getMonth() + 1;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1.getDate();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$day_of_week$arity$1 = function(this$) {
  var this$__$1 = this;
  var d = this$__$1.getDay();
  if (cljs.core.truth_(cljs_time.core._EQ_.call(null, d, 0))) {
    return 7;
  } else {
    return d;
  }
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$hour$arity$1 = function(this$) {
  var this$__$1 = this;
  return null;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$minute$arity$1 = function(this$) {
  var this$__$1 = this;
  return null;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$second$arity$1 = function(this$) {
  var this$__$1 = this;
  return null;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$milli$arity$1 = function(this$) {
  var this$__$1 = this;
  return null;
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$after_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() > that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$before_QMARK_$arity$2 = function(this$, that) {
  var this$__$1 = this;
  return this$__$1.getTime() < that.getTime();
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$plus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._PLUS_, this$__$1);
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$minus_$arity$2 = function(this$, period) {
  var this$__$1 = this;
  return cljs_time.core.period_fn.call(null, period).call(null, cljs.core._, this$__$1);
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$first_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return new goog.date.Date(this$__$1.getYear(), this$__$1.getMonth(), 1);
};
goog.date.Date.prototype.cljs_time$core$DateTimeProtocol$last_day_of_the_month_$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.minus_.call(null, new goog.date.Date(this$__$1.getYear(), this$__$1.getMonth() + 1, 1), cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), 1));
};
cljs_time.core.utc = goog.i18n.TimeZone.createTimeZone(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), "UTC", new cljs.core.Keyword(null, "std_offset", "std_offset", 1663653877), 0, new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, ["UTC"], null), new cljs.core.Keyword(null, "transitions", "transitions", -2046216121), cljs.core.PersistentVector.EMPTY], 
null)));
cljs_time.core.now = function cljs_time$core$now() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    return cljs_time.core._STAR_sys_time_STAR_;
  } else {
    return new goog.date.UtcDateTime;
  }
};
cljs_time.core.time_now = function cljs_time$core$time_now() {
  return new goog.date.DateTime;
};
cljs_time.core.at_midnight = function cljs_time$core$at_midnight(datetime) {
  var datetime__$1 = datetime.clone();
  var G__11252 = datetime__$1;
  G__11252.setHours(0);
  G__11252.setMinutes(0);
  G__11252.setSeconds(0);
  G__11252.setMilliseconds(0);
  return G__11252;
};
cljs_time.core.today_at_midnight = function cljs_time$core$today_at_midnight() {
  return cljs_time.core.at_midnight.call(null, cljs_time.core.now.call(null));
};
cljs_time.core.epoch = function cljs_time$core$epoch() {
  var G__11254 = new goog.date.UtcDateTime;
  G__11254.setTime(0);
  return G__11254;
};
cljs_time.core.date_midnight = function cljs_time$core$date_midnight() {
  var G__11256 = arguments.length;
  switch(G__11256) {
    case 1:
      return cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$1 = function(year) {
  return cljs_time.core.date_midnight.call(null, year, 1, 1);
};
cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.date_midnight.call(null, year, month, 1);
};
cljs_time.core.date_midnight.cljs$core$IFn$_invoke$arity$3 = function(year, month, day) {
  return new goog.date.UtcDateTime(year, month - 1, day);
};
cljs_time.core.date_midnight.cljs$lang$maxFixedArity = 3;
cljs_time.core.date_time = function cljs_time$core$date_time() {
  var G__11259 = arguments.length;
  switch(G__11259) {
    case 1:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$1 = function(year) {
  return cljs_time.core.date_time.call(null, year, 1, 1, 0, 0, 0, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.date_time.call(null, year, month, 1, 0, 0, 0, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$3 = function(year, month, day) {
  return cljs_time.core.date_time.call(null, year, month, day, 0, 0, 0, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$4 = function(year, month, day, hour) {
  return cljs_time.core.date_time.call(null, year, month, day, hour, 0, 0, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$5 = function(year, month, day, hour, minute) {
  return cljs_time.core.date_time.call(null, year, month, day, hour, minute, 0, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$6 = function(year, month, day, hour, minute, second) {
  return cljs_time.core.date_time.call(null, year, month, day, hour, minute, second, 0);
};
cljs_time.core.date_time.cljs$core$IFn$_invoke$arity$7 = function(year, month, day, hour, minute, second, millis) {
  return new goog.date.UtcDateTime(year, month - 1, day, hour, minute, second, millis);
};
cljs_time.core.date_time.cljs$lang$maxFixedArity = 7;
cljs_time.core.local_date_time = function cljs_time$core$local_date_time() {
  var G__11262 = arguments.length;
  switch(G__11262) {
    case 1:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$1 = function(year) {
  return cljs_time.core.local_date_time.call(null, year, 1, 1, 0, 0, 0, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.local_date_time.call(null, year, month, 1, 0, 0, 0, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$3 = function(year, month, day) {
  return cljs_time.core.local_date_time.call(null, year, month, day, 0, 0, 0, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$4 = function(year, month, day, hour) {
  return cljs_time.core.local_date_time.call(null, year, month, day, hour, 0, 0, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$5 = function(year, month, day, hour, minute) {
  return cljs_time.core.local_date_time.call(null, year, month, day, hour, minute, 0, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$6 = function(year, month, day, hour, minute, second) {
  return cljs_time.core.local_date_time.call(null, year, month, day, hour, minute, second, 0);
};
cljs_time.core.local_date_time.cljs$core$IFn$_invoke$arity$7 = function(year, month, day, hour, minute, second, millis) {
  return new goog.date.DateTime(year, month - 1, day, hour, minute, second, millis);
};
cljs_time.core.local_date_time.cljs$lang$maxFixedArity = 7;
cljs_time.core.local_date = function cljs_time$core$local_date(year, month, day) {
  return new goog.date.Date(year, month - 1, day);
};
cljs_time.core.today = function cljs_time$core$today() {
  if (cljs.core.truth_(cljs_time.core._STAR_sys_time_STAR_)) {
    var d = cljs_time.core._STAR_sys_time_STAR_;
    return new goog.date.Date(d.getYear(), d.getMonth(), d.getDate());
  } else {
    return new goog.date.Date;
  }
};
cljs_time.core.time_zone_for_offset = function cljs_time$core$time_zone_for_offset() {
  var G__11265 = arguments.length;
  switch(G__11265) {
    case 1:
      return cljs_time.core.time_zone_for_offset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.time_zone_for_offset.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.time_zone_for_offset.cljs$core$IFn$_invoke$arity$1 = function(hours) {
  return cljs_time.core.time_zone_for_offset.call(null, hours, null);
};
cljs_time.core.time_zone_for_offset.cljs$core$IFn$_invoke$arity$2 = function(hours, minutes) {
  var sign = hours < 0 ? new cljs.core.Keyword(null, "-", "-", -2112348439) : new cljs.core.Keyword(null, "+", "+", 1913524883);
  var fmt = [cljs.core.str("UTC%s%02d"), cljs.core.str(cljs.core.truth_(minutes) ? ":%02d" : null)].join("");
  var hours__$1 = hours < 0 ? -1 * hours : hours;
  var tz_name = cljs.core.truth_(minutes) ? cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1, minutes) : cljs_time.internal.core.format.call(null, fmt, cljs.core.name.call(null, sign), hours__$1);
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "id", "id", -1388402092), tz_name, new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [sign, hours__$1, function() {
    var or__4308__auto__ = minutes;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return 0;
    }
  }(), 0], null), new cljs.core.Keyword(null, "rules", "rules", 1198912366), "-", new cljs.core.Keyword(null, "names", "names", -1943074658), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tz_name], null)], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.core", "time-zone", "cljs-time.core/time-zone", 751963705)], null));
};
cljs_time.core.time_zone_for_offset.cljs$lang$maxFixedArity = 2;
cljs_time.core.default_time_zone = function cljs_time$core$default_time_zone() {
  var hours = -1 * (new goog.date.DateTime).getTimezoneOffset() / 60;
  return cljs_time.core.time_zone_for_offset.call(null, hours | 0, cljs.core.mod.call(null, hours, 1));
};
cljs_time.core.to_default_time_zone = function cljs_time$core$to_default_time_zone(dt) {
  return new goog.date.DateTime(dt);
};
cljs_time.core.from_default_time_zone = function cljs_time$core$from_default_time_zone(dt) {
  return new goog.date.DateTime(dt.getYear(), dt.getMonth(), dt.getDate(), dt.getHours(), dt.getMinutes(), dt.getSeconds(), dt.getMilliseconds());
};
cljs_time.core.years = function cljs_time$core$years() {
  var G__11268 = arguments.length;
  switch(G__11268) {
    case 0:
      return cljs_time.core.years.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.years.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.years.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.years.call(null, null);
};
cljs_time.core.years.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), n);
};
cljs_time.core.years.cljs$lang$maxFixedArity = 1;
cljs_time.core.months = function cljs_time$core$months() {
  var G__11271 = arguments.length;
  switch(G__11271) {
    case 0:
      return cljs_time.core.months.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.months.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.months.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.months.call(null, null);
};
cljs_time.core.months.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), n);
};
cljs_time.core.months.cljs$lang$maxFixedArity = 1;
cljs_time.core.weeks = function cljs_time$core$weeks() {
  var G__11274 = arguments.length;
  switch(G__11274) {
    case 0:
      return cljs_time.core.weeks.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.weeks.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.weeks.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.weeks.call(null, null);
};
cljs_time.core.weeks.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), n);
};
cljs_time.core.weeks.cljs$lang$maxFixedArity = 1;
cljs_time.core.days = function cljs_time$core$days() {
  var G__11277 = arguments.length;
  switch(G__11277) {
    case 0:
      return cljs_time.core.days.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.days.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.days.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.days.call(null, null);
};
cljs_time.core.days.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), n);
};
cljs_time.core.days.cljs$lang$maxFixedArity = 1;
cljs_time.core.hours = function cljs_time$core$hours() {
  var G__11280 = arguments.length;
  switch(G__11280) {
    case 0:
      return cljs_time.core.hours.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.hours.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.hours.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.hours.call(null, null);
};
cljs_time.core.hours.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), n);
};
cljs_time.core.hours.cljs$lang$maxFixedArity = 1;
cljs_time.core.minutes = function cljs_time$core$minutes() {
  var G__11283 = arguments.length;
  switch(G__11283) {
    case 0:
      return cljs_time.core.minutes.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.minutes.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.minutes.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.minutes.call(null, null);
};
cljs_time.core.minutes.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), n);
};
cljs_time.core.minutes.cljs$lang$maxFixedArity = 1;
cljs_time.core.seconds = function cljs_time$core$seconds() {
  var G__11286 = arguments.length;
  switch(G__11286) {
    case 0:
      return cljs_time.core.seconds.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.seconds.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.seconds.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.seconds.call(null, null);
};
cljs_time.core.seconds.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), n);
};
cljs_time.core.seconds.cljs$lang$maxFixedArity = 1;
cljs_time.core.millis = function cljs_time$core$millis() {
  var G__11289 = arguments.length;
  switch(G__11289) {
    case 0:
      return cljs_time.core.millis.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.core.millis.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.millis.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.core.millis.call(null, null);
};
cljs_time.core.millis.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), n);
};
cljs_time.core.millis.cljs$lang$maxFixedArity = 1;
cljs_time.core.plus = function cljs_time$core$plus() {
  var G__11295 = arguments.length;
  switch(G__11295) {
    case 2:
      return cljs_time.core.plus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs_time.core.plus.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs_time.core.plus.cljs$core$IFn$_invoke$arity$2 = function(dt, p) {
  return cljs_time.core.plus_.call(null, dt, p);
};
cljs_time.core.plus.cljs$core$IFn$_invoke$arity$variadic = function(dt, p, ps) {
  return cljs.core.reduce.call(null, cljs_time.core.plus_, cljs_time.core.plus_.call(null, dt, p), ps);
};
cljs_time.core.plus.cljs$lang$applyTo = function(seq11291) {
  var G__11292 = cljs.core.first.call(null, seq11291);
  var seq11291__$1 = cljs.core.next.call(null, seq11291);
  var G__11293 = cljs.core.first.call(null, seq11291__$1);
  var seq11291__$2 = cljs.core.next.call(null, seq11291__$1);
  return cljs_time.core.plus.cljs$core$IFn$_invoke$arity$variadic(G__11292, G__11293, seq11291__$2);
};
cljs_time.core.plus.cljs$lang$maxFixedArity = 2;
cljs_time.core.minus = function cljs_time$core$minus() {
  var G__11301 = arguments.length;
  switch(G__11301) {
    case 2:
      return cljs_time.core.minus.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return cljs_time.core.minus.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
cljs_time.core.minus.cljs$core$IFn$_invoke$arity$2 = function(dt, p) {
  return cljs_time.core.minus_.call(null, dt, p);
};
cljs_time.core.minus.cljs$core$IFn$_invoke$arity$variadic = function(dt, p, ps) {
  return cljs.core.reduce.call(null, cljs_time.core.minus_, cljs_time.core.minus_.call(null, dt, p), ps);
};
cljs_time.core.minus.cljs$lang$applyTo = function(seq11297) {
  var G__11298 = cljs.core.first.call(null, seq11297);
  var seq11297__$1 = cljs.core.next.call(null, seq11297);
  var G__11299 = cljs.core.first.call(null, seq11297__$1);
  var seq11297__$2 = cljs.core.next.call(null, seq11297__$1);
  return cljs_time.core.minus.cljs$core$IFn$_invoke$arity$variadic(G__11298, G__11299, seq11297__$2);
};
cljs_time.core.minus.cljs$lang$maxFixedArity = 2;
cljs_time.core.ago = function cljs_time$core$ago(period) {
  return cljs_time.core.minus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.yesterday = function cljs_time$core$yesterday() {
  return cljs_time.core.ago.call(null, cljs_time.core.days.call(null, 1));
};
cljs_time.core.from_now = function cljs_time$core$from_now(period) {
  return cljs_time.core.plus.call(null, cljs_time.core.now.call(null), period);
};
cljs_time.core.earliest = function cljs_time$core$earliest() {
  var G__11304 = arguments.length;
  switch(G__11304) {
    case 2:
      return cljs_time.core.earliest.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs_time.core.earliest.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.earliest.cljs$core$IFn$_invoke$arity$2 = function(dt1, dt2) {
  if (cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, dt1, dt2))) {
    return dt1;
  } else {
    return dt2;
  }
};
cljs_time.core.earliest.cljs$core$IFn$_invoke$arity$1 = function(dts) {
  return cljs.core.reduce.call(null, cljs_time.core.earliest, dts);
};
cljs_time.core.earliest.cljs$lang$maxFixedArity = 2;
cljs_time.core.latest = function cljs_time$core$latest() {
  var G__11307 = arguments.length;
  switch(G__11307) {
    case 2:
      return cljs_time.core.latest.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs_time.core.latest.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.latest.cljs$core$IFn$_invoke$arity$2 = function(dt1, dt2) {
  if (cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, dt1, dt2))) {
    return dt1;
  } else {
    return dt2;
  }
};
cljs_time.core.latest.cljs$core$IFn$_invoke$arity$1 = function(dts) {
  return cljs.core.reduce.call(null, cljs_time.core.latest, dts);
};
cljs_time.core.latest.cljs$lang$maxFixedArity = 2;
cljs_time.core.start = function cljs_time$core$start(in$) {
  return (new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.end = function cljs_time$core$end(in$) {
  return (new cljs.core.Keyword(null, "end", "end", -268185958)).cljs$core$IFn$_invoke$arity$1(in$);
};
cljs_time.core.extend = function cljs_time$core$extend() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs_time.core.extend.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs_time.core.extend.cljs$core$IFn$_invoke$arity$variadic = function(in$, by) {
  return cljs.core.assoc.call(null, in$, new cljs.core.Keyword(null, "end", "end", -268185958), cljs.core.apply.call(null, cljs_time.core.plus, cljs_time.core.end.call(null, in$), by));
};
cljs_time.core.extend.cljs$lang$maxFixedArity = 1;
cljs_time.core.extend.cljs$lang$applyTo = function(seq11309) {
  var G__11310 = cljs.core.first.call(null, seq11309);
  var seq11309__$1 = cljs.core.next.call(null, seq11309);
  return cljs_time.core.extend.cljs$core$IFn$_invoke$arity$variadic(G__11310, seq11309__$1);
};
cljs_time.core.month_range = function cljs_time$core$month_range(p__11313) {
  var map__11315 = p__11313;
  var map__11315__$1 = cljs.core.seq_QMARK_.call(null, map__11315) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11315) : map__11315;
  var start = cljs.core.get.call(null, map__11315__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11315__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  return cljs.core.take_while.call(null, function(map__11315, map__11315__$1, start, end) {
    return function(p1__11311_SHARP_) {
      return cljs_time.core.before_QMARK_.call(null, p1__11311_SHARP_, end);
    };
  }(map__11315, map__11315__$1, start, end), cljs.core.map.call(null, function(map__11315, map__11315__$1, start, end) {
    return function(p1__11312_SHARP_) {
      return cljs_time.core.plus.call(null, start, cljs_time.core.months.call(null, p1__11312_SHARP_ + 1));
    };
  }(map__11315, map__11315__$1, start, end), cljs.core.range.call(null)));
};
cljs_time.core.total_days_in_whole_months = function cljs_time$core$total_days_in_whole_months(interval) {
  return cljs.core.map.call(null, function(p1__11316_SHARP_) {
    return p1__11316_SHARP_.getNumberOfDaysInMonth();
  }, cljs_time.core.month_range.call(null, interval));
};
cljs_time.core.in_months_ = function cljs_time$core$in_months_(p__11317) {
  var map__11319 = p__11317;
  var map__11319__$1 = cljs.core.seq_QMARK_.call(null, map__11319) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11319) : map__11319;
  var interval = map__11319__$1;
  var start = cljs.core.get.call(null, map__11319__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11319__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  return cljs.core.count.call(null, cljs_time.core.total_days_in_whole_months.call(null, interval));
};
cljs_time.core.in_years_ = function cljs_time$core$in_years_(p__11320) {
  var map__11322 = p__11320;
  var map__11322__$1 = cljs.core.seq_QMARK_.call(null, map__11322) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11322) : map__11322;
  var start = cljs.core.get.call(null, map__11322__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11322__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var sm = cljs_time.core.month.call(null, start);
  var sd = cljs_time.core.day.call(null, start);
  var em = cljs_time.core.month.call(null, end);
  var ed = cljs_time.core.day.call(null, end);
  var d1 = cljs.core.truth_(function() {
    var and__4296__auto__ = cljs_time.core._EQ_.call(null, sm, 2);
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = cljs_time.core._EQ_.call(null, sd, 29);
      if (cljs.core.truth_(and__4296__auto____$1)) {
        var and__4296__auto____$2 = cljs_time.core._EQ_.call(null, em, 2);
        if (cljs.core.truth_(and__4296__auto____$2)) {
          return cljs_time.core._EQ_.call(null, ed, 28);
        } else {
          return and__4296__auto____$2;
        }
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }()) ? 0 : cljs.core.truth_(cljs_time.core.before_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 0 : cljs.core.truth_(cljs_time.core.after_QMARK_.call(null, cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), sm, sd), cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, start), em, ed))) ? 1 : 0;
  return cljs_time.core.year.call(null, end) - cljs_time.core.year.call(null, start) - d1;
};
cljs_time.core.conversion_error = function cljs_time$core$conversion_error(from, to) {
  var from__$1 = clojure.string.capitalize.call(null, cljs.core.name.call(null, from));
  var to__$1 = cljs.core.name.call(null, to);
  throw cljs.core.ex_info.call(null, cljs_time.internal.core.format.call(null, "%s cannot be converted to %s", from__$1, to__$1), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "unsupported-operation", "unsupported-operation", 1890540953)], null));
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$ = true;
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_millis$arity$1 = function(p__11323) {
  var map__11324 = p__11323;
  var map__11324__$1 = cljs.core.seq_QMARK_.call(null, map__11324) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11324) : map__11324;
  var millis = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__11324__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var map__11325 = this;
  var map__11325__$1 = cljs.core.seq_QMARK_.call(null, map__11325) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11325) : map__11325;
  var millis__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years__$1 = cljs.core.get.call(null, map__11325__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  if (cljs.core.truth_(months__$1)) {
    return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  } else {
    if (cljs.core.truth_(years__$1)) {
      return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), new cljs.core.Keyword(null, "millis", "millis", -1338288387));
    } else {
      return millis__$1 + seconds__$1 * 1E3 + minutes__$1 * 60 * 1E3 + hours__$1 * 60 * 60 * 1E3 + days__$1 * 24 * 60 * 60 * 1E3 + weeks__$1 * 7 * 24 * 60 * 60 * 1E3;
    }
  }
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_seconds$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_millis.call(null, this$__$1) / 1E3 | 0;
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_minutes$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_seconds.call(null, this$__$1) / 60 | 0;
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_hours$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_minutes.call(null, this$__$1) / 60 | 0;
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_days$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_hours.call(null, this$__$1) / 24 | 0;
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_weeks$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_days.call(null, this$__$1) / 7 | 0;
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_months$arity$1 = function(p__11326) {
  var map__11327 = p__11326;
  var map__11327__$1 = cljs.core.seq_QMARK_.call(null, map__11327) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11327) : map__11327;
  var millis = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__11327__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var map__11328 = this;
  var map__11328__$1 = cljs.core.seq_QMARK_.call(null, map__11328) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11328) : map__11328;
  var millis__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years__$1 = cljs.core.get.call(null, map__11328__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  if (cljs.core.truth_(millis__$1)) {
    return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), new cljs.core.Keyword(null, "months", "months", -45571637));
  } else {
    if (cljs.core.truth_(seconds__$1)) {
      return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), new cljs.core.Keyword(null, "months", "months", -45571637));
    } else {
      if (cljs.core.truth_(minutes__$1)) {
        return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), new cljs.core.Keyword(null, "months", "months", -45571637));
      } else {
        if (cljs.core.truth_(hours__$1)) {
          return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), new cljs.core.Keyword(null, "months", "months", -45571637));
        } else {
          if (cljs.core.truth_(days__$1)) {
            return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), new cljs.core.Keyword(null, "months", "months", -45571637));
          } else {
            if (cljs.core.truth_(weeks__$1)) {
              return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), new cljs.core.Keyword(null, "months", "months", -45571637));
            } else {
              if (cljs.core.truth_(months__$1)) {
                return months__$1 + function() {
                  var or__4308__auto__ = years__$1;
                  if (cljs.core.truth_(or__4308__auto__)) {
                    return or__4308__auto__;
                  } else {
                    return 0;
                  }
                }() * 12;
              } else {
                if (cljs.core.truth_(years__$1)) {
                  return years__$1 * 12;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs_time.core.Period.prototype.cljs_time$core$InTimeUnitProtocol$in_years$arity$1 = function(p__11329) {
  var map__11330 = p__11329;
  var map__11330__$1 = cljs.core.seq_QMARK_.call(null, map__11330) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11330) : map__11330;
  var millis = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years = cljs.core.get.call(null, map__11330__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var map__11331 = this;
  var map__11331__$1 = cljs.core.seq_QMARK_.call(null, map__11331) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11331) : map__11331;
  var millis__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var seconds__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var minutes__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var hours__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var days__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var weeks__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125));
  var months__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "months", "months", -45571637));
  var years__$1 = cljs.core.get.call(null, map__11331__$1, new cljs.core.Keyword(null, "years", "years", -1298579689));
  if (cljs.core.truth_(millis__$1)) {
    return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387), new cljs.core.Keyword(null, "years", "years", -1298579689));
  } else {
    if (cljs.core.truth_(seconds__$1)) {
      return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), new cljs.core.Keyword(null, "years", "years", -1298579689));
    } else {
      if (cljs.core.truth_(minutes__$1)) {
        return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), new cljs.core.Keyword(null, "years", "years", -1298579689));
      } else {
        if (cljs.core.truth_(hours__$1)) {
          return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), new cljs.core.Keyword(null, "years", "years", -1298579689));
        } else {
          if (cljs.core.truth_(days__$1)) {
            return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), new cljs.core.Keyword(null, "years", "years", -1298579689));
          } else {
            if (cljs.core.truth_(weeks__$1)) {
              return cljs_time.core.conversion_error.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), new cljs.core.Keyword(null, "years", "years", -1298579689));
            } else {
              if (cljs.core.truth_(months__$1)) {
                return months__$1 / 12 + years__$1 | 0;
              } else {
                if (cljs.core.truth_(years__$1)) {
                  return years__$1;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$ = true;
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_millis$arity$1 = function(p__11332) {
  var map__11333 = p__11332;
  var map__11333__$1 = cljs.core.seq_QMARK_.call(null, map__11333) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11333) : map__11333;
  var start = cljs.core.get.call(null, map__11333__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11333__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__11334 = this;
  var map__11334__$1 = cljs.core.seq_QMARK_.call(null, map__11334) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11334) : map__11334;
  var start__$1 = cljs.core.get.call(null, map__11334__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end__$1 = cljs.core.get.call(null, map__11334__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  return end__$1.getTime() - start__$1.getTime();
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_seconds$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_millis.call(null, this$__$1) / 1E3 | 0;
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_minutes$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_seconds.call(null, this$__$1) / 60 | 0;
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_hours$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_minutes.call(null, this$__$1) / 60 | 0;
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_days$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_hours.call(null, this$__$1) / 24 | 0;
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_weeks$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_days.call(null, this$__$1) / 7 | 0;
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_months$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_months_.call(null, this$__$1);
};
cljs_time.core.Interval.prototype.cljs_time$core$InTimeUnitProtocol$in_years$arity$1 = function(this$) {
  var this$__$1 = this;
  return cljs_time.core.in_years_.call(null, this$__$1);
};
cljs_time.core.within_QMARK_ = function cljs_time$core$within_QMARK_() {
  var G__11336 = arguments.length;
  switch(G__11336) {
    case 2:
      return cljs_time.core.within_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs_time.core.within_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.within_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(p__11337, date) {
  var map__11338 = p__11337;
  var map__11338__$1 = cljs.core.seq_QMARK_.call(null, map__11338) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11338) : map__11338;
  var start = cljs.core.get.call(null, map__11338__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11338__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  return cljs_time.core.within_QMARK_.call(null, start, end, date);
};
cljs_time.core.within_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(start, end, date) {
  var or__4308__auto__ = cljs_time.core._EQ_.call(null, start, date);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var and__4296__auto__ = cljs_time.core.before_QMARK_.call(null, start, date);
    if (cljs.core.truth_(and__4296__auto__)) {
      return cljs_time.core.after_QMARK_.call(null, end, date);
    } else {
      return and__4296__auto__;
    }
  }
};
cljs_time.core.within_QMARK_.cljs$lang$maxFixedArity = 3;
cljs_time.core.overlaps_QMARK_ = function cljs_time$core$overlaps_QMARK_() {
  var G__11341 = arguments.length;
  switch(G__11341) {
    case 2:
      return cljs_time.core.overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs_time.core.overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.overlaps_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(p__11342, p__11343) {
  var map__11344 = p__11342;
  var map__11344__$1 = cljs.core.seq_QMARK_.call(null, map__11344) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11344) : map__11344;
  var start_a = cljs.core.get.call(null, map__11344__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__11344__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__11345 = p__11343;
  var map__11345__$1 = cljs.core.seq_QMARK_.call(null, map__11345) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11345) : map__11345;
  var start_b = cljs.core.get.call(null, map__11345__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__11345__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var and__4296__auto__ = cljs.core.not.call(null, function() {
    var or__4308__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs_time.core._EQ_.call(null, end_a, start_b);
    }
  }());
  if (and__4296__auto__) {
    return cljs_time.core.overlaps_QMARK_.call(null, start_a, end_a, start_b, end_b);
  } else {
    return and__4296__auto__;
  }
};
cljs_time.core.overlaps_QMARK_.cljs$core$IFn$_invoke$arity$4 = function(start_a, end_a, start_b, end_b) {
  var or__4308__auto__ = function() {
    var and__4296__auto__ = cljs_time.core.before_QMARK_.call(null, start_b, end_a);
    if (cljs.core.truth_(and__4296__auto__)) {
      return cljs_time.core.after_QMARK_.call(null, end_b, start_a);
    } else {
      return and__4296__auto__;
    }
  }();
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    var or__4308__auto____$1 = function() {
      var and__4296__auto__ = cljs_time.core.after_QMARK_.call(null, end_b, start_a);
      if (cljs.core.truth_(and__4296__auto__)) {
        return cljs_time.core.before_QMARK_.call(null, start_b, end_a);
      } else {
        return and__4296__auto__;
      }
    }();
    if (cljs.core.truth_(or__4308__auto____$1)) {
      return or__4308__auto____$1;
    } else {
      var or__4308__auto____$2 = cljs_time.core._EQ_.call(null, start_a, end_b);
      if (cljs.core.truth_(or__4308__auto____$2)) {
        return or__4308__auto____$2;
      } else {
        return cljs_time.core._EQ_.call(null, start_b, end_a);
      }
    }
  }
};
cljs_time.core.overlaps_QMARK_.cljs$lang$maxFixedArity = 4;
cljs_time.core.abuts_QMARK_ = function cljs_time$core$abuts_QMARK_(p__11347, p__11348) {
  var map__11351 = p__11347;
  var map__11351__$1 = cljs.core.seq_QMARK_.call(null, map__11351) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11351) : map__11351;
  var start_a = cljs.core.get.call(null, map__11351__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_a = cljs.core.get.call(null, map__11351__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var map__11352 = p__11348;
  var map__11352__$1 = cljs.core.seq_QMARK_.call(null, map__11352) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11352) : map__11352;
  var start_b = cljs.core.get.call(null, map__11352__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end_b = cljs.core.get.call(null, map__11352__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var or__4308__auto__ = cljs_time.core._EQ_.call(null, start_a, end_b);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return cljs_time.core._EQ_.call(null, end_a, start_b);
  }
};
cljs_time.core.date_QMARK_ = function cljs_time$core$date_QMARK_(x) {
  var G__11354 = x;
  if (G__11354) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__11354.cljs_time$core$DateTimeProtocol$;
      }
    }())) {
      return true;
    } else {
      if (!G__11354.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__11354);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs_time.core.DateTimeProtocol, G__11354);
  }
};
cljs_time.core.interval_QMARK_ = function cljs_time$core$interval_QMARK_(x) {
  return x instanceof cljs_time.core.Interval;
};
cljs_time.core.period_QMARK_ = function cljs_time$core$period_QMARK_(x) {
  return x instanceof cljs_time.core.Period;
};
cljs_time.core.period_type_QMARK_ = function cljs_time$core$period_type_QMARK_(type, x) {
  var and__4296__auto__ = cljs_time.core.period_QMARK_.call(null, x);
  if (cljs.core.truth_(and__4296__auto__)) {
    return cljs.core.contains_QMARK_.call(null, x, type);
  } else {
    return and__4296__auto__;
  }
};
cljs_time.core.years_QMARK_ = function cljs_time$core$years_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), val);
};
cljs_time.core.months_QMARK_ = function cljs_time$core$months_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "months", "months", -45571637), val);
};
cljs_time.core.weeks_QMARK_ = function cljs_time$core$weeks_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "weeks", "weeks", 1844596125), val);
};
cljs_time.core.days_QMARK_ = function cljs_time$core$days_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564), val);
};
cljs_time.core.hours_QMARK_ = function cljs_time$core$hours_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855), val);
};
cljs_time.core.minutes_QMARK_ = function cljs_time$core$minutes_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), val);
};
cljs_time.core.seconds_QMARK_ = function cljs_time$core$seconds_QMARK_(val) {
  return cljs_time.core.period_type_QMARK_.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), val);
};
cljs_time.core.mins_ago = function cljs_time$core$mins_ago(d) {
  return cljs_time.core.in_minutes.call(null, cljs_time.core.interval.call(null, d, cljs_time.core.now.call(null)));
};
cljs_time.core.last_day_of_the_month = function cljs_time$core$last_day_of_the_month() {
  var G__11356 = arguments.length;
  switch(G__11356) {
    case 1:
      return cljs_time.core.last_day_of_the_month.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.last_day_of_the_month.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.last_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = function(dt) {
  return cljs_time.core.last_day_of_the_month_.call(null, dt);
};
cljs_time.core.last_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.last_day_of_the_month_.call(null, cljs_time.core.date_time.call(null, year, month));
};
cljs_time.core.last_day_of_the_month.cljs$lang$maxFixedArity = 2;
cljs_time.core.number_of_days_in_the_month = function cljs_time$core$number_of_days_in_the_month() {
  var G__11359 = arguments.length;
  switch(G__11359) {
    case 1:
      return cljs_time.core.number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$1 = function(dt) {
  return cljs_time.core.number_of_days_in_the_month.call(null, cljs_time.core.year.call(null, dt), cljs_time.core.month.call(null, dt));
};
cljs_time.core.number_of_days_in_the_month.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.last_day_of_the_month.call(null, year, month).getDate();
};
cljs_time.core.number_of_days_in_the_month.cljs$lang$maxFixedArity = 2;
cljs_time.core.first_day_of_the_month = function cljs_time$core$first_day_of_the_month() {
  var G__11362 = arguments.length;
  switch(G__11362) {
    case 1:
      return cljs_time.core.first_day_of_the_month.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.core.first_day_of_the_month.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.first_day_of_the_month.cljs$core$IFn$_invoke$arity$1 = function(dt) {
  return cljs_time.core.first_day_of_the_month_.call(null, dt);
};
cljs_time.core.first_day_of_the_month.cljs$core$IFn$_invoke$arity$2 = function(year, month) {
  return cljs_time.core.first_day_of_the_month_.call(null, cljs_time.core.date_time.call(null, year, month));
};
cljs_time.core.first_day_of_the_month.cljs$lang$maxFixedArity = 2;
if (typeof cljs_time.core.__GT_period !== "undefined") {
} else {
  cljs_time.core.__GT_period = function() {
    var method_table__5203__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5204__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5205__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5206__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5207__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-time.core", "-\x3eperiod"), cljs.core.type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5207__auto__, method_table__5203__auto__, prefer_table__5204__auto__, method_cache__5205__auto__, cached_hierarchy__5206__auto__);
  }();
}
cljs.core._add_method.call(null, cljs_time.core.__GT_period, cljs_time.core.Interval, function(p__11364) {
  var map__11365 = p__11364;
  var map__11365__$1 = cljs.core.seq_QMARK_.call(null, map__11365) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11365) : map__11365;
  var interval = map__11365__$1;
  var start = cljs.core.get.call(null, map__11365__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var end = cljs.core.get.call(null, map__11365__$1, new cljs.core.Keyword(null, "end", "end", -268185958));
  var years = cljs_time.core.in_years.call(null, interval);
  var start_year = cljs_time.core.year.call(null, start);
  var leap_years = cljs.core.count.call(null, cljs.core.remove.call(null, cljs.core.false_QMARK_, cljs.core.map.call(null, cljs_time.internal.core.leap_year_QMARK_, cljs.core.range.call(null, start_year, start_year + years))));
  var start_month = cljs_time.core.month.call(null, start);
  var days_in_months = cljs_time.core.total_days_in_whole_months.call(null, interval);
  var months = cljs.core.count.call(null, days_in_months);
  var days_to_remove = 365 * years + leap_years + cljs.core.reduce.call(null, cljs.core._PLUS_, days_in_months);
  var days = cljs_time.core.in_days.call(null, interval) - days_to_remove;
  var hours_to_remove = 24 * (days + days_to_remove);
  var hours = cljs_time.core.in_hours.call(null, interval) - hours_to_remove;
  var minutes_to_remove = 60 * (hours + hours_to_remove);
  var minutes = cljs_time.core.in_minutes.call(null, interval) - minutes_to_remove;
  var seconds_to_remove = 60 * (minutes + minutes_to_remove);
  var seconds = cljs_time.core.in_seconds.call(null, interval) - seconds_to_remove;
  return cljs_time.core.period.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 
  cljs_time.core.in_millis.call(null, interval) - 1E3 * (seconds + seconds_to_remove));
});
cljs.core._add_method.call(null, cljs_time.core.__GT_period, cljs_time.core.Period, function(period) {
  return period;
});
cljs_time.core.today_at = function cljs_time$core$today_at() {
  var G__11367 = arguments.length;
  switch(G__11367) {
    case 4:
      return cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 3:
      return cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$4 = function(hours, minutes, seconds, millis) {
  var midnight = new goog.date.Date;
  var G__11368 = new goog.date.UtcDateTime(0);
  G__11368.setYear(midnight.getYear());
  G__11368.setMonth(midnight.getMonth());
  G__11368.setDate(midnight.getDate());
  G__11368.setHours(hours);
  G__11368.setMinutes(minutes);
  G__11368.setSeconds(seconds);
  G__11368.setMilliseconds(millis);
  return G__11368;
};
cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$3 = function(hours, minutes, seconds) {
  return cljs_time.core.today_at.call(null, hours, minutes, seconds, 0);
};
cljs_time.core.today_at.cljs$core$IFn$_invoke$arity$2 = function(hours, minutes) {
  return cljs_time.core.today_at.call(null, hours, minutes, 0);
};
cljs_time.core.today_at.cljs$lang$maxFixedArity = 4;
cljs_time.core.do_at_STAR_ = function cljs_time$core$do_at_STAR_(base_date_time, body_fn) {
  var _STAR_sys_time_STAR_11371 = cljs_time.core._STAR_sys_time_STAR_;
  cljs_time.core._STAR_sys_time_STAR_ = base_date_time;
  try {
    return body_fn.call(null);
  } finally {
    cljs_time.core._STAR_sys_time_STAR_ = _STAR_sys_time_STAR_11371;
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__13279_SHARP_) {
      return max === p1__13279_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var G__13284 = arguments.length;
  switch(G__13284) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq13280) {
  var G__13281 = cljs.core.first.call(null, seq13280);
  var seq13280__$1 = cljs.core.next.call(null, seq13280);
  var G__13282 = cljs.core.first.call(null, seq13280__$1);
  var seq13280__$2 = cljs.core.next.call(null, seq13280__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__13281, G__13282, seq13280__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var G__13291 = arguments.length;
  switch(G__13291) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__13293 = s2;
      var G__13294 = s1;
      s1 = G__13293;
      s2 = G__13294;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__13286_SHARP_) {
    return -cljs.core.count.call(null, p1__13286_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq13287) {
  var G__13288 = cljs.core.first.call(null, seq13287);
  var seq13287__$1 = cljs.core.next.call(null, seq13287);
  var G__13289 = cljs.core.first.call(null, seq13287__$1);
  var seq13287__$2 = cljs.core.next.call(null, seq13287__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__13288, G__13289, seq13287__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var G__13299 = arguments.length;
  switch(G__13299) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq13295) {
  var G__13296 = cljs.core.first.call(null, seq13295);
  var seq13295__$1 = cljs.core.next.call(null, seq13295);
  var G__13297 = cljs.core.first.call(null, seq13295__$1);
  var seq13295__$2 = cljs.core.next.call(null, seq13295__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__13296, G__13297, seq13295__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13301_SHARP_) {
    return cljs.core.select_keys.call(null, p1__13301_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__13304) {
    var vec__13305 = p__13304;
    var old = cljs.core.nth.call(null, vec__13305, 0, null);
    var new$ = cljs.core.nth.call(null, vec__13305, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13306_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__13306_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__13309) {
    var vec__13310 = p__13309;
    var k = cljs.core.nth.call(null, vec__13310, 0, null);
    var v = cljs.core.nth.call(null, vec__13310, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var G__13316 = arguments.length;
  switch(G__13316) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__13317 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__13317, 0, null);
    var s = cljs.core.nth.call(null, vec__13317, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__13317, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__13317, r, s, idx) {
            return function(p1__13311_SHARP_, p2__13312_SHARP_) {
              return cljs.core.conj.call(null, p1__13311_SHARP_, cljs.core.merge.call(null, p2__13312_SHARP_, x));
            };
          }(found, ks, vec__13317, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__13317, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__13318 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__13318, 0, null);
  var s = cljs.core.nth.call(null, vec__13318, 1, null);
  var k = cljs.core.nth.call(null, vec__13318, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__13318, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__13318, r, s, k, idx) {
          return function(p1__13313_SHARP_, p2__13314_SHARP_) {
            return cljs.core.conj.call(null, p1__13313_SHARP_, cljs.core.merge.call(null, p2__13314_SHARP_, x));
          };
        }(found, vec__13318, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__13318, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13320_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__13320_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13321_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__13321_SHARP_);
  }, set2);
};
goog.provide("cljs_time.format");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.date");
goog.require("cljs_time.core");
goog.require("clojure.set");
goog.require("cljs_time.internal.core");
goog.require("goog.string.format");
goog.require("clojure.string");
cljs_time.format.months = new cljs.core.PersistentVector(null, 12, 5, cljs.core.PersistentVector.EMPTY_NODE, ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], null);
cljs_time.format.days = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], null);
cljs_time.format.abbreviate = function cljs_time$format$abbreviate(n, s) {
  return cljs.core.subs.call(null, s, 0, n);
};
cljs_time.format.date_formatters = function() {
  var d = function(p1__13103_SHARP_) {
    return p1__13103_SHARP_.getDate();
  };
  var M = function(d) {
    return function(p1__13104_SHARP_) {
      return p1__13104_SHARP_.getMonth() + 1;
    };
  }(d);
  var y = function(d, M) {
    return function(p1__13105_SHARP_) {
      return p1__13105_SHARP_.getYear();
    };
  }(d, M);
  var h = function(d, M, y) {
    return function(p1__13106_SHARP_) {
      var hr = cljs.core.mod.call(null, p1__13106_SHARP_.getHours(), 12);
      if (hr === 0) {
        return 12;
      } else {
        return hr;
      }
    };
  }(d, M, y);
  var a = function(d, M, y, h) {
    return function(p1__13107_SHARP_) {
      if (p1__13107_SHARP_.getHours() < 12) {
        return "am";
      } else {
        return "pm";
      }
    };
  }(d, M, y, h);
  var A = function(d, M, y, h, a) {
    return function(p1__13108_SHARP_) {
      if (p1__13108_SHARP_.getHours() < 12) {
        return "AM";
      } else {
        return "PM";
      }
    };
  }(d, M, y, h, a);
  var H = function(d, M, y, h, a, A) {
    return function(p1__13109_SHARP_) {
      return p1__13109_SHARP_.getHours();
    };
  }(d, M, y, h, a, A);
  var m = function(d, M, y, h, a, A, H) {
    return function(p1__13110_SHARP_) {
      return p1__13110_SHARP_.getMinutes();
    };
  }(d, M, y, h, a, A, H);
  var s = function(d, M, y, h, a, A, H, m) {
    return function(p1__13111_SHARP_) {
      return p1__13111_SHARP_.getSeconds();
    };
  }(d, M, y, h, a, A, H, m);
  var S = function(d, M, y, h, a, A, H, m, s) {
    return function(p1__13112_SHARP_) {
      return p1__13112_SHARP_.getMilliseconds();
    };
  }(d, M, y, h, a, A, H, m, s);
  var Z = function(d, M, y, h, a, A, H, m, s, S) {
    return function(p1__13113_SHARP_) {
      return p1__13113_SHARP_.getTimezoneOffsetString();
    };
  }(d, M, y, h, a, A, H, m, s, S);
  var doy = function(d, M, y, h, a, A, H, m, s, S, Z) {
    return function(p1__13114_SHARP_) {
      return p1__13114_SHARP_.getDayOfYear();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z);
  var dow = function(d, M, y, h, a, A, H, m, s, S, Z, doy) {
    return function(p1__13115_SHARP_) {
      return p1__13115_SHARP_.getDay();
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "ww", "MMM", "YYYY", "e", "ss", "DDD", "SSS", "dow", "YY", "M", "mm", "S", "MM", "EEE", "Z", "H", "DD", "dd", "a", "hh", "dth", "yyyy", "A", "EEEE", "h", "xxxx", "m", "yy", "D", "MMMM"], [d, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13127_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, H.call(null, p1__13127_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, s, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13131_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, Math.ceil(doy.call(null, p1__13131_SHARP_) / 7));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13122_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.months.call(null, M.call(null, p1__13122_SHARP_) - 1));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, dow, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13129_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, s.call(null, p1__13129_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13130_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, S.call(null, p1__13130_SHARP_), 3);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13118_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__13118_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13125_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__13125_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), M, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13128_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, m.call(null, p1__13128_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), S, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13121_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, M.call(null, p1__13121_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13119_SHARP_) {
      return cljs_time.format.abbreviate.call(null, 3, cljs_time.format.days.call(null, dow.call(null, p1__13119_SHARP_)));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), Z, H, doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13116_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, d.call(null, p1__13116_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), a, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13126_SHARP_) {
      return cljs_time.internal.core.zero_pad.call(null, h.call(null, p1__13126_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13117_SHARP_) {
      var d__$1 = d.call(null, p1__13117_SHARP_);
      return [cljs.core.str(d__$1), cljs.core.str(function() {
        var G__13132 = d__$1;
        switch(G__13132) {
          case 1:
            return "st";
            break;
          case 2:
            return "nd";
            break;
          case 3:
            return "rd";
            break;
          default:
            return "th";
        }
      }())].join("");
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), y, A, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13120_SHARP_) {
      return cljs_time.format.days.call(null, dow.call(null, p1__13120_SHARP_));
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), h, y, m, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13124_SHARP_) {
      return cljs.core.mod.call(null, y.call(null, p1__13124_SHARP_), 100);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow), doy, function(d, M, y, h, a, A, H, m, s, S, Z, doy, dow) {
    return function(p1__13123_SHARP_) {
      return cljs_time.format.months.call(null, M.call(null, p1__13123_SHARP_) - 1);
    };
  }(d, M, y, h, a, A, H, m, s, S, Z, doy, dow)]);
}();
cljs_time.format.timezone_adjustment = function cljs_time$format$timezone_adjustment(d, timezone_string) {
  var vec__13137 = clojure.string.split.call(null, timezone_string, /Z|(?:([-+])(\d{2})(?::?(\d{2}))?)$/);
  var _ = cljs.core.nth.call(null, vec__13137, 0, null);
  var sign = cljs.core.nth.call(null, vec__13137, 1, null);
  var hh = cljs.core.nth.call(null, vec__13137, 2, null);
  var mm = cljs.core.nth.call(null, vec__13137, 3, null);
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = sign;
    if (cljs.core.truth_(and__4296__auto__)) {
      var and__4296__auto____$1 = hh;
      if (cljs.core.truth_(and__4296__auto____$1)) {
        return mm;
      } else {
        return and__4296__auto____$1;
      }
    } else {
      return and__4296__auto__;
    }
  }())) {
    var sign_13139__$1 = cljs.core._EQ_.call(null, sign, "-") ? cljs_time.core.plus : cljs.core._EQ_.call(null, sign, "+") ? cljs_time.core.minus : null;
    var vec__13138_13140 = cljs.core.map.call(null, function(sign_13139__$1, vec__13137, _, sign, hh, mm) {
      return function(p1__13134_SHARP_) {
        return parseInt(p1__13134_SHARP_, 10);
      };
    }(sign_13139__$1, vec__13137, _, sign, hh, mm), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [hh, mm], null));
    var hh_13141__$1 = cljs.core.nth.call(null, vec__13138_13140, 0, null);
    var mm_13142__$1 = cljs.core.nth.call(null, vec__13138_13140, 1, null);
    var adjusted_13143 = sign_13139__$1.call(null, sign_13139__$1.call(null, d, cljs_time.core.hours.call(null, hh_13141__$1)), cljs_time.core.minutes.call(null, mm_13142__$1));
    d.setTime(adjusted_13143.getTime());
  } else {
  }
  return d;
};
cljs_time.format.date_parsers = function() {
  var parse_int = function(p1__13144_SHARP_) {
    return parseInt(p1__13144_SHARP_, 10);
  };
  var assoc_fn = function(parse_int) {
    return function(kw) {
      return function(parse_int) {
        return function(p1__13145_SHARP_, p2__13146_SHARP_) {
          return cljs.core.assoc.call(null, p1__13145_SHARP_, kw, parse_int.call(null, p2__13146_SHARP_));
        };
      }(parse_int);
    };
  }(parse_int);
  var y = assoc_fn.call(null, new cljs.core.Keyword(null, "years", "years", -1298579689));
  var d = assoc_fn.call(null, new cljs.core.Keyword(null, "days", "days", -1394072564));
  var M = function(parse_int, assoc_fn, y, d) {
    return function(p1__13147_SHARP_, p2__13148_SHARP_) {
      return cljs.core.assoc.call(null, p1__13147_SHARP_, new cljs.core.Keyword(null, "months", "months", -45571637), parse_int.call(null, p2__13148_SHARP_) - 1);
    };
  }(parse_int, assoc_fn, y, d);
  var h = function(parse_int, assoc_fn, y, d, M) {
    return function(p1__13149_SHARP_, p2__13150_SHARP_) {
      return cljs.core.assoc.call(null, p1__13149_SHARP_, new cljs.core.Keyword(null, "hours", "hours", 58380855), cljs.core.mod.call(null, parse_int.call(null, p2__13150_SHARP_), 12));
    };
  }(parse_int, assoc_fn, y, d, M);
  var a = function(parse_int, assoc_fn, y, d, M, h) {
    return function(p__13157, x) {
      var map__13158 = p__13157;
      var map__13158__$1 = cljs.core.seq_QMARK_.call(null, map__13158) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13158) : map__13158;
      var date = map__13158__$1;
      var hours = cljs.core.get.call(null, map__13158__$1, new cljs.core.Keyword(null, "hours", "hours", 58380855));
      if (cljs.core.truth_((new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["p", null, "pm", null], null), null)).call(null, clojure.string.lower_case.call(null, x)))) {
        return cljs.core.assoc.call(null, date, new cljs.core.Keyword(null, "hours", "hours", 58380855), function() {
          var hours__$1 = 12 + hours;
          if (cljs.core._EQ_.call(null, hours__$1, 24)) {
            return 0;
          } else {
            return hours__$1;
          }
        }());
      } else {
        return date;
      }
    };
  }(parse_int, assoc_fn, y, d, M, h);
  var H = assoc_fn.call(null, new cljs.core.Keyword(null, "hours", "hours", 58380855));
  var m = assoc_fn.call(null, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394));
  var s = assoc_fn.call(null, new cljs.core.Keyword(null, "seconds", "seconds", -445266194));
  var S = assoc_fn.call(null, new cljs.core.Keyword(null, "millis", "millis", -1338288387));
  var MMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
    return function(p1__13152_SHARP_, p2__13151_SHARP_) {
      var full = cljs.core.first.call(null, cljs.core.filter.call(null, function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S) {
        return function(m__$1) {
          return cljs.core.re_seq.call(null, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(p2__13151_SHARP_)].join("")), m__$1);
        };
      }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S), cljs_time.format.months));
      return M.call(null, p1__13152_SHARP_, [cljs.core.str(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, full) + 1)].join(""));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S);
  var MMMM = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM) {
    return function(p1__13153_SHARP_, p2__13154_SHARP_) {
      return M.call(null, p1__13153_SHARP_, [cljs.core.str(cljs_time.internal.core.index_of.call(null, cljs_time.format.months, p2__13154_SHARP_) + 1)].join(""));
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM);
  var skip = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM) {
    return function() {
      var G__13159__delegate = function(x, args) {
        return x;
      };
      var G__13159 = function(x, var_args) {
        var args = null;
        if (arguments.length > 1) {
          var G__13160__i = 0, G__13160__a = new Array(arguments.length - 1);
          while (G__13160__i < G__13160__a.length) {
            G__13160__a[G__13160__i] = arguments[G__13160__i + 1];
            ++G__13160__i;
          }
          args = new cljs.core.IndexedSeq(G__13160__a, 0);
        }
        return G__13159__delegate.call(this, x, args);
      };
      G__13159.cljs$lang$maxFixedArity = 1;
      G__13159.cljs$lang$applyTo = function(arglist__13161) {
        var x = cljs.core.first(arglist__13161);
        var args = cljs.core.rest(arglist__13161);
        return G__13159__delegate(x, args);
      };
      G__13159.cljs$core$IFn$_invoke$arity$variadic = G__13159__delegate;
      return G__13159;
    }();
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM);
  var tz = function(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip) {
    return function(p1__13155_SHARP_, p2__13156_SHARP_) {
      return cljs.core.assoc.call(null, p1__13155_SHARP_, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), p2__13156_SHARP_);
    };
  }(parse_int, assoc_fn, y, d, M, h, a, H, m, s, S, MMM, MMMM, skip);
  return cljs.core.PersistentHashMap.fromArrays(["d", "HH", "ZZ", "s", "MMM", "YYYY", "ss", "DDD", "SSS", "dow", "YY", "M", "mm", "S", "MM", "Y", "EEE", "Z", "H", "E", "DD", "dd", "a", "hh", "dth", "y", "yyyy", "A", "EEEE", "h", "m", "yy", "D", "MMMM"], [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", H], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.months))), cljs.core.str(")")].join(""), 
  MMM], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", s], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{3})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.days)), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", m], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", S], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:\\d{2})|(?:\\b\\d{1,2}\\b))", M], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, cljs.core.partial.call(null, 
  cljs_time.format.abbreviate, 3), cljs_time.format.days))), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["((?:(?:\\+|-)\\d{2}:?\\d{2})|Z+)", tz], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", H], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs.core.map.call(null, 
  cljs.core.partial.call(null, cljs_time.format.abbreviate, 3), cljs_time.format.days))), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2,3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", a], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})(?:st|nd|rd|th)", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(am|pm|a|p|AM|PM|A|P)", 
  a], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.days)), cljs.core.str(")")].join(""), skip], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", h], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,2})", m], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  ["(\\d{2,4})", y], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(\\d{1,3})", d], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, "|", cljs_time.format.months)), cljs.core.str(")")].join(""), MMMM], null)]);
}();
cljs_time.format.date_setters = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), function(p1__13162_SHARP_, p2__13163_SHARP_) {
  return p1__13162_SHARP_.setYear(p2__13163_SHARP_);
}, new cljs.core.Keyword(null, "months", "months", -45571637), function(p1__13164_SHARP_, p2__13165_SHARP_) {
  return p1__13164_SHARP_.setMonth(p2__13165_SHARP_);
}, new cljs.core.Keyword(null, "days", "days", -1394072564), function(p1__13166_SHARP_, p2__13167_SHARP_) {
  return p1__13166_SHARP_.setDate(p2__13167_SHARP_);
}, new cljs.core.Keyword(null, "hours", "hours", 58380855), function(p1__13168_SHARP_, p2__13169_SHARP_) {
  return p1__13168_SHARP_.setHours(p2__13169_SHARP_);
}, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), function(p1__13170_SHARP_, p2__13171_SHARP_) {
  return p1__13170_SHARP_.setMinutes(p2__13171_SHARP_);
}, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), function(p1__13172_SHARP_, p2__13173_SHARP_) {
  return p1__13172_SHARP_.setSeconds(p2__13173_SHARP_);
}, new cljs.core.Keyword(null, "millis", "millis", -1338288387), function(p1__13174_SHARP_, p2__13175_SHARP_) {
  return p1__13174_SHARP_.setMilliseconds(p2__13175_SHARP_);
}, new cljs.core.Keyword(null, "time-zone", "time-zone", -1838760002), cljs_time.format.timezone_adjustment], null);
cljs_time.format.parser_sort_order_pred = function cljs_time$format$parser_sort_order_pred(parser) {
  return cljs_time.internal.core.index_of.call(null, new cljs.core.PersistentVector(null, 30, 5, cljs.core.PersistentVector.EMPTY_NODE, ["YYYY", "YY", "Y", "yyyy", "yy", "y", "d", "dd", "D", "DD", "DDD", "dth", "M", "MM", "MMM", "MMMM", "dow", "h", "H", "m", "s", "S", "hh", "HH", "mm", "ss", "a", "SSS", "Z", "ZZ"], null), parser);
};
cljs_time.format.date_format_pattern = cljs.core.re_pattern.call(null, [cljs.core.str("("), cljs.core.str(clojure.string.join.call(null, ")|(", cljs.core.reverse.call(null, cljs.core.sort_by.call(null, cljs.core.count, cljs.core.keys.call(null, cljs_time.format.date_formatters))))), cljs.core.str(")")].join(""));
cljs_time.format.date_parse_pattern = function cljs_time$format$date_parse_pattern(formatter) {
  return cljs.core.re_pattern.call(null, clojure.string.replace.call(null, clojure.string.replace.call(null, formatter, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(p1__13176_SHARP_) {
    return cljs.core.first.call(null, cljs_time.format.date_parsers.call(null, p1__13176_SHARP_));
  }));
};
cljs_time.format.parser_fn = function cljs_time$format$parser_fn(fmts) {
  return function(s) {
    return cljs.core.sort_by.call(null, cljs.core.comp.call(null, cljs_time.format.parser_sort_order_pred, cljs.core.second), cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.nfirst.call(null, cljs.core.re_seq.call(null, cljs_time.format.date_parse_pattern.call(null, fmts), s)), cljs.core.map.call(null, cljs.core.first, cljs.core.re_seq.call(null, cljs_time.format.date_format_pattern, fmts)))));
  };
};
cljs_time.format.formatter_fn = function cljs_time$format$formatter_fn(fmts, formatters) {
  return function() {
    var G__13182__delegate = function(date, p__13180) {
      var vec__13181 = p__13180;
      var formatter_overrides = cljs.core.nth.call(null, vec__13181, 0, null);
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.replace.call(null, fmts, /'([^']+)'/, "$1"), cljs_time.format.date_format_pattern, function(vec__13181, formatter_overrides) {
        return function(p1__13177_SHARP_) {
          return function() {
            var or__4308__auto__ = formatter_overrides;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return formatters;
            }
          }().call(null, p1__13177_SHARP_).call(null, date);
        };
      }(vec__13181, formatter_overrides)], null);
    };
    var G__13182 = function(date, var_args) {
      var p__13180 = null;
      if (arguments.length > 1) {
        var G__13183__i = 0, G__13183__a = new Array(arguments.length - 1);
        while (G__13183__i < G__13183__a.length) {
          G__13183__a[G__13183__i] = arguments[G__13183__i + 1];
          ++G__13183__i;
        }
        p__13180 = new cljs.core.IndexedSeq(G__13183__a, 0);
      }
      return G__13182__delegate.call(this, date, p__13180);
    };
    G__13182.cljs$lang$maxFixedArity = 1;
    G__13182.cljs$lang$applyTo = function(arglist__13184) {
      var date = cljs.core.first(arglist__13184);
      var p__13180 = cljs.core.rest(arglist__13184);
      return G__13182__delegate(date, p__13180);
    };
    G__13182.cljs$core$IFn$_invoke$arity$variadic = G__13182__delegate;
    return G__13182;
  }();
};
cljs_time.format.formatter = function cljs_time$format$formatter() {
  var G__13186 = arguments.length;
  switch(G__13186) {
    case 1:
      return cljs_time.format.formatter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs_time.format.formatter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.format.formatter.cljs$core$IFn$_invoke$arity$1 = function(fmts) {
  return cljs_time.format.formatter.call(null, fmts, cljs_time.core.utc);
};
cljs_time.format.formatter.cljs$core$IFn$_invoke$arity$2 = function(fmts, dtz) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "format-str", "format-str", 695206156), fmts, new cljs.core.Keyword(null, "formatters", "formatters", -1875637118), cljs_time.format.date_formatters], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", "formatter", "cljs-time.format/formatter", 1104417384)], null));
};
cljs_time.format.formatter.cljs$lang$maxFixedArity = 2;
cljs_time.format.formatter_local = function cljs_time$format$formatter_local(fmts) {
  return cljs.core.with_meta.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "format-str", "format-str", 695206156), fmts, new cljs.core.Keyword(null, "formatters", "formatters", -1875637118), cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))], null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("cljs-time.format", 
  "formatter", "cljs-time.format/formatter", 1104417384)], null));
};
cljs_time.format.not_implemented = function cljs_time$format$not_implemented(sym) {
  return function() {
    throw cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "not-implemented", "not-implemented", 1918806714), new cljs.core.Keyword(null, "message", "message", -406056002), cljs_time.internal.core.format.call(null, "%s not implemented yet", cljs.core.name.call(null, sym))], null));
  };
};
cljs_time.format.with_default_year = function cljs_time$format$with_default_year(f, default_year) {
  return cljs.core.assoc.call(null, f, new cljs.core.Keyword(null, "default-year", "default-year", 1658037695), default_year);
};
cljs_time.format.formatters = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), new cljs.core.Keyword(null, "hour-minute", "hour-minute", -1164421312), new cljs.core.Keyword(null, "t-time", "t-time", -42016318), new cljs.core.Keyword(null, "basic-ordinal-date", "basic-ordinal-date", 243220162), new cljs.core.Keyword(null, "date", "date", -1463434462), new cljs.core.Keyword(null, "hour", "hour", -555989214), new cljs.core.Keyword(null, 
"time-no-ms", "time-no-ms", 870271683), new cljs.core.Keyword(null, "weekyear-week-day", "weekyear-week-day", -740233533), new cljs.core.Keyword(null, "week-date-time", "week-date-time", 540228836), new cljs.core.Keyword(null, "date-hour-minute-second-fraction", "date-hour-minute-second-fraction", 1937143076), new cljs.core.Keyword(null, "basic-date-time", "basic-date-time", 1525413604), new cljs.core.Keyword(null, "date-time", "date-time", 177938180), new cljs.core.Keyword(null, "basic-time-no-ms", 
"basic-time-no-ms", -1720654076), new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), new cljs.core.Keyword(null, "basic-week-date", "basic-week-date", 1775847845), new cljs.core.Keyword(null, "basic-t-time-no-ms", "basic-t-time-no-ms", -424650106), new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), new cljs.core.Keyword(null, "date-time-no-ms", "date-time-no-ms", 1655953671), new cljs.core.Keyword(null, "year-month-day", "year-month-day", -415594169), new cljs.core.Keyword(null, 
"date-opt-time", "date-opt-time", -1507102105), new cljs.core.Keyword(null, "rfc822", "rfc822", -404628697), new cljs.core.Keyword(null, "date-hour-minute-second-ms", "date-hour-minute-second-ms", -425334775), new cljs.core.Keyword(null, "basic-ordinal-date-time", "basic-ordinal-date-time", 1054564521), new cljs.core.Keyword(null, "ordinal-date", "ordinal-date", -77899447), new cljs.core.Keyword(null, "hour-minute-second-fraction", "hour-minute-second-fraction", -1253038551), new cljs.core.Keyword(null, 
"date-hour-minute", "date-hour-minute", 1629918346), new cljs.core.Keyword(null, "time", "time", 1385887882), new cljs.core.Keyword(null, "basic-week-date-time", "basic-week-date-time", -502077622), new cljs.core.Keyword(null, "weekyear", "weekyear", -74064500), new cljs.core.Keyword(null, "basic-time", "basic-time", -923134899), new cljs.core.Keyword(null, "hour-minute-second", "hour-minute-second", -1906654770), new cljs.core.Keyword(null, "ordinal-date-time", "ordinal-date-time", -1386753458), 
new cljs.core.Keyword(null, "ordinal-date-time-no-ms", "ordinal-date-time-no-ms", -1539005490), new cljs.core.Keyword(null, "hour-minute-second-ms", "hour-minute-second-ms", 1209749775), new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), new cljs.core.Keyword(null, "year", "year", 335913393), new cljs.core.Keyword(null, "t-time-no-ms", "t-time-no-ms", 990689905), new cljs.core.Keyword(null, "basic-week-date-time-no-ms", 
"basic-week-date-time-no-ms", -2043113679), new cljs.core.Keyword(null, "basic-date", "basic-date", 1566551506), new cljs.core.Keyword(null, "weekyear-week", "weekyear-week", 795291571), new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), new cljs.core.Keyword(null, "basic-ordinal-date-time-no-ms", "basic-ordinal-date-time-no-ms", -395135436), new cljs.core.Keyword(null, "year-month", "year-month", 735283381), new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 
1178432599), new cljs.core.Keyword(null, "week-date", "week-date", -1176745129), new cljs.core.Keyword(null, "date-hour", "date-hour", -344234471), new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), new cljs.core.Keyword(null, "date-hour-minute-second", "date-hour-minute-second", -1565419364), new cljs.core.Keyword(null, "week-date-time-no-ms", "week-date-time-no-ms", -1226853060), new cljs.core.Keyword(null, "basic-date-time-no-ms", "basic-date-time-no-ms", -899402179), 
new cljs.core.Keyword(null, "mysql", "mysql", -1431590210), new cljs.core.Keyword(null, "basic-t-time", "basic-t-time", 191791391)], [cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateElementParser", "dateElementParser", 984800945, null)), cljs_time.format.formatter.call(null, "HH:mm"), cljs_time.format.formatter.call(null, "'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyyDDD"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.formatter.call(null, 
"HH"), cljs_time.format.formatter.call(null, "HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, 
"dateParser", "dateParser", -1248418930, null)), cljs_time.format.formatter.call(null, "xxxx'W'wwe"), cljs_time.format.formatter.call(null, "'T'HHmmssZ"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localTimeParser", "localTimeParser", -1738135328, null)), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "dateOptionalTimeParser", 
"dateOptionalTimeParser", 1783230854, null)), cljs_time.format.formatter.call(null, "EEE, dd MMM yyyy HH:mm:ss Z"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyyDDD'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "yyyy-DDD"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH:mm"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, 
"xxxx'W'wwe'T'HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "xxxx"), cljs_time.format.formatter.call(null, "HHmmss.SSSZ"), cljs_time.format.formatter.call(null, "HH:mm:ss"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ss.SSSZZ"), cljs_time.format.formatter.call(null, "yyyy-DDD'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "HH:mm:ss.SSS"), cljs_time.format.formatter.call(null, new cljs.core.Symbol(null, "timeParser", "timeParser", 1585048034, null)), cljs_time.format.not_implemented.call(null, 
new cljs.core.Symbol(null, "dateTimeParser", "dateTimeParser", -1493718282, null)), cljs_time.format.formatter.call(null, "yyyy"), cljs_time.format.formatter.call(null, "'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "xxxx'W'wwe'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyyMMdd"), cljs_time.format.formatter.call(null, "xxxx-'W'ww"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateParser", "localDateParser", 477820077, null)), cljs_time.format.formatter.call(null, 
"yyyyDDD'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "localDateOptionalTimeParser", "localDateOptionalTimeParser", 435955537, null)), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e"), cljs_time.format.formatter.call(null, "yyyy-MM-dd'T'HH"), cljs_time.format.not_implemented.call(null, new cljs.core.Symbol(null, "timeElementParser", "timeElementParser", 302132553, null)), cljs_time.format.formatter.call(null, 
"yyyy-MM-dd'T'HH:mm:ss"), cljs_time.format.formatter.call(null, "xxxx-'W'ww-e'T'HH:mm:ssZZ"), cljs_time.format.formatter.call(null, "yyyyMMdd'T'HHmmssZ"), cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss"), cljs_time.format.formatter.call(null, "'T'HHmmss.SSSZ")]);
cljs_time.format.parsers = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 9, [new cljs.core.Keyword(null, "date-element-parser", "date-element-parser", 2072167040), null, new cljs.core.Keyword(null, "date-parser", "date-parser", -981534587), null, new cljs.core.Keyword(null, "local-time", "local-time", -1873195290), null, new cljs.core.Keyword(null, "date-opt-time", "date-opt-time", -1507102105), null, new cljs.core.Keyword(null, "time-parser", "time-parser", -1636511536), 
null, new cljs.core.Keyword(null, "date-time-parser", "date-time-parser", -656147568), null, new cljs.core.Keyword(null, "local-date", "local-date", 1829761428), null, new cljs.core.Keyword(null, "local-date-opt-time", "local-date-opt-time", 1178432599), null, new cljs.core.Keyword(null, "time-element-parser", "time-element-parser", -2042883205), null], null), null);
cljs_time.format.printers = clojure.set.difference.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs_time.format.formatters)), cljs_time.format.parsers);
cljs_time.format.part_splitter_regex = /(?:(?!(?:\+|-)\d{2}):(?!\d{2}$))|[^\w:]+|.[TW]|'[^']+'/;
if (typeof cljs_time.format.date_map !== "undefined") {
} else {
  cljs_time.format.date_map = function() {
    var method_table__5203__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5204__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5205__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5206__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5207__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs-time.format", "date-map"), cljs.core.type, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5207__auto__, method_table__5203__auto__, prefer_table__5204__auto__, method_cache__5205__auto__, cached_hierarchy__5206__auto__);
  }();
}
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.Date, function(d) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.DateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0], null);
});
cljs.core._add_method.call(null, cljs_time.format.date_map, goog.date.UtcDateTime, function(d) {
  return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "years", "years", -1298579689), 0, new cljs.core.Keyword(null, "months", "months", -45571637), 0, new cljs.core.Keyword(null, "days", "days", -1394072564), 1, new cljs.core.Keyword(null, "hours", "hours", 58380855), 0, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), 0, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), 0, new cljs.core.Keyword(null, "millis", "millis", -1338288387), 0, new cljs.core.Keyword(null, 
  "time-zone", "time-zone", -1838760002), null], null);
});
cljs_time.format.parse_STAR_ = function cljs_time$format$parse_STAR_(constructor, p__13190, s) {
  var map__13196 = p__13190;
  var map__13196__$1 = cljs.core.seq_QMARK_.call(null, map__13196) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13196) : map__13196;
  var fmt = map__13196__$1;
  var format_str = cljs.core.get.call(null, map__13196__$1, new cljs.core.Keyword(null, "format-str", "format-str", 695206156));
  var default_year = cljs.core.get.call(null, map__13196__$1, new cljs.core.Keyword(null, "default-year", "default-year", 1658037695));
  if (cljs.core.seq.call(null, s)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "s", "s", -948495851, null))))].join(""));
  }
  var min_parts = cljs.core.count.call(null, clojure.string.split.call(null, s, cljs_time.format.part_splitter_regex));
  var parse_fn = cljs_time.format.parser_fn.call(null, format_str);
  var parse_seq = cljs.core.seq.call(null, cljs.core.map.call(null, function(parse_fn, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year) {
    return function(p__13197) {
      var vec__13198 = p__13197;
      var a = cljs.core.nth.call(null, vec__13198, 0, null);
      var b = cljs.core.nth.call(null, vec__13198, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, cljs.core.second.call(null, cljs_time.format.date_parsers.call(null, b))], null);
    };
  }(parse_fn, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year), parse_fn.call(null, s)));
  if (cljs.core.count.call(null, parse_seq) >= min_parts) {
    var d = new constructor(0, 0, 0, 0, 0, 0, 0);
    var empty = cljs.core.assoc.call(null, cljs_time.format.date_map.call(null, d), new cljs.core.Keyword(null, "years", "years", -1298579689), function() {
      var or__4308__auto__ = default_year;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }());
    var setters = cljs.core.select_keys.call(null, cljs_time.format.date_setters, cljs.core.keys.call(null, empty));
    cljs.core.merge_with.call(null, function(d, empty, setters, parse_fn, parse_seq, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year) {
      return function(p1__13188_SHARP_, p2__13189_SHARP_) {
        return p1__13188_SHARP_.call(null, d, p2__13189_SHARP_);
      };
    }(d, empty, setters, parse_fn, parse_seq, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year), setters, cljs_time.internal.core.valid_date_QMARK_.call(null, cljs.core.reduce.call(null, function(d, empty, setters, parse_fn, parse_seq, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year) {
      return function(date, p__13199) {
        var vec__13200 = p__13199;
        var part = cljs.core.nth.call(null, vec__13200, 0, null);
        var do_parse = cljs.core.nth.call(null, vec__13200, 1, null);
        return do_parse.call(null, date, part);
      };
    }(d, empty, setters, parse_fn, parse_seq, min_parts, map__13196, map__13196__$1, fmt, format_str, default_year), empty, parse_seq)));
    return d;
  } else {
    throw cljs.core.ex_info.call(null, "The parser could not match the input string.", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "parser-no-match", "parser-no-match", 1748518307)], null));
  }
};
cljs_time.format.parse = function cljs_time$format$parse() {
  var G__13202 = arguments.length;
  switch(G__13202) {
    case 2:
      return cljs_time.format.parse.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs_time.format.parse.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.format.parse.cljs$core$IFn$_invoke$arity$2 = function(fmt, s) {
  return cljs_time.format.parse_STAR_.call(null, goog.date.UtcDateTime, fmt, s);
};
cljs_time.format.parse.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.first.call(null, function() {
    var iter__5062__auto__ = function cljs_time$format$iter__13203(s__13204) {
      return new cljs.core.LazySeq(null, function() {
        var s__13204__$1 = s__13204;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13204__$1);
          if (temp__4425__auto__) {
            var s__13204__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13204__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__13204__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__13206 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__13205 = 0;
                while (true) {
                  if (i__13205 < size__5061__auto__) {
                    var f = cljs.core._nth.call(null, c__5060__auto__, i__13205);
                    var d = function() {
                      try {
                        return cljs_time.format.parse.call(null, f, s);
                      } catch (e13209) {
                        if (e13209 instanceof Error) {
                          var _ = e13209;
                          return null;
                        } else {
                          throw e13209;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__13206, d);
                      var G__13212 = i__13205 + 1;
                      i__13205 = G__13212;
                      continue;
                    } else {
                      var G__13213 = i__13205 + 1;
                      i__13205 = G__13213;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13206), cljs_time$format$iter__13203.call(null, cljs.core.chunk_rest.call(null, s__13204__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13206), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__13204__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse.call(null, f, s);
                } catch (e13210) {
                  if (e13210 instanceof Error) {
                    var _ = e13210;
                    return null;
                  } else {
                    throw e13210;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, cljs_time$format$iter__13203.call(null, cljs.core.rest.call(null, s__13204__$2)));
              } else {
                var G__13214 = cljs.core.rest.call(null, s__13204__$2);
                s__13204__$1 = G__13214;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.format.parse.cljs$lang$maxFixedArity = 2;
cljs_time.format.parse_local = function cljs_time$format$parse_local() {
  var G__13216 = arguments.length;
  switch(G__13216) {
    case 2:
      return cljs_time.format.parse_local.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs_time.format.parse_local.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.format.parse_local.cljs$core$IFn$_invoke$arity$2 = function(fmt, s) {
  return cljs_time.format.parse_STAR_.call(null, goog.date.DateTime, fmt, s);
};
cljs_time.format.parse_local.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.first.call(null, function() {
    var iter__5062__auto__ = function cljs_time$format$iter__13217(s__13218) {
      return new cljs.core.LazySeq(null, function() {
        var s__13218__$1 = s__13218;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13218__$1);
          if (temp__4425__auto__) {
            var s__13218__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13218__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__13218__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__13220 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__13219 = 0;
                while (true) {
                  if (i__13219 < size__5061__auto__) {
                    var f = cljs.core._nth.call(null, c__5060__auto__, i__13219);
                    var d = function() {
                      try {
                        return cljs_time.format.parse_local.call(null, f, s);
                      } catch (e13223) {
                        if (e13223 instanceof Error) {
                          var _ = e13223;
                          return null;
                        } else {
                          throw e13223;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__13220, d);
                      var G__13226 = i__13219 + 1;
                      i__13219 = G__13226;
                      continue;
                    } else {
                      var G__13227 = i__13219 + 1;
                      i__13219 = G__13227;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13220), cljs_time$format$iter__13217.call(null, cljs.core.chunk_rest.call(null, s__13218__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13220), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__13218__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse_local.call(null, f, s);
                } catch (e13224) {
                  if (e13224 instanceof Error) {
                    var _ = e13224;
                    return null;
                  } else {
                    throw e13224;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, cljs_time$format$iter__13217.call(null, cljs.core.rest.call(null, s__13218__$2)));
              } else {
                var G__13228 = cljs.core.rest.call(null, s__13218__$2);
                s__13218__$1 = G__13228;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.format.parse_local.cljs$lang$maxFixedArity = 2;
cljs_time.format.parse_local_date = function cljs_time$format$parse_local_date() {
  var G__13230 = arguments.length;
  switch(G__13230) {
    case 2:
      return cljs_time.format.parse_local_date.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs_time.format.parse_local_date.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.format.parse_local_date.cljs$core$IFn$_invoke$arity$2 = function(fmt, s) {
  return cljs_time.format.parse_STAR_.call(null, goog.date.Date, fmt, s);
};
cljs_time.format.parse_local_date.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.first.call(null, function() {
    var iter__5062__auto__ = function cljs_time$format$iter__13231(s__13232) {
      return new cljs.core.LazySeq(null, function() {
        var s__13232__$1 = s__13232;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__13232__$1);
          if (temp__4425__auto__) {
            var s__13232__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__13232__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__13232__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__13234 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__13233 = 0;
                while (true) {
                  if (i__13233 < size__5061__auto__) {
                    var f = cljs.core._nth.call(null, c__5060__auto__, i__13233);
                    var d = function() {
                      try {
                        return cljs_time.format.parse_local_date.call(null, f, s);
                      } catch (e13237) {
                        if (e13237 instanceof Error) {
                          var _ = e13237;
                          return null;
                        } else {
                          throw e13237;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__13234, d);
                      var G__13240 = i__13233 + 1;
                      i__13233 = G__13240;
                      continue;
                    } else {
                      var G__13241 = i__13233 + 1;
                      i__13233 = G__13241;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13234), cljs_time$format$iter__13231.call(null, cljs.core.chunk_rest.call(null, s__13232__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13234), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__13232__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse_local_date.call(null, f, s);
                } catch (e13238) {
                  if (e13238 instanceof Error) {
                    var _ = e13238;
                    return null;
                  } else {
                    throw e13238;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, cljs_time$format$iter__13231.call(null, cljs.core.rest.call(null, s__13232__$2)));
              } else {
                var G__13242 = cljs.core.rest.call(null, s__13232__$2);
                s__13232__$1 = G__13242;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.format.parse_local_date.cljs$lang$maxFixedArity = 2;
cljs_time.format.unparse = function cljs_time$format$unparse(p__13243, dt) {
  var map__13245 = p__13243;
  var map__13245__$1 = cljs.core.seq_QMARK_.call(null, map__13245) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13245) : map__13245;
  var format_str = cljs.core.get.call(null, map__13245__$1, new cljs.core.Keyword(null, "format-str", "format-str", 695206156));
  var formatters = cljs.core.get.call(null, map__13245__$1, new cljs.core.Keyword(null, "formatters", "formatters", -1875637118));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, cljs_time.format.formatter_fn.call(null, format_str, formatters).call(null, dt));
};
cljs_time.format.unparse_local = function cljs_time$format$unparse_local(p__13246, dt) {
  var map__13248 = p__13246;
  var map__13248__$1 = cljs.core.seq_QMARK_.call(null, map__13248) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13248) : map__13248;
  var fmt = map__13248__$1;
  var format_str = cljs.core.get.call(null, map__13248__$1, new cljs.core.Keyword(null, "format-str", "format-str", 695206156));
  var formatters = cljs.core.get.call(null, map__13248__$1, new cljs.core.Keyword(null, "formatters", "formatters", -1875637118));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.DateTime) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.DateTime", "goog.date.DateTime", -2139257094, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, cljs_time.format.formatter_fn.call(null, format_str, formatters).call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.unparse_local_date = function cljs_time$format$unparse_local_date(p__13249, dt) {
  var map__13251 = p__13249;
  var map__13251__$1 = cljs.core.seq_QMARK_.call(null, map__13251) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13251) : map__13251;
  var fmt = map__13251__$1;
  var format_str = cljs.core.get.call(null, map__13251__$1, new cljs.core.Keyword(null, "format-str", "format-str", 695206156));
  var formatters = cljs.core.get.call(null, map__13251__$1, new cljs.core.Keyword(null, "formatters", "formatters", -1875637118));
  if (!(dt == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null)))))].join(""));
  }
  if (dt instanceof goog.date.Date) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "goog.date.Date", "goog.date.Date", -1613361125, null), new cljs.core.Symbol(null, "dt", "dt", 1272086768, null))))].join(""));
  }
  return cljs.core.apply.call(null, clojure.string.replace, cljs_time.format.formatter_fn.call(null, format_str, formatters).call(null, dt, cljs.core.assoc.call(null, cljs_time.format.date_formatters, "Z", cljs.core.constantly.call(null, ""), "ZZ", cljs.core.constantly.call(null, ""))));
};
cljs_time.format.show_formatters = function cljs_time$format$show_formatters() {
  var G__13253 = arguments.length;
  switch(G__13253) {
    case 0:
      return cljs_time.format.show_formatters.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs_time.format.show_formatters.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
cljs_time.format.show_formatters.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs_time.format.show_formatters.call(null, cljs_time.core.now.call(null));
};
cljs_time.format.show_formatters.cljs$core$IFn$_invoke$arity$1 = function(dt) {
  var seq__13254 = cljs.core.seq.call(null, cljs.core.sort.call(null, cljs_time.format.printers));
  var chunk__13255 = null;
  var count__13256 = 0;
  var i__13257 = 0;
  while (true) {
    if (i__13257 < count__13256) {
      var p = cljs.core._nth.call(null, chunk__13255, i__13257);
      var fmt_13259 = cljs_time.format.formatters.call(null, p);
      cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_13259, dt)));
      var G__13260 = seq__13254;
      var G__13261 = chunk__13255;
      var G__13262 = count__13256;
      var G__13263 = i__13257 + 1;
      seq__13254 = G__13260;
      chunk__13255 = G__13261;
      count__13256 = G__13262;
      i__13257 = G__13263;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__13254);
      if (temp__4425__auto__) {
        var seq__13254__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__13254__$1)) {
          var c__5093__auto__ = cljs.core.chunk_first.call(null, seq__13254__$1);
          var G__13264 = cljs.core.chunk_rest.call(null, seq__13254__$1);
          var G__13265 = c__5093__auto__;
          var G__13266 = cljs.core.count.call(null, c__5093__auto__);
          var G__13267 = 0;
          seq__13254 = G__13264;
          chunk__13255 = G__13265;
          count__13256 = G__13266;
          i__13257 = G__13267;
          continue;
        } else {
          var p = cljs.core.first.call(null, seq__13254__$1);
          var fmt_13268 = cljs_time.format.formatters.call(null, p);
          cljs.core.print.call(null, cljs_time.internal.core.format.call(null, "%-40s%s\n", p, cljs_time.format.unparse.call(null, fmt_13268, dt)));
          var G__13269 = cljs.core.next.call(null, seq__13254__$1);
          var G__13270 = null;
          var G__13271 = 0;
          var G__13272 = 0;
          seq__13254 = G__13269;
          chunk__13255 = G__13270;
          count__13256 = G__13271;
          i__13257 = G__13272;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs_time.format.show_formatters.cljs$lang$maxFixedArity = 1;
cljs_time.format.Mappable = function() {
  var obj13274 = {};
  return obj13274;
}();
cljs_time.format.instant__GT_map = function cljs_time$format$instant__GT_map(instant) {
  if (function() {
    var and__4296__auto__ = instant;
    if (and__4296__auto__) {
      return instant.cljs_time$format$Mappable$instant__GT_map$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return instant.cljs_time$format$Mappable$instant__GT_map$arity$1(instant);
  } else {
    var x__4944__auto__ = instant == null ? null : instant;
    return function() {
      var or__4308__auto__ = cljs_time.format.instant__GT_map[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.format.instant__GT_map["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mappable.instant-\x3emap", instant);
        }
      }
    }().call(null, instant);
  }
};
cljs_time.format.to_map = function cljs_time$format$to_map(years, months, days, hours, minutes, seconds, millis) {
  return new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "years", "years", -1298579689), years, new cljs.core.Keyword(null, "months", "months", -45571637), months, new cljs.core.Keyword(null, "days", "days", -1394072564), days, new cljs.core.Keyword(null, "hours", "hours", 58380855), hours, new cljs.core.Keyword(null, "minutes", "minutes", 1319166394), minutes, new cljs.core.Keyword(null, "seconds", "seconds", -445266194), seconds, new cljs.core.Keyword(null, "millis", "millis", 
  -1338288387), millis], null);
};
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$ = true;
goog.date.UtcDateTime.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(dt) {
  var dt__$1 = this;
  return cljs_time.format.to_map.call(null, dt__$1.getYear(), dt__$1.getMonth() + 1, dt__$1.getDate(), dt__$1.getHours(), dt__$1.getMinutes(), dt__$1.getSeconds(), dt__$1.getMilliseconds());
};
cljs_time.core.Period.prototype.cljs_time$format$Mappable$ = true;
cljs_time.core.Period.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  return cljs_time.core.__GT_period.call(null, m__$1);
};
cljs_time.core.Interval.prototype.cljs_time$format$Mappable$ = true;
cljs_time.core.Interval.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  return cljs_time.core.__GT_period.call(null, m__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs_time$format$Mappable$instant__GT_map$arity$1 = function(m) {
  var m__$1 = this;
  var G__13275 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)).fqn : null;
  switch(G__13275) {
    case "cljs-time.core/period":
      return m__$1;
      break;
    case "cljs-time.core/interval":
      return cljs_time.core.__GT_period.call(null, m__$1);
      break;
    default:
      throw new Error([cljs.core.str("No matching clause: "), cljs.core.str((new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, m__$1)))].join(""));;
  }
};
goog.provide("cljs_time.coerce");
goog.require("cljs.core");
goog.require("cljs_time.core");
goog.require("cljs_time.format");
goog.require("goog.date");
cljs_time.coerce.ICoerce = function() {
  var obj12279 = {};
  return obj12279;
}();
cljs_time.coerce.to_date_time = function cljs_time$coerce$to_date_time(obj) {
  if (function() {
    var and__4296__auto__ = obj;
    if (and__4296__auto__) {
      return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return obj.cljs_time$coerce$ICoerce$to_date_time$arity$1(obj);
  } else {
    var x__4944__auto__ = obj == null ? null : obj;
    return function() {
      var or__4308__auto__ = cljs_time.coerce.to_date_time[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs_time.coerce.to_date_time["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICoerce.to-date-time", obj);
        }
      }
    }().call(null, obj);
  }
};
cljs_time.coerce.from_long = function cljs_time$coerce$from_long(millis) {
  var G__12281 = new goog.date.UtcDateTime;
  G__12281.setTime(millis);
  return G__12281;
};
cljs_time.coerce.from_string = function cljs_time$coerce$from_string(s) {
  return cljs.core.first.call(null, function() {
    var iter__5062__auto__ = function cljs_time$coerce$from_string_$_iter__12290(s__12291) {
      return new cljs.core.LazySeq(null, function() {
        var s__12291__$1 = s__12291;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__12291__$1);
          if (temp__4425__auto__) {
            var s__12291__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__12291__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__12291__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__12293 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__12292 = 0;
                while (true) {
                  if (i__12292 < size__5061__auto__) {
                    var f = cljs.core._nth.call(null, c__5060__auto__, i__12292);
                    var d = function() {
                      try {
                        return cljs_time.format.parse.call(null, f, s);
                      } catch (e12296) {
                        if (e12296 instanceof Error) {
                          var _ = e12296;
                          return null;
                        } else {
                          throw e12296;
                        }
                      }
                    }();
                    if (cljs.core.truth_(d)) {
                      cljs.core.chunk_append.call(null, b__12293, d);
                      var G__12298 = i__12292 + 1;
                      i__12292 = G__12298;
                      continue;
                    } else {
                      var G__12299 = i__12292 + 1;
                      i__12292 = G__12299;
                      continue;
                    }
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12293), cljs_time$coerce$from_string_$_iter__12290.call(null, cljs.core.chunk_rest.call(null, s__12291__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__12293), null);
              }
            } else {
              var f = cljs.core.first.call(null, s__12291__$2);
              var d = function() {
                try {
                  return cljs_time.format.parse.call(null, f, s);
                } catch (e12297) {
                  if (e12297 instanceof Error) {
                    var _ = e12297;
                    return null;
                  } else {
                    throw e12297;
                  }
                }
              }();
              if (cljs.core.truth_(d)) {
                return cljs.core.cons.call(null, d, cljs_time$coerce$from_string_$_iter__12290.call(null, cljs.core.rest.call(null, s__12291__$2)));
              } else {
                var G__12300 = cljs.core.rest.call(null, s__12291__$2);
                s__12291__$1 = G__12300;
                continue;
              }
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, cljs.core.vals.call(null, cljs_time.format.formatters));
  }());
};
cljs_time.coerce.from_date = function cljs_time$coerce$from_date(date) {
  return cljs_time.coerce.from_long.call(null, date.getTime());
};
cljs_time.coerce.to_long = function cljs_time$coerce$to_long(obj) {
  var temp__4423__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var dt = temp__4423__auto__;
    return dt.getTime();
  } else {
    return null;
  }
};
cljs_time.coerce.to_epoch = function cljs_time$coerce$to_epoch(obj) {
  var millis = cljs_time.coerce.to_long.call(null, obj);
  var and__4296__auto__ = millis;
  if (cljs.core.truth_(and__4296__auto__)) {
    return millis / 1E3;
  } else {
    return and__4296__auto__;
  }
};
cljs_time.coerce.to_date = function cljs_time$coerce$to_date(obj) {
  var temp__4423__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var dt = temp__4423__auto__;
    return new Date(dt.getTime());
  } else {
    return null;
  }
};
cljs_time.coerce.to_string = function cljs_time$coerce$to_string(obj) {
  var temp__4423__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var dt = temp__4423__auto__;
    return cljs_time.format.unparse.call(null, (new cljs.core.Keyword(null, "date-time", "date-time", 177938180)).cljs$core$IFn$_invoke$arity$1(cljs_time.format.formatters), dt);
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date = function cljs_time$coerce$to_local_date(obj) {
  var temp__4423__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var dt = temp__4423__auto__;
    return new goog.date.Date(dt.getYear(), dt.getMonth(), dt.getDate());
  } else {
    return null;
  }
};
cljs_time.coerce.to_local_date_time = function cljs_time$coerce$to_local_date_time(obj) {
  var temp__4423__auto__ = cljs_time.coerce.to_date_time.call(null, obj);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var dt = temp__4423__auto__;
    var G__12302 = new goog.date.DateTime(dt.getYear(), dt.getMonth(), dt.getDate());
    G__12302.setHours(dt.getHours());
    G__12302.setMinutes(dt.getMinutes());
    G__12302.setSeconds(dt.getSeconds());
    G__12302.setMilliseconds(dt.getMilliseconds());
    return G__12302;
  } else {
    return null;
  }
};
cljs_time.coerce.ICoerce["null"] = true;
cljs_time.coerce.to_date_time["null"] = function(_) {
  return null;
};
Date.prototype.cljs_time$coerce$ICoerce$ = true;
Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date) {
  var date__$1 = this;
  return cljs_time.coerce.from_date.call(null, date__$1);
};
goog.date.Date.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.Date.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date) {
  var local_date__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date__$1), cljs_time.core.month.call(null, local_date__$1), cljs_time.core.day.call(null, local_date__$1));
};
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.DateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(local_date_time) {
  var local_date_time__$1 = this;
  return cljs_time.core.date_time.call(null, cljs_time.core.year.call(null, local_date_time__$1), cljs_time.core.month.call(null, local_date_time__$1), cljs_time.core.day.call(null, local_date_time__$1), cljs_time.core.hour.call(null, local_date_time__$1), cljs_time.core.minute.call(null, local_date_time__$1), cljs_time.core.second.call(null, local_date_time__$1), cljs_time.core.milli.call(null, local_date_time__$1));
};
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$ = true;
goog.date.UtcDateTime.prototype.cljs_time$coerce$ICoerce$to_date_time$arity$1 = function(date_time) {
  var date_time__$1 = this;
  return date_time__$1;
};
cljs_time.coerce.ICoerce["number"] = true;
cljs_time.coerce.to_date_time["number"] = function(long$) {
  return cljs_time.coerce.from_long.call(null, long$);
};
cljs_time.coerce.ICoerce["string"] = true;
cljs_time.coerce.to_date_time["string"] = function(string) {
  return cljs_time.coerce.from_string.call(null, string);
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return ":" + (this.nextId_++).toString(36);
};
goog.provide("om.core");
goog.require("cljs.core");
goog.require("om.dom");
goog.require("goog.dom");
goog.require("goog.ui.IdGenerator");
om.core._STAR_parent_STAR_ = null;
om.core._STAR_instrument_STAR_ = null;
om.core._STAR_descriptor_STAR_ = null;
om.core._STAR_state_STAR_ = null;
om.core._STAR_root_key_STAR_ = null;
om.core.IDisplayName = function() {
  var obj12404 = {};
  return obj12404;
}();
om.core.display_name = function om$core$display_name(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IDisplayName$display_name$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IDisplayName$display_name$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.display_name[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.display_name["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDisplayName.display-name", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IInitState = function() {
  var obj12406 = {};
  return obj12406;
}();
om.core.init_state = function om$core$init_state(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IInitState$init_state$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IInitState$init_state$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.init_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.init_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IInitState.init-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IShouldUpdate = function() {
  var obj12408 = {};
  return obj12408;
}();
om.core.should_update = function om$core$should_update(this$, next_props, next_state) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IShouldUpdate$should_update$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IShouldUpdate$should_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.should_update[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.should_update["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IShouldUpdate.should-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IWillMount = function() {
  var obj12410 = {};
  return obj12410;
}();
om.core.will_mount = function om$core$will_mount(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IWillMount$will_mount$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IWillMount$will_mount$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.will_mount[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.will_mount["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillMount.will-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IDidMount = function() {
  var obj12412 = {};
  return obj12412;
}();
om.core.did_mount = function om$core$did_mount(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IDidMount$did_mount$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IDidMount$did_mount$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.did_mount[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.did_mount["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidMount.did-mount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUnmount = function() {
  var obj12414 = {};
  return obj12414;
}();
om.core.will_unmount = function om$core$will_unmount(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IWillUnmount$will_unmount$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IWillUnmount$will_unmount$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.will_unmount[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.will_unmount["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUnmount.will-unmount", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IWillUpdate = function() {
  var obj12416 = {};
  return obj12416;
}();
om.core.will_update = function om$core$will_update(this$, next_props, next_state) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IWillUpdate$will_update$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IWillUpdate$will_update$arity$3(this$, next_props, next_state);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.will_update[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.will_update["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillUpdate.will-update", this$);
        }
      }
    }().call(null, this$, next_props, next_state);
  }
};
om.core.IDidUpdate = function() {
  var obj12418 = {};
  return obj12418;
}();
om.core.did_update = function om$core$did_update(this$, prev_props, prev_state) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IDidUpdate$did_update$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IDidUpdate$did_update$arity$3(this$, prev_props, prev_state);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.did_update[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.did_update["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IDidUpdate.did-update", this$);
        }
      }
    }().call(null, this$, prev_props, prev_state);
  }
};
om.core.IWillReceiveProps = function() {
  var obj12420 = {};
  return obj12420;
}();
om.core.will_receive_props = function om$core$will_receive_props(this$, next_props) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IWillReceiveProps$will_receive_props$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IWillReceiveProps$will_receive_props$arity$2(this$, next_props);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.will_receive_props[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.will_receive_props["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IWillReceiveProps.will-receive-props", this$);
        }
      }
    }().call(null, this$, next_props);
  }
};
om.core.IRender = function() {
  var obj12422 = {};
  return obj12422;
}();
om.core.render = function om$core$render(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRender$render$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRender$render$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.render[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.render["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRender.render", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IRenderProps = function() {
  var obj12424 = {};
  return obj12424;
}();
om.core.render_props = function om$core$render_props(this$, props, state) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRenderProps$render_props$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRenderProps$render_props$arity$3(this$, props, state);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.render_props[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.render_props["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderProps.render-props", this$);
        }
      }
    }().call(null, this$, props, state);
  }
};
om.core.IRenderState = function() {
  var obj12426 = {};
  return obj12426;
}();
om.core.render_state = function om$core$render_state(this$, state) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRenderState$render_state$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRenderState$render_state$arity$2(this$, state);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core.render_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core.render_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderState.render-state", this$);
        }
      }
    }().call(null, this$, state);
  }
};
om.core.ICheckState = function() {
  var obj12428 = {};
  return obj12428;
}();
om.core.IOmSwap = function() {
  var obj12430 = {};
  return obj12430;
}();
om.core._om_swap_BANG_ = function om$core$_om_swap_BANG_(this$, cursor, korks, f, tag) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IOmSwap$_om_swap_BANG_$arity$5(this$, cursor, korks, f, tag);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._om_swap_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._om_swap_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmSwap.-om-swap!", this$);
        }
      }
    }().call(null, this$, cursor, korks, f, tag);
  }
};
om.core.IGetState = function() {
  var obj12432 = {};
  return obj12432;
}();
om.core._get_state = function om$core$_get_state() {
  var G__12434 = arguments.length;
  switch(G__12434) {
    case 1:
      return om.core._get_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core._get_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core._get_state.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IGetState$_get_state$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IGetState$_get_state$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_state.cljs$core$IFn$_invoke$arity$2 = function(this$, ks) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IGetState$_get_state$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IGetState$_get_state$arity$2(this$, ks);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IGetState.-get-state", this$);
        }
      }
    }().call(null, this$, ks);
  }
};
om.core._get_state.cljs$lang$maxFixedArity = 2;
om.core.IGetRenderState = function() {
  var obj12437 = {};
  return obj12437;
}();
om.core._get_render_state = function om$core$_get_render_state() {
  var G__12439 = arguments.length;
  switch(G__12439) {
    case 1:
      return om.core._get_render_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core._get_render_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core._get_render_state.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IGetRenderState$_get_render_state$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_render_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_render_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_render_state.cljs$core$IFn$_invoke$arity$2 = function(this$, ks) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IGetRenderState$_get_render_state$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IGetRenderState$_get_render_state$arity$2(this$, ks);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_render_state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_render_state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IGetRenderState.-get-render-state", this$);
        }
      }
    }().call(null, this$, ks);
  }
};
om.core._get_render_state.cljs$lang$maxFixedArity = 2;
om.core.ISetState = function() {
  var obj12442 = {};
  return obj12442;
}();
om.core._set_state_BANG_ = function om$core$_set_state_BANG_() {
  var G__12444 = arguments.length;
  switch(G__12444) {
    case 3:
      return om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(this$, val, render) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$ISetState$_set_state_BANG_$arity$3(this$, val, render);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._set_state_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
        }
      }
    }().call(null, this$, val, render);
  }
};
om.core._set_state_BANG_.cljs$core$IFn$_invoke$arity$4 = function(this$, ks, val, render) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$ISetState$_set_state_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$ISetState$_set_state_BANG_$arity$4(this$, ks, val, render);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._set_state_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._set_state_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ISetState.-set-state!", this$);
        }
      }
    }().call(null, this$, ks, val, render);
  }
};
om.core._set_state_BANG_.cljs$lang$maxFixedArity = 4;
om.core.IRenderQueue = function() {
  var obj12447 = {};
  return obj12447;
}();
om.core._get_queue = function om$core$_get_queue(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRenderQueue$_get_queue$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_get_queue$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_queue[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_queue["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-get-queue", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._queue_render_BANG_ = function om$core$_queue_render_BANG_(this$, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_queue_render_BANG_$arity$2(this$, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._queue_render_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._queue_render_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-queue-render!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._empty_queue_BANG_ = function om$core$_empty_queue_BANG_(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRenderQueue$_empty_queue_BANG_$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._empty_queue_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._empty_queue_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderQueue.-empty-queue!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.IValue = function() {
  var obj12449 = {};
  return obj12449;
}();
om.core._value = function om$core$_value(x) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.om$core$IValue$_value$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.om$core$IValue$_value$arity$1(x);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = om.core._value[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._value["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IValue.-value", x);
        }
      }
    }().call(null, x);
  }
};
om.core.IValue["_"] = true;
om.core._value["_"] = function(x) {
  return x;
};
om.core.ICursor = function() {
  var obj12451 = {};
  return obj12451;
}();
om.core._path = function om$core$_path(cursor) {
  if (function() {
    var and__4296__auto__ = cursor;
    if (and__4296__auto__) {
      return cursor.om$core$ICursor$_path$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_path$arity$1(cursor);
  } else {
    var x__4944__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__4308__auto__ = om.core._path[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._path["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-path", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core._state = function om$core$_state(cursor) {
  if (function() {
    var and__4296__auto__ = cursor;
    if (and__4296__auto__) {
      return cursor.om$core$ICursor$_state$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cursor.om$core$ICursor$_state$arity$1(cursor);
  } else {
    var x__4944__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__4308__auto__ = om.core._state[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._state["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursor.-state", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IToCursor = function() {
  var obj12453 = {};
  return obj12453;
}();
om.core._to_cursor = function om$core$_to_cursor() {
  var G__12455 = arguments.length;
  switch(G__12455) {
    case 2:
      return om.core._to_cursor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core._to_cursor.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core._to_cursor.cljs$core$IFn$_invoke$arity$2 = function(value, state) {
  if (function() {
    var and__4296__auto__ = value;
    if (and__4296__auto__) {
      return value.om$core$IToCursor$_to_cursor$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return value.om$core$IToCursor$_to_cursor$arity$2(value, state);
  } else {
    var x__4944__auto__ = value == null ? null : value;
    return function() {
      var or__4308__auto__ = om.core._to_cursor[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._to_cursor["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
        }
      }
    }().call(null, value, state);
  }
};
om.core._to_cursor.cljs$core$IFn$_invoke$arity$3 = function(value, state, path) {
  if (function() {
    var and__4296__auto__ = value;
    if (and__4296__auto__) {
      return value.om$core$IToCursor$_to_cursor$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return value.om$core$IToCursor$_to_cursor$arity$3(value, state, path);
  } else {
    var x__4944__auto__ = value == null ? null : value;
    return function() {
      var or__4308__auto__ = om.core._to_cursor[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._to_cursor["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IToCursor.-to-cursor", value);
        }
      }
    }().call(null, value, state, path);
  }
};
om.core._to_cursor.cljs$lang$maxFixedArity = 3;
om.core.ICursorDerive = function() {
  var obj12458 = {};
  return obj12458;
}();
om.core._derive = function om$core$_derive(cursor, derived, state, path) {
  if (function() {
    var and__4296__auto__ = cursor;
    if (and__4296__auto__) {
      return cursor.om$core$ICursorDerive$_derive$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cursor.om$core$ICursorDerive$_derive$arity$4(cursor, derived, state, path);
  } else {
    var x__4944__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__4308__auto__ = om.core._derive[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._derive["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ICursorDerive.-derive", cursor);
        }
      }
    }().call(null, cursor, derived, state, path);
  }
};
om.core.ICursorDerive["_"] = true;
om.core._derive["_"] = function(this$, derived, state, path) {
  return om.core.to_cursor.call(null, derived, state, path);
};
om.core.path = function om$core$path(cursor) {
  return om.core._path.call(null, cursor);
};
om.core.value = function om$core$value(cursor) {
  return om.core._value.call(null, cursor);
};
om.core.state = function om$core$state(cursor) {
  return om.core._state.call(null, cursor);
};
om.core.ITransact = function() {
  var obj12460 = {};
  return obj12460;
}();
om.core._transact_BANG_ = function om$core$_transact_BANG_(cursor, korks, f, tag) {
  if (function() {
    var and__4296__auto__ = cursor;
    if (and__4296__auto__) {
      return cursor.om$core$ITransact$_transact_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cursor.om$core$ITransact$_transact_BANG_$arity$4(cursor, korks, f, tag);
  } else {
    var x__4944__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__4308__auto__ = om.core._transact_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._transact_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ITransact.-transact!", cursor);
        }
      }
    }().call(null, cursor, korks, f, tag);
  }
};
om.core.INotify = function() {
  var obj12462 = {};
  return obj12462;
}();
om.core._listen_BANG_ = function om$core$_listen_BANG_(x, key, tx_listen) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.om$core$INotify$_listen_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.om$core$INotify$_listen_BANG_$arity$3(x, key, tx_listen);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = om.core._listen_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._listen_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-listen!", x);
        }
      }
    }().call(null, x, key, tx_listen);
  }
};
om.core._unlisten_BANG_ = function om$core$_unlisten_BANG_(x, key) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.om$core$INotify$_unlisten_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.om$core$INotify$_unlisten_BANG_$arity$2(x, key);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = om.core._unlisten_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._unlisten_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-unlisten!", x);
        }
      }
    }().call(null, x, key);
  }
};
om.core._notify_BANG_ = function om$core$_notify_BANG_(x, tx_data, root_cursor) {
  if (function() {
    var and__4296__auto__ = x;
    if (and__4296__auto__) {
      return x.om$core$INotify$_notify_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return x.om$core$INotify$_notify_BANG_$arity$3(x, tx_data, root_cursor);
  } else {
    var x__4944__auto__ = x == null ? null : x;
    return function() {
      var or__4308__auto__ = om.core._notify_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._notify_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "INotify.-notify!", x);
        }
      }
    }().call(null, x, tx_data, root_cursor);
  }
};
om.core.IRootProperties = function() {
  var obj12464 = {};
  return obj12464;
}();
om.core._set_property_BANG_ = function om$core$_set_property_BANG_(this$, id, p, val) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRootProperties$_set_property_BANG_$arity$4;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_set_property_BANG_$arity$4(this$, id, p, val);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._set_property_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._set_property_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-set-property!", this$);
        }
      }
    }().call(null, this$, id, p, val);
  }
};
om.core._remove_property_BANG_ = function om$core$_remove_property_BANG_(this$, id, p) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_property_BANG_$arity$3(this$, id, p);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._remove_property_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._remove_property_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-property!", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core._remove_properties_BANG_ = function om$core$_remove_properties_BANG_(this$, id) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_remove_properties_BANG_$arity$2(this$, id);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._remove_properties_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._remove_properties_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-remove-properties!", this$);
        }
      }
    }().call(null, this$, id);
  }
};
om.core._get_property = function om$core$_get_property(this$, id, p) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IRootProperties$_get_property$arity$3;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IRootProperties$_get_property$arity$3(this$, id, p);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_property[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_property["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootProperties.-get-property", this$);
        }
      }
    }().call(null, this$, id, p);
  }
};
om.core.IRootKey = function() {
  var obj12466 = {};
  return obj12466;
}();
om.core._root_key = function om$core$_root_key(cursor) {
  if (function() {
    var and__4296__auto__ = cursor;
    if (and__4296__auto__) {
      return cursor.om$core$IRootKey$_root_key$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return cursor.om$core$IRootKey$_root_key$arity$1(cursor);
  } else {
    var x__4944__auto__ = cursor == null ? null : cursor;
    return function() {
      var or__4308__auto__ = om.core._root_key[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._root_key["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRootKey.-root-key", cursor);
        }
      }
    }().call(null, cursor);
  }
};
om.core.IAdapt = function() {
  var obj12468 = {};
  return obj12468;
}();
om.core._adapt = function om$core$_adapt(this$, other) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IAdapt$_adapt$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IAdapt$_adapt$arity$2(this$, other);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._adapt[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._adapt["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IAdapt.-adapt", this$);
        }
      }
    }().call(null, this$, other);
  }
};
om.core.IAdapt["_"] = true;
om.core._adapt["_"] = function(_, other) {
  return other;
};
om.core.adapt = function om$core$adapt(x, other) {
  return om.core._adapt.call(null, x, other);
};
om.core.IOmRef = function() {
  var obj12470 = {};
  return obj12470;
}();
om.core._add_dep_BANG_ = function om$core$_add_dep_BANG_(this$, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IOmRef$_add_dep_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_add_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._add_dep_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._add_dep_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-add-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._remove_dep_BANG_ = function om$core$_remove_dep_BANG_(this$, c) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_remove_dep_BANG_$arity$2(this$, c);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._remove_dep_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._remove_dep_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-remove-dep!", this$);
        }
      }
    }().call(null, this$, c);
  }
};
om.core._refresh_deps_BANG_ = function om$core$_refresh_deps_BANG_(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_refresh_deps_BANG_$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._refresh_deps_BANG_[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._refresh_deps_BANG_["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-refresh-deps!", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core._get_deps = function om$core$_get_deps(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.om$core$IOmRef$_get_deps$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.om$core$IOmRef$_get_deps$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = om.core._get_deps[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._get_deps["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IOmRef.-get-deps", this$);
        }
      }
    }().call(null, this$);
  }
};
om.core.transact_STAR_ = function om$core$transact_STAR_(state, cursor, korks, f, tag) {
  var old_state = cljs.core.deref.call(null, state);
  var path = cljs.core.into.call(null, om.core.path.call(null, cursor), korks);
  var ret = function() {
    var G__12472 = state;
    if (G__12472) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12472.om$core$IOmSwap$;
        }
      }())) {
        return true;
      } else {
        if (!G__12472.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__12472);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmSwap, G__12472);
    }
  }() ? om.core._om_swap_BANG_.call(null, state, cursor, korks, f, tag) : cljs.core.empty_QMARK_.call(null, path) ? cljs.core.swap_BANG_.call(null, state, f) : cljs.core.swap_BANG_.call(null, state, cljs.core.update_in, path, f);
  if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "defer", "om.core/defer", -1038866178))) {
    return null;
  } else {
    var tx_data = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "path", "path", -188191168), path, new cljs.core.Keyword(null, "old-value", "old-value", 862546795), cljs.core.get_in.call(null, old_state, path), new cljs.core.Keyword(null, "new-value", "new-value", 1087038368), cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path), new cljs.core.Keyword(null, "old-state", "old-state", 1039580704), old_state, new cljs.core.Keyword(null, "new-state", "new-state", 
    -490349212), cljs.core.deref.call(null, state)], null);
    if (!(tag == null)) {
      return om.core.notify_STAR_.call(null, cursor, cljs.core.assoc.call(null, tx_data, new cljs.core.Keyword(null, "tag", "tag", -1290361223), tag));
    } else {
      return om.core.notify_STAR_.call(null, cursor, tx_data);
    }
  }
};
om.core.cursor_QMARK_ = function om$core$cursor_QMARK_(x) {
  var G__12474 = x;
  if (G__12474) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__12474.om$core$ICursor$;
      }
    }())) {
      return true;
    } else {
      if (!G__12474.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12474);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12474);
  }
};
om.core.component_QMARK_ = function om$core$component_QMARK_(x) {
  return x["isOmComponent"];
};
om.core.children = function om$core$children(node) {
  var c = node.props.children;
  if (cljs.core.ifn_QMARK_.call(null, c)) {
    return node.props.children = c.call(null, node);
  } else {
    return c;
  }
};
om.core.get_props = function om$core$get_props() {
  var G__12476 = arguments.length;
  switch(G__12476) {
    case 1:
      return om.core.get_props.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_props.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_props.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  return x.props["__om_cursor"];
};
om.core.get_props.cljs$core$IFn$_invoke$arity$2 = function(x, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, x))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))))].join(""));
  }
  var korks__$1 = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var G__12477 = x.props["__om_cursor"];
  var G__12477__$1 = cljs.core.seq.call(null, korks__$1) ? cljs.core.get_in.call(null, G__12477, korks__$1) : G__12477;
  return G__12477__$1;
};
om.core.get_props.cljs$lang$maxFixedArity = 2;
om.core.get_state = function om$core$get_state() {
  var G__12480 = arguments.length;
  switch(G__12480) {
    case 1:
      return om.core.get_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._get_state.call(null, owner);
};
om.core.get_state.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._get_state.call(null, owner, ks);
};
om.core.get_state.cljs$lang$maxFixedArity = 2;
om.core.get_shared = function om$core$get_shared() {
  var G__12483 = arguments.length;
  switch(G__12483) {
    case 1:
      return om.core.get_shared.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_shared.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_shared.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (owner == null) {
    return null;
  } else {
    return owner.props["__om_shared"];
  }
};
om.core.get_shared.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (!cljs.core.sequential_QMARK_.call(null, korks)) {
    return cljs.core.get.call(null, om.core.get_shared.call(null, owner), korks);
  } else {
    if (cljs.core.empty_QMARK_.call(null, korks)) {
      return om.core.get_shared.call(null, owner);
    } else {
      return cljs.core.get_in.call(null, om.core.get_shared.call(null, owner), korks);
    }
  }
};
om.core.get_shared.cljs$lang$maxFixedArity = 2;
om.core.merge_pending_state = function om$core$merge_pending_state(owner) {
  var state = owner.state;
  var temp__4425__auto__ = state["__om_pending_state"];
  if (cljs.core.truth_(temp__4425__auto__)) {
    var pending_state = temp__4425__auto__;
    var G__12486 = state;
    G__12486["__om_prev_state"] = state["__om_state"];
    G__12486["__om_state"] = pending_state;
    G__12486["__om_pending_state"] = null;
    return G__12486;
  } else {
    return null;
  }
};
om.core.merge_props_state = function om$core$merge_props_state() {
  var G__12488 = arguments.length;
  switch(G__12488) {
    case 1:
      return om.core.merge_props_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.merge_props_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.merge_props_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  return om.core.merge_props_state.call(null, owner, null);
};
om.core.merge_props_state.cljs$core$IFn$_invoke$arity$2 = function(owner, props) {
  var props__$1 = function() {
    var or__4308__auto__ = props;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return owner.props;
    }
  }();
  var temp__4425__auto__ = props__$1["__om_state"];
  if (cljs.core.truth_(temp__4425__auto__)) {
    var props_state = temp__4425__auto__;
    var state = owner.state;
    state["__om_pending_state"] = cljs.core.merge.call(null, function() {
      var or__4308__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return state["__om_state"];
      }
    }(), props_state);
    return props__$1["__om_state"] = null;
  } else {
    return null;
  }
};
om.core.merge_props_state.cljs$lang$maxFixedArity = 2;
om.core.ref_changed_QMARK_ = function om$core$ref_changed_QMARK_(ref) {
  var val = om.core.value.call(null, ref);
  var val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.state.call(null, ref)), om.core.path.call(null, ref), new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  return cljs.core.not_EQ_.call(null, val, val_SINGLEQUOTE_);
};
om.core.update_refs = function om$core$update_refs(c) {
  var cstate = c.state;
  var refs = cstate["__om_refs"];
  if (cljs.core.count.call(null, refs) === 0) {
    return null;
  } else {
    return cstate["__om_refs"] = cljs.core.into.call(null, cljs.core.PersistentHashSet.EMPTY, cljs.core.filter.call(null, cljs.core.nil_QMARK_, cljs.core.map.call(null, function(cstate, refs) {
      return function(ref) {
        var ref_val = om.core.value.call(null, ref);
        var ref_state = om.core.state.call(null, ref);
        var ref_path = om.core.path.call(null, ref);
        var ref_val_SINGLEQUOTE_ = cljs.core.get_in.call(null, cljs.core.deref.call(null, ref_state), ref_path, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
        if (cljs.core.not_EQ_.call(null, ref_val, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
          if (cljs.core.not_EQ_.call(null, ref_val, ref_val_SINGLEQUOTE_)) {
            return om.core.adapt.call(null, ref, om.core.to_cursor.call(null, ref_val_SINGLEQUOTE_, ref_state, ref_path));
          } else {
            return ref;
          }
        } else {
          return null;
        }
      };
    }(cstate, refs), refs)));
  }
};
om.core.pure_methods = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), new cljs.core.Keyword(null, "isOmComponent", "isOmComponent", -2070015162), new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), new cljs.core.Keyword(null, "componentWillReceiveProps", "componentWillReceiveProps", 559988974), new cljs.core.Keyword(null, "shouldComponentUpdate", "shouldComponentUpdate", 1795750960), 
new cljs.core.Keyword(null, "render", "render", -1408033454), new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), new cljs.core.Keyword(null, "componentDidMount", "componentDidMount", 955710936), new cljs.core.Keyword(null, "getDisplayName", "getDisplayName", 1324429466), new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619)], [function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12491 = c;
    if (G__12491) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12491.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12491.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12491);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12491);
    }
  }()) {
    var state_12512 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props, "isOmComponent":true}), function() {
      var or__4308__auto__ = state_12512["__om_prev_state"];
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return state_12512["__om_state"];
      }
    }());
  } else {
  }
  return this$.state["__om_prev_state"] = null;
}, true, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__12492 = c;
    if (G__12492) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12492.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12492.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12492);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12492);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  var temp__4425__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4425__auto__) {
    var refs = temp__4425__auto__;
    var seq__12493 = cljs.core.seq.call(null, refs);
    var chunk__12494 = null;
    var count__12495 = 0;
    var i__12496 = 0;
    while (true) {
      if (i__12496 < count__12495) {
        var ref = cljs.core._nth.call(null, chunk__12494, i__12496);
        om.core.unobserve.call(null, this$, ref);
        var G__12513 = seq__12493;
        var G__12514 = chunk__12494;
        var G__12515 = count__12495;
        var G__12516 = i__12496 + 1;
        seq__12493 = G__12513;
        chunk__12494 = G__12514;
        count__12495 = G__12515;
        i__12496 = G__12516;
        continue;
      } else {
        var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__12493);
        if (temp__4425__auto____$1) {
          var seq__12493__$1 = temp__4425__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12493__$1)) {
            var c__5093__auto__ = cljs.core.chunk_first.call(null, seq__12493__$1);
            var G__12517 = cljs.core.chunk_rest.call(null, seq__12493__$1);
            var G__12518 = c__5093__auto__;
            var G__12519 = cljs.core.count.call(null, c__5093__auto__);
            var G__12520 = 0;
            seq__12493 = G__12517;
            chunk__12494 = G__12518;
            count__12495 = G__12519;
            i__12496 = G__12520;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__12493__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__12521 = cljs.core.next.call(null, seq__12493__$1);
            var G__12522 = null;
            var G__12523 = 0;
            var G__12524 = 0;
            seq__12493 = G__12521;
            chunk__12494 = G__12522;
            count__12495 = G__12523;
            i__12496 = G__12524;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, function(next_props) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12497 = c;
    if (G__12497) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12497.om$core$IWillReceiveProps$;
        }
      }())) {
        return true;
      } else {
        if (!G__12497.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__12497);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillReceiveProps, G__12497);
    }
  }()) {
    return om.core.will_receive_props.call(null, c, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}));
  } else {
    return null;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var props = this$.props;
  var state = this$.state;
  var c = om.core.children.call(null, this$);
  om.core.merge_props_state.call(null, this$, next_props);
  if (function() {
    var G__12498 = c;
    if (G__12498) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12498.om$core$IShouldUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12498.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__12498);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IShouldUpdate, G__12498);
    }
  }()) {
    return om.core.should_update.call(null, c, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
    var cursor = props["__om_cursor"];
    var next_cursor = next_props["__om_cursor"];
    if (cljs.core.not_EQ_.call(null, om.core._value.call(null, cursor), om.core._value.call(null, next_cursor))) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = om.core.cursor_QMARK_.call(null, cursor);
        if (cljs.core.truth_(and__4296__auto__)) {
          var and__4296__auto____$1 = om.core.cursor_QMARK_.call(null, next_cursor);
          if (cljs.core.truth_(and__4296__auto____$1)) {
            return cljs.core.not_EQ_.call(null, om.core._path.call(null, cursor), om.core._path.call(null, next_cursor));
          } else {
            return and__4296__auto____$1;
          }
        } else {
          return and__4296__auto__;
        }
      }())) {
        return true;
      } else {
        if (cljs.core.not_EQ_.call(null, om.core._get_state.call(null, this$), om.core._get_render_state.call(null, this$))) {
          return true;
        } else {
          if (cljs.core.truth_(function() {
            var and__4296__auto__ = !(cljs.core.count.call(null, state["__om_refs"]) === 0);
            if (and__4296__auto__) {
              return cljs.core.some.call(null, function(and__4296__auto__, cursor, next_cursor, props, state, c, this$) {
                return function(p1__12490_SHARP_) {
                  return om.core.ref_changed_QMARK_.call(null, p1__12490_SHARP_);
                };
              }(and__4296__auto__, cursor, next_cursor, props, state, c, this$), state["__om_refs"]);
            } else {
              return and__4296__auto__;
            }
          }())) {
            return true;
          } else {
            if (!(props["__om_index"] === next_props["__om_index"])) {
              return true;
            } else {
              return false;
            }
          }
        }
      }
    }
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var _STAR_parent_STAR_12499 = om.core._STAR_parent_STAR_;
  var _STAR_state_STAR_12500 = om.core._STAR_state_STAR_;
  var _STAR_instrument_STAR_12501 = om.core._STAR_instrument_STAR_;
  var _STAR_descriptor_STAR_12502 = om.core._STAR_descriptor_STAR_;
  var _STAR_root_key_STAR_12503 = om.core._STAR_root_key_STAR_;
  om.core._STAR_parent_STAR_ = this$;
  om.core._STAR_state_STAR_ = props["__om_app_state"];
  om.core._STAR_instrument_STAR_ = props["__om_instrument"];
  om.core._STAR_descriptor_STAR_ = props["__om_descriptor"];
  om.core._STAR_root_key_STAR_ = props["__om_root_key"];
  try {
    if (function() {
      var G__12504 = c;
      if (G__12504) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__12504.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__12504.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12504);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12504);
      }
    }()) {
      return om.core.render.call(null, c);
    } else {
      if (function() {
        var G__12505 = c;
        if (G__12505) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto__ = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return G__12505.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__12505.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__12505);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__12505);
        }
      }()) {
        return om.core.render_props.call(null, c, props["__om_cursor"], om.core.get_state.call(null, this$));
      } else {
        if (function() {
          var G__12506 = c;
          if (G__12506) {
            var bit__4982__auto__ = null;
            if (cljs.core.truth_(function() {
              var or__4308__auto__ = bit__4982__auto__;
              if (cljs.core.truth_(or__4308__auto__)) {
                return or__4308__auto__;
              } else {
                return G__12506.om$core$IRenderState$;
              }
            }())) {
              return true;
            } else {
              if (!G__12506.cljs$lang$protocol_mask$partition$) {
                return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12506);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12506);
          }
        }()) {
          return om.core.render_state.call(null, c, om.core.get_state.call(null, this$));
        } else {
          return c;
        }
      }
    }
  } finally {
    om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_12503;
    om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_12502;
    om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_12501;
    om.core._STAR_state_STAR_ = _STAR_state_STAR_12500;
    om.core._STAR_parent_STAR_ = _STAR_parent_STAR_12499;
  }
}, function(next_props, next_state) {
  var this$ = this;
  var c_12525 = om.core.children.call(null, this$);
  if (function() {
    var G__12507 = c_12525;
    if (G__12507) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12507.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12507.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12507);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12507);
    }
  }()) {
    var state_12526 = this$.state;
    om.core.will_update.call(null, c_12525, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__4308__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var id = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
  var ret = {"__om_id":function() {
    var or__4308__auto__ = id;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }(), "__om_state":cljs.core.merge.call(null, function() {
    var G__12508 = c;
    if (G__12508) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12508.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__12508.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12508);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12508);
    }
  }() ? om.core.init_state.call(null, c) : null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)))};
  props["__om_init_state"] = null;
  return ret;
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var cursor = this$.props["__om_cursor"];
  if (function() {
    var G__12509 = c;
    if (G__12509) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12509.om$core$IDidMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12509.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__12509);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidMount, G__12509);
    }
  }()) {
    return om.core.did_mount.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12510 = c;
    if (G__12510) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12510.om$core$IDisplayName$;
        }
      }())) {
        return true;
      } else {
        if (!G__12510.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__12510);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDisplayName, G__12510);
    }
  }()) {
    return om.core.display_name.call(null, c);
  } else {
    return null;
  }
}, function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_12527 = om.core.children.call(null, this$);
  if (function() {
    var G__12511 = c_12527;
    if (G__12511) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12511.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12511.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12511);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12511);
    }
  }()) {
    om.core.will_mount.call(null, c_12527);
  } else {
  }
  return om.core.merge_pending_state.call(null, this$);
}]);
om.core.specify_state_methods_BANG_ = function om$core$specify_state_methods_BANG_(obj) {
  var x12529 = obj;
  x12529.om$core$ISetState$ = true;
  x12529.om$core$ISetState$_set_state_BANG_$arity$3 = function(x12529) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var app_state = props["__om_app_state"];
      this$__$1.state["__om_pending_state"] = val;
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = !(app_state == null);
        if (and__4296__auto__) {
          return render;
        } else {
          return and__4296__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x12529);
  x12529.om$core$ISetState$_set_state_BANG_$arity$4 = function(x12529) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      var props = this$__$1.props;
      var state = this$__$1.state;
      var pstate = om.core._get_state.call(null, this$__$1);
      var app_state = props["__om_app_state"];
      state["__om_pending_state"] = cljs.core.assoc_in.call(null, pstate, ks, val);
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = !(app_state == null);
        if (and__4296__auto__) {
          return render;
        } else {
          return and__4296__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, app_state, this$__$1);
      } else {
        return null;
      }
    };
  }(x12529);
  x12529.om$core$IGetRenderState$ = true;
  x12529.om$core$IGetRenderState$_get_render_state$arity$1 = function(x12529) {
    return function(this$) {
      var this$__$1 = this;
      return this$__$1.state["__om_state"];
    };
  }(x12529);
  x12529.om$core$IGetRenderState$_get_render_state$arity$2 = function(x12529) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x12529);
  x12529.om$core$IGetState$ = true;
  x12529.om$core$IGetState$_get_state$arity$1 = function(x12529) {
    return function(this$) {
      var this$__$1 = this;
      var state = this$__$1.state;
      var or__4308__auto__ = state["__om_pending_state"];
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return state["__om_state"];
      }
    };
  }(x12529);
  x12529.om$core$IGetState$_get_state$arity$2 = function(x12529) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x12529);
  return x12529;
};
om.core.pure_descriptor = om.core.specify_state_methods_BANG_.call(null, cljs.core.clj__GT_js.call(null, om.core.pure_methods));
om.core.react_id = function om$core$react_id(x) {
  var id = x["_rootNodeID"];
  if (cljs.core.truth_(id)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "id", "id", 252129435, null)))].join(""));
  }
  return id;
};
om.core.get_gstate = function om$core$get_gstate(owner) {
  return owner.props["__om_app_state"];
};
om.core.no_local_merge_pending_state = function om$core$no_local_merge_pending_state(owner) {
  var gstate = om.core.get_gstate.call(null, owner);
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, owner)], null);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), spath);
  if (cljs.core.truth_((new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, function(gstate, spath, states) {
      return function(states__$1) {
        return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, cljs.core.assoc.call(null, states__$1, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923), (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1)), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states__$1), 
        (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states__$1))), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973));
      };
    }(gstate, spath, states));
  } else {
    return null;
  }
};
om.core.no_local_state_methods = cljs.core.assoc.call(null, om.core.pure_methods, new cljs.core.Keyword(null, "getInitialState", "getInitialState", 1541760916), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var props = this$.props;
  var istate = function() {
    var or__4308__auto__ = props["__om_init_state"];
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var om_id = function() {
    var or__4308__auto__ = (new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)).cljs$core$IFn$_invoke$arity$1(istate);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return goog.ui.IdGenerator.getInstance().getNextUniqueId();
    }
  }();
  var state = cljs.core.merge.call(null, cljs.core.dissoc.call(null, istate, new cljs.core.Keyword("om.core", "id", "om.core/id", 299074693)), function() {
    var G__12530 = c;
    if (G__12530) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12530.om$core$IInitState$;
        }
      }())) {
        return true;
      } else {
        if (!G__12530.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12530);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IInitState, G__12530);
    }
  }() ? om.core.init_state.call(null, c) : null);
  var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
  props["__om_init_state"] = null;
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.assoc_in, spath, state);
  return {"__om_id":om_id};
}, new cljs.core.Keyword(null, "componentWillMount", "componentWillMount", -285327619), function() {
  var this$ = this;
  om.core.merge_props_state.call(null, this$);
  var c_12539 = om.core.children.call(null, this$);
  if (function() {
    var G__12531 = c_12539;
    if (G__12531) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12531.om$core$IWillMount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12531.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12531);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillMount, G__12531);
    }
  }()) {
    om.core.will_mount.call(null, c_12539);
  } else {
  }
  return om.core.no_local_merge_pending_state.call(null, this$);
}, new cljs.core.Keyword(null, "componentWillUnmount", "componentWillUnmount", 1573788814), function() {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  if (function() {
    var G__12532 = c;
    if (G__12532) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12532.om$core$IWillUnmount$;
        }
      }())) {
        return true;
      } else {
        if (!G__12532.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12532);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUnmount, G__12532);
    }
  }()) {
    om.core.will_unmount.call(null, c);
  } else {
  }
  cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$), cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128)], null), cljs.core.dissoc, om.core.react_id.call(null, this$));
  var temp__4425__auto__ = cljs.core.seq.call(null, this$.state["__om_refs"]);
  if (temp__4425__auto__) {
    var refs = temp__4425__auto__;
    var seq__12533 = cljs.core.seq.call(null, refs);
    var chunk__12534 = null;
    var count__12535 = 0;
    var i__12536 = 0;
    while (true) {
      if (i__12536 < count__12535) {
        var ref = cljs.core._nth.call(null, chunk__12534, i__12536);
        om.core.unobserve.call(null, this$, ref);
        var G__12540 = seq__12533;
        var G__12541 = chunk__12534;
        var G__12542 = count__12535;
        var G__12543 = i__12536 + 1;
        seq__12533 = G__12540;
        chunk__12534 = G__12541;
        count__12535 = G__12542;
        i__12536 = G__12543;
        continue;
      } else {
        var temp__4425__auto____$1 = cljs.core.seq.call(null, seq__12533);
        if (temp__4425__auto____$1) {
          var seq__12533__$1 = temp__4425__auto____$1;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__12533__$1)) {
            var c__5093__auto__ = cljs.core.chunk_first.call(null, seq__12533__$1);
            var G__12544 = cljs.core.chunk_rest.call(null, seq__12533__$1);
            var G__12545 = c__5093__auto__;
            var G__12546 = cljs.core.count.call(null, c__5093__auto__);
            var G__12547 = 0;
            seq__12533 = G__12544;
            chunk__12534 = G__12545;
            count__12535 = G__12546;
            i__12536 = G__12547;
            continue;
          } else {
            var ref = cljs.core.first.call(null, seq__12533__$1);
            om.core.unobserve.call(null, this$, ref);
            var G__12548 = cljs.core.next.call(null, seq__12533__$1);
            var G__12549 = null;
            var G__12550 = 0;
            var G__12551 = 0;
            seq__12533 = G__12548;
            chunk__12534 = G__12549;
            count__12535 = G__12550;
            i__12536 = G__12551;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
}, new cljs.core.Keyword(null, "componentWillUpdate", "componentWillUpdate", 657390932), function(next_props, next_state) {
  var this$ = this;
  var props_12552 = this$.props;
  var c_12553 = om.core.children.call(null, this$);
  if (function() {
    var G__12537 = c_12553;
    if (G__12537) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12537.om$core$IWillUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12537.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12537);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IWillUpdate, G__12537);
    }
  }()) {
    var state_12554 = this$.state;
    om.core.will_update.call(null, c_12553, om.core.get_props.call(null, {"props":next_props, "isOmComponent":true}), om.core._get_state.call(null, this$));
  } else {
  }
  om.core.no_local_merge_pending_state.call(null, this$);
  return om.core.update_refs.call(null, this$);
}, new cljs.core.Keyword(null, "componentDidUpdate", "componentDidUpdate", -1983477981), function(prev_props, prev_state) {
  var this$ = this;
  var c = om.core.children.call(null, this$);
  var gstate = om.core.get_gstate.call(null, this$);
  var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, gstate), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null));
  var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$)], null);
  if (function() {
    var G__12538 = c;
    if (G__12538) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12538.om$core$IDidUpdate$;
        }
      }())) {
        return true;
      } else {
        if (!G__12538.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12538);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IDidUpdate, G__12538);
    }
  }()) {
    var state_12555 = this$.state;
    om.core.did_update.call(null, c, om.core.get_props.call(null, {"props":prev_props, "isOmComponent":true}), function() {
      var or__4308__auto__ = (new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    }());
  } else {
  }
  if (cljs.core.truth_((new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923)).cljs$core$IFn$_invoke$arity$1(states))) {
    return cljs.core.swap_BANG_.call(null, gstate, cljs.core.update_in, spath, cljs.core.dissoc, new cljs.core.Keyword(null, "previous-state", "previous-state", 1888227923));
  } else {
    return null;
  }
});
om.core.no_local_descriptor = function om$core$no_local_descriptor(methods$) {
  var x12557 = cljs.core.clj__GT_js.call(null, methods$);
  x12557.om$core$ISetState$ = true;
  x12557.om$core$ISetState$_set_state_BANG_$arity$3 = function(x12557) {
    return function(this$, val, render) {
      var this$__$1 = this;
      var gstate = om.core.get_gstate.call(null, this$__$1);
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)], null);
      cljs.core.swap_BANG_.call(null, om.core.get_gstate.call(null, this$__$1), cljs.core.assoc_in, spath, val);
      if (cljs.core.truth_(function() {
        var and__4296__auto__ = !(gstate == null);
        if (and__4296__auto__) {
          return render;
        } else {
          return and__4296__auto__;
        }
      }())) {
        return om.core._queue_render_BANG_.call(null, gstate, this$__$1);
      } else {
        return null;
      }
    };
  }(x12557);
  x12557.om$core$ISetState$_set_state_BANG_$arity$4 = function(x12557) {
    return function(this$, ks, val, render) {
      var this$__$1 = this;
      return om.core._set_state_BANG_.call(null, this$__$1, cljs.core.assoc_in.call(null, om.core._get_state.call(null, this$__$1), ks, val), render);
    };
  }(x12557);
  x12557.om$core$IGetRenderState$ = true;
  x12557.om$core$IGetRenderState$_get_render_state$arity$1 = function(x12557) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1), new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)], null);
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
    };
  }(x12557);
  x12557.om$core$IGetRenderState$_get_render_state$arity$2 = function(x12557) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_render_state.call(null, this$__$1), ks);
    };
  }(x12557);
  x12557.om$core$IGetState$ = true;
  x12557.om$core$IGetState$_get_state$arity$1 = function(x12557) {
    return function(this$) {
      var this$__$1 = this;
      var spath = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state-map", "state-map", -1313872128), om.core.react_id.call(null, this$__$1)], null);
      var states = cljs.core.get_in.call(null, cljs.core.deref.call(null, om.core.get_gstate.call(null, this$__$1)), spath);
      var or__4308__auto__ = (new cljs.core.Keyword(null, "pending-state", "pending-state", 1525896973)).cljs$core$IFn$_invoke$arity$1(states);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return (new cljs.core.Keyword(null, "render-state", "render-state", 2053902270)).cljs$core$IFn$_invoke$arity$1(states);
      }
    };
  }(x12557);
  x12557.om$core$IGetState$_get_state$arity$2 = function(x12557) {
    return function(this$, ks) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, om.core._get_state.call(null, this$__$1), ks);
    };
  }(x12557);
  return x12557;
};
om.core.valid_QMARK_ = function om$core$valid_QMARK_(x) {
  if (function() {
    var G__12559 = x;
    if (G__12559) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12559.om$core$ICursor$;
        }
      }())) {
        return true;
      } else {
        if (!G__12559.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12559);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICursor, G__12559);
    }
  }()) {
    return !cljs.core.keyword_identical_QMARK_.call(null, cljs.core.deref.call(null, x), new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
  } else {
    return true;
  }
};
om.core.MapCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2163640079;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.call(null, this$__$1, k, null);
};
om.core.MapCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var v = cljs.core._lookup.call(null, self__.value, k, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275));
  if (!cljs.core._EQ_.call(null, v, new cljs.core.Keyword("om.core", "not-found", "om.core/not-found", 1869894275))) {
    return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k));
  } else {
    return not_found;
  }
};
om.core.MapCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.MapCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.MapCursor.prototype.om$core$ICursor$ = true;
om.core.MapCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.MapCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.MapCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(self__.value, self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.MapCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.MapCursor.prototype.om$core$IValue$ = true;
om.core.MapCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.MapCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$IMap$_dissoc$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._dissoc.call(null, self__.value, k), self__.state, self__.path);
};
om.core.MapCursor.prototype.om$core$ITransact$ = true;
om.core.MapCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.MapCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(_, k, v) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._assoc.call(null, self__.value, k, v), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(p__12561) {
        var vec__12562 = p__12561;
        var k = cljs.core.nth.call(null, vec__12562, 0, null);
        var v = cljs.core.nth.call(null, vec__12562, 1, null);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, k))], null);
      };
    }(this$__$1), self__.value);
  } else {
    return null;
  }
};
om.core.MapCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.MapCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.MapCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.MapCursor.prototype.call = function() {
  var G__12563 = null;
  var G__12563__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__12563__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__12563 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12563__2.call(this, self__, k);
      case 3:
        return G__12563__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12563.cljs$core$IFn$_invoke$arity$2 = G__12563__2;
  G__12563.cljs$core$IFn$_invoke$arity$3 = G__12563__3;
  return G__12563;
}();
om.core.MapCursor.prototype.apply = function(self__, args12560) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12560)));
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.MapCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.MapCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.MapCursor.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null)], null);
};
om.core.MapCursor.cljs$lang$type = true;
om.core.MapCursor.cljs$lang$ctorStr = "om.core/MapCursor";
om.core.MapCursor.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write.call(null, writer__4888__auto__, "om.core/MapCursor");
};
om.core.__GT_MapCursor = function om$core$__GT_MapCursor(value, state, path) {
  return new om.core.MapCursor(value, state, path);
};
om.core.IndexedCursor = function(value, state, path) {
  this.value = value;
  this.state = state;
  this.path = path;
  this.cljs$lang$protocol_mask$partition0$ = 2180424479;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, null);
};
om.core.IndexedCursor.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, n, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._kv_reduce.call(null, self__.value, f, init);
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, n) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n), self__.state, cljs.core.conj.call(null, self__.path, n));
};
om.core.IndexedCursor.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, n, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (n < cljs.core._count.call(null, self__.value)) {
    return om.core._derive.call(null, this$__$1, cljs.core._nth.call(null, self__.value, n, not_found), self__.state, cljs.core.conj.call(null, self__.path, n));
  } else {
    return not_found;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._pr_writer.call(null, self__.value, writer, opts);
};
om.core.IndexedCursor.prototype.om$core$ICursor$ = true;
om.core.IndexedCursor.prototype.om$core$ICursor$_path$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.path;
};
om.core.IndexedCursor.prototype.om$core$ICursor$_state$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
om.core.IndexedCursor.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.meta.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(self__.value, self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._count.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._peek.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._pop.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash.call(null, self__.value);
};
om.core.IndexedCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
    return cljs.core._EQ_.call(null, self__.value, om.core._value.call(null, other));
  } else {
    return cljs.core._EQ_.call(null, self__.value, other);
  }
};
om.core.IndexedCursor.prototype.om$core$IValue$ = true;
om.core.IndexedCursor.prototype.om$core$IValue$_value$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
om.core.IndexedCursor.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.empty.call(null, self__.value), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.om$core$ITransact$ = true;
om.core.IndexedCursor.prototype.om$core$ITransact$_transact_BANG_$arity$4 = function(this$, korks, f, tag) {
  var self__ = this;
  var this$__$1 = this;
  return om.core.transact_STAR_.call(null, self__.state, this$__$1, korks, f, tag);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(_, k) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core._contains_key_QMARK_.call(null, self__.value, k);
};
om.core.IndexedCursor.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, n, v) {
  var self__ = this;
  var this$__$1 = this;
  return om.core._derive.call(null, this$__$1, cljs.core._assoc_n.call(null, self__.value, n, v), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.count.call(null, self__.value) > 0) {
    return cljs.core.map.call(null, function(this$__$1) {
      return function(v, i) {
        return om.core._derive.call(null, this$__$1, v, self__.state, cljs.core.conj.call(null, self__.path, i));
      };
    }(this$__$1), self__.value, cljs.core.range.call(null));
  } else {
    return null;
  }
};
om.core.IndexedCursor.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core.with_meta.call(null, self__.value, new_meta), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.cljs$core$ICollection$_conj$arity$2 = function(_, o) {
  var self__ = this;
  var ___$1 = this;
  return new om.core.IndexedCursor(cljs.core._conj.call(null, self__.value, o), self__.state, self__.path);
};
om.core.IndexedCursor.prototype.call = function() {
  var G__12565 = null;
  var G__12565__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k);
  };
  var G__12565__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._lookup.call(null, this$, k, not_found);
  };
  G__12565 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12565__2.call(this, self__, k);
      case 3:
        return G__12565__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12565.cljs$core$IFn$_invoke$arity$2 = G__12565__2;
  G__12565.cljs$core$IFn$_invoke$arity$3 = G__12565__3;
  return G__12565;
}();
om.core.IndexedCursor.prototype.apply = function(self__, args12564) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args12564)));
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k);
};
om.core.IndexedCursor.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._lookup.call(null, this$, k, not_found);
};
om.core.IndexedCursor.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, self__.state), self__.path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
};
om.core.IndexedCursor.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "path", "path", 1452340359, null)], null);
};
om.core.IndexedCursor.cljs$lang$type = true;
om.core.IndexedCursor.cljs$lang$ctorStr = "om.core/IndexedCursor";
om.core.IndexedCursor.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write.call(null, writer__4888__auto__, "om.core/IndexedCursor");
};
om.core.__GT_IndexedCursor = function om$core$__GT_IndexedCursor(value, state, path) {
  return new om.core.IndexedCursor(value, state, path);
};
om.core.to_cursor_STAR_ = function om$core$to_cursor_STAR_(val, state, path) {
  var x12567 = cljs.core.clone.call(null, val);
  x12567.cljs$core$IDeref$ = true;
  x12567.cljs$core$IDeref$_deref$arity$1 = function(x12567) {
    return function(this$) {
      var this$__$1 = this;
      return cljs.core.get_in.call(null, cljs.core.deref.call(null, state), path, new cljs.core.Keyword("om.core", "invalid", "om.core/invalid", 1948827993));
    };
  }(x12567);
  x12567.om$core$ICursor$ = true;
  x12567.om$core$ICursor$_path$arity$1 = function(x12567) {
    return function(_) {
      var ___$1 = this;
      return path;
    };
  }(x12567);
  x12567.om$core$ICursor$_state$arity$1 = function(x12567) {
    return function(_) {
      var ___$1 = this;
      return state;
    };
  }(x12567);
  x12567.om$core$ITransact$ = true;
  x12567.om$core$ITransact$_transact_BANG_$arity$4 = function(x12567) {
    return function(this$, korks, f, tag) {
      var this$__$1 = this;
      return om.core.transact_STAR_.call(null, state, this$__$1, korks, f, tag);
    };
  }(x12567);
  x12567.cljs$core$IEquiv$ = true;
  x12567.cljs$core$IEquiv$_equiv$arity$2 = function(x12567) {
    return function(_, other) {
      var ___$1 = this;
      if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, other))) {
        return cljs.core._EQ_.call(null, val, om.core._value.call(null, other));
      } else {
        return cljs.core._EQ_.call(null, val, other);
      }
    };
  }(x12567);
  return x12567;
};
om.core.to_cursor = function om$core$to_cursor() {
  var G__12569 = arguments.length;
  switch(G__12569) {
    case 1:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.to_cursor.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$1 = function(val) {
  return om.core.to_cursor.call(null, val, null, cljs.core.PersistentVector.EMPTY);
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$2 = function(val, state) {
  return om.core.to_cursor.call(null, val, state, cljs.core.PersistentVector.EMPTY);
};
om.core.to_cursor.cljs$core$IFn$_invoke$arity$3 = function(val, state, path) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, val))) {
    return val;
  } else {
    if (function() {
      var G__12570 = val;
      if (G__12570) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__12570.om$core$IToCursor$;
          }
        }())) {
          return true;
        } else {
          if (!G__12570.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__12570);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IToCursor, G__12570);
      }
    }()) {
      return om.core._to_cursor.call(null, val, state, path);
    } else {
      if (cljs.core.indexed_QMARK_.call(null, val)) {
        return new om.core.IndexedCursor(val, state, path);
      } else {
        if (cljs.core.map_QMARK_.call(null, val)) {
          return new om.core.MapCursor(val, state, path);
        } else {
          if (function() {
            var G__12571 = val;
            if (G__12571) {
              var bit__4982__auto__ = G__12571.cljs$lang$protocol_mask$partition1$ & 8192;
              if (bit__4982__auto__ || G__12571.cljs$core$ICloneable$) {
                return true;
              } else {
                if (!G__12571.cljs$lang$protocol_mask$partition1$) {
                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__12571);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICloneable, G__12571);
            }
          }()) {
            return om.core.to_cursor_STAR_.call(null, val, state, path);
          } else {
            return val;
          }
        }
      }
    }
  }
};
om.core.to_cursor.cljs$lang$maxFixedArity = 3;
om.core.notify_STAR_ = function om$core$notify_STAR_(cursor, tx_data) {
  var state = om.core._state.call(null, cursor);
  return om.core._notify_BANG_.call(null, state, tx_data, om.core.to_cursor.call(null, cljs.core.deref.call(null, state), state));
};
om.core.root_cursor = function om$core$root_cursor(atom) {
  if (function() {
    var G__12574 = atom;
    if (G__12574) {
      var bit__4982__auto__ = G__12574.cljs$lang$protocol_mask$partition0$ & 32768;
      if (bit__4982__auto__ || G__12574.cljs$core$IDeref$) {
        return true;
      } else {
        if (!G__12574.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12574);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, G__12574);
    }
  }()) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IDeref", "IDeref", 1738423197, null), new cljs.core.Symbol(null, "atom", "atom", 1243487874, null))))].join(""));
  }
  return om.core.to_cursor.call(null, cljs.core.deref.call(null, atom), atom, cljs.core.PersistentVector.EMPTY);
};
om.core._refs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.ref_sub_cursor = function om$core$ref_sub_cursor(x, parent) {
  var x12576 = cljs.core.clone.call(null, x);
  x12576.cljs$core$ICloneable$ = true;
  x12576.cljs$core$ICloneable$_clone$arity$1 = function(x12576) {
    return function(this$) {
      var this$__$1 = this;
      return om$core$ref_sub_cursor.call(null, cljs.core.clone.call(null, x), parent);
    };
  }(x12576);
  x12576.om$core$IAdapt$ = true;
  x12576.om$core$IAdapt$_adapt$arity$2 = function(x12576) {
    return function(this$, other) {
      var this$__$1 = this;
      return om$core$ref_sub_cursor.call(null, om.core.adapt.call(null, x, other), parent);
    };
  }(x12576);
  x12576.om$core$ICursorDerive$ = true;
  x12576.om$core$ICursorDerive$_derive$arity$4 = function(x12576) {
    return function(this$, derived, state, path) {
      var this$__$1 = this;
      var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path);
      if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_))) {
        return om.core.adapt.call(null, this$__$1, cursor_SINGLEQUOTE_);
      } else {
        return cursor_SINGLEQUOTE_;
      }
    };
  }(x12576);
  x12576.om$core$ITransact$ = true;
  x12576.om$core$ITransact$_transact_BANG_$arity$4 = function(x12576) {
    return function(cursor, korks, f, tag) {
      var cursor__$1 = this;
      om.core.commit_BANG_.call(null, cursor__$1, korks, f);
      return om.core._refresh_deps_BANG_.call(null, parent);
    };
  }(x12576);
  return x12576;
};
om.core.ref_cursor = function om$core$ref_cursor(cursor) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (function() {
    var G__12583 = cursor;
    if (G__12583) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12583.om$core$IOmRef$;
        }
      }())) {
        return true;
      } else {
        if (!G__12583.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__12583);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IOmRef, G__12583);
    }
  }()) {
    return cursor;
  } else {
    var path = om.core.path.call(null, cursor);
    var storage = cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null), cljs.core.fnil.call(null, cljs.core.identity, cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY))), path);
    var x12584 = cljs.core.clone.call(null, cursor);
    x12584.om$core$ICursorDerive$ = true;
    x12584.om$core$ICursorDerive$_derive$arity$4 = function(x12584, path, storage) {
      return function(this$, derived, state, path__$1) {
        var this$__$1 = this;
        var cursor_SINGLEQUOTE_ = om.core.to_cursor.call(null, derived, state, path__$1);
        if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor_SINGLEQUOTE_))) {
          return om.core.ref_sub_cursor.call(null, cursor_SINGLEQUOTE_, this$__$1);
        } else {
          return cursor_SINGLEQUOTE_;
        }
      };
    }(x12584, path, storage);
    x12584.om$core$IOmRef$ = true;
    x12584.om$core$IOmRef$_add_dep_BANG_$arity$2 = function(x12584, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, storage, cljs.core.assoc, om.core.id.call(null, c), c);
      };
    }(x12584, path, storage);
    x12584.om$core$IOmRef$_remove_dep_BANG_$arity$2 = function(x12584, path, storage) {
      return function(_, c) {
        var ___$1 = this;
        var m = cljs.core.swap_BANG_.call(null, storage, cljs.core.dissoc, om.core.id.call(null, c));
        if (cljs.core.count.call(null, m) === 0) {
          return cljs.core.swap_BANG_.call(null, om.core._refs, cljs.core.dissoc, path);
        } else {
          return null;
        }
      };
    }(x12584, path, storage);
    x12584.om$core$IOmRef$_refresh_deps_BANG_$arity$1 = function(x12584, path, storage) {
      return function(_) {
        var ___$1 = this;
        var seq__12585 = cljs.core.seq.call(null, cljs.core.vals.call(null, cljs.core.deref.call(null, storage)));
        var chunk__12586 = null;
        var count__12587 = 0;
        var i__12588 = 0;
        while (true) {
          if (i__12588 < count__12587) {
            var c = cljs.core._nth.call(null, chunk__12586, i__12588);
            om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
            var G__12589 = seq__12585;
            var G__12590 = chunk__12586;
            var G__12591 = count__12587;
            var G__12592 = i__12588 + 1;
            seq__12585 = G__12589;
            chunk__12586 = G__12590;
            count__12587 = G__12591;
            i__12588 = G__12592;
            continue;
          } else {
            var temp__4425__auto__ = cljs.core.seq.call(null, seq__12585);
            if (temp__4425__auto__) {
              var seq__12585__$1 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12585__$1)) {
                var c__5093__auto__ = cljs.core.chunk_first.call(null, seq__12585__$1);
                var G__12593 = cljs.core.chunk_rest.call(null, seq__12585__$1);
                var G__12594 = c__5093__auto__;
                var G__12595 = cljs.core.count.call(null, c__5093__auto__);
                var G__12596 = 0;
                seq__12585 = G__12593;
                chunk__12586 = G__12594;
                count__12587 = G__12595;
                i__12588 = G__12596;
                continue;
              } else {
                var c = cljs.core.first.call(null, seq__12585__$1);
                om.core._queue_render_BANG_.call(null, om.core.state.call(null, cursor), c);
                var G__12597 = cljs.core.next.call(null, seq__12585__$1);
                var G__12598 = null;
                var G__12599 = 0;
                var G__12600 = 0;
                seq__12585 = G__12597;
                chunk__12586 = G__12598;
                count__12587 = G__12599;
                i__12588 = G__12600;
                continue;
              }
            } else {
              return null;
            }
          }
          break;
        }
      };
    }(x12584, path, storage);
    x12584.om$core$IOmRef$_get_deps$arity$1 = function(x12584, path, storage) {
      return function(_) {
        var ___$1 = this;
        return cljs.core.deref.call(null, storage);
      };
    }(x12584, path, storage);
    x12584.om$core$ITransact$ = true;
    x12584.om$core$ITransact$_transact_BANG_$arity$4 = function(x12584, path, storage) {
      return function(cursor__$1, korks, f, tag) {
        var cursor__$2 = this;
        om.core.commit_BANG_.call(null, cursor__$2, korks, f);
        return om.core._refresh_deps_BANG_.call(null, cursor__$2);
      };
    }(x12584, path, storage);
    return x12584;
  }
};
om.core.add_ref_to_component_BANG_ = function om$core$add_ref_to_component_BANG_(c, ref) {
  var state = c.state;
  var refs = function() {
    var or__4308__auto__ = state["__om_refs"];
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.PersistentHashSet.EMPTY;
    }
  }();
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return null;
  } else {
    return state["__om_refs"] = cljs.core.conj.call(null, refs, ref);
  }
};
om.core.remove_ref_from_component_BANG_ = function om$core$remove_ref_from_component_BANG_(c, ref) {
  var state = c.state;
  var refs = state["__om_refs"];
  if (cljs.core.contains_QMARK_.call(null, refs, ref)) {
    return state["__om_refs"] = cljs.core.disj.call(null, refs, ref);
  } else {
    return null;
  }
};
om.core.observe = function om$core$observe(c, ref) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  om.core.add_ref_to_component_BANG_.call(null, c, ref);
  om.core._add_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.unobserve = function om$core$unobserve(c, ref) {
  om.core.remove_ref_from_component_BANG_.call(null, c, ref);
  om.core._remove_dep_BANG_.call(null, ref, c);
  return ref;
};
om.core.refresh_queued = false;
om.core.refresh_set = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
om.core.get_renderT = function om$core$get_renderT(state) {
  var or__4308__auto__ = state.om$render$T;
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return 0;
  }
};
om.core.render_all = function om$core$render_all() {
  var G__12602 = arguments.length;
  switch(G__12602) {
    case 0:
      return om.core.render_all.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return om.core.render_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.render_all.cljs$core$IFn$_invoke$arity$0 = function() {
  return om.core.render_all.call(null, null);
};
om.core.render_all.cljs$core$IFn$_invoke$arity$1 = function(state) {
  om.core.refresh_queued = false;
  var seq__12603_12608 = cljs.core.seq.call(null, cljs.core.deref.call(null, om.core.refresh_set));
  var chunk__12604_12609 = null;
  var count__12605_12610 = 0;
  var i__12606_12611 = 0;
  while (true) {
    if (i__12606_12611 < count__12605_12610) {
      var f_12612 = cljs.core._nth.call(null, chunk__12604_12609, i__12606_12611);
      f_12612.call(null);
      var G__12613 = seq__12603_12608;
      var G__12614 = chunk__12604_12609;
      var G__12615 = count__12605_12610;
      var G__12616 = i__12606_12611 + 1;
      seq__12603_12608 = G__12613;
      chunk__12604_12609 = G__12614;
      count__12605_12610 = G__12615;
      i__12606_12611 = G__12616;
      continue;
    } else {
      var temp__4425__auto___12617 = cljs.core.seq.call(null, seq__12603_12608);
      if (temp__4425__auto___12617) {
        var seq__12603_12618__$1 = temp__4425__auto___12617;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__12603_12618__$1)) {
          var c__5093__auto___12619 = cljs.core.chunk_first.call(null, seq__12603_12618__$1);
          var G__12620 = cljs.core.chunk_rest.call(null, seq__12603_12618__$1);
          var G__12621 = c__5093__auto___12619;
          var G__12622 = cljs.core.count.call(null, c__5093__auto___12619);
          var G__12623 = 0;
          seq__12603_12608 = G__12620;
          chunk__12604_12609 = G__12621;
          count__12605_12610 = G__12622;
          i__12606_12611 = G__12623;
          continue;
        } else {
          var f_12624 = cljs.core.first.call(null, seq__12603_12618__$1);
          f_12624.call(null);
          var G__12625 = cljs.core.next.call(null, seq__12603_12618__$1);
          var G__12626 = null;
          var G__12627 = 0;
          var G__12628 = 0;
          seq__12603_12608 = G__12625;
          chunk__12604_12609 = G__12626;
          count__12605_12610 = G__12627;
          i__12606_12611 = G__12628;
          continue;
        }
      } else {
      }
    }
    break;
  }
  if (state == null) {
    return null;
  } else {
    return state.om$render$T = om.core.get_renderT.call(null, state) + 1;
  }
};
om.core.render_all.cljs$lang$maxFixedArity = 1;
om.core.roots = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
om.core.valid_component_QMARK_ = function om$core$valid_component_QMARK_(x, f) {
  if (function() {
    var or__4308__auto__ = function() {
      var G__12635 = x;
      if (G__12635) {
        var bit__4982__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__4308__auto__ = bit__4982__auto__;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return G__12635.om$core$IRender$;
          }
        }())) {
          return true;
        } else {
          if (!G__12635.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12635);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRender, G__12635);
      }
    }();
    if (or__4308__auto__) {
      return or__4308__auto__;
    } else {
      var or__4308__auto____$1 = function() {
        var G__12637 = x;
        if (G__12637) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto____$1 = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto____$1)) {
              return or__4308__auto____$1;
            } else {
              return G__12637.om$core$IRenderProps$;
            }
          }())) {
            return true;
          } else {
            if (!G__12637.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__12637);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderProps, G__12637);
        }
      }();
      if (or__4308__auto____$1) {
        return or__4308__auto____$1;
      } else {
        var G__12638 = x;
        if (G__12638) {
          var bit__4982__auto__ = null;
          if (cljs.core.truth_(function() {
            var or__4308__auto____$2 = bit__4982__auto__;
            if (cljs.core.truth_(or__4308__auto____$2)) {
              return or__4308__auto____$2;
            } else {
              return G__12638.om$core$IRenderState$;
            }
          }())) {
            return true;
          } else {
            if (!G__12638.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12638);
            } else {
              return false;
            }
          }
        } else {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRenderState, G__12638);
        }
      }
    }
  }()) {
    return null;
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid Om component fn, "), cljs.core.str(f.name), cljs.core.str(" does not return valid instance")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRender", "IRender", 590822196, null), new cljs.core.Symbol(null, 
    "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderProps", "IRenderProps", 2115139472, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)), cljs.core.list(new cljs.core.Symbol(null, "satisfies?", "satisfies?", -433227199, null), new cljs.core.Symbol(null, "IRenderState", "IRenderState", -897673898, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))))].join(""));
  }
};
om.core.valid_opts_QMARK_ = function om$core$valid_opts_QMARK_(m) {
  return cljs.core.every_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 11, [new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018), null, new cljs.core.Keyword(null, "fn", "fn", -1175266204), null, new cljs.core.Keyword(null, "instrument", "instrument", -960698844), null, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348), null, new cljs.core.Keyword(null, "key", "key", -1516042587), null, new cljs.core.Keyword(null, "init-state", 
  "init-state", 1450863212), null, new cljs.core.Keyword(null, "state", "state", -1988618099), null, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479), null, new cljs.core.Keyword(null, "opts", "opts", 155075701), null, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), null, new cljs.core.Keyword(null, "shared", "shared", -384145993), null], null), null), cljs.core.keys.call(null, m));
};
om.core.id = function om$core$id(owner) {
  return owner.state["__om_id"];
};
om.core.get_descriptor = function om$core$get_descriptor() {
  var G__12640 = arguments.length;
  switch(G__12640) {
    case 1:
      return om.core.get_descriptor.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_descriptor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_descriptor.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return om.core.get_descriptor.call(null, f, null);
};
om.core.get_descriptor.cljs$core$IFn$_invoke$arity$2 = function(f, descriptor) {
  if (f["om$descriptor"] == null) {
    f["om$descriptor"] = React.createFactory(React.createClass(function() {
      var or__4308__auto__ = descriptor;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = om.core._STAR_descriptor_STAR_;
        if (cljs.core.truth_(or__4308__auto____$1)) {
          return or__4308__auto____$1;
        } else {
          return om.core.pure_descriptor;
        }
      }
    }()));
  } else {
  }
  return f["om$descriptor"];
};
om.core.get_descriptor.cljs$lang$maxFixedArity = 2;
om.core.getf = function om$core$getf() {
  var G__12643 = arguments.length;
  switch(G__12643) {
    case 2:
      return om.core.getf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.getf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.getf.cljs$core$IFn$_invoke$arity$2 = function(f, cursor) {
  if (f instanceof cljs.core.MultiFn) {
    var dv = f.dispatch_fn.call(null, cursor, null);
    return cljs.core.get_method.call(null, f, dv);
  } else {
    return f;
  }
};
om.core.getf.cljs$core$IFn$_invoke$arity$3 = function(f, cursor, opts) {
  if (f instanceof cljs.core.MultiFn) {
    var dv = f.dispatch_fn.call(null, cursor, null, opts);
    return cljs.core.get_method.call(null, f, dv);
  } else {
    return f;
  }
};
om.core.getf.cljs$lang$maxFixedArity = 3;
om.core.build_STAR_ = function om$core$build_STAR_() {
  var G__12646 = arguments.length;
  switch(G__12646) {
    case 2:
      return om.core.build_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.build_STAR_.cljs$core$IFn$_invoke$arity$2 = function(f, cursor) {
  return om.core.build_STAR_.call(null, f, cursor, null);
};
om.core.build_STAR_.cljs$core$IFn$_invoke$arity$3 = function(f, cursor, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  if (cljs.core.truth_(om.core.valid_opts_QMARK_.call(null, m))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, "build options contains invalid keys, only :key, :key-fn :react-key, ", ":fn, :init-state, :state, and :opts allowed, given ", cljs.core.interpose.call(null, ", ", cljs.core.keys.call(null, m)))), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "valid-opts?", "valid-opts?", 1000038576, null), new cljs.core.Symbol(null, "m", "m", -1021758608, 
    null))))].join(""));
  }
  if (m == null) {
    var shared = om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
    var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor));
    return ctor.call(null, {"__om_cursor":cursor, "__om_shared":shared, "__om_root_key":om.core._STAR_root_key_STAR_, "__om_app_state":om.core._STAR_state_STAR_, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_instrument":om.core._STAR_instrument_STAR_, "children":function(shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor, this$);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(shared, ctor)});
  } else {
    var map__12647 = m;
    var map__12647__$1 = cljs.core.seq_QMARK_.call(null, map__12647) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12647) : map__12647;
    var key = cljs.core.get.call(null, map__12647__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
    var key_fn = cljs.core.get.call(null, map__12647__$1, new cljs.core.Keyword(null, "key-fn", "key-fn", -636154479));
    var state = cljs.core.get.call(null, map__12647__$1, new cljs.core.Keyword(null, "state", "state", -1988618099));
    var init_state = cljs.core.get.call(null, map__12647__$1, new cljs.core.Keyword(null, "init-state", "init-state", 1450863212));
    var opts = cljs.core.get.call(null, map__12647__$1, new cljs.core.Keyword(null, "opts", "opts", 155075701));
    var dataf = cljs.core.get.call(null, m, new cljs.core.Keyword(null, "fn", "fn", -1175266204));
    var cursor_SINGLEQUOTE_ = !(dataf == null) ? function() {
      var temp__4423__auto__ = (new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var i = temp__4423__auto__;
        return dataf.call(null, cursor, i);
      } else {
        return dataf.call(null, cursor);
      }
    }() : cursor;
    var rkey = !(key == null) ? cljs.core.get.call(null, cursor_SINGLEQUOTE_, key) : !(key_fn == null) ? key_fn.call(null, cursor_SINGLEQUOTE_) : cljs.core.get.call(null, m, new cljs.core.Keyword(null, "react-key", "react-key", 1337881348));
    var shared = function() {
      var or__4308__auto__ = (new cljs.core.Keyword(null, "shared", "shared", -384145993)).cljs$core$IFn$_invoke$arity$1(m);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return om.core.get_shared.call(null, om.core._STAR_parent_STAR_);
      }
    }();
    var ctor = om.core.get_descriptor.call(null, om.core.getf.call(null, f, cursor_SINGLEQUOTE_, opts), (new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018)).cljs$core$IFn$_invoke$arity$1(m));
    return ctor.call(null, {"__om_state":state, "__om_instrument":om.core._STAR_instrument_STAR_, "children":opts == null ? function(map__12647, map__12647__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor_SINGLEQUOTE_, this$);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(map__12647, map__12647__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) : function(map__12647, map__12647__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor) {
      return function(this$) {
        var ret = f.call(null, cursor_SINGLEQUOTE_, this$, opts);
        om.core.valid_component_QMARK_.call(null, ret, f);
        return ret;
      };
    }(map__12647, map__12647__$1, key, key_fn, state, init_state, opts, dataf, cursor_SINGLEQUOTE_, rkey, shared, ctor), "__om_init_state":init_state, "key":function() {
      var or__4308__auto__ = rkey;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return undefined;
      }
    }(), "__om_app_state":om.core._STAR_state_STAR_, "__om_cursor":cursor_SINGLEQUOTE_, "__om_index":(new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434)).cljs$core$IFn$_invoke$arity$1(m), "__om_shared":shared, "__om_descriptor":om.core._STAR_descriptor_STAR_, "__om_root_key":om.core._STAR_root_key_STAR_});
  }
};
om.core.build_STAR_.cljs$lang$maxFixedArity = 3;
om.core.build = function om$core$build() {
  var G__12650 = arguments.length;
  switch(G__12650) {
    case 2:
      return om.core.build.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.build.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return om.core.build.call(null, f, x, null);
};
om.core.build.cljs$core$IFn$_invoke$arity$3 = function(f, x, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  if (!(om.core._STAR_instrument_STAR_ == null)) {
    var ret = om.core._STAR_instrument_STAR_.call(null, f, x, m);
    if (cljs.core._EQ_.call(null, ret, new cljs.core.Keyword("om.core", "pass", "om.core/pass", -1453289268))) {
      return om.core.build_STAR_.call(null, f, x, m);
    } else {
      return ret;
    }
  } else {
    return om.core.build_STAR_.call(null, f, x, m);
  }
};
om.core.build.cljs$lang$maxFixedArity = 3;
om.core.build_all = function om$core$build_all() {
  var G__12653 = arguments.length;
  switch(G__12653) {
    case 2:
      return om.core.build_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.build_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.build_all.cljs$core$IFn$_invoke$arity$2 = function(f, xs) {
  return om.core.build_all.call(null, f, xs, null);
};
om.core.build_all.cljs$core$IFn$_invoke$arity$3 = function(f, xs, m) {
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (m == null || cljs.core.map_QMARK_.call(null, m)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)), cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), new cljs.core.Symbol(null, "m", "m", -1021758608, null)))))].join(""));
  }
  return cljs.core.map.call(null, function(x, i) {
    return om.core.build.call(null, f, x, cljs.core.assoc.call(null, m, new cljs.core.Keyword("om.core", "index", "om.core/index", -1724175434), i));
  }, xs, cljs.core.range.call(null));
};
om.core.build_all.cljs$lang$maxFixedArity = 3;
om.core.setup = function om$core$setup(state, key, tx_listen) {
  if (function() {
    var G__12663 = state;
    if (G__12663) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12663.om$core$INotify$;
        }
      }())) {
        return true;
      } else {
        if (!G__12663.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__12663);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.INotify, G__12663);
    }
  }()) {
  } else {
    var properties_12671 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var listeners_12672 = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var render_queue_12673 = cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY);
    var x12664_12674 = state;
    x12664_12674.om$core$IRootProperties$ = true;
    x12664_12674.om$core$IRootProperties$_set_property_BANG_$arity$4 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(_, id, k, v) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_12671, cljs.core.assoc_in, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null), v);
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRootProperties$_remove_property_BANG_$arity$3 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_12671, cljs.core.dissoc, id, k);
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRootProperties$_remove_properties_BANG_$arity$2 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(_, id) {
        var ___$1 = this;
        return cljs.core.swap_BANG_.call(null, properties_12671, cljs.core.dissoc, id);
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRootProperties$_get_property$arity$3 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(_, id, k) {
        var ___$1 = this;
        return cljs.core.get_in.call(null, cljs.core.deref.call(null, properties_12671), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [id, k], null));
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$INotify$ = true;
    x12664_12674.om$core$INotify$_listen_BANG_$arity$3 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$, key__$1, tx_listen__$1) {
        var this$__$1 = this;
        if (tx_listen__$1 == null) {
        } else {
          cljs.core.swap_BANG_.call(null, listeners_12672, cljs.core.assoc, key__$1, tx_listen__$1);
        }
        return this$__$1;
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$INotify$_unlisten_BANG_$arity$2 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$, key__$1) {
        var this$__$1 = this;
        cljs.core.swap_BANG_.call(null, listeners_12672, cljs.core.dissoc, key__$1);
        return this$__$1;
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$INotify$_notify_BANG_$arity$3 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$, tx_data, root_cursor) {
        var this$__$1 = this;
        var seq__12665_12675 = cljs.core.seq.call(null, cljs.core.deref.call(null, listeners_12672));
        var chunk__12666_12676 = null;
        var count__12667_12677 = 0;
        var i__12668_12678 = 0;
        while (true) {
          if (i__12668_12678 < count__12667_12677) {
            var vec__12669_12679 = cljs.core._nth.call(null, chunk__12666_12676, i__12668_12678);
            var __12680 = cljs.core.nth.call(null, vec__12669_12679, 0, null);
            var f_12681 = cljs.core.nth.call(null, vec__12669_12679, 1, null);
            f_12681.call(null, tx_data, root_cursor);
            var G__12682 = seq__12665_12675;
            var G__12683 = chunk__12666_12676;
            var G__12684 = count__12667_12677;
            var G__12685 = i__12668_12678 + 1;
            seq__12665_12675 = G__12682;
            chunk__12666_12676 = G__12683;
            count__12667_12677 = G__12684;
            i__12668_12678 = G__12685;
            continue;
          } else {
            var temp__4425__auto___12686 = cljs.core.seq.call(null, seq__12665_12675);
            if (temp__4425__auto___12686) {
              var seq__12665_12687__$1 = temp__4425__auto___12686;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12665_12687__$1)) {
                var c__5093__auto___12688 = cljs.core.chunk_first.call(null, seq__12665_12687__$1);
                var G__12689 = cljs.core.chunk_rest.call(null, seq__12665_12687__$1);
                var G__12690 = c__5093__auto___12688;
                var G__12691 = cljs.core.count.call(null, c__5093__auto___12688);
                var G__12692 = 0;
                seq__12665_12675 = G__12689;
                chunk__12666_12676 = G__12690;
                count__12667_12677 = G__12691;
                i__12668_12678 = G__12692;
                continue;
              } else {
                var vec__12670_12693 = cljs.core.first.call(null, seq__12665_12687__$1);
                var __12694 = cljs.core.nth.call(null, vec__12670_12693, 0, null);
                var f_12695 = cljs.core.nth.call(null, vec__12670_12693, 1, null);
                f_12695.call(null, tx_data, root_cursor);
                var G__12696 = cljs.core.next.call(null, seq__12665_12687__$1);
                var G__12697 = null;
                var G__12698 = 0;
                var G__12699 = 0;
                seq__12665_12675 = G__12696;
                chunk__12666_12676 = G__12697;
                count__12667_12677 = G__12698;
                i__12668_12678 = G__12699;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return this$__$1;
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRenderQueue$ = true;
    x12664_12674.om$core$IRenderQueue$_get_queue$arity$1 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.deref.call(null, render_queue_12673);
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRenderQueue$_queue_render_BANG_$arity$2 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$, c) {
        var this$__$1 = this;
        if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, render_queue_12673), c)) {
          return null;
        } else {
          cljs.core.swap_BANG_.call(null, render_queue_12673, cljs.core.conj, c);
          return cljs.core.swap_BANG_.call(null, this$__$1, cljs.core.identity);
        }
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
    x12664_12674.om$core$IRenderQueue$_empty_queue_BANG_$arity$1 = function(x12664_12674, properties_12671, listeners_12672, render_queue_12673) {
      return function(this$) {
        var this$__$1 = this;
        return cljs.core.swap_BANG_.call(null, render_queue_12673, cljs.core.empty);
      };
    }(x12664_12674, properties_12671, listeners_12672, render_queue_12673);
  }
  return om.core._listen_BANG_.call(null, state, key, tx_listen);
};
om.core.tear_down = function om$core$tear_down(state, key) {
  return om.core._unlisten_BANG_.call(null, state, key);
};
om.core.tag_root_key = function om$core$tag_root_key(cursor, root_key) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
    var x12701 = cljs.core.clone.call(null, cursor);
    x12701.cljs$core$ICloneable$ = true;
    x12701.cljs$core$ICloneable$_clone$arity$1 = function(x12701) {
      return function(this$) {
        var this$__$1 = this;
        return om$core$tag_root_key.call(null, cljs.core.clone.call(null, cursor), root_key);
      };
    }(x12701);
    x12701.om$core$IAdapt$ = true;
    x12701.om$core$IAdapt$_adapt$arity$2 = function(x12701) {
      return function(this$, other) {
        var this$__$1 = this;
        return om$core$tag_root_key.call(null, om.core.adapt.call(null, cursor, other), root_key);
      };
    }(x12701);
    x12701.om$core$IRootKey$ = true;
    x12701.om$core$IRootKey$_root_key$arity$1 = function(x12701) {
      return function(this$) {
        var this$__$1 = this;
        return root_key;
      };
    }(x12701);
    return x12701;
  } else {
    return cursor;
  }
};
om.core.root = function om$core$root(f, value, p__12702) {
  var map__12765 = p__12702;
  var map__12765__$1 = cljs.core.seq_QMARK_.call(null, map__12765) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12765) : map__12765;
  var options = map__12765__$1;
  var target = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "target", "target", 253001721));
  var tx_listen = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367));
  var path = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "path", "path", -188191168));
  var instrument = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "instrument", "instrument", -960698844));
  var descriptor = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "descriptor", "descriptor", 76122018));
  var adapt = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "adapt", "adapt", -1817022327));
  var raf = cljs.core.get.call(null, map__12765__$1, new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("First argument must be a function"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  if (!(target == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("No target specified to om.core/root"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null)))))].join(""));
  }
  var roots_SINGLEQUOTE__12827 = cljs.core.deref.call(null, om.core.roots);
  if (cljs.core.contains_QMARK_.call(null, roots_SINGLEQUOTE__12827, target)) {
    cljs.core.get.call(null, roots_SINGLEQUOTE__12827, target).call(null);
  } else {
  }
  var watch_key = cljs.core.gensym.call(null);
  var state = function() {
    var G__12766 = value;
    if (G__12766) {
      var bit__4982__auto__ = G__12766.cljs$lang$protocol_mask$partition1$ & 16384;
      if (bit__4982__auto__ || G__12766.cljs$core$IAtom$) {
        return true;
      } else {
        if (!G__12766.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__12766);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAtom, G__12766);
    }
  }() ? value : cljs.core.atom.call(null, value);
  var state__$1 = om.core.setup.call(null, state, watch_key, tx_listen);
  var adapt__$1 = function() {
    var or__4308__auto__ = adapt;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var m = cljs.core.dissoc.call(null, options, new cljs.core.Keyword(null, "target", "target", 253001721), new cljs.core.Keyword(null, "tx-listen", "tx-listen", 119130367), new cljs.core.Keyword(null, "path", "path", -188191168), new cljs.core.Keyword(null, "adapt", "adapt", -1817022327), new cljs.core.Keyword(null, "raf", "raf", -1295410152));
  var ret = cljs.core.atom.call(null, null);
  var rootf = function(watch_key, state, state__$1, adapt__$1, m, ret, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function om$core$root_$_rootf() {
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, om$core$root_$_rootf);
      var value__$1 = cljs.core.deref.call(null, state__$1);
      var cursor = adapt__$1.call(null, om.core.tag_root_key.call(null, path == null ? om.core.to_cursor.call(null, value__$1, state__$1, cljs.core.PersistentVector.EMPTY) : om.core.to_cursor.call(null, cljs.core.get_in.call(null, value__$1, path), state__$1, path), watch_key));
      if (cljs.core.truth_(om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643)))) {
      } else {
        var c_12828 = om.dom.render.call(null, function() {
          var _STAR_descriptor_STAR_12797 = om.core._STAR_descriptor_STAR_;
          var _STAR_instrument_STAR_12798 = om.core._STAR_instrument_STAR_;
          var _STAR_state_STAR_12799 = om.core._STAR_state_STAR_;
          var _STAR_root_key_STAR_12800 = om.core._STAR_root_key_STAR_;
          om.core._STAR_descriptor_STAR_ = descriptor;
          om.core._STAR_instrument_STAR_ = instrument;
          om.core._STAR_state_STAR_ = state__$1;
          om.core._STAR_root_key_STAR_ = watch_key;
          try {
            return om.core.build.call(null, f, cursor, m);
          } finally {
            om.core._STAR_root_key_STAR_ = _STAR_root_key_STAR_12800;
            om.core._STAR_state_STAR_ = _STAR_state_STAR_12799;
            om.core._STAR_instrument_STAR_ = _STAR_instrument_STAR_12798;
            om.core._STAR_descriptor_STAR_ = _STAR_descriptor_STAR_12797;
          }
        }(), target);
        if (cljs.core.deref.call(null, ret) == null) {
          cljs.core.reset_BANG_.call(null, ret, c_12828);
        } else {
        }
      }
      var queue_12829 = om.core._get_queue.call(null, state__$1);
      om.core._empty_queue_BANG_.call(null, state__$1);
      if (cljs.core.empty_QMARK_.call(null, queue_12829)) {
      } else {
        var seq__12801_12830 = cljs.core.seq.call(null, queue_12829);
        var chunk__12802_12831 = null;
        var count__12803_12832 = 0;
        var i__12804_12833 = 0;
        while (true) {
          if (i__12804_12833 < count__12803_12832) {
            var c_12834 = cljs.core._nth.call(null, chunk__12802_12831, i__12804_12833);
            if (cljs.core.truth_(c_12834.isMounted())) {
              var temp__4425__auto___12835 = c_12834.state["__om_next_cursor"];
              if (cljs.core.truth_(temp__4425__auto___12835)) {
                var next_props_12836 = temp__4425__auto___12835;
                c_12834.props["__om_cursor"] = next_props_12836;
                c_12834.state["__om_next_cursor"] = null;
              } else {
              }
              if (cljs.core.truth_(function() {
                var or__4308__auto__ = !function() {
                  var G__12806 = om.core.children.call(null, c_12834);
                  if (G__12806) {
                    var bit__4982__auto__ = null;
                    if (cljs.core.truth_(function() {
                      var or__4308__auto__ = bit__4982__auto__;
                      if (cljs.core.truth_(or__4308__auto__)) {
                        return or__4308__auto__;
                      } else {
                        return G__12806.om$core$ICheckState$;
                      }
                    }())) {
                      return true;
                    } else {
                      if (!G__12806.cljs$lang$protocol_mask$partition$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__12806);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__12806);
                  }
                }();
                if (or__4308__auto__) {
                  return or__4308__auto__;
                } else {
                  return c_12834.shouldComponentUpdate(c_12834.props, c_12834.state);
                }
              }())) {
                c_12834.forceUpdate();
              } else {
              }
            } else {
            }
            var G__12837 = seq__12801_12830;
            var G__12838 = chunk__12802_12831;
            var G__12839 = count__12803_12832;
            var G__12840 = i__12804_12833 + 1;
            seq__12801_12830 = G__12837;
            chunk__12802_12831 = G__12838;
            count__12803_12832 = G__12839;
            i__12804_12833 = G__12840;
            continue;
          } else {
            var temp__4425__auto___12841 = cljs.core.seq.call(null, seq__12801_12830);
            if (temp__4425__auto___12841) {
              var seq__12801_12842__$1 = temp__4425__auto___12841;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12801_12842__$1)) {
                var c__5093__auto___12843 = cljs.core.chunk_first.call(null, seq__12801_12842__$1);
                var G__12844 = cljs.core.chunk_rest.call(null, seq__12801_12842__$1);
                var G__12845 = c__5093__auto___12843;
                var G__12846 = cljs.core.count.call(null, c__5093__auto___12843);
                var G__12847 = 0;
                seq__12801_12830 = G__12844;
                chunk__12802_12831 = G__12845;
                count__12803_12832 = G__12846;
                i__12804_12833 = G__12847;
                continue;
              } else {
                var c_12848 = cljs.core.first.call(null, seq__12801_12842__$1);
                if (cljs.core.truth_(c_12848.isMounted())) {
                  var temp__4425__auto___12849__$1 = c_12848.state["__om_next_cursor"];
                  if (cljs.core.truth_(temp__4425__auto___12849__$1)) {
                    var next_props_12850 = temp__4425__auto___12849__$1;
                    c_12848.props["__om_cursor"] = next_props_12850;
                    c_12848.state["__om_next_cursor"] = null;
                  } else {
                  }
                  if (cljs.core.truth_(function() {
                    var or__4308__auto__ = !function() {
                      var G__12808 = om.core.children.call(null, c_12848);
                      if (G__12808) {
                        var bit__4982__auto__ = null;
                        if (cljs.core.truth_(function() {
                          var or__4308__auto__ = bit__4982__auto__;
                          if (cljs.core.truth_(or__4308__auto__)) {
                            return or__4308__auto__;
                          } else {
                            return G__12808.om$core$ICheckState$;
                          }
                        }())) {
                          return true;
                        } else {
                          if (!G__12808.cljs$lang$protocol_mask$partition$) {
                            return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__12808);
                          } else {
                            return false;
                          }
                        }
                      } else {
                        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ICheckState, G__12808);
                      }
                    }();
                    if (or__4308__auto__) {
                      return or__4308__auto__;
                    } else {
                      return c_12848.shouldComponentUpdate(c_12848.props, c_12848.state);
                    }
                  }())) {
                    c_12848.forceUpdate();
                  } else {
                  }
                } else {
                }
                var G__12851 = cljs.core.next.call(null, seq__12801_12842__$1);
                var G__12852 = null;
                var G__12853 = 0;
                var G__12854 = 0;
                seq__12801_12830 = G__12851;
                chunk__12802_12831 = G__12852;
                count__12803_12832 = G__12853;
                i__12804_12833 = G__12854;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      var _refs_12855 = cljs.core.deref.call(null, om.core._refs);
      if (cljs.core.empty_QMARK_.call(null, _refs_12855)) {
      } else {
        var seq__12809_12856 = cljs.core.seq.call(null, _refs_12855);
        var chunk__12810_12857 = null;
        var count__12811_12858 = 0;
        var i__12812_12859 = 0;
        while (true) {
          if (i__12812_12859 < count__12811_12858) {
            var vec__12813_12860 = cljs.core._nth.call(null, chunk__12810_12857, i__12812_12859);
            var path_12861__$1 = cljs.core.nth.call(null, vec__12813_12860, 0, null);
            var cs_12862 = cljs.core.nth.call(null, vec__12813_12860, 1, null);
            var cs_12863__$1 = cljs.core.deref.call(null, cs_12862);
            var seq__12814_12864 = cljs.core.seq.call(null, cs_12863__$1);
            var chunk__12815_12865 = null;
            var count__12816_12866 = 0;
            var i__12817_12867 = 0;
            while (true) {
              if (i__12817_12867 < count__12816_12866) {
                var vec__12818_12868 = cljs.core._nth.call(null, chunk__12815_12865, i__12817_12867);
                var id_12869 = cljs.core.nth.call(null, vec__12818_12868, 0, null);
                var c_12870 = cljs.core.nth.call(null, vec__12818_12868, 1, null);
                if (cljs.core.truth_(c_12870.shouldComponentUpdate(c_12870.props, c_12870.state))) {
                  c_12870.forceUpdate();
                } else {
                }
                var G__12871 = seq__12814_12864;
                var G__12872 = chunk__12815_12865;
                var G__12873 = count__12816_12866;
                var G__12874 = i__12817_12867 + 1;
                seq__12814_12864 = G__12871;
                chunk__12815_12865 = G__12872;
                count__12816_12866 = G__12873;
                i__12817_12867 = G__12874;
                continue;
              } else {
                var temp__4425__auto___12875 = cljs.core.seq.call(null, seq__12814_12864);
                if (temp__4425__auto___12875) {
                  var seq__12814_12876__$1 = temp__4425__auto___12875;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__12814_12876__$1)) {
                    var c__5093__auto___12877 = cljs.core.chunk_first.call(null, seq__12814_12876__$1);
                    var G__12878 = cljs.core.chunk_rest.call(null, seq__12814_12876__$1);
                    var G__12879 = c__5093__auto___12877;
                    var G__12880 = cljs.core.count.call(null, c__5093__auto___12877);
                    var G__12881 = 0;
                    seq__12814_12864 = G__12878;
                    chunk__12815_12865 = G__12879;
                    count__12816_12866 = G__12880;
                    i__12817_12867 = G__12881;
                    continue;
                  } else {
                    var vec__12819_12882 = cljs.core.first.call(null, seq__12814_12876__$1);
                    var id_12883 = cljs.core.nth.call(null, vec__12819_12882, 0, null);
                    var c_12884 = cljs.core.nth.call(null, vec__12819_12882, 1, null);
                    if (cljs.core.truth_(c_12884.shouldComponentUpdate(c_12884.props, c_12884.state))) {
                      c_12884.forceUpdate();
                    } else {
                    }
                    var G__12885 = cljs.core.next.call(null, seq__12814_12876__$1);
                    var G__12886 = null;
                    var G__12887 = 0;
                    var G__12888 = 0;
                    seq__12814_12864 = G__12885;
                    chunk__12815_12865 = G__12886;
                    count__12816_12866 = G__12887;
                    i__12817_12867 = G__12888;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            var G__12889 = seq__12809_12856;
            var G__12890 = chunk__12810_12857;
            var G__12891 = count__12811_12858;
            var G__12892 = i__12812_12859 + 1;
            seq__12809_12856 = G__12889;
            chunk__12810_12857 = G__12890;
            count__12811_12858 = G__12891;
            i__12812_12859 = G__12892;
            continue;
          } else {
            var temp__4425__auto___12893 = cljs.core.seq.call(null, seq__12809_12856);
            if (temp__4425__auto___12893) {
              var seq__12809_12894__$1 = temp__4425__auto___12893;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__12809_12894__$1)) {
                var c__5093__auto___12895 = cljs.core.chunk_first.call(null, seq__12809_12894__$1);
                var G__12896 = cljs.core.chunk_rest.call(null, seq__12809_12894__$1);
                var G__12897 = c__5093__auto___12895;
                var G__12898 = cljs.core.count.call(null, c__5093__auto___12895);
                var G__12899 = 0;
                seq__12809_12856 = G__12896;
                chunk__12810_12857 = G__12897;
                count__12811_12858 = G__12898;
                i__12812_12859 = G__12899;
                continue;
              } else {
                var vec__12820_12900 = cljs.core.first.call(null, seq__12809_12894__$1);
                var path_12901__$1 = cljs.core.nth.call(null, vec__12820_12900, 0, null);
                var cs_12902 = cljs.core.nth.call(null, vec__12820_12900, 1, null);
                var cs_12903__$1 = cljs.core.deref.call(null, cs_12902);
                var seq__12821_12904 = cljs.core.seq.call(null, cs_12903__$1);
                var chunk__12822_12905 = null;
                var count__12823_12906 = 0;
                var i__12824_12907 = 0;
                while (true) {
                  if (i__12824_12907 < count__12823_12906) {
                    var vec__12825_12908 = cljs.core._nth.call(null, chunk__12822_12905, i__12824_12907);
                    var id_12909 = cljs.core.nth.call(null, vec__12825_12908, 0, null);
                    var c_12910 = cljs.core.nth.call(null, vec__12825_12908, 1, null);
                    if (cljs.core.truth_(c_12910.shouldComponentUpdate(c_12910.props, c_12910.state))) {
                      c_12910.forceUpdate();
                    } else {
                    }
                    var G__12911 = seq__12821_12904;
                    var G__12912 = chunk__12822_12905;
                    var G__12913 = count__12823_12906;
                    var G__12914 = i__12824_12907 + 1;
                    seq__12821_12904 = G__12911;
                    chunk__12822_12905 = G__12912;
                    count__12823_12906 = G__12913;
                    i__12824_12907 = G__12914;
                    continue;
                  } else {
                    var temp__4425__auto___12915__$1 = cljs.core.seq.call(null, seq__12821_12904);
                    if (temp__4425__auto___12915__$1) {
                      var seq__12821_12916__$1 = temp__4425__auto___12915__$1;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__12821_12916__$1)) {
                        var c__5093__auto___12917 = cljs.core.chunk_first.call(null, seq__12821_12916__$1);
                        var G__12918 = cljs.core.chunk_rest.call(null, seq__12821_12916__$1);
                        var G__12919 = c__5093__auto___12917;
                        var G__12920 = cljs.core.count.call(null, c__5093__auto___12917);
                        var G__12921 = 0;
                        seq__12821_12904 = G__12918;
                        chunk__12822_12905 = G__12919;
                        count__12823_12906 = G__12920;
                        i__12824_12907 = G__12921;
                        continue;
                      } else {
                        var vec__12826_12922 = cljs.core.first.call(null, seq__12821_12916__$1);
                        var id_12923 = cljs.core.nth.call(null, vec__12826_12922, 0, null);
                        var c_12924 = cljs.core.nth.call(null, vec__12826_12922, 1, null);
                        if (cljs.core.truth_(c_12924.shouldComponentUpdate(c_12924.props, c_12924.state))) {
                          c_12924.forceUpdate();
                        } else {
                        }
                        var G__12925 = cljs.core.next.call(null, seq__12821_12916__$1);
                        var G__12926 = null;
                        var G__12927 = 0;
                        var G__12928 = 0;
                        seq__12821_12904 = G__12925;
                        chunk__12822_12905 = G__12926;
                        count__12823_12906 = G__12927;
                        i__12824_12907 = G__12928;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                var G__12929 = cljs.core.next.call(null, seq__12809_12894__$1);
                var G__12930 = null;
                var G__12931 = 0;
                var G__12932 = 0;
                seq__12809_12856 = G__12929;
                chunk__12810_12857 = G__12930;
                count__12811_12858 = G__12931;
                i__12812_12859 = G__12932;
                continue;
              }
            } else {
            }
          }
          break;
        }
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), true);
      return cljs.core.deref.call(null, ret);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf);
  cljs.core.add_watch.call(null, state__$1, watch_key, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function(_, ___$1, o, n) {
      if (cljs.core.not.call(null, om.core._get_property.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033))) && !(o === n)) {
        om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "skip-render-root", "skip-render-root", -5219643), false);
      } else {
      }
      om.core._set_property_BANG_.call(null, state__$1, watch_key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), false);
      if (cljs.core.contains_QMARK_.call(null, cljs.core.deref.call(null, om.core.refresh_set), rootf)) {
      } else {
        cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.conj, rootf);
      }
      if (cljs.core.truth_(om.core.refresh_queued)) {
        return null;
      } else {
        om.core.refresh_queued = true;
        if (raf === false || !(typeof requestAnimationFrame !== "undefined")) {
          return setTimeout(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
            return function() {
              return om.core.render_all.call(null, state__$1);
            };
          }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf), 16);
        } else {
          if (cljs.core.fn_QMARK_.call(null, raf)) {
            return raf.call(null);
          } else {
            return requestAnimationFrame(function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
              return function() {
                return om.core.render_all.call(null, state__$1);
              };
            }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
          }
        }
      }
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
  cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.assoc, target, function(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf) {
    return function() {
      om.core._remove_properties_BANG_.call(null, state__$1, watch_key);
      cljs.core.remove_watch.call(null, state__$1, watch_key);
      om.core.tear_down.call(null, state__$1, watch_key);
      cljs.core.swap_BANG_.call(null, om.core.refresh_set, cljs.core.disj, rootf);
      cljs.core.swap_BANG_.call(null, om.core.roots, cljs.core.dissoc, target);
      return React.unmountComponentAtNode(target);
    };
  }(watch_key, state, state__$1, adapt__$1, m, ret, rootf, map__12765, map__12765__$1, options, target, tx_listen, path, instrument, descriptor, adapt, raf));
  return rootf.call(null);
};
om.core.detach_root = function om$core$detach_root(target) {
  if (cljs.core.truth_(goog.dom.isElement(target))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol("gdom", "isElement", "gdom/isElement", 465934354, null), new cljs.core.Symbol(null, "target", "target", 1893533248, null))))].join(""));
  }
  var temp__4425__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, om.core.roots), target);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var f = temp__4425__auto__;
    return f.call(null);
  } else {
    return null;
  }
};
om.core.transactable_QMARK_ = function om$core$transactable_QMARK_(x) {
  var G__12934 = x;
  if (G__12934) {
    var bit__4982__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = bit__4982__auto__;
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return G__12934.om$core$ITransact$;
      }
    }())) {
      return true;
    } else {
      if (!G__12934.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__12934);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, om.core.ITransact, G__12934);
  }
};
om.core.transact_BANG_ = function om$core$transact_BANG_() {
  var G__12936 = arguments.length;
  switch(G__12936) {
    case 2:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$2 = function(cursor, f) {
  return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, f, null);
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$3 = function(cursor, korks, f) {
  return om.core.transact_BANG_.call(null, cursor, korks, f, null);
};
om.core.transact_BANG_.cljs$core$IFn$_invoke$arity$4 = function(cursor, korks, f, tag) {
  if (cljs.core.truth_(om.core.transactable_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "transactable?", "transactable?", 780536292, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._transact_BANG_.call(null, cursor, korks__$1, f, tag);
};
om.core.transact_BANG_.cljs$lang$maxFixedArity = 4;
om.core.update_BANG_ = function om$core$update_BANG_() {
  var G__12939 = arguments.length;
  switch(G__12939) {
    case 2:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return om.core.update_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$2 = function(cursor, v) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, cljs.core.PersistentVector.EMPTY, function(_) {
    return v;
  }, null);
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$3 = function(cursor, korks, v) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
    return v;
  }, null);
};
om.core.update_BANG_.cljs$core$IFn$_invoke$arity$4 = function(cursor, korks, v, tag) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  return om.core.transact_BANG_.call(null, cursor, korks, function(_) {
    return v;
  }, tag);
};
om.core.update_BANG_.cljs$lang$maxFixedArity = 4;
om.core.commit_BANG_ = function om$core$commit_BANG_(cursor, korks, f) {
  if (cljs.core.truth_(om.core.cursor_QMARK_.call(null, cursor))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cursor?", "cursor?", -648342688, null), new cljs.core.Symbol(null, "cursor", "cursor", -1642498285, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  var key = function() {
    var G__12942 = cursor;
    if (G__12942) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12942.om$core$IRootKey$;
        }
      }())) {
        return true;
      } else {
        if (!G__12942.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__12942);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, om.core.IRootKey, G__12942);
    }
  }() ? om.core._root_key.call(null, cursor) : null;
  var app_state = om.core.state.call(null, cursor);
  var korks__$1 = korks == null ? cljs.core.PersistentVector.EMPTY : cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  var cpath = om.core.path.call(null, cursor);
  var rpath = cljs.core.into.call(null, cpath, korks__$1);
  if (cljs.core.truth_(key)) {
    om.core._set_property_BANG_.call(null, app_state, key, new cljs.core.Keyword(null, "ignore", "ignore", -1631542033), true);
  } else {
  }
  if (cljs.core.empty_QMARK_.call(null, rpath)) {
    return cljs.core.swap_BANG_.call(null, app_state, f);
  } else {
    return cljs.core.swap_BANG_.call(null, app_state, cljs.core.update_in, rpath, f);
  }
};
om.core.get_node = function om$core$get_node() {
  var G__12944 = arguments.length;
  switch(G__12944) {
    case 1:
      return om.core.get_node.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_node.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_node.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  return owner.getDOMNode();
};
om.core.get_node.cljs$core$IFn$_invoke$arity$2 = function(owner, name) {
  if (typeof name === "string") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "string?", "string?", -1129175764, null), new cljs.core.Symbol(null, "name", "name", -810760592, null))))].join(""));
  }
  var temp__4425__auto__ = owner.refs;
  if (cljs.core.truth_(temp__4425__auto__)) {
    var refs = temp__4425__auto__;
    return refs[name].getDOMNode();
  } else {
    return null;
  }
};
om.core.get_node.cljs$lang$maxFixedArity = 2;
om.core.mounted_QMARK_ = function om$core$mounted_QMARK_(owner) {
  return owner.isMounted();
};
om.core.set_state_BANG_ = function om$core$set_state_BANG_() {
  var G__12947 = arguments.length;
  switch(G__12947) {
    case 2:
      return om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._set_state_BANG_.call(null, owner, v, true);
};
om.core.set_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._set_state_BANG_.call(null, owner, ks, v, true);
};
om.core.set_state_BANG_.cljs$lang$maxFixedArity = 3;
om.core.set_state_nr_BANG_ = function om$core$set_state_nr_BANG_() {
  var G__12950 = arguments.length;
  switch(G__12950) {
    case 2:
      return om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._set_state_BANG_.call(null, owner, v, false);
};
om.core.set_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, v) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._set_state_BANG_.call(null, owner, ks, v, false);
};
om.core.set_state_nr_BANG_.cljs$lang$maxFixedArity = 3;
om.core.update_state_BANG_ = function om$core$update_state_BANG_() {
  var G__12953 = arguments.length;
  switch(G__12953) {
    case 2:
      return om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
};
om.core.update_state_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
};
om.core.update_state_BANG_.cljs$lang$maxFixedArity = 3;
om.core.update_state_nr_BANG_ = function om$core$update_state_nr_BANG_() {
  var G__12956 = arguments.length;
  switch(G__12956) {
    case 2:
      return om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$2 = function(owner, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_nr_BANG_.call(null, owner, f.call(null, om.core.get_state.call(null, owner)));
};
om.core.update_state_nr_BANG_.cljs$core$IFn$_invoke$arity$3 = function(owner, korks, f) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  if (cljs.core.ifn_QMARK_.call(null, f)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "ifn?", "ifn?", -2106461064, null), new cljs.core.Symbol(null, "f", "f", 43394975, null))))].join(""));
  }
  return om.core.set_state_nr_BANG_.call(null, owner, korks, f.call(null, om.core.get_state.call(null, owner, korks)));
};
om.core.update_state_nr_BANG_.cljs$lang$maxFixedArity = 3;
om.core.refresh_BANG_ = function om$core$refresh_BANG_(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core.update_state_BANG_.call(null, owner, cljs.core.identity);
};
om.core.get_render_state = function om$core$get_render_state() {
  var G__12959 = arguments.length;
  switch(G__12959) {
    case 1:
      return om.core.get_render_state.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return om.core.get_render_state.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
om.core.get_render_state.cljs$core$IFn$_invoke$arity$1 = function(owner) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  return om.core._get_render_state.call(null, owner);
};
om.core.get_render_state.cljs$core$IFn$_invoke$arity$2 = function(owner, korks) {
  if (cljs.core.truth_(om.core.component_QMARK_.call(null, owner))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "component?", "component?", 2048315517, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null))))].join(""));
  }
  var ks = cljs.core.sequential_QMARK_.call(null, korks) ? korks : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [korks], null);
  return om.core._get_render_state.call(null, owner, ks);
};
om.core.get_render_state.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.seq_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.coll_QMARK_.call(null, form)) {
      return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
    } else {
      return outer.call(null, form);
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure$walk$prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__12395) {
    var vec__12396 = p__12395;
    var k = cljs.core.nth.call(null, vec__12396, 0, null);
    var v = cljs.core.nth.call(null, vec__12396, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__12399) {
    var vec__12400 = p__12399;
    var k = cljs.core.nth.call(null, vec__12400, 0, null);
    var v = cljs.core.nth.call(null, vec__12400, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(f) {
    return function(x) {
      if (cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
      } else {
        return x;
      }
    };
  }(f), m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("secretary.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.walk");
secretary.core.IRouteMatches = function() {
  var obj12306 = {};
  return obj12306;
}();
secretary.core.route_matches = function secretary$core$route_matches(this$, route) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.secretary$core$IRouteMatches$route_matches$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteMatches$route_matches$arity$2(this$, route);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = secretary.core.route_matches[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = secretary.core.route_matches["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteMatches.route-matches", this$);
        }
      }
    }().call(null, this$, route);
  }
};
secretary.core.IRouteValue = function() {
  var obj12308 = {};
  return obj12308;
}();
secretary.core.route_value = function secretary$core$route_value(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.secretary$core$IRouteValue$route_value$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.secretary$core$IRouteValue$route_value$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = secretary.core.route_value[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = secretary.core.route_value["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRouteValue.route-value", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.IRenderRoute = function() {
  var obj12310 = {};
  return obj12310;
}();
secretary.core.render_route = function secretary$core$render_route() {
  var G__12312 = arguments.length;
  switch(G__12312) {
    case 1:
      return secretary.core.render_route.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return secretary.core.render_route.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
secretary.core.render_route.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.secretary$core$IRenderRoute$render_route$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.secretary$core$IRenderRoute$render_route$arity$1(this$);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = secretary.core.render_route[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = secretary.core.render_route["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
        }
      }
    }().call(null, this$);
  }
};
secretary.core.render_route.cljs$core$IFn$_invoke$arity$2 = function(this$, params) {
  if (function() {
    var and__4296__auto__ = this$;
    if (and__4296__auto__) {
      return this$.secretary$core$IRenderRoute$render_route$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return this$.secretary$core$IRenderRoute$render_route$arity$2(this$, params);
  } else {
    var x__4944__auto__ = this$ == null ? null : this$;
    return function() {
      var or__4308__auto__ = secretary.core.render_route[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = secretary.core.render_route["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "IRenderRoute.render-route", this$);
        }
      }
    }().call(null, this$, params);
  }
};
secretary.core.render_route.cljs$lang$maxFixedArity = 2;
secretary.core._STAR_config_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), ""], null));
secretary.core.get_config = function secretary$core$get_config(path) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.get_in.call(null, cljs.core.deref.call(null, secretary.core._STAR_config_STAR_), path__$1);
};
secretary.core.set_config_BANG_ = function secretary$core$set_config_BANG_(path, val) {
  var path__$1 = cljs.core.sequential_QMARK_.call(null, path) ? path : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [path], null);
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_config_STAR_, cljs.core.assoc_in, path__$1, val);
};
secretary.core.encode = encodeURIComponent;
if (typeof secretary.core.encode_pair !== "undefined") {
} else {
  secretary.core.encode_pair = function() {
    var method_table__5203__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5204__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5205__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5206__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5207__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "secretary.core", "encode-pair"), function(method_table__5203__auto__, prefer_table__5204__auto__, method_cache__5205__auto__, cached_hierarchy__5206__auto__, hierarchy__5207__auto__) {
      return function(p__12314) {
        var vec__12315 = p__12314;
        var k = cljs.core.nth.call(null, vec__12315, 0, null);
        var v = cljs.core.nth.call(null, vec__12315, 1, null);
        if (cljs.core.sequential_QMARK_.call(null, v) || cljs.core.set_QMARK_.call(null, v)) {
          return new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207);
        } else {
          if (function() {
            var or__4308__auto__ = cljs.core.map_QMARK_.call(null, v);
            if (or__4308__auto__) {
              return or__4308__auto__;
            } else {
              var G__12317 = v;
              if (G__12317) {
                var bit__4982__auto__ = G__12317.cljs$lang$protocol_mask$partition0$ & 67108864;
                if (bit__4982__auto__ || G__12317.cljs$core$IRecord$) {
                  return true;
                } else {
                  if (!G__12317.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__12317);
                  } else {
                    return false;
                  }
                }
              } else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IRecord, G__12317);
              }
            }
          }()) {
            return new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646);
          } else {
            return null;
          }
        }
      };
    }(method_table__5203__auto__, prefer_table__5204__auto__, method_cache__5205__auto__, cached_hierarchy__5206__auto__, hierarchy__5207__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5207__auto__, method_table__5203__auto__, prefer_table__5204__auto__, method_cache__5205__auto__, cached_hierarchy__5206__auto__);
  }();
}
secretary.core.key_index = function secretary$core$key_index() {
  var G__12319 = arguments.length;
  switch(G__12319) {
    case 1:
      return secretary.core.key_index.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return secretary.core.key_index.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(arguments.length)].join(""));;
  }
};
secretary.core.key_index.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("[]")].join("");
};
secretary.core.key_index.cljs$core$IFn$_invoke$arity$2 = function(k, index) {
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("["), cljs.core.str(index), cljs.core.str("]")].join("");
};
secretary.core.key_index.cljs$lang$maxFixedArity = 2;
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "sequential", "secretary.core/sequential", -347187207), function(p__12321) {
  var vec__12322 = p__12321;
  var k = cljs.core.nth.call(null, vec__12322, 0, null);
  var v = cljs.core.nth.call(null, vec__12322, 1, null);
  var encoded = cljs.core.map_indexed.call(null, function(vec__12322, k, v) {
    return function(i, x) {
      var pair = cljs.core.coll_QMARK_.call(null, x) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, i), x], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k), x], null);
      return secretary.core.encode_pair.call(null, pair);
    };
  }(vec__12322, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword("secretary.core", "map", "secretary.core/map", -31086646), function(p__12323) {
  var vec__12324 = p__12323;
  var k = cljs.core.nth.call(null, vec__12324, 0, null);
  var v = cljs.core.nth.call(null, vec__12324, 1, null);
  var encoded = cljs.core.map.call(null, function(vec__12324, k, v) {
    return function(p__12325) {
      var vec__12326 = p__12325;
      var ik = cljs.core.nth.call(null, vec__12326, 0, null);
      var iv = cljs.core.nth.call(null, vec__12326, 1, null);
      return secretary.core.encode_pair.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [secretary.core.key_index.call(null, k, cljs.core.name.call(null, ik)), iv], null));
    };
  }(vec__12324, k, v), v);
  return clojure.string.join.call(null, "\x26", encoded);
});
cljs.core._add_method.call(null, secretary.core.encode_pair, new cljs.core.Keyword(null, "default", "default", -1987822328), function(p__12327) {
  var vec__12328 = p__12327;
  var k = cljs.core.nth.call(null, vec__12328, 0, null);
  var v = cljs.core.nth.call(null, vec__12328, 1, null);
  return [cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str("\x3d"), cljs.core.str(secretary.core.encode.call(null, [cljs.core.str(v)].join("")))].join("");
});
secretary.core.encode_query_params = function secretary$core$encode_query_params(query_params) {
  return clojure.string.join.call(null, "\x26", cljs.core.map.call(null, secretary.core.encode_pair, query_params));
};
secretary.core.encode_uri = function secretary$core$encode_uri(uri) {
  return clojure.string.join.call(null, "/", cljs.core.map.call(null, secretary.core.encode, clojure.string.split.call(null, uri, /\//)));
};
secretary.core.decode = decodeURIComponent;
secretary.core.parse_path = function secretary$core$parse_path(path) {
  var index_re = /\[([^\]]*)\]*/;
  var parts = cljs.core.re_seq.call(null, index_re, path);
  return cljs.core.map.call(null, function(index_re, parts) {
    return function(p__12331) {
      var vec__12332 = p__12331;
      var _ = cljs.core.nth.call(null, vec__12332, 0, null);
      var part = cljs.core.nth.call(null, vec__12332, 1, null);
      if (cljs.core.empty_QMARK_.call(null, part)) {
        return 0;
      } else {
        if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, part))) {
          return parseInt(part);
        } else {
          return part;
        }
      }
    };
  }(index_re, parts), parts);
};
secretary.core.key_parse = function secretary$core$key_parse(k) {
  var re = /([^\[\]]+)((?:\[[^\]]*\])*)?/;
  var vec__12334 = cljs.core.re_matches.call(null, re, k);
  var _ = cljs.core.nth.call(null, vec__12334, 0, null);
  var key = cljs.core.nth.call(null, vec__12334, 1, null);
  var path = cljs.core.nth.call(null, vec__12334, 2, null);
  var parsed_path = cljs.core.truth_(path) ? secretary.core.parse_path.call(null, path) : null;
  return cljs.core.cons.call(null, key, parsed_path);
};
secretary.core.assoc_in_query_params = function secretary$core$assoc_in_query_params(m, path, v) {
  var heads = function(xs) {
    return cljs.core.map_indexed.call(null, function(i, _) {
      return cljs.core.take.call(null, i + 1, xs);
    }, xs);
  };
  var hs = heads.call(null, path);
  var m__$1 = cljs.core.reduce.call(null, function(heads, hs) {
    return function(m__$1, h) {
      if (typeof cljs.core.last.call(null, h) === "number" && !cljs.core.vector_QMARK_.call(null, cljs.core.get_in.call(null, m__$1, cljs.core.butlast.call(null, h)))) {
        return cljs.core.assoc_in.call(null, m__$1, cljs.core.butlast.call(null, h), cljs.core.PersistentVector.EMPTY);
      } else {
        return m__$1;
      }
    };
  }(heads, hs), m, hs);
  if (cljs.core.last.call(null, path) === 0) {
    return cljs.core.update_in.call(null, m__$1, cljs.core.butlast.call(null, path), cljs.core.conj, v);
  } else {
    return cljs.core.assoc_in.call(null, m__$1, path, v);
  }
};
secretary.core.decode_query_params = function secretary$core$decode_query_params(query_string) {
  var parts = clojure.string.split.call(null, query_string, /&/);
  var params = cljs.core.reduce.call(null, function(parts) {
    return function(m, part) {
      var vec__12336 = clojure.string.split.call(null, part, /=/, 2);
      var k = cljs.core.nth.call(null, vec__12336, 0, null);
      var v = cljs.core.nth.call(null, vec__12336, 1, null);
      return secretary.core.assoc_in_query_params.call(null, m, secretary.core.key_parse.call(null, k), secretary.core.decode.call(null, v));
    };
  }(parts), cljs.core.PersistentArrayMap.EMPTY, parts);
  var params__$1 = clojure.walk.keywordize_keys.call(null, params);
  return params__$1;
};
secretary.core.re_matches_STAR_ = function secretary$core$re_matches_STAR_(re, s) {
  var ms = cljs.core.re_matches.call(null, re, s);
  if (cljs.core.truth_(ms)) {
    if (cljs.core.sequential_QMARK_.call(null, ms)) {
      return ms;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ms, ms], null);
    }
  } else {
    return null;
  }
};
secretary.core.re_escape_chars = cljs.core.set.call(null, "\\.*+|?()[]{}$^");
secretary.core.re_escape = function secretary$core$re_escape(s) {
  return cljs.core.reduce.call(null, function(s__$1, c) {
    if (cljs.core.truth_(secretary.core.re_escape_chars.call(null, c))) {
      return [cljs.core.str(s__$1), cljs.core.str("\\"), cljs.core.str(c)].join("");
    } else {
      return [cljs.core.str(s__$1), cljs.core.str(c)].join("");
    }
  }, "", s);
};
secretary.core.lex_STAR_ = function secretary$core$lex_STAR_(s, clauses) {
  return cljs.core.some.call(null, function(p__12340) {
    var vec__12341 = p__12340;
    var re = cljs.core.nth.call(null, vec__12341, 0, null);
    var action = cljs.core.nth.call(null, vec__12341, 1, null);
    var temp__4425__auto__ = cljs.core.re_find.call(null, re, s);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__12342 = temp__4425__auto__;
      var m = cljs.core.nth.call(null, vec__12342, 0, null);
      var c = cljs.core.nth.call(null, vec__12342, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, cljs.core.count.call(null, m)), action.call(null, c)], null);
    } else {
      return null;
    }
  }, clauses);
};
secretary.core.lex_route = function secretary$core$lex_route(s, clauses) {
  var s__$1 = s;
  var pattern = "";
  var params = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.seq.call(null, s__$1)) {
      var vec__12345 = secretary.core.lex_STAR_.call(null, s__$1, clauses);
      var s__$2 = cljs.core.nth.call(null, vec__12345, 0, null);
      var vec__12346 = cljs.core.nth.call(null, vec__12345, 1, null);
      var r = cljs.core.nth.call(null, vec__12346, 0, null);
      var p = cljs.core.nth.call(null, vec__12346, 1, null);
      var G__12347 = s__$2;
      var G__12348 = [cljs.core.str(pattern), cljs.core.str(r)].join("");
      var G__12349 = cljs.core.conj.call(null, params, p);
      s__$1 = G__12347;
      pattern = G__12348;
      params = G__12349;
      continue;
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(pattern), cljs.core.str("$")].join("")), cljs.core.remove.call(null, cljs.core.nil_QMARK_, params)], null);
    }
    break;
  }
};
secretary.core.compile_route = function secretary$core$compile_route(orig_route) {
  var clauses = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\*([^\s.:*\/]*)/, function(v) {
    var r = "(.*?)";
    var p = cljs.core.seq.call(null, v) ? cljs.core.keyword.call(null, v) : new cljs.core.Keyword(null, "*", "*", -1294732318);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^\:([^\s.:*\/]+)/, function(v) {
    var r = "([^,;?/]+)";
    var p = cljs.core.keyword.call(null, v);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [r, p], null);
  }], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [/^([^:*]+)/, function(v) {
    var r = secretary.core.re_escape.call(null, v);
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null);
  }], null)], null);
  var vec__12355 = secretary.core.lex_route.call(null, orig_route, clauses);
  var re = cljs.core.nth.call(null, vec__12355, 0, null);
  var params = cljs.core.nth.call(null, vec__12355, 1, null);
  if (typeof secretary.core.t12356 !== "undefined") {
  } else {
    secretary.core.t12356 = function(compile_route, orig_route, clauses, vec__12355, re, params, meta12357) {
      this.compile_route = compile_route;
      this.orig_route = orig_route;
      this.clauses = clauses;
      this.vec__12355 = vec__12355;
      this.re = re;
      this.params = params;
      this.meta12357 = meta12357;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    secretary.core.t12356.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(clauses, vec__12355, re, params) {
      return function(_12358, meta12357__$1) {
        var self__ = this;
        var _12358__$1 = this;
        return new secretary.core.t12356(self__.compile_route, self__.orig_route, self__.clauses, self__.vec__12355, self__.re, self__.params, meta12357__$1);
      };
    }(clauses, vec__12355, re, params);
    secretary.core.t12356.prototype.cljs$core$IMeta$_meta$arity$1 = function(clauses, vec__12355, re, params) {
      return function(_12358) {
        var self__ = this;
        var _12358__$1 = this;
        return self__.meta12357;
      };
    }(clauses, vec__12355, re, params);
    secretary.core.t12356.prototype.secretary$core$IRouteValue$ = true;
    secretary.core.t12356.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(clauses, vec__12355, re, params) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        return self__.orig_route;
      };
    }(clauses, vec__12355, re, params);
    secretary.core.t12356.prototype.secretary$core$IRouteMatches$ = true;
    secretary.core.t12356.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(clauses, vec__12355, re, params) {
      return function(_, route) {
        var self__ = this;
        var ___$1 = this;
        var temp__4425__auto__ = secretary.core.re_matches_STAR_.call(null, self__.re, route);
        if (cljs.core.truth_(temp__4425__auto__)) {
          var vec__12359 = temp__4425__auto__;
          var ___$2 = cljs.core.nth.call(null, vec__12359, 0, null);
          var ms = cljs.core.nthnext.call(null, vec__12359, 1);
          return cljs.core.merge_with.call(null, cljs.core.vector, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, self__.params, cljs.core.map.call(null, secretary.core.decode, ms))));
        } else {
          return null;
        }
      };
    }(clauses, vec__12355, re, params);
    secretary.core.t12356.getBasis = function(clauses, vec__12355, re, params) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "compile-route", "compile-route", -1479918120, null), new cljs.core.Symbol(null, "orig-route", "orig-route", 899103121, null), new cljs.core.Symbol(null, "clauses", "clauses", -1199594528, null), new cljs.core.Symbol(null, "vec__12355", "vec__12355", -1678701207, null), new cljs.core.Symbol(null, "re", "re", 1869207729, null), new cljs.core.Symbol(null, "params", "params", 
        -1943919534, null), new cljs.core.Symbol(null, "meta12357", "meta12357", 41687009, null)], null);
      };
    }(clauses, vec__12355, re, params);
    secretary.core.t12356.cljs$lang$type = true;
    secretary.core.t12356.cljs$lang$ctorStr = "secretary.core/t12356";
    secretary.core.t12356.cljs$lang$ctorPrWriter = function(clauses, vec__12355, re, params) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "secretary.core/t12356");
      };
    }(clauses, vec__12355, re, params);
    secretary.core.__GT_t12356 = function(clauses, vec__12355, re, params) {
      return function secretary$core$compile_route_$___GT_t12356(compile_route__$1, orig_route__$1, clauses__$1, vec__12355__$1, re__$1, params__$1, meta12357) {
        return new secretary.core.t12356(compile_route__$1, orig_route__$1, clauses__$1, vec__12355__$1, re__$1, params__$1, meta12357);
      };
    }(clauses, vec__12355, re, params);
  }
  return new secretary.core.t12356(secretary$core$compile_route, orig_route, clauses, vec__12355, re, params, cljs.core.PersistentArrayMap.EMPTY);
};
secretary.core.render_route_STAR_ = function secretary$core$render_route_STAR_() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(obj, args) {
  if (function() {
    var G__12362 = obj;
    if (G__12362) {
      var bit__4982__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__4308__auto__ = bit__4982__auto__;
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return G__12362.secretary$core$IRenderRoute$;
        }
      }())) {
        return true;
      } else {
        if (!G__12362.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__12362);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, secretary.core.IRenderRoute, G__12362);
    }
  }()) {
    return cljs.core.apply.call(null, secretary.core.render_route, obj, args);
  } else {
    return null;
  }
};
secretary.core.render_route_STAR_.cljs$lang$maxFixedArity = 1;
secretary.core.render_route_STAR_.cljs$lang$applyTo = function(seq12360) {
  var G__12361 = cljs.core.first.call(null, seq12360);
  var seq12360__$1 = cljs.core.next.call(null, seq12360);
  return secretary.core.render_route_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__12361, seq12360__$1);
};
secretary.core._STAR_routes_STAR_ = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
secretary.core.add_route_BANG_ = function secretary$core$add_route_BANG_(obj, action) {
  var obj__$1 = typeof obj === "string" ? secretary.core.compile_route.call(null, obj) : obj;
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.conj, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj__$1, action], null));
};
secretary.core.remove_route_BANG_ = function secretary$core$remove_route_BANG_(obj) {
  return cljs.core.swap_BANG_.call(null, secretary.core._STAR_routes_STAR_, function(rs) {
    return cljs.core.filterv.call(null, function(p__12365) {
      var vec__12366 = p__12365;
      var x = cljs.core.nth.call(null, vec__12366, 0, null);
      var _ = cljs.core.nth.call(null, vec__12366, 1, null);
      return cljs.core.not_EQ_.call(null, x, obj);
    }, rs);
  });
};
secretary.core.reset_routes_BANG_ = function secretary$core$reset_routes_BANG_() {
  return cljs.core.reset_BANG_.call(null, secretary.core._STAR_routes_STAR_, cljs.core.PersistentVector.EMPTY);
};
secretary.core.locate_route = function secretary$core$locate_route(route) {
  return cljs.core.some.call(null, function(p__12369) {
    var vec__12370 = p__12369;
    var compiled_route = cljs.core.nth.call(null, vec__12370, 0, null);
    var action = cljs.core.nth.call(null, vec__12370, 1, null);
    var temp__4425__auto__ = secretary.core.route_matches.call(null, compiled_route, route);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var params = temp__4425__auto__;
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "action", "action", -811238024), action, new cljs.core.Keyword(null, "params", "params", 710516235), params, new cljs.core.Keyword(null, "route", "route", 329891309), compiled_route], null);
    } else {
      return null;
    }
  }, cljs.core.deref.call(null, secretary.core._STAR_routes_STAR_));
};
secretary.core.locate_route_value = function secretary$core$locate_route_value(uri) {
  return secretary.core.route_value.call(null, (new cljs.core.Keyword(null, "route", "route", 329891309)).cljs$core$IFn$_invoke$arity$1(secretary.core.locate_route.call(null, uri)));
};
secretary.core.prefix = function secretary$core$prefix() {
  return [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null)))].join("");
};
secretary.core.uri_without_prefix = function secretary$core$uri_without_prefix(uri) {
  return clojure.string.replace.call(null, uri, cljs.core.re_pattern.call(null, [cljs.core.str("^"), cljs.core.str(secretary.core.prefix.call(null))].join("")), "");
};
secretary.core.uri_with_leading_slash = function secretary$core$uri_with_leading_slash(uri) {
  if (cljs.core._EQ_.call(null, "/", cljs.core.first.call(null, uri))) {
    return uri;
  } else {
    return [cljs.core.str("/"), cljs.core.str(uri)].join("");
  }
};
secretary.core.dispatch_BANG_ = function secretary$core$dispatch_BANG_(uri) {
  var vec__12373 = clojure.string.split.call(null, secretary.core.uri_without_prefix.call(null, uri), /\?/);
  var uri_path = cljs.core.nth.call(null, vec__12373, 0, null);
  var query_string = cljs.core.nth.call(null, vec__12373, 1, null);
  var uri_path__$1 = secretary.core.uri_with_leading_slash.call(null, uri_path);
  var query_params = cljs.core.truth_(query_string) ? new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "query-params", "query-params", 900640534), secretary.core.decode_query_params.call(null, query_string)], null) : null;
  var map__12374 = secretary.core.locate_route.call(null, uri_path__$1);
  var map__12374__$1 = cljs.core.seq_QMARK_.call(null, map__12374) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12374) : map__12374;
  var action = cljs.core.get.call(null, map__12374__$1, new cljs.core.Keyword(null, "action", "action", -811238024));
  var params = cljs.core.get.call(null, map__12374__$1, new cljs.core.Keyword(null, "params", "params", 710516235));
  var action__$1 = function() {
    var or__4308__auto__ = action;
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.identity;
    }
  }();
  var params__$1 = cljs.core.merge.call(null, params, query_params);
  return action__$1.call(null, params__$1);
};
secretary.core.invalid_params = function secretary$core$invalid_params(params, validations) {
  return cljs.core.reduce.call(null, function(m, p__12377) {
    var vec__12378 = p__12377;
    var key = cljs.core.nth.call(null, vec__12378, 0, null);
    var validation = cljs.core.nth.call(null, vec__12378, 1, null);
    var value = cljs.core.get.call(null, params, key);
    if (cljs.core.truth_(cljs.core.re_matches.call(null, validation, value))) {
      return m;
    } else {
      return cljs.core.assoc.call(null, m, key, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [value, validation], null));
    }
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.partition.call(null, 2, validations));
};
secretary.core.params_valid_QMARK_ = function secretary$core$params_valid_QMARK_(params, validations) {
  return cljs.core.empty_QMARK_.call(null, secretary.core.invalid_params.call(null, params, validations));
};
secretary.core.IRouteMatches["string"] = true;
secretary.core.route_matches["string"] = function(this$, route) {
  return secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, this$), route);
};
RegExp.prototype.secretary$core$IRouteMatches$ = true;
RegExp.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(this$, route) {
  var this$__$1 = this;
  var temp__4425__auto__ = secretary.core.re_matches_STAR_.call(null, this$__$1, route);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__12379 = temp__4425__auto__;
    var _ = cljs.core.nth.call(null, vec__12379, 0, null);
    var ms = cljs.core.nthnext.call(null, vec__12379, 1);
    return cljs.core.vec.call(null, ms);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteMatches$route_matches$arity$2 = function(p__12380, route) {
  var vec__12381 = p__12380;
  var route_string = cljs.core.nth.call(null, vec__12381, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12381, 1);
  var vec__12382 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12382, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12382, 1);
  var params = secretary.core.route_matches.call(null, secretary.core.compile_route.call(null, route_string__$1), route);
  if (cljs.core.truth_(secretary.core.params_valid_QMARK_.call(null, params, validations__$1))) {
    return params;
  } else {
    return null;
  }
};
secretary.core.IRouteValue["string"] = true;
secretary.core.route_value["string"] = function(this$) {
  return secretary.core.route_value.call(null, secretary.core.compile_route.call(null, this$));
};
RegExp.prototype.secretary$core$IRouteValue$ = true;
RegExp.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRouteValue$route_value$arity$1 = function(p__12383) {
  var vec__12384 = p__12383;
  var route_string = cljs.core.nth.call(null, vec__12384, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12384, 1);
  var vec__12385 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12385, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12385, 1);
  return cljs.core.vec.call(null, cljs.core.cons.call(null, secretary.core.route_value.call(null, route_string__$1), validations__$1));
};
secretary.core.IRenderRoute["string"] = true;
secretary.core.render_route["string"] = function() {
  var G__12390 = null;
  var G__12390__1 = function(this$) {
    return secretary.core.render_route.call(null, this$, cljs.core.PersistentArrayMap.EMPTY);
  };
  var G__12390__2 = function(this$, params) {
    var map__12386 = params;
    var map__12386__$1 = cljs.core.seq_QMARK_.call(null, map__12386) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12386) : map__12386;
    var m = map__12386__$1;
    var query_params = cljs.core.get.call(null, map__12386__$1, new cljs.core.Keyword(null, "query-params", "query-params", 900640534));
    var a = cljs.core.atom.call(null, m);
    var path = this$.replace(new RegExp(":[^\\s.:*/]+|\\*[^\\s.:*/]*", "g"), function(map__12386, map__12386__$1, m, query_params, a) {
      return function($1) {
        var lookup = cljs.core.keyword.call(null, cljs.core._EQ_.call(null, $1, "*") ? $1 : cljs.core.subs.call(null, $1, 1));
        var v = cljs.core.get.call(null, cljs.core.deref.call(null, a), lookup);
        var replacement = cljs.core.sequential_QMARK_.call(null, v) ? function() {
          cljs.core.swap_BANG_.call(null, a, cljs.core.assoc, lookup, cljs.core.next.call(null, v));
          return secretary.core.encode_uri.call(null, cljs.core.first.call(null, v));
        }() : cljs.core.truth_(v) ? secretary.core.encode_uri.call(null, v) : $1;
        return replacement;
      };
    }(map__12386, map__12386__$1, m, query_params, a));
    var path__$1 = [cljs.core.str(secretary.core.get_config.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465)], null))), cljs.core.str(path)].join("");
    var temp__4423__auto__ = function() {
      var and__4296__auto__ = query_params;
      if (cljs.core.truth_(and__4296__auto__)) {
        return secretary.core.encode_query_params.call(null, query_params);
      } else {
        return and__4296__auto__;
      }
    }();
    if (cljs.core.truth_(temp__4423__auto__)) {
      var query_string = temp__4423__auto__;
      return [cljs.core.str(path__$1), cljs.core.str("?"), cljs.core.str(query_string)].join("");
    } else {
      return path__$1;
    }
  };
  G__12390 = function(this$, params) {
    switch(arguments.length) {
      case 1:
        return G__12390__1.call(this, this$);
      case 2:
        return G__12390__2.call(this, this$, params);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12390.cljs$core$IFn$_invoke$arity$1 = G__12390__1;
  G__12390.cljs$core$IFn$_invoke$arity$2 = G__12390__2;
  return G__12390;
}();
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$ = true;
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$1 = function(this$) {
  var this$__$1 = this;
  return secretary.core.render_route.call(null, this$__$1, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.PersistentVector.prototype.secretary$core$IRenderRoute$render_route$arity$2 = function(p__12387, params) {
  var vec__12388 = p__12387;
  var route_string = cljs.core.nth.call(null, vec__12388, 0, null);
  var validations = cljs.core.nthnext.call(null, vec__12388, 1);
  var vec__12389 = this;
  var route_string__$1 = cljs.core.nth.call(null, vec__12389, 0, null);
  var validations__$1 = cljs.core.nthnext.call(null, vec__12389, 1);
  var invalid = secretary.core.invalid_params.call(null, params, validations__$1);
  if (cljs.core.empty_QMARK_.call(null, invalid)) {
    return secretary.core.render_route.call(null, route_string__$1, params);
  } else {
    throw cljs.core.ex_info.call(null, "Could not build route: invalid params", invalid);
  }
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.reader.PushbackReader = function() {
  var obj12964 = {};
  return obj12964;
}();
cljs.reader.read_char = function cljs$reader$read_char(reader) {
  if (function() {
    var and__4296__auto__ = reader;
    if (and__4296__auto__) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader);
  } else {
    var x__4944__auto__ = reader == null ? null : reader;
    return function() {
      var or__4308__auto__ = cljs.reader.read_char[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.reader.read_char["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader);
  }
};
cljs.reader.unread = function cljs$reader$unread(reader, ch) {
  if (function() {
    var and__4296__auto__ = reader;
    if (and__4296__auto__) {
      return reader.cljs$reader$PushbackReader$unread$arity$2;
    } else {
      return and__4296__auto__;
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch);
  } else {
    var x__4944__auto__ = reader == null ? null : reader;
    return function() {
      var or__4308__auto__ = cljs.reader.unread[goog.typeOf(x__4944__auto__)];
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.reader.unread["_"];
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch);
  }
};
cljs.reader.StringPushbackReader = function(s, buffer, idx) {
  this.s = s;
  this.buffer = buffer;
  this.idx = idx;
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var self__ = this;
  var reader__$1 = this;
  if (self__.buffer.length === 0) {
    self__.idx = self__.idx + 1;
    return self__.s[self__.idx];
  } else {
    return self__.buffer.pop();
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var self__ = this;
  var reader__$1 = this;
  return self__.buffer.push(ch);
};
cljs.reader.StringPushbackReader.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.Symbol(null, "idx", "idx", -1600747296, null)], null);
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorStr = "cljs.reader/StringPushbackReader";
cljs.reader.StringPushbackReader.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write.call(null, writer__4888__auto__, "cljs.reader/StringPushbackReader");
};
cljs.reader.__GT_StringPushbackReader = function cljs$reader$__GT_StringPushbackReader(s, buffer, idx) {
  return new cljs.reader.StringPushbackReader(s, buffer, idx);
};
cljs.reader.push_back_reader = function cljs$reader$push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, [], -1);
};
cljs.reader.whitespace_QMARK_ = function cljs$reader$whitespace_QMARK_(ch) {
  var or__4308__auto__ = goog.string.isBreakingWhitespace(ch);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return "," === ch;
  }
};
cljs.reader.numeric_QMARK_ = function cljs$reader$numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch);
};
cljs.reader.comment_prefix_QMARK_ = function cljs$reader$comment_prefix_QMARK_(ch) {
  return ";" === ch;
};
cljs.reader.number_literal_QMARK_ = function cljs$reader$number_literal_QMARK_(reader, initch) {
  return cljs.reader.numeric_QMARK_.call(null, initch) || ("+" === initch || "-" === initch) && cljs.reader.numeric_QMARK_.call(null, function() {
    var next_ch = cljs.reader.read_char.call(null, reader);
    cljs.reader.unread.call(null, reader, next_ch);
    return next_ch;
  }());
};
cljs.reader.reader_error = function cljs$reader$reader_error() {
  var argseq__5348__auto__ = 1 < arguments.length ? new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 1), 0) : null;
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5348__auto__);
};
cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic = function(rdr, msg) {
  throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
};
cljs.reader.reader_error.cljs$lang$maxFixedArity = 1;
cljs.reader.reader_error.cljs$lang$applyTo = function(seq12965) {
  var G__12966 = cljs.core.first.call(null, seq12965);
  var seq12965__$1 = cljs.core.next.call(null, seq12965);
  return cljs.reader.reader_error.cljs$core$IFn$_invoke$arity$variadic(G__12966, seq12965__$1);
};
cljs.reader.macro_terminating_QMARK_ = function cljs$reader$macro_terminating_QMARK_(ch) {
  var and__4296__auto__ = !(ch === "#");
  if (and__4296__auto__) {
    var and__4296__auto____$1 = !(ch === "'");
    if (and__4296__auto____$1) {
      var and__4296__auto____$2 = !(ch === ":");
      if (and__4296__auto____$2) {
        return cljs.reader.macros.call(null, ch);
      } else {
        return and__4296__auto____$2;
      }
    } else {
      return and__4296__auto____$1;
    }
  } else {
    return and__4296__auto__;
  }
};
cljs.reader.read_token = function cljs$reader$read_token(rdr, initch) {
  var sb = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (ch == null || cljs.reader.whitespace_QMARK_.call(null, ch) || cljs.reader.macro_terminating_QMARK_.call(null, ch)) {
      cljs.reader.unread.call(null, rdr, ch);
      return sb.toString();
    } else {
      var G__12967 = function() {
        sb.append(ch);
        return sb;
      }();
      var G__12968 = cljs.reader.read_char.call(null, rdr);
      sb = G__12967;
      ch = G__12968;
      continue;
    }
    break;
  }
};
cljs.reader.skip_line = function cljs$reader$skip_line(reader, _) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch === "\n" || ch === "\r" || ch == null) {
      return reader;
    } else {
      continue;
    }
    break;
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "^([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+))(N)?$");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+)/([0-9]+)$");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "^([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?$");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "^[:]?([^0-9/].*/)?([^0-9/][^/]*)$");
cljs.reader.re_matches_STAR_ = function cljs$reader$re_matches_STAR_(re, s) {
  var matches = re.exec(s);
  if (!(matches == null) && matches[0] === s) {
    if (matches.length === 1) {
      return matches[0];
    } else {
      return matches;
    }
  } else {
    return null;
  }
};
cljs.reader.match_int = function cljs$reader$match_int(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s);
  var ie8_fix = groups[2];
  var zero = cljs.core._EQ_.call(null, ie8_fix, "") ? null : ie8_fix;
  if (!(zero == null)) {
    return 0;
  } else {
    var a = cljs.core.truth_(groups[3]) ? [groups[3], 10] : cljs.core.truth_(groups[4]) ? [groups[4], 16] : cljs.core.truth_(groups[5]) ? [groups[5], 8] : cljs.core.truth_(groups[6]) ? [groups[7], parseInt(groups[6], 10)] : [null, null];
    var n = a[0];
    var radix = a[1];
    if (n == null) {
      return null;
    } else {
      var parsed = parseInt(n, radix);
      if ("-" === groups[1]) {
        return -parsed;
      } else {
        return parsed;
      }
    }
  }
};
cljs.reader.match_ratio = function cljs$reader$match_ratio(s) {
  var groups = cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator = groups[1];
  var denominator = groups[2];
  return parseInt(numinator, 10) / parseInt(denominator, 10);
};
cljs.reader.match_float = function cljs$reader$match_float(s) {
  return parseFloat(s);
};
cljs.reader.match_number = function cljs$reader$match_number(s) {
  if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s);
  } else {
    if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s);
    } else {
      if (cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s);
      } else {
        return null;
      }
    }
  }
};
cljs.reader.escape_char_map = function cljs$reader$escape_char_map(c) {
  if (c === "t") {
    return "\t";
  } else {
    if (c === "r") {
      return "\r";
    } else {
      if (c === "n") {
        return "\n";
      } else {
        if (c === "\\") {
          return "\\";
        } else {
          if (c === '"') {
            return '"';
          } else {
            if (c === "b") {
              return "\b";
            } else {
              if (c === "f") {
                return "\f";
              } else {
                return null;
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function cljs$reader$read_2_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.read_4_chars = function cljs$reader$read_4_chars(reader) {
  return (new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString();
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{2}$");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "^[0-9A-Fa-f]{4}$");
cljs.reader.validate_unicode_escape = function cljs$reader$validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if (cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str;
  } else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str);
  }
};
cljs.reader.make_unicode_char = function cljs$reader$make_unicode_char(code_str) {
  var code = parseInt(code_str, 16);
  return String.fromCharCode(code);
};
cljs.reader.escape_char = function cljs$reader$escape_char(buffer, reader) {
  var ch = cljs.reader.read_char.call(null, reader);
  var mapresult = cljs.reader.escape_char_map.call(null, ch);
  if (cljs.core.truth_(mapresult)) {
    return mapresult;
  } else {
    if (ch === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch, cljs.reader.read_2_chars.call(null, reader)));
    } else {
      if (ch === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch, cljs.reader.read_4_chars.call(null, reader)));
      } else {
        if (cljs.reader.numeric_QMARK_.call(null, ch)) {
          return String.fromCharCode(ch);
        } else {
          return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch);
        }
      }
    }
  }
};
cljs.reader.read_past = function cljs$reader$read_past(pred, rdr) {
  var ch = cljs.reader.read_char.call(null, rdr);
  while (true) {
    if (cljs.core.truth_(pred.call(null, ch))) {
      var G__12969 = cljs.reader.read_char.call(null, rdr);
      ch = G__12969;
      continue;
    } else {
      return ch;
    }
    break;
  }
};
cljs.reader.read_delimited_list = function cljs$reader$read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while (true) {
    var ch = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if (cljs.core.truth_(ch)) {
    } else {
      cljs.reader.reader_error.call(null, rdr, "EOF while reading");
    }
    if (delim === ch) {
      return cljs.core.persistent_BANG_.call(null, a);
    } else {
      var temp__4423__auto__ = cljs.reader.macros.call(null, ch);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var macrofn = temp__4423__auto__;
        var mret = macrofn.call(null, rdr, ch);
        var G__12970 = mret === rdr ? a : cljs.core.conj_BANG_.call(null, a, mret);
        a = G__12970;
        continue;
      } else {
        cljs.reader.unread.call(null, rdr, ch);
        var o = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__12971 = o === rdr ? a : cljs.core.conj_BANG_.call(null, a, o);
        a = G__12971;
        continue;
      }
    }
    break;
  }
};
cljs.reader.not_implemented = function cljs$reader$not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet");
};
cljs.reader.read_dispatch = function cljs$reader$read_dispatch(rdr, _) {
  var ch = cljs.reader.read_char.call(null, rdr);
  var dm = cljs.reader.dispatch_macros.call(null, ch);
  if (cljs.core.truth_(dm)) {
    return dm.call(null, rdr, _);
  } else {
    var temp__4423__auto__ = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var obj = temp__4423__auto__;
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch);
    }
  }
};
cljs.reader.read_unmatched_delimiter = function cljs$reader$read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmatched delimiter ", ch);
};
cljs.reader.read_list = function cljs$reader$read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true));
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function cljs$reader$read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true);
};
cljs.reader.read_map = function cljs$reader$read_map(rdr, _) {
  var l = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms");
  } else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l);
};
cljs.reader.read_number = function cljs$reader$read_number(reader, initch) {
  var buffer = new goog.string.StringBuffer(initch);
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4308__auto__ = ch == null;
      if (or__4308__auto__) {
        return or__4308__auto__;
      } else {
        var or__4308__auto____$1 = cljs.reader.whitespace_QMARK_.call(null, ch);
        if (or__4308__auto____$1) {
          return or__4308__auto____$1;
        } else {
          return cljs.reader.macros.call(null, ch);
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch);
      var s = buffer.toString();
      var or__4308__auto__ = cljs.reader.match_number.call(null, s);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s, "]");
      }
    } else {
      var G__12972 = function() {
        buffer.append(ch);
        return buffer;
      }();
      var G__12973 = cljs.reader.read_char.call(null, reader);
      buffer = G__12972;
      ch = G__12973;
      continue;
    }
    break;
  }
};
cljs.reader.read_string_STAR_ = function cljs$reader$read_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        var G__12974 = function() {
          buffer.append(cljs.reader.escape_char.call(null, buffer, reader));
          return buffer;
        }();
        var G__12975 = cljs.reader.read_char.call(null, reader);
        buffer = G__12974;
        ch = G__12975;
        continue;
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__12976 = function() {
            buffer.append(ch);
            return buffer;
          }();
          var G__12977 = cljs.reader.read_char.call(null, reader);
          buffer = G__12976;
          ch = G__12977;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.read_raw_string_STAR_ = function cljs$reader$read_raw_string_STAR_(reader, _) {
  var buffer = new goog.string.StringBuffer;
  var ch = cljs.reader.read_char.call(null, reader);
  while (true) {
    if (ch == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading");
    } else {
      if ("\\" === ch) {
        buffer.append(ch);
        var nch = cljs.reader.read_char.call(null, reader);
        if (nch == null) {
          return cljs.reader.reader_error.call(null, reader, "EOF while reading");
        } else {
          var G__12982 = function() {
            var G__12980 = buffer;
            G__12980.append(nch);
            return G__12980;
          }();
          var G__12983 = cljs.reader.read_char.call(null, reader);
          buffer = G__12982;
          ch = G__12983;
          continue;
        }
      } else {
        if ('"' === ch) {
          return buffer.toString();
        } else {
          var G__12984 = function() {
            var G__12981 = buffer;
            G__12981.append(ch);
            return G__12981;
          }();
          var G__12985 = cljs.reader.read_char.call(null, reader);
          buffer = G__12984;
          ch = G__12985;
          continue;
        }
      }
    }
    break;
  }
};
cljs.reader.special_symbols = function cljs$reader$special_symbols(t, not_found) {
  if (t === "nil") {
    return null;
  } else {
    if (t === "true") {
      return true;
    } else {
      if (t === "false") {
        return false;
      } else {
        if (t === "/") {
          return new cljs.core.Symbol(null, "/", "/", -1371932971, null);
        } else {
          return not_found;
        }
      }
    }
  }
};
cljs.reader.read_symbol = function cljs$reader$read_symbol(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, initch);
  if (cljs.core.truth_(function() {
    var and__4296__auto__ = goog.string.contains(token, "/");
    if (cljs.core.truth_(and__4296__auto__)) {
      return !(token.length === 1);
    } else {
      return and__4296__auto__;
    }
  }())) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token, 0, token.indexOf("/")), cljs.core.subs.call(null, token, token.indexOf("/") + 1, token.length));
  } else {
    return cljs.reader.special_symbols.call(null, token, cljs.core.symbol.call(null, token));
  }
};
cljs.reader.read_keyword = function cljs$reader$read_keyword(reader, initch) {
  var token = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token);
  var token__$1 = a[0];
  var ns = a[1];
  var name = a[2];
  if (!(void 0 === ns) && ns.substring(ns.length - 2, ns.length) === ":/" || name[name.length - 1] === ":" || !(token__$1.indexOf("::", 1) === -1)) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__$1);
  } else {
    if (!(ns == null) && ns.length > 0) {
      return cljs.core.keyword.call(null, ns.substring(0, ns.indexOf("/")), name);
    } else {
      return cljs.core.keyword.call(null, token__$1);
    }
  }
};
cljs.reader.desugar_meta = function cljs$reader$desugar_meta(f) {
  if (f instanceof cljs.core.Symbol) {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
  } else {
    if (typeof f === "string") {
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), f], null);
    } else {
      if (f instanceof cljs.core.Keyword) {
        return new cljs.core.PersistentArrayMap.fromArray([f, true], true, false);
      } else {
        return f;
      }
    }
  }
};
cljs.reader.wrapping_reader = function cljs$reader$wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.reader.read.call(null, rdr, true, null, true)), sym);
  };
};
cljs.reader.throwing_reader = function cljs$reader$throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg);
  };
};
cljs.reader.read_meta = function cljs$reader$read_meta(rdr, _) {
  var m = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if (cljs.core.map_QMARK_.call(null, m)) {
  } else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map");
  }
  var o = cljs.reader.read.call(null, rdr, true, null, true);
  if (function() {
    var G__12987 = o;
    if (G__12987) {
      var bit__4982__auto__ = G__12987.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4982__auto__ || G__12987.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__12987.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__12987);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__12987);
    }
  }()) {
    return cljs.core.with_meta.call(null, o, cljs.core.merge.call(null, cljs.core.meta.call(null, o), m));
  } else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas");
  }
};
cljs.reader.read_set = function cljs$reader$read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true));
};
cljs.reader.read_regex = function cljs$reader$read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_raw_string_STAR_.call(null, rdr, ch));
};
cljs.reader.read_discard = function cljs$reader$read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr;
};
cljs.reader.macros = function cljs$reader$macros(c) {
  if (c === '"') {
    return cljs.reader.read_string_STAR_;
  } else {
    if (c === ":") {
      return cljs.reader.read_keyword;
    } else {
      if (c === ";") {
        return cljs.reader.read_comment;
      } else {
        if (c === "'") {
          return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null));
        } else {
          if (c === "@") {
            return cljs.reader.wrapping_reader.call(null, new cljs.core.Symbol(null, "deref", "deref", 1494944732, null));
          } else {
            if (c === "^") {
              return cljs.reader.read_meta;
            } else {
              if (c === "`") {
                return cljs.reader.not_implemented;
              } else {
                if (c === "~") {
                  return cljs.reader.not_implemented;
                } else {
                  if (c === "(") {
                    return cljs.reader.read_list;
                  } else {
                    if (c === ")") {
                      return cljs.reader.read_unmatched_delimiter;
                    } else {
                      if (c === "[") {
                        return cljs.reader.read_vector;
                      } else {
                        if (c === "]") {
                          return cljs.reader.read_unmatched_delimiter;
                        } else {
                          if (c === "{") {
                            return cljs.reader.read_map;
                          } else {
                            if (c === "}") {
                              return cljs.reader.read_unmatched_delimiter;
                            } else {
                              if (c === "\\") {
                                return cljs.reader.read_char;
                              } else {
                                if (c === "#") {
                                  return cljs.reader.read_dispatch;
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function cljs$reader$dispatch_macros(s) {
  if (s === "{") {
    return cljs.reader.read_set;
  } else {
    if (s === "\x3c") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form");
    } else {
      if (s === '"') {
        return cljs.reader.read_regex;
      } else {
        if (s === "!") {
          return cljs.reader.read_comment;
        } else {
          if (s === "_") {
            return cljs.reader.read_discard;
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.reader.read = function cljs$reader$read(reader, eof_is_error, sentinel, is_recursive) {
  while (true) {
    var ch = cljs.reader.read_char.call(null, reader);
    if (ch == null) {
      if (cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF while reading");
      } else {
        return sentinel;
      }
    } else {
      if (cljs.reader.whitespace_QMARK_.call(null, ch)) {
        var G__12988 = reader;
        var G__12989 = eof_is_error;
        var G__12990 = sentinel;
        var G__12991 = is_recursive;
        reader = G__12988;
        eof_is_error = G__12989;
        sentinel = G__12990;
        is_recursive = G__12991;
        continue;
      } else {
        if (cljs.reader.comment_prefix_QMARK_.call(null, ch)) {
          var G__12992 = cljs.reader.read_comment.call(null, reader, ch);
          var G__12993 = eof_is_error;
          var G__12994 = sentinel;
          var G__12995 = is_recursive;
          reader = G__12992;
          eof_is_error = G__12993;
          sentinel = G__12994;
          is_recursive = G__12995;
          continue;
        } else {
          var f = cljs.reader.macros.call(null, ch);
          var res = cljs.core.truth_(f) ? f.call(null, reader, ch) : cljs.reader.number_literal_QMARK_.call(null, reader, ch) ? cljs.reader.read_number.call(null, reader, ch) : cljs.reader.read_symbol.call(null, reader, ch);
          if (res === reader) {
            var G__12996 = reader;
            var G__12997 = eof_is_error;
            var G__12998 = sentinel;
            var G__12999 = is_recursive;
            reader = G__12996;
            eof_is_error = G__12997;
            sentinel = G__12998;
            is_recursive = G__12999;
            continue;
          } else {
            return res;
          }
        }
      }
    }
    break;
  }
};
cljs.reader.read_string = function cljs$reader$read_string(s) {
  var r = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r, false, null, false);
};
cljs.reader.zero_fill_right_and_truncate = function cljs$reader$zero_fill_right_and_truncate(s, width) {
  if (cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s;
  } else {
    if (width < cljs.core.count.call(null, s)) {
      return cljs.core.subs.call(null, s, 0, width);
    } else {
      var b = new goog.string.StringBuffer(s);
      while (true) {
        if (b.getLength() < width) {
          var G__13000 = b.append("0");
          b = G__13000;
          continue;
        } else {
          return b.toString();
        }
        break;
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function cljs$reader$divisible_QMARK_(num, div) {
  return cljs.core.mod.call(null, num, div) === 0;
};
cljs.reader.indivisible_QMARK_ = function cljs$reader$indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div));
};
cljs.reader.leap_year_QMARK_ = function cljs$reader$leap_year_QMARK_(year) {
  var and__4296__auto__ = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if (cljs.core.truth_(and__4296__auto__)) {
    var or__4308__auto__ = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400);
    }
  } else {
    return and__4296__auto__;
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  var dim_leap = new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], null);
  return function(dim_norm, dim_leap) {
    return function(month, leap_year_QMARK_) {
      return cljs.core.get.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap : dim_norm, month);
    };
  }(dim_norm, dim_leap);
}();
cljs.reader.timestamp_regex = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
cljs.reader.parse_int = function cljs$reader$parse_int(s) {
  var n = parseInt(s, 10);
  if (cljs.core.not.call(null, isNaN(n))) {
    return n;
  } else {
    return null;
  }
};
cljs.reader.check = function cljs$reader$check(low, n, high, msg) {
  if (low <= n && n <= high) {
  } else {
    cljs.reader.reader_error.call(null, null, [cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("\x3c\x3d"), cljs.core.str(n), cljs.core.str("\x3c\x3d"), cljs.core.str(high)].join(""));
  }
  return n;
};
cljs.reader.parse_and_validate_timestamp = function cljs$reader$parse_and_validate_timestamp(s) {
  var vec__13002 = cljs.core.re_matches.call(null, cljs.reader.timestamp_regex, s);
  var _ = cljs.core.nth.call(null, vec__13002, 0, null);
  var years = cljs.core.nth.call(null, vec__13002, 1, null);
  var months = cljs.core.nth.call(null, vec__13002, 2, null);
  var days = cljs.core.nth.call(null, vec__13002, 3, null);
  var hours = cljs.core.nth.call(null, vec__13002, 4, null);
  var minutes = cljs.core.nth.call(null, vec__13002, 5, null);
  var seconds = cljs.core.nth.call(null, vec__13002, 6, null);
  var fraction = cljs.core.nth.call(null, vec__13002, 7, null);
  var offset_sign = cljs.core.nth.call(null, vec__13002, 8, null);
  var offset_hours = cljs.core.nth.call(null, vec__13002, 9, null);
  var offset_minutes = cljs.core.nth.call(null, vec__13002, 10, null);
  var v = vec__13002;
  if (cljs.core.not.call(null, v)) {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(s)].join(""));
  } else {
    var years__$1 = cljs.reader.parse_int.call(null, years);
    var months__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, months);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 1;
      }
    }();
    var days__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, days);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 1;
      }
    }();
    var hours__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, hours);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var minutes__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, minutes);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var seconds__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, seconds);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var fraction__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, cljs.reader.zero_fill_right_and_truncate.call(null, fraction, 3));
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var offset_sign__$1 = cljs.core._EQ_.call(null, offset_sign, "-") ? -1 : 1;
    var offset_hours__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, offset_hours);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var offset_minutes__$1 = function() {
      var or__4308__auto__ = cljs.reader.parse_int.call(null, offset_minutes);
      if (cljs.core.truth_(or__4308__auto__)) {
        return or__4308__auto__;
      } else {
        return 0;
      }
    }();
    var offset = offset_sign__$1 * (offset_hours__$1 * 60 + offset_minutes__$1);
    return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [years__$1, cljs.reader.check.call(null, 1, months__$1, 12, "timestamp month field must be in range 1..12"), cljs.reader.check.call(null, 1, days__$1, cljs.reader.days_in_month.call(null, months__$1, cljs.reader.leap_year_QMARK_.call(null, years__$1)), "timestamp day field must be in range 1..last day in month"), cljs.reader.check.call(null, 0, hours__$1, 23, "timestamp hour field must be in range 0..23"), 
    cljs.reader.check.call(null, 0, minutes__$1, 59, "timestamp minute field must be in range 0..59"), cljs.reader.check.call(null, 0, seconds__$1, cljs.core._EQ_.call(null, minutes__$1, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.reader.check.call(null, 0, fraction__$1, 999, "timestamp millisecond field must be in range 0..999"), offset], null);
  }
};
cljs.reader.parse_timestamp = function cljs$reader$parse_timestamp(ts) {
  var temp__4423__auto__ = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var vec__13004 = temp__4423__auto__;
    var years = cljs.core.nth.call(null, vec__13004, 0, null);
    var months = cljs.core.nth.call(null, vec__13004, 1, null);
    var days = cljs.core.nth.call(null, vec__13004, 2, null);
    var hours = cljs.core.nth.call(null, vec__13004, 3, null);
    var minutes = cljs.core.nth.call(null, vec__13004, 4, null);
    var seconds = cljs.core.nth.call(null, vec__13004, 5, null);
    var ms = cljs.core.nth.call(null, vec__13004, 6, null);
    var offset = cljs.core.nth.call(null, vec__13004, 7, null);
    return new Date(Date.UTC(years, months - 1, days, hours, minutes, seconds, ms) - offset * 60 * 1E3);
  } else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""));
  }
};
cljs.reader.read_date = function cljs$reader$read_date(s) {
  if (typeof s === "string") {
    return cljs.reader.parse_timestamp.call(null, s);
  } else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.");
  }
};
cljs.reader.read_queue = function cljs$reader$read_queue(elems) {
  if (cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems);
  } else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.");
  }
};
cljs.reader.read_js = function cljs$reader$read_js(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    var arr = [];
    var seq__13017_13029 = cljs.core.seq.call(null, form);
    var chunk__13018_13030 = null;
    var count__13019_13031 = 0;
    var i__13020_13032 = 0;
    while (true) {
      if (i__13020_13032 < count__13019_13031) {
        var x_13033 = cljs.core._nth.call(null, chunk__13018_13030, i__13020_13032);
        arr.push(x_13033);
        var G__13034 = seq__13017_13029;
        var G__13035 = chunk__13018_13030;
        var G__13036 = count__13019_13031;
        var G__13037 = i__13020_13032 + 1;
        seq__13017_13029 = G__13034;
        chunk__13018_13030 = G__13035;
        count__13019_13031 = G__13036;
        i__13020_13032 = G__13037;
        continue;
      } else {
        var temp__4425__auto___13038 = cljs.core.seq.call(null, seq__13017_13029);
        if (temp__4425__auto___13038) {
          var seq__13017_13039__$1 = temp__4425__auto___13038;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__13017_13039__$1)) {
            var c__5093__auto___13040 = cljs.core.chunk_first.call(null, seq__13017_13039__$1);
            var G__13041 = cljs.core.chunk_rest.call(null, seq__13017_13039__$1);
            var G__13042 = c__5093__auto___13040;
            var G__13043 = cljs.core.count.call(null, c__5093__auto___13040);
            var G__13044 = 0;
            seq__13017_13029 = G__13041;
            chunk__13018_13030 = G__13042;
            count__13019_13031 = G__13043;
            i__13020_13032 = G__13044;
            continue;
          } else {
            var x_13045 = cljs.core.first.call(null, seq__13017_13039__$1);
            arr.push(x_13045);
            var G__13046 = cljs.core.next.call(null, seq__13017_13039__$1);
            var G__13047 = null;
            var G__13048 = 0;
            var G__13049 = 0;
            seq__13017_13029 = G__13046;
            chunk__13018_13030 = G__13047;
            count__13019_13031 = G__13048;
            i__13020_13032 = G__13049;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return arr;
  } else {
    if (cljs.core.map_QMARK_.call(null, form)) {
      var obj = function() {
        var obj13022 = {};
        return obj13022;
      }();
      var seq__13023_13050 = cljs.core.seq.call(null, form);
      var chunk__13024_13051 = null;
      var count__13025_13052 = 0;
      var i__13026_13053 = 0;
      while (true) {
        if (i__13026_13053 < count__13025_13052) {
          var vec__13027_13054 = cljs.core._nth.call(null, chunk__13024_13051, i__13026_13053);
          var k_13055 = cljs.core.nth.call(null, vec__13027_13054, 0, null);
          var v_13056 = cljs.core.nth.call(null, vec__13027_13054, 1, null);
          obj[cljs.core.name.call(null, k_13055)] = v_13056;
          var G__13057 = seq__13023_13050;
          var G__13058 = chunk__13024_13051;
          var G__13059 = count__13025_13052;
          var G__13060 = i__13026_13053 + 1;
          seq__13023_13050 = G__13057;
          chunk__13024_13051 = G__13058;
          count__13025_13052 = G__13059;
          i__13026_13053 = G__13060;
          continue;
        } else {
          var temp__4425__auto___13061 = cljs.core.seq.call(null, seq__13023_13050);
          if (temp__4425__auto___13061) {
            var seq__13023_13062__$1 = temp__4425__auto___13061;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__13023_13062__$1)) {
              var c__5093__auto___13063 = cljs.core.chunk_first.call(null, seq__13023_13062__$1);
              var G__13064 = cljs.core.chunk_rest.call(null, seq__13023_13062__$1);
              var G__13065 = c__5093__auto___13063;
              var G__13066 = cljs.core.count.call(null, c__5093__auto___13063);
              var G__13067 = 0;
              seq__13023_13050 = G__13064;
              chunk__13024_13051 = G__13065;
              count__13025_13052 = G__13066;
              i__13026_13053 = G__13067;
              continue;
            } else {
              var vec__13028_13068 = cljs.core.first.call(null, seq__13023_13062__$1);
              var k_13069 = cljs.core.nth.call(null, vec__13028_13068, 0, null);
              var v_13070 = cljs.core.nth.call(null, vec__13028_13068, 1, null);
              obj[cljs.core.name.call(null, k_13069)] = v_13070;
              var G__13071 = cljs.core.next.call(null, seq__13023_13062__$1);
              var G__13072 = null;
              var G__13073 = 0;
              var G__13074 = 0;
              seq__13023_13050 = G__13071;
              chunk__13024_13051 = G__13072;
              count__13025_13052 = G__13073;
              i__13026_13053 = G__13074;
              continue;
            }
          } else {
          }
        }
        break;
      }
      return obj;
    } else {
      return cljs.reader.reader_error.call(null, null, [cljs.core.str("JS literal expects a vector or map containing "), cljs.core.str("only string or unqualified keyword keys")].join(""));
    }
  }
};
cljs.reader.read_uuid = function cljs$reader$read_uuid(uuid) {
  if (typeof uuid === "string") {
    return cljs.core.uuid.call(null, uuid);
  } else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.");
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, ["inst", cljs.reader.read_date, "uuid", cljs.reader.read_uuid, "queue", cljs.reader.read_queue, "js", cljs.reader.read_js], null));
cljs.reader._STAR_default_data_reader_fn_STAR_ = cljs.core.atom.call(null, null);
cljs.reader.maybe_read_tagged_type = function cljs$reader$maybe_read_tagged_type(rdr, initch) {
  var tag = cljs.reader.read_symbol.call(null, rdr, initch);
  var pfn = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), [cljs.core.str(tag)].join(""));
  var dfn = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  if (cljs.core.truth_(pfn)) {
    return pfn.call(null, cljs.reader.read.call(null, rdr, true, null, false));
  } else {
    if (cljs.core.truth_(dfn)) {
      return dfn.call(null, tag, cljs.reader.read.call(null, rdr, true, null, false));
    } else {
      return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", [cljs.core.str(tag)].join(""), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))));
    }
  }
};
cljs.reader.register_tag_parser_BANG_ = function cljs$reader$register_tag_parser_BANG_(tag, f) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__$1, f);
  return old_parser;
};
cljs.reader.deregister_tag_parser_BANG_ = function cljs$reader$deregister_tag_parser_BANG_(tag) {
  var tag__$1 = [cljs.core.str(tag)].join("");
  var old_parser = cljs.core.get.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__$1);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__$1);
  return old_parser;
};
cljs.reader.register_default_tag_parser_BANG_ = function cljs$reader$register_default_tag_parser_BANG_(f) {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return f;
    };
  }(old_parser));
  return old_parser;
};
cljs.reader.deregister_default_tag_parser_BANG_ = function cljs$reader$deregister_default_tag_parser_BANG_() {
  var old_parser = cljs.core.deref.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_default_data_reader_fn_STAR_, function(old_parser) {
    return function(_) {
      return null;
    };
  }(old_parser));
  return old_parser;
};
goog.provide("trace.utils");
goog.require("cljs.core");
goog.require("cljs.reader");
trace.utils.edn_xhr = function trace$utils$edn_xhr(uri, callback) {
  var x = new XMLHttpRequest;
  x.open("GET", uri, true);
  x.addEventListener("load", function(x) {
    return function() {
      return callback.call(null, cljs.core._EQ_.call(null, x.status, 200) ? cljs.reader.read_string.call(null, x.responseText) : null);
    };
  }(x), false);
  return x.send();
};
trace.utils.edn_xhr_post = function trace$utils$edn_xhr_post(uri, body, callback) {
  var x = new XMLHttpRequest;
  x.open("POST", uri, true);
  x.addEventListener("load", function(x) {
    return function() {
      return callback.call(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "status", "status", -1997798413), x.status, new cljs.core.Keyword(null, "results", "results", -1134170113), cljs.core._EQ_.call(null, x.status, 200) ? cljs.reader.read_string.call(null, x.responseText) : null, new cljs.core.Keyword(null, "responseText", "responseText", 1436974212), cljs.core.not_EQ_.call(null, x.status, 200) ? x.responseText : null], null));
    };
  }(x), false);
  x.setRequestHeader("Content-Type", "application/edn");
  x.setRequestHeader("X-XSRF-Token", trace_token);
  return x.send(cljs.core.pr_str.call(null, body));
};
trace.utils.conj_if = function trace$utils$conj_if() {
  var G__6378 = arguments.length;
  switch(G__6378) {
    case 2:
      return trace.utils.conj_if.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5359__auto__ = new cljs.core.IndexedSeq(Array.prototype.slice.call(arguments, 2), 0);
      return trace.utils.conj_if.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5359__auto__);
  }
};
trace.utils.conj_if.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (cljs.core.truth_(x)) {
    return cljs.core.conj.call(null, coll, x);
  } else {
    return coll;
  }
};
trace.utils.conj_if.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__6380 = trace.utils.conj_if.call(null, coll, x);
      var G__6381 = cljs.core.first.call(null, xs);
      var G__6382 = cljs.core.next.call(null, xs);
      coll = G__6380;
      x = G__6381;
      xs = G__6382;
      continue;
    } else {
      return trace.utils.conj_if.call(null, coll, x);
    }
    break;
  }
};
trace.utils.conj_if.cljs$lang$applyTo = function(seq6374) {
  var G__6375 = cljs.core.first.call(null, seq6374);
  var seq6374__$1 = cljs.core.next.call(null, seq6374);
  var G__6376 = cljs.core.first.call(null, seq6374__$1);
  var seq6374__$2 = cljs.core.next.call(null, seq6374__$1);
  return trace.utils.conj_if.cljs$core$IFn$_invoke$arity$variadic(G__6375, G__6376, seq6374__$2);
};
trace.utils.conj_if.cljs$lang$maxFixedArity = 2;
trace.utils.process_schema = function trace$utils$process_schema(p__6384) {
  var map__6394 = p__6384;
  var map__6394__$1 = cljs.core.seq_QMARK_.call(null, map__6394) ? cljs.core.apply.call(null, cljs.core.hash_map, map__6394) : map__6394;
  var classes = cljs.core.get.call(null, map__6394__$1, new cljs.core.Keyword(null, "classes", "classes", 2037804510));
  var attributes = cljs.core.get.call(null, map__6394__$1, new cljs.core.Keyword(null, "attributes", "attributes", -74013604));
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "classes", "classes", 2037804510), cljs.core.sort_by.call(null, new cljs.core.Keyword("pace", "identifies-class", "pace/identifies-class", -147283175), classes), new cljs.core.Keyword(null, "classes-by-ident", "classes-by-ident", 476699132), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword("db", "ident", "db/ident", -737096), cljs.core.identity), 
  classes)), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5062__auto__ = function(map__6394, map__6394__$1, classes, attributes) {
      return function trace$utils$process_schema_$_iter__6395(s__6396) {
        return new cljs.core.LazySeq(null, function(map__6394, map__6394__$1, classes, attributes) {
          return function() {
            var s__6396__$1 = s__6396;
            while (true) {
              var temp__4425__auto__ = cljs.core.seq.call(null, s__6396__$1);
              if (temp__4425__auto__) {
                var s__6396__$2 = temp__4425__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__6396__$2)) {
                  var c__5060__auto__ = cljs.core.chunk_first.call(null, s__6396__$2);
                  var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                  var b__6398 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                  if (function() {
                    var i__6397 = 0;
                    while (true) {
                      if (i__6397 < size__5061__auto__) {
                        var vec__6401 = cljs.core._nth.call(null, c__5060__auto__, i__6397);
                        var ns = cljs.core.nth.call(null, vec__6401, 0, null);
                        var attrs = cljs.core.nth.call(null, vec__6401, 1, null);
                        cljs.core.chunk_append.call(null, b__6398, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.sort_by.call(null, new cljs.core.Keyword("db", "id", "db/id", -1388397098), attrs)], null));
                        var G__6403 = i__6397 + 1;
                        i__6397 = G__6403;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6398), trace$utils$process_schema_$_iter__6395.call(null, cljs.core.chunk_rest.call(null, s__6396__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__6398), null);
                  }
                } else {
                  var vec__6402 = cljs.core.first.call(null, s__6396__$2);
                  var ns = cljs.core.nth.call(null, vec__6402, 0, null);
                  var attrs = cljs.core.nth.call(null, vec__6402, 1, null);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns, cljs.core.sort_by.call(null, new cljs.core.Keyword("db", "id", "db/id", -1388397098), attrs)], null), trace$utils$process_schema_$_iter__6395.call(null, cljs.core.rest.call(null, s__6396__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          };
        }(map__6394, map__6394__$1, classes, attributes), null, null);
      };
    }(map__6394, map__6394__$1, classes, attributes);
    return iter__5062__auto__.call(null, cljs.core.group_by.call(null, function(iter__5062__auto__, map__6394, map__6394__$1, classes, attributes) {
      return function(p1__6383_SHARP_) {
        return cljs.core.namespace.call(null, (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(p1__6383_SHARP_));
      };
    }(iter__5062__auto__, map__6394, map__6394__$1, classes, attributes), attributes));
  }()), new cljs.core.Keyword(null, "attrs-by-ident", "attrs-by-ident", 1962204233), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword("db", "ident", "db/ident", -737096), cljs.core.identity), attributes))], null);
};
goog.provide("trace.core");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("secretary.core");
goog.require("om_tools.dom");
goog.require("cljs_time.core");
goog.require("cljs_time.coerce");
goog.require("cljs_time.format");
goog.require("om.core");
goog.require("trace.utils");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs.core.enable_console_print_BANG_.call(null);
trace.core.app_state = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "props", "props", 453281727), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "loading", "loading", -737050189), true, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false, new cljs.core.Keyword(null, "txnData", "txnData", -1917888368), false], null)], 
null));
trace.core.time_formatter = cljs_time.format.formatter.call(null, "yyyy-MM-dd HH:mm:ss");
trace.core.format_local = function trace$core$format_local(time) {
  return cljs_time.format.unparse_local_date.call(null, trace.core.time_formatter, cljs_time.core.to_default_time_zone.call(null, cljs_time.coerce.from_date.call(null, time)));
};
trace.core.mode = function trace$core$mode() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, trace.core.app_state)));
};
trace.core.schema = function trace$core$schema() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, trace.core.app_state)));
};
trace.core.txns = function trace$core$txns() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, trace.core.app_state)));
};
trace.core.component_ns = function trace$core$component_ns(ident) {
  return [cljs.core.str(cljs.core.namespace.call(null, ident)), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, ident))].join("");
};
trace.core.added_id = cljs.core.atom.call(null, 0);
trace.core.top_bar_height = 100;
trace.core.scroll_into_view = function trace$core$scroll_into_view(element) {
  var body = document.body;
  var scroll_top = body.scrollTop;
  var scroll_bot = body.scrollTop + body.clientHeight;
  var rect = element.getBoundingClientRect();
  var element_top = rect.top;
  var element_bot = rect.bottom;
  if (element_top < trace.core.top_bar_height) {
    return body.scrollTop = function() {
      var x__4620__auto__ = 0;
      var y__4621__auto__ = scroll_top + (element_top - trace.core.top_bar_height);
      return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
    }();
  } else {
    if (element_bot > scroll_bot) {
      return body.scrollTop = function() {
        var x__4620__auto__ = 0;
        var y__4621__auto__ = scroll_top + (element_bot - scroll_bot);
        return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
      }();
    } else {
      return null;
    }
  }
};
trace.core.fetch_missing_txns = function trace$core$fetch_missing_txns(app) {
  var txns = function() {
    var or__4308__auto__ = (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app));
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return cljs.core.PersistentArrayMap.EMPTY;
    }
  }();
  var scan_missing = function(txns) {
    return function trace$core$fetch_missing_txns_$_scan_missing(missing, p__10420) {
      var map__10422 = p__10420;
      var map__10422__$1 = cljs.core.seq_QMARK_.call(null, map__10422) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10422) : map__10422;
      var txn = cljs.core.get.call(null, map__10422__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
      var val = cljs.core.get.call(null, map__10422__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
      var missing__$1 = cljs.core.sequential_QMARK_.call(null, val) ? cljs.core.reduce.call(null, trace$core$fetch_missing_txns_$_scan_missing, missing, cljs.core.mapcat.call(null, new cljs.core.Keyword(null, "values", "values", 372645556), val)) : missing;
      if (cljs.core.truth_(txns.call(null, txn))) {
        return missing__$1;
      } else {
        return cljs.core.conj.call(null, missing__$1, txn);
      }
    };
  }(txns);
  var missing = cljs.core.reduce.call(null, scan_missing, cljs.core.PersistentHashSet.EMPTY, cljs.core.mapcat.call(null, new cljs.core.Keyword(null, "values", "values", 372645556), (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app))));
  if (cljs.core.seq.call(null, missing)) {
    return trace.utils.edn_xhr.call(null, [cljs.core.str("/txns?"), cljs.core.str(clojure.string.join.call(null, "\x26", function() {
      var iter__5062__auto__ = function(missing, txns) {
        return function trace$core$fetch_missing_txns_$_iter__10423(s__10424) {
          return new cljs.core.LazySeq(null, function(missing, txns) {
            return function() {
              var s__10424__$1 = s__10424;
              while (true) {
                var temp__4425__auto__ = cljs.core.seq.call(null, s__10424__$1);
                if (temp__4425__auto__) {
                  var s__10424__$2 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__10424__$2)) {
                    var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10424__$2);
                    var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                    var b__10426 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                    if (function() {
                      var i__10425 = 0;
                      while (true) {
                        if (i__10425 < size__5061__auto__) {
                          var i = cljs.core._nth.call(null, c__5060__auto__, i__10425);
                          cljs.core.chunk_append.call(null, b__10426, [cljs.core.str("id\x3d"), cljs.core.str(i)].join(""));
                          var G__10431 = i__10425 + 1;
                          i__10425 = G__10431;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10426), trace$core$fetch_missing_txns_$_iter__10423.call(null, cljs.core.chunk_rest.call(null, s__10424__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10426), null);
                    }
                  } else {
                    var i = cljs.core.first.call(null, s__10424__$2);
                    return cljs.core.cons.call(null, [cljs.core.str("id\x3d"), cljs.core.str(i)].join(""), trace$core$fetch_missing_txns_$_iter__10423.call(null, cljs.core.rest.call(null, s__10424__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            };
          }(missing, txns), null, null);
        };
      }(missing, txns);
      return iter__5062__auto__.call(null, missing);
    }()))].join(""), function(missing, txns) {
      return function(resp) {
        return om.core.transact_BANG_.call(null, app, new cljs.core.Keyword(null, "txns", "txns", -1492102421), function(missing, txns) {
          return function(p1__10402_SHARP_) {
            return cljs.core.merge.call(null, p1__10402_SHARP_, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
              var iter__5062__auto__ = function(missing, txns) {
                return function trace$core$fetch_missing_txns_$_iter__10427(s__10428) {
                  return new cljs.core.LazySeq(null, function(missing, txns) {
                    return function() {
                      var s__10428__$1 = s__10428;
                      while (true) {
                        var temp__4425__auto__ = cljs.core.seq.call(null, s__10428__$1);
                        if (temp__4425__auto__) {
                          var s__10428__$2 = temp__4425__auto__;
                          if (cljs.core.chunked_seq_QMARK_.call(null, s__10428__$2)) {
                            var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10428__$2);
                            var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                            var b__10430 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                            if (function() {
                              var i__10429 = 0;
                              while (true) {
                                if (i__10429 < size__5061__auto__) {
                                  var t = cljs.core._nth.call(null, c__5060__auto__, i__10429);
                                  cljs.core.chunk_append.call(null, b__10430, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null));
                                  var G__10432 = i__10429 + 1;
                                  i__10429 = G__10432;
                                  continue;
                                } else {
                                  return true;
                                }
                                break;
                              }
                            }()) {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10430), trace$core$fetch_missing_txns_$_iter__10427.call(null, cljs.core.chunk_rest.call(null, s__10428__$2)));
                            } else {
                              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10430), null);
                            }
                          } else {
                            var t = cljs.core.first.call(null, s__10428__$2);
                            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null), trace$core$fetch_missing_txns_$_iter__10427.call(null, cljs.core.rest.call(null, s__10428__$2)));
                          }
                        } else {
                          return null;
                        }
                        break;
                      }
                    };
                  }(missing, txns), null, null);
                };
              }(missing, txns);
              return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(resp));
            }()));
          };
        }(missing, txns));
      };
    }(missing, txns));
  } else {
    return null;
  }
};
trace.core.props__GT_state = function trace$core$props__GT_state(props) {
  return cljs.core.vec.call(null, function() {
    var iter__5062__auto__ = function trace$core$props__GT_state_$_iter__10469(s__10470) {
      return new cljs.core.LazySeq(null, function() {
        var s__10470__$1 = s__10470;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__10470__$1);
          if (temp__4425__auto__) {
            var s__10470__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10470__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10470__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__10472 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__10471 = 0;
                while (true) {
                  if (i__10471 < size__5061__auto__) {
                    var p = cljs.core._nth.call(null, c__5060__auto__, i__10471);
                    var v = (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(p);
                    cljs.core.chunk_append.call(null, b__10472, cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), function() {
                      var or__4308__auto__ = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(p);
                      if (cljs.core.truth_(or__4308__auto__)) {
                        return or__4308__auto__;
                      } else {
                        return cljs.core.count.call(null, v);
                      }
                    }() > 1, new cljs.core.Keyword(null, "values", "values", 372645556), cljs.core.vec.call(null, function() {
                      var iter__5062__auto__ = function(i__10471, v, p, c__5060__auto__, size__5061__auto__, b__10472, s__10470__$2, temp__4425__auto__) {
                        return function trace$core$props__GT_state_$_iter__10469_$_iter__10489(s__10490) {
                          return new cljs.core.LazySeq(null, function(i__10471, v, p, c__5060__auto__, size__5061__auto__, b__10472, s__10470__$2, temp__4425__auto__) {
                            return function() {
                              var s__10490__$1 = s__10490;
                              while (true) {
                                var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10490__$1);
                                if (temp__4425__auto____$1) {
                                  var s__10490__$2 = temp__4425__auto____$1;
                                  if (cljs.core.chunked_seq_QMARK_.call(null, s__10490__$2)) {
                                    var c__5060__auto____$1 = cljs.core.chunk_first.call(null, s__10490__$2);
                                    var size__5061__auto____$1 = cljs.core.count.call(null, c__5060__auto____$1);
                                    var b__10492 = cljs.core.chunk_buffer.call(null, size__5061__auto____$1);
                                    if (function() {
                                      var i__10491 = 0;
                                      while (true) {
                                        if (i__10491 < size__5061__auto____$1) {
                                          var map__10495 = cljs.core._nth.call(null, c__5060__auto____$1, i__10491);
                                          var map__10495__$1 = cljs.core.seq_QMARK_.call(null, map__10495) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10495) : map__10495;
                                          var txn = cljs.core.get.call(null, map__10495__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
                                          var val = cljs.core.get.call(null, map__10495__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                                          var id = cljs.core.get.call(null, map__10495__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
                                          cljs.core.chunk_append.call(null, b__10492, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "txn", "txn", -469204789), txn, new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(p), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", 
                                          "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(p)) ? trace$core$props__GT_state.call(null, val) : val], null));
                                          var G__10505 = i__10491 + 1;
                                          i__10491 = G__10505;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10492), trace$core$props__GT_state_$_iter__10469_$_iter__10489.call(null, cljs.core.chunk_rest.call(null, s__10490__$2)));
                                    } else {
                                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10492), null);
                                    }
                                  } else {
                                    var map__10496 = cljs.core.first.call(null, s__10490__$2);
                                    var map__10496__$1 = cljs.core.seq_QMARK_.call(null, map__10496) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10496) : map__10496;
                                    var txn = cljs.core.get.call(null, map__10496__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
                                    var val = cljs.core.get.call(null, map__10496__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                                    var id = cljs.core.get.call(null, map__10496__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
                                    return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "txn", "txn", -469204789), txn, new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(p), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(p)) ? 
                                    trace$core$props__GT_state.call(null, val) : val], null), trace$core$props__GT_state_$_iter__10469_$_iter__10489.call(null, cljs.core.rest.call(null, s__10490__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(i__10471, v, p, c__5060__auto__, size__5061__auto__, b__10472, s__10470__$2, temp__4425__auto__), null, null);
                        };
                      }(i__10471, v, p, c__5060__auto__, size__5061__auto__, b__10472, s__10470__$2, temp__4425__auto__);
                      return iter__5062__auto__.call(null, v);
                    }())));
                    var G__10506 = i__10471 + 1;
                    i__10471 = G__10506;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10472), trace$core$props__GT_state_$_iter__10469.call(null, cljs.core.chunk_rest.call(null, s__10470__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10472), null);
              }
            } else {
              var p = cljs.core.first.call(null, s__10470__$2);
              var v = (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(p);
              return cljs.core.cons.call(null, cljs.core.assoc.call(null, p, new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), function() {
                var or__4308__auto__ = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(p);
                if (cljs.core.truth_(or__4308__auto__)) {
                  return or__4308__auto__;
                } else {
                  return cljs.core.count.call(null, v);
                }
              }() > 1, new cljs.core.Keyword(null, "values", "values", 372645556), cljs.core.vec.call(null, function() {
                var iter__5062__auto__ = function(v, p, s__10470__$2, temp__4425__auto__) {
                  return function trace$core$props__GT_state_$_iter__10469_$_iter__10497(s__10498) {
                    return new cljs.core.LazySeq(null, function(v, p, s__10470__$2, temp__4425__auto__) {
                      return function() {
                        var s__10498__$1 = s__10498;
                        while (true) {
                          var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10498__$1);
                          if (temp__4425__auto____$1) {
                            var s__10498__$2 = temp__4425__auto____$1;
                            if (cljs.core.chunked_seq_QMARK_.call(null, s__10498__$2)) {
                              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10498__$2);
                              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                              var b__10500 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                              if (function() {
                                var i__10499 = 0;
                                while (true) {
                                  if (i__10499 < size__5061__auto__) {
                                    var map__10503 = cljs.core._nth.call(null, c__5060__auto__, i__10499);
                                    var map__10503__$1 = cljs.core.seq_QMARK_.call(null, map__10503) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10503) : map__10503;
                                    var txn = cljs.core.get.call(null, map__10503__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
                                    var val = cljs.core.get.call(null, map__10503__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                                    var id = cljs.core.get.call(null, map__10503__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
                                    cljs.core.chunk_append.call(null, b__10500, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "txn", "txn", -469204789), txn, new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(p), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 
                                    1191953630)).cljs$core$IFn$_invoke$arity$1(p)) ? trace$core$props__GT_state.call(null, val) : val], null));
                                    var G__10507 = i__10499 + 1;
                                    i__10499 = G__10507;
                                    continue;
                                  } else {
                                    return true;
                                  }
                                  break;
                                }
                              }()) {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10500), trace$core$props__GT_state_$_iter__10469_$_iter__10497.call(null, cljs.core.chunk_rest.call(null, s__10498__$2)));
                              } else {
                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10500), null);
                              }
                            } else {
                              var map__10504 = cljs.core.first.call(null, s__10498__$2);
                              var map__10504__$1 = cljs.core.seq_QMARK_.call(null, map__10504) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10504) : map__10504;
                              var txn = cljs.core.get.call(null, map__10504__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
                              var val = cljs.core.get.call(null, map__10504__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
                              var id = cljs.core.get.call(null, map__10504__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
                              return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "txn", "txn", -469204789), txn, new cljs.core.Keyword(null, "id", "id", -1388402092), id, new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(p), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(p)) ? 
                              trace$core$props__GT_state.call(null, val) : val], null), trace$core$props__GT_state_$_iter__10469_$_iter__10497.call(null, cljs.core.rest.call(null, s__10498__$2)));
                            }
                          } else {
                            return null;
                          }
                          break;
                        }
                      };
                    }(v, p, s__10470__$2, temp__4425__auto__), null, null);
                  };
                }(v, p, s__10470__$2, temp__4425__auto__);
                return iter__5062__auto__.call(null, v);
              }())), trace$core$props__GT_state_$_iter__10469.call(null, cljs.core.rest.call(null, s__10470__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, props);
  }());
};
trace.core.resp__GT_state = function trace$core$resp__GT_state(resp) {
  var txns = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5062__auto__ = function trace$core$resp__GT_state_$_iter__10512(s__10513) {
      return new cljs.core.LazySeq(null, function() {
        var s__10513__$1 = s__10513;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__10513__$1);
          if (temp__4425__auto__) {
            var s__10513__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__10513__$2)) {
              var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10513__$2);
              var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
              var b__10515 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
              if (function() {
                var i__10514 = 0;
                while (true) {
                  if (i__10514 < size__5061__auto__) {
                    var t = cljs.core._nth.call(null, c__5060__auto__, i__10514);
                    cljs.core.chunk_append.call(null, b__10515, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null));
                    var G__10516 = i__10514 + 1;
                    i__10514 = G__10516;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10515), trace$core$resp__GT_state_$_iter__10512.call(null, cljs.core.chunk_rest.call(null, s__10513__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10515), null);
              }
            } else {
              var t = cljs.core.first.call(null, s__10513__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null), trace$core$resp__GT_state_$_iter__10512.call(null, cljs.core.rest.call(null, s__10513__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(resp));
  }());
  return trace.core.props__GT_state.call(null, (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(resp));
};
trace.core.TempIDObj = function(part, id) {
  this.part = part;
  this.id = id;
  this.cljs$lang$protocol_mask$partition0$ = 2147483648;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
trace.core.TempIDObj.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, opts) {
  var self__ = this;
  var ___$1 = this;
  cljs.core._write.call(null, writer, "#db/id[");
  cljs.core._pr_writer.call(null, self__.part, writer, opts);
  cljs.core._write.call(null, writer, " ");
  cljs.core._write.call(null, writer, [cljs.core.str(self__.id)].join(""));
  return cljs.core._write.call(null, writer, "]");
};
trace.core.TempIDObj.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "part", "part", 1718289265, null), new cljs.core.Symbol(null, "id", "id", 252129435, null)], null);
};
trace.core.TempIDObj.cljs$lang$type = true;
trace.core.TempIDObj.cljs$lang$ctorStr = "trace.core/TempIDObj";
trace.core.TempIDObj.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
  return cljs.core._write.call(null, writer__4888__auto__, "trace.core/TempIDObj");
};
trace.core.__GT_TempIDObj = function trace$core$__GT_TempIDObj(part, id) {
  return new trace.core.TempIDObj(part, id);
};
trace.core.tempid = function() {
  var seed = cljs.core.atom.call(null, -1E3);
  return function(seed) {
    return function(part) {
      return new trace.core.TempIDObj(part, cljs.core.swap_BANG_.call(null, seed, cljs.core.dec));
    };
  }(seed);
}();
trace.core.display = function trace$core$display(show) {
  if (cljs.core.truth_(show)) {
    return cljs.core.PersistentArrayMap.EMPTY;
  } else {
    return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "display", "display", 242065432), "none"], null);
  }
};
trace.core.text_edit = function trace$core$text_edit(p__10517, owner) {
  var map__10526 = p__10517;
  var map__10526__$1 = cljs.core.seq_QMARK_.call(null, map__10526) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10526) : map__10526;
  var vh = map__10526__$1;
  var added = cljs.core.get.call(null, map__10526__$1, new cljs.core.Keyword(null, "added", "added", 2057651688));
  if (typeof trace.core.t10527 !== "undefined") {
  } else {
    trace.core.t10527 = function(text_edit, p__10517, owner, map__10526, vh, added, meta10528) {
      this.text_edit = text_edit;
      this.p__10517 = p__10517;
      this.owner = owner;
      this.map__10526 = map__10526;
      this.vh = vh;
      this.added = added;
      this.meta10528 = meta10528;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10527.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10526, map__10526__$1, vh, added) {
      return function(_10529, meta10528__$1) {
        var self__ = this;
        var _10529__$1 = this;
        return new trace.core.t10527(self__.text_edit, self__.p__10517, self__.owner, self__.map__10526, self__.vh, self__.added, meta10528__$1);
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10526, map__10526__$1, vh, added) {
      return function(_10529) {
        var self__ = this;
        var _10529__$1 = this;
        return self__.meta10528;
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.prototype.om$core$IDidMount$ = true;
    trace.core.t10527.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__10526, map__10526__$1, vh, added) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.prototype.om$core$IInitState$ = true;
    trace.core.t10527.prototype.om$core$IInitState$init_state$arity$1 = function(map__10526, map__10526__$1, vh, added) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "editing", "editing", 1365491601), cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))], null);
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.prototype.om$core$IRenderState$ = true;
    trace.core.t10527.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10526, map__10526__$1, vh, added) {
      return function(_, p__10530) {
        var self__ = this;
        var map__10531 = p__10530;
        var map__10531__$1 = cljs.core.seq_QMARK_.call(null, map__10531) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10531) : map__10531;
        var editing = cljs.core.get.call(null, map__10531__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$1 = this;
        var val = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          }
        }();
        return cljs.core.apply.call(null, React.DOM.span, {"className":"edit-root", "tabIndex":om_tools.dom.format_opts.call(null, cljs.core.truth_(editing) ? -1 : 0), "onFocus":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.span, {"className":"edit-inactive", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, editing))), "onDoubleClick":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10531, map__10531__$1, editing, 
        map__10526, map__10526__$1, vh, added) {
          return function(event) {
            if (cljs.core.truth_(trace_logged_in)) {
              event.preventDefault();
              event.stopPropagation();
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
            } else {
              return null;
            }
          };
        }(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "New value..." : val], null))), om.dom.input.call(null, {"ref":"input", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, editing)), "className":"text-editable", "placeholder":"Enter text...", 
        "value":om_tools.dom.format_opts.call(null, cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "" : val), "onChange":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added) {
          return function(e) {
            return om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), e.target.value);
          };
        }(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added)), "onBlur":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
          };
        }(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added)), "onKeyPress":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added) {
          return function(e) {
            if (e.charCode === 13) {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
            } else {
              return null;
            }
          };
        }(val, ___$1, map__10531, map__10531__$1, editing, map__10526, map__10526__$1, vh, added))})], null)));
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.prototype.om$core$IDidUpdate$ = true;
    trace.core.t10527.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__10526, map__10526__$1, vh, added) {
      return function(_, ___$1, p__10532) {
        var self__ = this;
        var map__10533 = p__10532;
        var map__10533__$1 = cljs.core.seq_QMARK_.call(null, map__10533) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10533) : map__10533;
        var editing = cljs.core.get.call(null, map__10533__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$2 = this;
        if (cljs.core.truth_(function() {
          var and__4296__auto__ = cljs.core.not.call(null, editing);
          if (and__4296__auto__) {
            return om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
          } else {
            return and__4296__auto__;
          }
        }())) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.getBasis = function(map__10526, map__10526__$1, vh, added) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "text-edit", "text-edit", -17077222, null), new cljs.core.Symbol(null, "p__10517", "p__10517", 740753473, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "map__10526", "map__10526", -638657798, null), new cljs.core.Symbol(null, "vh", "vh", 1720084373, null), new cljs.core.Symbol(null, "added", "added", -596784081, null), new cljs.core.Symbol(null, 
        "meta10528", "meta10528", -27530365, null)], null);
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.t10527.cljs$lang$type = true;
    trace.core.t10527.cljs$lang$ctorStr = "trace.core/t10527";
    trace.core.t10527.cljs$lang$ctorPrWriter = function(map__10526, map__10526__$1, vh, added) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10527");
      };
    }(map__10526, map__10526__$1, vh, added);
    trace.core.__GT_t10527 = function(map__10526, map__10526__$1, vh, added) {
      return function trace$core$text_edit_$___GT_t10527(text_edit__$1, p__10517__$1, owner__$1, map__10526__$2, vh__$1, added__$1, meta10528) {
        return new trace.core.t10527(text_edit__$1, p__10517__$1, owner__$1, map__10526__$2, vh__$1, added__$1, meta10528);
      };
    }(map__10526, map__10526__$1, vh, added);
  }
  return new trace.core.t10527(trace$core$text_edit, p__10517, owner, map__10526__$1, vh, added, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.int_edit = function trace$core$int_edit(p__10534, owner) {
  var map__10543 = p__10534;
  var map__10543__$1 = cljs.core.seq_QMARK_.call(null, map__10543) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10543) : map__10543;
  var vh = map__10543__$1;
  var added = cljs.core.get.call(null, map__10543__$1, new cljs.core.Keyword(null, "added", "added", 2057651688));
  if (typeof trace.core.t10544 !== "undefined") {
  } else {
    trace.core.t10544 = function(int_edit, p__10534, owner, map__10543, vh, added, meta10545) {
      this.int_edit = int_edit;
      this.p__10534 = p__10534;
      this.owner = owner;
      this.map__10543 = map__10543;
      this.vh = vh;
      this.added = added;
      this.meta10545 = meta10545;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10544.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10543, map__10543__$1, vh, added) {
      return function(_10546, meta10545__$1) {
        var self__ = this;
        var _10546__$1 = this;
        return new trace.core.t10544(self__.int_edit, self__.p__10534, self__.owner, self__.map__10543, self__.vh, self__.added, meta10545__$1);
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10543, map__10543__$1, vh, added) {
      return function(_10546) {
        var self__ = this;
        var _10546__$1 = this;
        return self__.meta10545;
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.prototype.om$core$IDidMount$ = true;
    trace.core.t10544.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__10543, map__10543__$1, vh, added) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.prototype.om$core$IInitState$ = true;
    trace.core.t10544.prototype.om$core$IInitState$init_state$arity$1 = function(map__10543, map__10543__$1, vh, added) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "editing", "editing", 1365491601), cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))], null);
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.prototype.om$core$IRenderState$ = true;
    trace.core.t10544.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10543, map__10543__$1, vh, added) {
      return function(_, p__10547) {
        var self__ = this;
        var map__10548 = p__10547;
        var map__10548__$1 = cljs.core.seq_QMARK_.call(null, map__10548) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10548) : map__10548;
        var editing = cljs.core.get.call(null, map__10548__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$1 = this;
        var val = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          }
        }();
        return cljs.core.apply.call(null, React.DOM.span, {"className":"edit-root", "tabIndex":om_tools.dom.format_opts.call(null, cljs.core.truth_(editing) ? -1 : 0), "onFocus":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.span, {"className":"edit-inactive", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, editing))), "onDoubleClick":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10548, map__10548__$1, editing, 
        map__10543, map__10543__$1, vh, added) {
          return function(event) {
            if (cljs.core.truth_(trace_logged_in)) {
              event.preventDefault();
              event.stopPropagation();
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
            } else {
              return null;
            }
          };
        }(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "New value..." : [cljs.core.str(val)].join("")], null))), om.dom.input.call(null, {"ref":"input", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, editing)), "className":"text-editable", 
        "placeholder":"Enter number", "value":om_tools.dom.format_opts.call(null, cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "" : [cljs.core.str(val)].join("")), "onChange":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added) {
          return function(e) {
            var ns = e.target.value;
            if (cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, ns))) {
              return om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), parseInt(ns));
            } else {
              return null;
            }
          };
        }(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added)), "onBlur":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
          };
        }(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added)), "onKeyPress":om_tools.dom.format_opts.call(null, function(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added) {
          return function(e) {
            if (e.charCode === 13) {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
            } else {
              return null;
            }
          };
        }(val, ___$1, map__10548, map__10548__$1, editing, map__10543, map__10543__$1, vh, added))})], null)));
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.prototype.om$core$IDidUpdate$ = true;
    trace.core.t10544.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__10543, map__10543__$1, vh, added) {
      return function(_, ___$1, p__10549) {
        var self__ = this;
        var map__10550 = p__10549;
        var map__10550__$1 = cljs.core.seq_QMARK_.call(null, map__10550) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10550) : map__10550;
        var editing = cljs.core.get.call(null, map__10550__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$2 = this;
        if (cljs.core.truth_(function() {
          var and__4296__auto__ = cljs.core.not.call(null, editing);
          if (and__4296__auto__) {
            return om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
          } else {
            return and__4296__auto__;
          }
        }())) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.getBasis = function(map__10543, map__10543__$1, vh, added) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "int-edit", "int-edit", -49465788, null), new cljs.core.Symbol(null, "p__10534", "p__10534", 950081747, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "map__10543", "map__10543", 1815931741, null), new cljs.core.Symbol(null, "vh", "vh", 1720084373, null), new cljs.core.Symbol(null, "added", "added", -596784081, null), new cljs.core.Symbol(null, 
        "meta10545", "meta10545", 1315156400, null)], null);
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.t10544.cljs$lang$type = true;
    trace.core.t10544.cljs$lang$ctorStr = "trace.core/t10544";
    trace.core.t10544.cljs$lang$ctorPrWriter = function(map__10543, map__10543__$1, vh, added) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10544");
      };
    }(map__10543, map__10543__$1, vh, added);
    trace.core.__GT_t10544 = function(map__10543, map__10543__$1, vh, added) {
      return function trace$core$int_edit_$___GT_t10544(int_edit__$1, p__10534__$1, owner__$1, map__10543__$2, vh__$1, added__$1, meta10545) {
        return new trace.core.t10544(int_edit__$1, p__10534__$1, owner__$1, map__10543__$2, vh__$1, added__$1, meta10545);
      };
    }(map__10543, map__10543__$1, vh, added);
  }
  return new trace.core.t10544(trace$core$int_edit, p__10534, owner, map__10543__$1, vh, added, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.boolean_edit = function trace$core$boolean_edit(vh, owner) {
  if (typeof trace.core.t10556 !== "undefined") {
  } else {
    trace.core.t10556 = function(boolean_edit, vh, owner, meta10557) {
      this.boolean_edit = boolean_edit;
      this.vh = vh;
      this.owner = owner;
      this.meta10557 = meta10557;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10556.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10558, meta10557__$1) {
      var self__ = this;
      var _10558__$1 = this;
      return new trace.core.t10556(self__.boolean_edit, self__.vh, self__.owner, meta10557__$1);
    };
    trace.core.t10556.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10558) {
      var self__ = this;
      var _10558__$1 = this;
      return self__.meta10557;
    };
    trace.core.t10556.prototype.om$core$IInitState$ = true;
    trace.core.t10556.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "editing", "editing", 1365491601), false], null);
    };
    trace.core.t10556.prototype.om$core$IRenderState$ = true;
    trace.core.t10556.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__10559) {
      var self__ = this;
      var map__10560 = p__10559;
      var map__10560__$1 = cljs.core.seq_QMARK_.call(null, map__10560) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10560) : map__10560;
      var editing = cljs.core.get.call(null, map__10560__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
      var ___$1 = this;
      var val = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh) == null ? (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.vh) : (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh);
      var val__$1 = cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "New value..." : val;
      return cljs.core.apply.call(null, React.DOM.span, {"className":"edit-root", "tabIndex":om_tools.dom.format_opts.call(null, cljs.core.truth_(editing) ? -1 : 0), "onFocus":om_tools.dom.format_opts.call(null, function(val, val__$1, ___$1, map__10560, map__10560__$1, editing) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
        };
      }(val, val__$1, ___$1, map__10560, map__10560__$1, editing))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.span, {"className":"edit-inactive", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, editing))), "onDoubleClick":om_tools.dom.format_opts.call(null, function(val, val__$1, ___$1, map__10560, map__10560__$1, editing) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
        };
      }(val, val__$1, ___$1, map__10560, map__10560__$1, editing))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(val__$1)].join("")], null))), cljs.core.apply.call(null, React.DOM.select, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, editing)), "value":om_tools.dom.format_opts.call(null, [cljs.core.str(val__$1)].join("")), "onChange":om_tools.dom.format_opts.call(null, function(val, val__$1, 
      ___$1, map__10560, map__10560__$1, editing) {
        return function(e) {
          om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), cljs.core._EQ_.call(null, e.target.value, "true"));
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
        };
      }(val, val__$1, ___$1, map__10560, map__10560__$1, editing))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, {"value":"false"}, "false"), om.dom.option.call(null, {"value":"true"}, "true")], null)))], null)));
    };
    trace.core.t10556.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "boolean-edit", "boolean-edit", -1383152E3, null), new cljs.core.Symbol(null, "vh", "vh", 1720084373, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10557", "meta10557", 657391391, null)], null);
    };
    trace.core.t10556.cljs$lang$type = true;
    trace.core.t10556.cljs$lang$ctorStr = "trace.core/t10556";
    trace.core.t10556.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10556");
    };
    trace.core.__GT_t10556 = function trace$core$boolean_edit_$___GT_t10556(boolean_edit__$1, vh__$1, owner__$1, meta10557) {
      return new trace.core.t10556(boolean_edit__$1, vh__$1, owner__$1, meta10557);
    };
  }
  return new trace.core.t10556(trace$core$boolean_edit, vh, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.enum_edit = function trace$core$enum_edit(p__10561, owner, p__10562) {
  var map__10576 = p__10561;
  var map__10576__$1 = cljs.core.seq_QMARK_.call(null, map__10576) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10576) : map__10576;
  var vh = map__10576__$1;
  var added = cljs.core.get.call(null, map__10576__$1, new cljs.core.Keyword(null, "added", "added", 2057651688));
  var map__10577 = p__10562;
  var map__10577__$1 = cljs.core.seq_QMARK_.call(null, map__10577) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10577) : map__10577;
  var tns = cljs.core.get.call(null, map__10577__$1, new cljs.core.Keyword(null, "tns", "tns", 1887890274));
  if (typeof trace.core.t10578 !== "undefined") {
  } else {
    trace.core.t10578 = function(enum_edit, p__10561, owner, p__10562, map__10576, vh, added, map__10577, tns, meta10579) {
      this.enum_edit = enum_edit;
      this.p__10561 = p__10561;
      this.owner = owner;
      this.p__10562 = p__10562;
      this.map__10576 = map__10576;
      this.vh = vh;
      this.added = added;
      this.map__10577 = map__10577;
      this.tns = tns;
      this.meta10579 = meta10579;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10578.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_10580, meta10579__$1) {
        var self__ = this;
        var _10580__$1 = this;
        return new trace.core.t10578(self__.enum_edit, self__.p__10561, self__.owner, self__.p__10562, self__.map__10576, self__.vh, self__.added, self__.map__10577, self__.tns, meta10579__$1);
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_10580) {
        var self__ = this;
        var _10580__$1 = this;
        return self__.meta10579;
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.prototype.om$core$IInitState$ = true;
    trace.core.t10578.prototype.om$core$IInitState$init_state$arity$1 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "editing", "editing", 1365491601), cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))], null);
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.prototype.om$core$IDidMount$ = true;
    trace.core.t10578.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.prototype.om$core$IDidUpdate$ = true;
    trace.core.t10578.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_, ___$1, p__10581) {
        var self__ = this;
        var map__10582 = p__10581;
        var map__10582__$1 = cljs.core.seq_QMARK_.call(null, map__10582) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10582) : map__10582;
        var editing = cljs.core.get.call(null, map__10582__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$2 = this;
        if (cljs.core.truth_(function() {
          var and__4296__auto__ = cljs.core.not.call(null, editing);
          if (and__4296__auto__) {
            return om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
          } else {
            return and__4296__auto__;
          }
        }())) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.prototype.om$core$IRenderState$ = true;
    trace.core.t10578.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(_, p__10583) {
        var self__ = this;
        var map__10584 = p__10583;
        var map__10584__$1 = cljs.core.seq_QMARK_.call(null, map__10584) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10584) : map__10584;
        var editing = cljs.core.get.call(null, map__10584__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$1 = this;
        var val = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          }
        }();
        var val__$1 = cljs.core._EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? "New value..." : val;
        var schema = om.core.observe.call(null, self__.owner, trace.core.schema.call(null));
        var enum_values = (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(schema).call(null, self__.tns);
        return cljs.core.apply.call(null, React.DOM.span, {"className":"edit-root", "tabIndex":om_tools.dom.format_opts.call(null, cljs.core.truth_(editing) ? -1 : 0), "onFocus":om_tools.dom.format_opts.call(null, function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.span, {"className":"edit-inactive", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, editing))), "onDoubleClick":om_tools.dom.format_opts.call(null, 
        function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [val__$1 instanceof cljs.core.Keyword ? cljs.core.name.call(null, val__$1) : [cljs.core.str(val__$1)].join("")], null))), cljs.core.apply.call(null, React.DOM.select, {"ref":"input", "style":om_tools.dom.format_opts.call(null, 
        trace.core.display.call(null, editing)), "value":om_tools.dom.format_opts.call(null, val__$1 instanceof cljs.core.Keyword ? [cljs.core.str(cljs.core.namespace.call(null, val__$1)), cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, val__$1))].join("") : null), "onBlur":om_tools.dom.format_opts.call(null, function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
          return function(___$2) {
            return setTimeout(function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
              return function() {
                return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
              };
            }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns), 200);
          };
        }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns)), "onChange":om_tools.dom.format_opts.call(null, function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
          return function(e) {
            om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), cljs.core.keyword.call(null, e.target.value));
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
          };
        }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var iter__5062__auto__ = function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
            return function trace$core$enum_edit_$_iter__10585(s__10586) {
              return new cljs.core.LazySeq(null, function(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
                return function() {
                  var s__10586__$1 = s__10586;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__10586__$1);
                    if (temp__4425__auto__) {
                      var s__10586__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10586__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10586__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__10588 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__10587 = 0;
                          while (true) {
                            if (i__10587 < size__5061__auto__) {
                              var ev = cljs.core._nth.call(null, c__5060__auto__, i__10587);
                              var id = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ev);
                              cljs.core.chunk_append.call(null, b__10588, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str(cljs.core.namespace.call(null, id)), cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, id))].join(""))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, id)], null))));
                              var G__10589 = i__10587 + 1;
                              i__10587 = G__10589;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10588), trace$core$enum_edit_$_iter__10585.call(null, cljs.core.chunk_rest.call(null, s__10586__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10588), null);
                        }
                      } else {
                        var ev = cljs.core.first.call(null, s__10586__$2);
                        var id = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ev);
                        return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str(cljs.core.namespace.call(null, id)), cljs.core.str("/"), cljs.core.str(cljs.core.name.call(null, id))].join(""))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, id)], null))), trace$core$enum_edit_$_iter__10585.call(null, cljs.core.rest.call(null, s__10586__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns), null, null);
            };
          }(val, val__$1, schema, enum_values, ___$1, map__10584, map__10584__$1, editing, map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
          return iter__5062__auto__.call(null, enum_values);
        }()], null)))], null)));
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.getBasis = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function() {
        return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "enum-edit", "enum-edit", -2066328332, null), new cljs.core.Symbol(null, "p__10561", "p__10561", -1203175024, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10562", "p__10562", 547524062, null), new cljs.core.Symbol(null, "map__10576", "map__10576", 305690148, null), new cljs.core.Symbol(null, "vh", "vh", 1720084373, null), 
        new cljs.core.Symbol(null, "added", "added", -596784081, null), new cljs.core.Symbol(null, "map__10577", "map__10577", 1031512253, null), new cljs.core.Symbol(null, "tns", "tns", -766545495, null), new cljs.core.Symbol(null, "meta10579", "meta10579", 1327671703, null)], null);
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.t10578.cljs$lang$type = true;
    trace.core.t10578.cljs$lang$ctorStr = "trace.core/t10578";
    trace.core.t10578.cljs$lang$ctorPrWriter = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10578");
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
    trace.core.__GT_t10578 = function(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns) {
      return function trace$core$enum_edit_$___GT_t10578(enum_edit__$1, p__10561__$1, owner__$1, p__10562__$1, map__10576__$2, vh__$1, added__$1, map__10577__$2, tns__$1, meta10579) {
        return new trace.core.t10578(enum_edit__$1, p__10561__$1, owner__$1, p__10562__$1, map__10576__$2, vh__$1, added__$1, map__10577__$2, tns__$1, meta10579);
      };
    }(map__10576, map__10576__$1, vh, added, map__10577, map__10577__$1, tns);
  }
  return new trace.core.t10578(trace$core$enum_edit, p__10561, owner, p__10562, map__10576__$1, vh, added, map__10577__$1, tns, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.ref_edit = function trace$core$ref_edit(p__10590, owner, p__10591) {
  var map__10613 = p__10590;
  var map__10613__$1 = cljs.core.seq_QMARK_.call(null, map__10613) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10613) : map__10613;
  var vh = map__10613__$1;
  var added = cljs.core.get.call(null, map__10613__$1, new cljs.core.Keyword(null, "added", "added", 2057651688));
  var map__10614 = p__10591;
  var map__10614__$1 = cljs.core.seq_QMARK_.call(null, map__10614) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10614) : map__10614;
  var class$ = cljs.core.get.call(null, map__10614__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
  if (typeof trace.core.t10615 !== "undefined") {
  } else {
    trace.core.t10615 = function(ref_edit, p__10590, owner, p__10591, map__10613, vh, added, map__10614, class$, meta10616) {
      this.ref_edit = ref_edit;
      this.p__10590 = p__10590;
      this.owner = owner;
      this.p__10591 = p__10591;
      this.map__10613 = map__10613;
      this.vh = vh;
      this.added = added;
      this.map__10614 = map__10614;
      this.class$ = class$;
      this.meta10616 = meta10616;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10615.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_10617, meta10616__$1) {
        var self__ = this;
        var _10617__$1 = this;
        return new trace.core.t10615(self__.ref_edit, self__.p__10590, self__.owner, self__.p__10591, self__.map__10613, self__.vh, self__.added, self__.map__10614, self__.class$, meta10616__$1);
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_10617) {
        var self__ = this;
        var _10617__$1 = this;
        return self__.meta10616;
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.prototype.om$core$IInitState$ = true;
    trace.core.t10615.prototype.om$core$IInitState$init_state$arity$1 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "editing", "editing", 1365491601), cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id)), new cljs.core.Keyword(null, "ncand", "ncand", 854914187), -1, new cljs.core.Keyword(null, "candidates", "candidates", 1964038664), null], null);
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.prototype.om$core$IDidMount$ = true;
    trace.core.t10615.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.prototype.om$core$IDidUpdate$ = true;
    trace.core.t10615.prototype.om$core$IDidUpdate$did_update$arity$3 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_, ___$1, p__10618) {
        var self__ = this;
        var map__10619 = p__10618;
        var map__10619__$1 = cljs.core.seq_QMARK_.call(null, map__10619) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10619) : map__10619;
        var editing = cljs.core.get.call(null, map__10619__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ___$2 = this;
        if (cljs.core.truth_(function() {
          var and__4296__auto__ = cljs.core.not.call(null, editing);
          if (and__4296__auto__) {
            return om.core.get_state.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
          } else {
            return and__4296__auto__;
          }
        }())) {
          return om.core.get_node.call(null, self__.owner, "input").focus();
        } else {
          return null;
        }
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.prototype.om$core$IRenderState$ = true;
    trace.core.t10615.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(_, p__10620) {
        var self__ = this;
        var map__10621 = p__10620;
        var map__10621__$1 = cljs.core.seq_QMARK_.call(null, map__10621) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10621) : map__10621;
        var editing = cljs.core.get.call(null, map__10621__$1, new cljs.core.Keyword(null, "editing", "editing", 1365491601));
        var ncand = cljs.core.get.call(null, map__10621__$1, new cljs.core.Keyword(null, "ncand", "ncand", 854914187));
        var candidates = cljs.core.get.call(null, map__10621__$1, new cljs.core.Keyword(null, "candidates", "candidates", 1964038664));
        var checked = cljs.core.get.call(null, map__10621__$1, new cljs.core.Keyword(null, "checked", "checked", -50955819));
        var ___$1 = this;
        var val = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.vh);
          }
        }();
        var vname = cljs.core.not_EQ_.call(null, val, new cljs.core.Keyword(null, "empty", "empty", 767870958)) ? cljs.core.second.call(null, val) : null;
        var create_QMARK_ = cljs.core.sequential_QMARK_.call(null, val) && cljs.core._EQ_.call(null, cljs.core.last.call(null, val), new cljs.core.Keyword(null, "create", "create", -1301499256));
        var update_cands = function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function trace$core$ref_edit_$_update_cands(prefix) {
            if (cljs.core.not_EQ_.call(null, checked, prefix)) {
              return trace.utils.edn_xhr.call(null, [cljs.core.str("/prefix-search?class\x3d"), cljs.core.str(cljs.core.namespace.call(null, self__.class$)), cljs.core.str("\x26prefix\x3d"), cljs.core.str(prefix)].join(""), function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
                return function(p__10628) {
                  var map__10629 = p__10628;
                  var map__10629__$1 = cljs.core.seq_QMARK_.call(null, map__10629) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10629) : map__10629;
                  var ncnt = cljs.core.get.call(null, map__10629__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
                  var names = cljs.core.get.call(null, map__10629__$1, new cljs.core.Keyword(null, "names", "names", -1943074658));
                  om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "checked", "checked", -50955819), prefix);
                  om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "ncand", "ncand", 854914187), ncnt);
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "candidates", "candidates", 1964038664), names);
                };
              }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$));
            } else {
              return null;
            }
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
        return cljs.core.apply.call(null, React.DOM.span, {"className":"edit-root", "tabIndex":om_tools.dom.format_opts.call(null, cljs.core.truth_(editing) ? -1 : 0), "onFocus":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function() {
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-plus-circle", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, create_QMARK_))}), cljs.core.apply.call(null, React.DOM.span, {"className":"edit-inactive", 
        "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, editing))), "onDoubleClick":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function(event) {
            update_cands.call(null, vname);
            event.preventDefault();
            event.stopPropagation();
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), true);
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var or__4308__auto__ = vname;
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return "New reference...";
          }
        }()], null))), cljs.core.apply.call(null, React.DOM.div, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, editing)), "className":"candidate-list"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var iter__5062__auto__ = function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
            return function trace$core$ref_edit_$_iter__10630(s__10631) {
              return new cljs.core.LazySeq(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
                return function() {
                  var s__10631__$1 = s__10631;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__10631__$1);
                    if (temp__4425__auto__) {
                      var s__10631__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10631__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10631__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__10633 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__10632 = 0;
                          while (true) {
                            if (i__10632 < size__5061__auto__) {
                              var c = cljs.core._nth.call(null, c__5060__auto__, i__10632);
                              cljs.core.chunk_append.call(null, b__10633, cljs.core.apply.call(null, React.DOM.div, {"className":"candidate-item", "onClick":om_tools.dom.format_opts.call(null, function(i__10632, c, c__5060__auto__, size__5061__auto__, b__10633, s__10631__$2, temp__4425__auto__, val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
                                return function(___$2) {
                                  update_cands.call(null, c);
                                  om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.class$, c], null));
                                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
                                };
                              }(i__10632, c, c__5060__auto__, size__5061__auto__, b__10633, s__10631__$2, temp__4425__auto__, val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null))));
                              var G__10634 = i__10632 + 1;
                              i__10632 = G__10634;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10633), trace$core$ref_edit_$_iter__10630.call(null, cljs.core.chunk_rest.call(null, s__10631__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10633), null);
                        }
                      } else {
                        var c = cljs.core.first.call(null, s__10631__$2);
                        return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.div, {"className":"candidate-item", "onClick":om_tools.dom.format_opts.call(null, function(c, s__10631__$2, temp__4425__auto__, val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
                          return function(___$2) {
                            update_cands.call(null, c);
                            om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.class$, c], null));
                            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
                          };
                        }(c, s__10631__$2, temp__4425__auto__, val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null))), trace$core$ref_edit_$_iter__10630.call(null, cljs.core.rest.call(null, s__10631__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$), null, null);
            };
          }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
          return iter__5062__auto__.call(null, candidates);
        }(), ncand > cljs.core.count.call(null, candidates) ? om_tools.dom.element.call(null, React.DOM.div, om_tools.dom.element.call(null, React.DOM.em, [cljs.core.str("And "), cljs.core.str(ncand - cljs.core.count.call(null, candidates)), cljs.core.str(" more")].join(""), cljs.core.PersistentVector.EMPTY), cljs.core.PersistentVector.EMPTY) : null], null))), om.dom.input.call(null, {"ref":"input", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, editing)), "value":om_tools.dom.format_opts.call(null, 
        vname), "placeholder":om_tools.dom.format_opts.call(null, [cljs.core.str(self__.class$), cljs.core.str(" id...")].join("")), "onChange":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function(e) {
            var p = e.target.value;
            update_cands.call(null, p);
            return om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.class$, p], null));
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$)), "onBlur":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function(___$2) {
            return setTimeout(function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
              return function() {
                return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
              };
            }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$), 200);
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$)), "onKeyPress":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function(e) {
            if (e.charCode === 13) {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
            } else {
              return null;
            }
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}), cljs.core.apply.call(null, React.DOM.span, {"style":{"visibility":om_tools.dom.format_opts.call(null, !create_QMARK_ && cljs.core._EQ_.call(null, checked, vname) && cljs.core.not_EQ_.call(null, cljs.core.first.call(null, candidates), vname) ? "visible" : "hidden")}}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 
        2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.span({"style":{"color":"red"}}, " Doesn't exist "), React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
          return function(___$2) {
            om.core.update_BANG_.call(null, self__.vh, new cljs.core.Keyword(null, "edit", "edit", -1641834166), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.class$, vname, new cljs.core.Keyword(null, "create", "create", -1301499256)], null));
            return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false);
          };
        }(val, vname, create_QMARK_, ___$1, map__10621, map__10621__$1, editing, ncand, candidates, checked, map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$))}, "Create")], null)))], null)));
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.getBasis = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function() {
        return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ref-edit", "ref-edit", 1225204077, null), new cljs.core.Symbol(null, "p__10590", "p__10590", 345850590, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10591", "p__10591", 1952651996, null), new cljs.core.Symbol(null, "map__10613", "map__10613", -1119192437, null), new cljs.core.Symbol(null, "vh", "vh", 1720084373, null), 
        new cljs.core.Symbol(null, "added", "added", -596784081, null), new cljs.core.Symbol(null, "map__10614", "map__10614", -1653816919, null), new cljs.core.Symbol(null, "class", "class", -390430469, null), new cljs.core.Symbol(null, "meta10616", "meta10616", 753352759, null)], null);
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.t10615.cljs$lang$type = true;
    trace.core.t10615.cljs$lang$ctorStr = "trace.core/t10615";
    trace.core.t10615.cljs$lang$ctorPrWriter = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10615");
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
    trace.core.__GT_t10615 = function(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$) {
      return function trace$core$ref_edit_$___GT_t10615(ref_edit__$1, p__10590__$1, owner__$1, p__10591__$1, map__10613__$2, vh__$1, added__$1, map__10614__$2, class$__$1, meta10616) {
        return new trace.core.t10615(ref_edit__$1, p__10590__$1, owner__$1, p__10591__$1, map__10613__$2, vh__$1, added__$1, map__10614__$2, class$__$1, meta10616);
      };
    }(map__10613, map__10613__$1, vh, added, map__10614, map__10614__$1, class$);
  }
  return new trace.core.t10615(trace$core$ref_edit, p__10590, owner, p__10591, map__10613__$1, vh, added, map__10614__$1, class$, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.curator_name = function trace$core$curator_name(c) {
  var or__4308__auto__ = (new cljs.core.Keyword("person", "standard-name", "person/standard-name", 1949928769)).cljs$core$IFn$_invoke$arity$1(c);
  if (cljs.core.truth_(or__4308__auto__)) {
    return or__4308__auto__;
  } else {
    return (new cljs.core.Keyword("person", "id", "person/id", -392409377)).cljs$core$IFn$_invoke$arity$1(c);
  }
};
trace.core.txn_view = function trace$core$txn_view(p__10635, owner, p__10636) {
  var map__10688 = p__10635;
  var map__10688__$1 = cljs.core.seq_QMARK_.call(null, map__10688) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10688) : map__10688;
  var val_holder = map__10688__$1;
  var txn = cljs.core.get.call(null, map__10688__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
  var map__10689 = p__10636;
  var map__10689__$1 = cljs.core.seq_QMARK_.call(null, map__10689) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10689) : map__10689;
  var entid = cljs.core.get.call(null, map__10689__$1, new cljs.core.Keyword(null, "entid", "entid", 1720688982));
  var key = cljs.core.get.call(null, map__10689__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
  if (typeof trace.core.t10690 !== "undefined") {
  } else {
    trace.core.t10690 = function(owner, p__10635, val_holder, map__10688, key, txn_view, txn, map__10689, p__10636, entid, meta10691) {
      this.owner = owner;
      this.p__10635 = p__10635;
      this.val_holder = val_holder;
      this.map__10688 = map__10688;
      this.key = key;
      this.txn_view = txn_view;
      this.txn = txn;
      this.map__10689 = map__10689;
      this.p__10636 = p__10636;
      this.entid = entid;
      this.meta10691 = meta10691;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10690.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function(_10692, meta10691__$1) {
        var self__ = this;
        var _10692__$1 = this;
        return new trace.core.t10690(self__.owner, self__.p__10635, self__.val_holder, self__.map__10688, self__.key, self__.txn_view, self__.txn, self__.map__10689, self__.p__10636, self__.entid, meta10691__$1);
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.t10690.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function(_10692) {
        var self__ = this;
        var _10692__$1 = this;
        return self__.meta10691;
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.t10690.prototype.om$core$IInitState$ = true;
    trace.core.t10690.prototype.om$core$IInitState$init_state$arity$1 = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "history", "history", -247395220), false], null);
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.t10690.prototype.om$core$IRenderState$ = true;
    trace.core.t10690.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function(_, p__10693) {
        var self__ = this;
        var map__10694 = p__10693;
        var map__10694__$1 = cljs.core.seq_QMARK_.call(null, map__10694) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10694) : map__10694;
        var history = cljs.core.get.call(null, map__10694__$1, new cljs.core.Keyword(null, "history", "history", -247395220));
        var hdata = cljs.core.get.call(null, map__10694__$1, new cljs.core.Keyword(null, "hdata", "hdata", 1831736057));
        var ___$1 = this;
        var txn_map = om.core.observe.call(null, self__.owner, trace.core.txns.call(null));
        return cljs.core.apply.call(null, React.DOM.span, {"className":"txn", "onClick":om_tools.dom.format_opts.call(null, function(txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
          return function(___$2) {
            if (cljs.core.not.call(null, history) && cljs.core.not.call(null, hdata)) {
              trace.utils.edn_xhr.call(null, [cljs.core.str("/history2/"), cljs.core.str(self__.entid), cljs.core.str("/"), cljs.core.str(self__.key)].join(""), function(txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                return function(resp) {
                  return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "hdata", "hdata", 1831736057), resp);
                };
              }(txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key));
            } else {
            }
            return om.core.update_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "history", "history", -247395220), cljs.core.not);
          };
        }(txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(history) ? cljs.core.apply.call(null, React.DOM.div, {"className":"x-history-box-holder"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, 
        React.DOM.div, {"className":"history-box"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(hdata) ? function() {
          var txmap = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.juxt.call(null, new cljs.core.Keyword("db", "id", "db/id", -1388397098), cljs.core.identity), (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(hdata)));
          return cljs.core.apply.call(null, React.DOM.table, {"className":"history-table table table-striped"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om_tools.dom.element.call(null, React.DOM.thead, om_tools.dom.element.call(null, React.DOM.tr, function() {
            var iter__5062__auto__ = function(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
              return function trace$core$txn_view_$_iter__10695(s__10696) {
                return new cljs.core.LazySeq(null, function(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                  return function() {
                    var s__10696__$1 = s__10696;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__10696__$1);
                      if (temp__4425__auto__) {
                        var s__10696__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__10696__$2)) {
                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10696__$2);
                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                          var b__10698 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                          if (function() {
                            var i__10697 = 0;
                            while (true) {
                              if (i__10697 < size__5061__auto__) {
                                var c = cljs.core._nth.call(null, c__5060__auto__, i__10697);
                                cljs.core.chunk_append.call(null, b__10698, om_tools.dom.element.call(null, React.DOM.th, c, cljs.core.PersistentVector.EMPTY));
                                var G__10739 = i__10697 + 1;
                                i__10697 = G__10739;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10698), trace$core$txn_view_$_iter__10695.call(null, cljs.core.chunk_rest.call(null, s__10696__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10698), null);
                          }
                        } else {
                          var c = cljs.core.first.call(null, s__10696__$2);
                          return cljs.core.cons.call(null, om_tools.dom.element.call(null, React.DOM.th, c, cljs.core.PersistentVector.EMPTY), trace$core$txn_view_$_iter__10695.call(null, cljs.core.rest.call(null, s__10696__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
              };
            }(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
            return iter__5062__auto__.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Date", "Action", "Value", "Who?", "Txn"], null));
          }(), cljs.core.PersistentVector.EMPTY), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.tbody, function() {
            var iter__5062__auto__ = function(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
              return function trace$core$txn_view_$_iter__10699(s__10700) {
                return new cljs.core.LazySeq(null, function(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                  return function() {
                    var s__10700__$1 = s__10700;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__10700__$1);
                      if (temp__4425__auto__) {
                        var s__10700__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__10700__$2)) {
                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10700__$2);
                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                          var b__10702 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                          if (function() {
                            var i__10701 = 0;
                            while (true) {
                              if (i__10701 < size__5061__auto__) {
                                var datoms = cljs.core._nth.call(null, c__5060__auto__, i__10701);
                                var map__10721 = cljs.core.group_by.call(null, new cljs.core.Keyword(null, "added?", "added?", 275514121), datoms);
                                var map__10721__$1 = cljs.core.seq_QMARK_.call(null, map__10721) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10721) : map__10721;
                                var added = cljs.core.get.call(null, map__10721__$1, true);
                                var retracted = cljs.core.get.call(null, map__10721__$1, false);
                                var txid = (new cljs.core.Keyword(null, "txid", "txid", 1606205478)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, datoms));
                                var txn__$1 = txmap.call(null, txid);
                                var time = trace.core.format_local.call(null, (new cljs.core.Keyword("db", "txInstant", "db/txInstant", -990494199)).cljs$core$IFn$_invoke$arity$1(txn__$1));
                                var who = function() {
                                  var temp__4423__auto__ = (new cljs.core.Keyword("wormbase", "curator", "wormbase/curator", -523055786)).cljs$core$IFn$_invoke$arity$1(txn__$1);
                                  if (cljs.core.truth_(temp__4423__auto__)) {
                                    var c = temp__4423__auto__;
                                    return trace.core.curator_name.call(null, c);
                                  } else {
                                    return (new cljs.core.Keyword("importer", "ts-name", "importer/ts-name", -158493644)).cljs$core$IFn$_invoke$arity$1(txn__$1);
                                  }
                                }();
                                var txln = cljs.core.apply.call(null, React.DOM.a, {"href":om_tools.dom.format_opts.call(null, [cljs.core.str("/curate/txns?t\x3d"), cljs.core.str(txid)].join("")), "target":"_new"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-file-text-o"})], null)));
                                cljs.core.chunk_append.call(null, b__10702, cljs.core._EQ_.call(null, cljs.core.count.call(null, added), cljs.core.count.call(null, retracted), 1) ? om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "changed"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, 
                                "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, added)), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)) : cljs.core.concat.call(null, function() {
                                  var iter__5062__auto__ = function(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                    return function trace$core$txn_view_$_iter__10699_$_iter__10722(s__10723) {
                                      return new cljs.core.LazySeq(null, function(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                        return function() {
                                          var s__10723__$1 = s__10723;
                                          while (true) {
                                            var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10723__$1);
                                            if (temp__4425__auto____$1) {
                                              var s__10723__$2 = temp__4425__auto____$1;
                                              if (cljs.core.chunked_seq_QMARK_.call(null, s__10723__$2)) {
                                                var c__5060__auto____$1 = cljs.core.chunk_first.call(null, s__10723__$2);
                                                var size__5061__auto____$1 = cljs.core.count.call(null, c__5060__auto____$1);
                                                var b__10725 = cljs.core.chunk_buffer.call(null, size__5061__auto____$1);
                                                if (function() {
                                                  var i__10724 = 0;
                                                  while (true) {
                                                    if (i__10724 < size__5061__auto____$1) {
                                                      var d = cljs.core._nth.call(null, c__5060__auto____$1, i__10724);
                                                      cljs.core.chunk_append.call(null, b__10725, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "retracted"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), 
                                                      om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)));
                                                      var G__10740 = i__10724 + 1;
                                                      i__10724 = G__10740;
                                                      continue;
                                                    } else {
                                                      return true;
                                                    }
                                                    break;
                                                  }
                                                }()) {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10725), trace$core$txn_view_$_iter__10699_$_iter__10722.call(null, cljs.core.chunk_rest.call(null, s__10723__$2)));
                                                } else {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10725), null);
                                                }
                                              } else {
                                                var d = cljs.core.first.call(null, s__10723__$2);
                                                return cljs.core.cons.call(null, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "retracted"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, 
                                                React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)), trace$core$txn_view_$_iter__10699_$_iter__10722.call(null, cljs.core.rest.call(null, s__10723__$2)));
                                              }
                                            } else {
                                              return null;
                                            }
                                            break;
                                          }
                                        };
                                      }(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
                                    };
                                  }(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
                                  return iter__5062__auto__.call(null, retracted);
                                }(), function() {
                                  var iter__5062__auto__ = function(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                    return function trace$core$txn_view_$_iter__10699_$_iter__10726(s__10727) {
                                      return new cljs.core.LazySeq(null, function(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                        return function() {
                                          var s__10727__$1 = s__10727;
                                          while (true) {
                                            var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10727__$1);
                                            if (temp__4425__auto____$1) {
                                              var s__10727__$2 = temp__4425__auto____$1;
                                              if (cljs.core.chunked_seq_QMARK_.call(null, s__10727__$2)) {
                                                var c__5060__auto____$1 = cljs.core.chunk_first.call(null, s__10727__$2);
                                                var size__5061__auto____$1 = cljs.core.count.call(null, c__5060__auto____$1);
                                                var b__10729 = cljs.core.chunk_buffer.call(null, size__5061__auto____$1);
                                                if (function() {
                                                  var i__10728 = 0;
                                                  while (true) {
                                                    if (i__10728 < size__5061__auto____$1) {
                                                      var d = cljs.core._nth.call(null, c__5060__auto____$1, i__10728);
                                                      cljs.core.chunk_append.call(null, b__10729, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "added"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), 
                                                      om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)));
                                                      var G__10741 = i__10728 + 1;
                                                      i__10728 = G__10741;
                                                      continue;
                                                    } else {
                                                      return true;
                                                    }
                                                    break;
                                                  }
                                                }()) {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10729), trace$core$txn_view_$_iter__10699_$_iter__10726.call(null, cljs.core.chunk_rest.call(null, s__10727__$2)));
                                                } else {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10729), null);
                                                }
                                              } else {
                                                var d = cljs.core.first.call(null, s__10727__$2);
                                                return cljs.core.cons.call(null, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "added"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, 
                                                React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)), trace$core$txn_view_$_iter__10699_$_iter__10726.call(null, cljs.core.rest.call(null, s__10727__$2)));
                                              }
                                            } else {
                                              return null;
                                            }
                                            break;
                                          }
                                        };
                                      }(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
                                    };
                                  }(i__10701, map__10721, map__10721__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, c__5060__auto__, size__5061__auto__, b__10702, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
                                  return iter__5062__auto__.call(null, added);
                                }()));
                                var G__10742 = i__10701 + 1;
                                i__10701 = G__10742;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10702), trace$core$txn_view_$_iter__10699.call(null, cljs.core.chunk_rest.call(null, s__10700__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10702), null);
                          }
                        } else {
                          var datoms = cljs.core.first.call(null, s__10700__$2);
                          var map__10730 = cljs.core.group_by.call(null, new cljs.core.Keyword(null, "added?", "added?", 275514121), datoms);
                          var map__10730__$1 = cljs.core.seq_QMARK_.call(null, map__10730) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10730) : map__10730;
                          var added = cljs.core.get.call(null, map__10730__$1, true);
                          var retracted = cljs.core.get.call(null, map__10730__$1, false);
                          var txid = (new cljs.core.Keyword(null, "txid", "txid", 1606205478)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, datoms));
                          var txn__$1 = txmap.call(null, txid);
                          var time = trace.core.format_local.call(null, (new cljs.core.Keyword("db", "txInstant", "db/txInstant", -990494199)).cljs$core$IFn$_invoke$arity$1(txn__$1));
                          var who = function() {
                            var temp__4423__auto__ = (new cljs.core.Keyword("wormbase", "curator", "wormbase/curator", -523055786)).cljs$core$IFn$_invoke$arity$1(txn__$1);
                            if (cljs.core.truth_(temp__4423__auto__)) {
                              var c = temp__4423__auto__;
                              return trace.core.curator_name.call(null, c);
                            } else {
                              return (new cljs.core.Keyword("importer", "ts-name", "importer/ts-name", -158493644)).cljs$core$IFn$_invoke$arity$1(txn__$1);
                            }
                          }();
                          var txln = cljs.core.apply.call(null, React.DOM.a, {"href":om_tools.dom.format_opts.call(null, [cljs.core.str("/curate/txns?t\x3d"), cljs.core.str(txid)].join("")), "target":"_new"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-file-text-o"})], null)));
                          return cljs.core.cons.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, added), cljs.core.count.call(null, retracted), 1) ? om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "changed"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, 
                          added)), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)) : cljs.core.concat.call(null, function() {
                            var iter__5062__auto__ = function(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                              return function trace$core$txn_view_$_iter__10699_$_iter__10731(s__10732) {
                                return new cljs.core.LazySeq(null, function(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                  return function() {
                                    var s__10732__$1 = s__10732;
                                    while (true) {
                                      var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10732__$1);
                                      if (temp__4425__auto____$1) {
                                        var s__10732__$2 = temp__4425__auto____$1;
                                        if (cljs.core.chunked_seq_QMARK_.call(null, s__10732__$2)) {
                                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10732__$2);
                                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                                          var b__10734 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                                          if (function() {
                                            var i__10733 = 0;
                                            while (true) {
                                              if (i__10733 < size__5061__auto__) {
                                                var d = cljs.core._nth.call(null, c__5060__auto__, i__10733);
                                                cljs.core.chunk_append.call(null, b__10734, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "retracted"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), 
                                                om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)));
                                                var G__10743 = i__10733 + 1;
                                                i__10733 = G__10743;
                                                continue;
                                              } else {
                                                return true;
                                              }
                                              break;
                                            }
                                          }()) {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10734), trace$core$txn_view_$_iter__10699_$_iter__10731.call(null, cljs.core.chunk_rest.call(null, s__10732__$2)));
                                          } else {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10734), null);
                                          }
                                        } else {
                                          var d = cljs.core.first.call(null, s__10732__$2);
                                          return cljs.core.cons.call(null, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "retracted"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, 
                                          React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)), trace$core$txn_view_$_iter__10699_$_iter__10731.call(null, cljs.core.rest.call(null, s__10732__$2)));
                                        }
                                      } else {
                                        return null;
                                      }
                                      break;
                                    }
                                  };
                                }(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
                              };
                            }(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
                            return iter__5062__auto__.call(null, retracted);
                          }(), function() {
                            var iter__5062__auto__ = function(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                              return function trace$core$txn_view_$_iter__10699_$_iter__10735(s__10736) {
                                return new cljs.core.LazySeq(null, function(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
                                  return function() {
                                    var s__10736__$1 = s__10736;
                                    while (true) {
                                      var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10736__$1);
                                      if (temp__4425__auto____$1) {
                                        var s__10736__$2 = temp__4425__auto____$1;
                                        if (cljs.core.chunked_seq_QMARK_.call(null, s__10736__$2)) {
                                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10736__$2);
                                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                                          var b__10738 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                                          if (function() {
                                            var i__10737 = 0;
                                            while (true) {
                                              if (i__10737 < size__5061__auto__) {
                                                var d = cljs.core._nth.call(null, c__5060__auto__, i__10737);
                                                cljs.core.chunk_append.call(null, b__10738, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "added"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), 
                                                om_tools.dom.element.call(null, React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)));
                                                var G__10744 = i__10737 + 1;
                                                i__10737 = G__10744;
                                                continue;
                                              } else {
                                                return true;
                                              }
                                              break;
                                            }
                                          }()) {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10738), trace$core$txn_view_$_iter__10699_$_iter__10735.call(null, cljs.core.chunk_rest.call(null, s__10736__$2)));
                                          } else {
                                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10738), null);
                                          }
                                        } else {
                                          var d = cljs.core.first.call(null, s__10736__$2);
                                          return cljs.core.cons.call(null, om_tools.dom.element.call(null, React.DOM.tr, om_tools.dom.element.call(null, React.DOM.td, time, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.td(null, "added"), om_tools.dom.element.call(null, React.DOM.td, (new cljs.core.Keyword(null, "v", "v", 21465059)).cljs$core$IFn$_invoke$arity$1(d), cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, 
                                          React.DOM.td, who, cljs.core.PersistentVector.EMPTY), om_tools.dom.element.call(null, React.DOM.td, txln, cljs.core.PersistentVector.EMPTY)], null)), trace$core$txn_view_$_iter__10699_$_iter__10735.call(null, cljs.core.rest.call(null, s__10736__$2)));
                                        }
                                      } else {
                                        return null;
                                      }
                                      break;
                                    }
                                  };
                                }(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
                              };
                            }(map__10730, map__10730__$1, added, retracted, txid, txn__$1, time, who, txln, datoms, s__10700__$2, temp__4425__auto__, txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
                            return iter__5062__auto__.call(null, added);
                          }()), trace$core$txn_view_$_iter__10699.call(null, cljs.core.rest.call(null, s__10700__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key), null, null);
              };
            }(txmap, txn_map, ___$1, map__10694, map__10694__$1, history, hdata, map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
            return iter__5062__auto__.call(null, cljs.core.partition_by.call(null, new cljs.core.Keyword(null, "txid", "txid", 1606205478), cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "txid", "txid", 1606205478), (new cljs.core.Keyword(null, "datoms", "datoms", -290874434)).cljs$core$IFn$_invoke$arity$1(hdata))));
          }(), cljs.core.PersistentVector.EMPTY)], null)));
        }() : React.DOM.img({"src":"/img/spinner_24.gif"})], null)))], null))) : cljs.core.truth_(self__.txn) ? function() {
          var temp__4423__auto__ = txn_map.call(null, self__.txn);
          if (cljs.core.truth_(temp__4423__auto__)) {
            var txn_data = temp__4423__auto__;
            return [cljs.core.str(trace.core.format_local.call(null, (new cljs.core.Keyword("db", "txInstant", "db/txInstant", -990494199)).cljs$core$IFn$_invoke$arity$1(txn_data))), cljs.core.str(function() {
              var temp__4423__auto____$1 = (new cljs.core.Keyword("wormbase", "curator", "wormbase/curator", -523055786)).cljs$core$IFn$_invoke$arity$1(txn_data);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var c = temp__4423__auto____$1;
                return [cljs.core.str(" ("), cljs.core.str(trace.core.curator_name.call(null, c)), cljs.core.str(")")].join("");
              } else {
                var temp__4423__auto____$2 = (new cljs.core.Keyword("importer", "ts-name", "importer/ts-name", -158493644)).cljs$core$IFn$_invoke$arity$1(txn_data);
                if (cljs.core.truth_(temp__4423__auto____$2)) {
                  var d = temp__4423__auto____$2;
                  return [cljs.core.str(" ("), cljs.core.str(d), cljs.core.str(")")].join("");
                } else {
                  return null;
                }
              }
            }())].join("");
          } else {
            return [cljs.core.str(self__.txn)].join("");
          }
        }() : "NEW"], null)));
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.t10690.getBasis = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function() {
        return new cljs.core.PersistentVector(null, 11, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10635", "p__10635", -25354235, null), new cljs.core.Symbol(null, "val-holder", "val-holder", -416139702, null), new cljs.core.Symbol(null, "map__10688", "map__10688", 2013416427, null), new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "txn-view", "txn-view", -795613711, 
        null), new cljs.core.Symbol(null, "txn", "txn", 1171326738, null), new cljs.core.Symbol(null, "map__10689", "map__10689", 2068805747, null), new cljs.core.Symbol(null, "p__10636", "p__10636", 1851780375, null), new cljs.core.Symbol(null, "entid", "entid", -933746787, null), new cljs.core.Symbol(null, "meta10691", "meta10691", -844851179, null)], null);
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.t10690.cljs$lang$type = true;
    trace.core.t10690.cljs$lang$ctorStr = "trace.core/t10690";
    trace.core.t10690.cljs$lang$ctorPrWriter = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10690");
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
    trace.core.__GT_t10690 = function(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key) {
      return function trace$core$txn_view_$___GT_t10690(owner__$1, p__10635__$1, val_holder__$1, map__10688__$2, key__$1, txn_view__$1, txn__$1, map__10689__$2, p__10636__$1, entid__$1, meta10691) {
        return new trace.core.t10690(owner__$1, p__10635__$1, val_holder__$1, map__10688__$2, key__$1, txn_view__$1, txn__$1, map__10689__$2, p__10636__$1, entid__$1, meta10691);
      };
    }(map__10688, map__10688__$1, val_holder, txn, map__10689, map__10689__$1, entid, key);
  }
  return new trace.core.t10690(owner, p__10635, val_holder, map__10688__$1, key, trace$core$txn_view, txn, map__10689__$1, p__10636, entid, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.item_view = function trace$core$item_view(p__10745, owner, p__10746) {
  var map__10753 = p__10745;
  var map__10753__$1 = cljs.core.seq_QMARK_.call(null, map__10753) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10753) : map__10753;
  var val_holder = map__10753__$1;
  var val = cljs.core.get.call(null, map__10753__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
  var edit = cljs.core.get.call(null, map__10753__$1, new cljs.core.Keyword(null, "edit", "edit", -1641834166));
  var txn = cljs.core.get.call(null, map__10753__$1, new cljs.core.Keyword(null, "txn", "txn", -469204789));
  var remove = cljs.core.get.call(null, map__10753__$1, new cljs.core.Keyword(null, "remove", "remove", -131428414));
  var added = cljs.core.get.call(null, map__10753__$1, new cljs.core.Keyword(null, "added", "added", 2057651688));
  var map__10754 = p__10746;
  var map__10754__$1 = cljs.core.seq_QMARK_.call(null, map__10754) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10754) : map__10754;
  var key = cljs.core.get.call(null, map__10754__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
  var type = cljs.core.get.call(null, map__10754__$1, new cljs.core.Keyword(null, "type", "type", 1174270348));
  var entid = cljs.core.get.call(null, map__10754__$1, new cljs.core.Keyword(null, "entid", "entid", 1720688982));
  var class$ = cljs.core.get.call(null, map__10754__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
  var comp_QMARK_ = cljs.core.get.call(null, map__10754__$1, new cljs.core.Keyword(null, "comp?", "comp?", -1637107174));
  if (typeof trace.core.t10755 !== "undefined") {
  } else {
    trace.core.t10755 = function(comp_QMARK_, owner, map__10753, p__10745, p__10746, remove, val_holder, key, item_view, added, edit, txn, map__10754, val, type, class$, entid, meta10756) {
      this.comp_QMARK_ = comp_QMARK_;
      this.owner = owner;
      this.map__10753 = map__10753;
      this.p__10745 = p__10745;
      this.p__10746 = p__10746;
      this.remove = remove;
      this.val_holder = val_holder;
      this.key = key;
      this.item_view = item_view;
      this.added = added;
      this.edit = edit;
      this.txn = txn;
      this.map__10754 = map__10754;
      this.val = val;
      this.type = type;
      this.class$ = class$;
      this.entid = entid;
      this.meta10756 = meta10756;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10755.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function(_10757, meta10756__$1) {
        var self__ = this;
        var _10757__$1 = this;
        return new trace.core.t10755(self__.comp_QMARK_, self__.owner, self__.map__10753, self__.p__10745, self__.p__10746, self__.remove, self__.val_holder, self__.key, self__.item_view, self__.added, self__.edit, self__.txn, self__.map__10754, self__.val, self__.type, self__.class$, self__.entid, meta10756__$1);
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.t10755.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function(_10757) {
        var self__ = this;
        var _10757__$1 = this;
        return self__.meta10756;
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.t10755.prototype.om$core$IDidMount$ = true;
    trace.core.t10755.prototype.om$core$IDidMount$did_mount$arity$1 = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        if (cljs.core._EQ_.call(null, self__.added, cljs.core.deref.call(null, trace.core.added_id))) {
          return trace.core.scroll_into_view.call(null, om.core.get_node.call(null, self__.owner));
        } else {
          return null;
        }
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.t10755.prototype.om$core$IRender$ = true;
    trace.core.t10755.prototype.om$core$IRender$render$arity$1 = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var mode = om.core.observe.call(null, self__.owner, trace.core.mode.call(null));
        var txnData = (new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1(mode);
        var edit_mode = function() {
          var and__4296__auto__ = (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1(mode);
          if (cljs.core.truth_(and__4296__auto__)) {
            return !cljs.core._EQ_.call(null, cljs.core.name.call(null, self__.key), "id");
          } else {
            return and__4296__auto__;
          }
        }();
        return cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, cljs.core.truth_(function() {
          var and__4296__auto__ = self__.edit;
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.not_EQ_.call(null, self__.edit, self__.val);
          } else {
            return and__4296__auto__;
          }
        }()) ? "trace-item edited" : "trace-item")}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
          var and__4296__auto__ = edit_mode;
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.not.call(null, self__.comp_QMARK_);
          } else {
            return and__4296__auto__;
          }
        }()) ? cljs.core.apply.call(null, React.DOM.button, {"tabIndex":-1, "onClick":om_tools.dom.format_opts.call(null, function(mode, txnData, edit_mode, ___$1, map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
          return function() {
            return om.core.transact_BANG_.call(null, self__.val_holder, new cljs.core.Keyword(null, "remove", "remove", -131428414), cljs.core.not);
          };
        }(mode, txnData, edit_mode, ___$1, map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-eraser"})], null))) : null, cljs.core.apply.call(null, React.DOM.span, {"className":"trace-item-content", "style":om_tools.dom.format_opts.call(null, cljs.core.truth_(self__.remove) ? 
        new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "text-decoration", "text-decoration", 1836813207), "line-through", new cljs.core.Keyword(null, "text-decoration-color", "text-decoration-color", 853200020), "red"], null) : null)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(self__.comp_QMARK_) ? om.core.build.call(null, trace.core.tree_view, self__.val_holder, new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "primary-ns", "primary-ns", 1138992256), trace.core.component_ns.call(null, self__.key)], null)], null)) : cljs.core.truth_(function() {
          var or__4308__auto__ = cljs.core.sequential_QMARK_.call(null, self__.val);
          if (or__4308__auto__) {
            return or__4308__auto__;
          } else {
            var or__4308__auto____$1 = cljs.core.sequential_QMARK_.call(null, self__.edit);
            if (or__4308__auto____$1) {
              return or__4308__auto____$1;
            } else {
              return self__.class$;
            }
          }
        }()) ? cljs.core.truth_(edit_mode) ? om.core.build.call(null, trace.core.ref_edit, self__.val_holder, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), self__.class$], null)], null)) : function() {
          var vec__10758 = self__.val;
          var class$__$1 = cljs.core.nth.call(null, vec__10758, 0, null);
          var id = cljs.core.nth.call(null, vec__10758, 1, null);
          var title = cljs.core.nth.call(null, vec__10758, 2, null);
          var uri = [cljs.core.str("/view/"), cljs.core.str(cljs.core.namespace.call(null, class$__$1)), cljs.core.str("/"), cljs.core.str(id)].join("");
          return cljs.core.apply.call(null, React.DOM.a, {"href":om_tools.dom.format_opts.call(null, uri), "onClick":om_tools.dom.format_opts.call(null, function(vec__10758, class$__$1, id, title, uri, mode, txnData, edit_mode, ___$1, map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
            return function(e) {
              e.preventDefault();
              e.stopPropagation();
              window.history.pushState({"url":uri}, id, uri);
              return secretary.core.dispatch_BANG_.call(null, uri);
            };
          }(vec__10758, class$__$1, id, title, uri, mode, txnData, edit_mode, ___$1, map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(function() {
            var or__4308__auto__ = title;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return id;
            }
          }())].join("")], null)));
        }() : cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword("db.type", "long", "db.type/long", 700514073)) ? cljs.core.truth_(edit_mode) ? om.core.build.call(null, trace.core.int_edit, self__.val_holder) : om_tools.dom.element.call(null, React.DOM.span, [cljs.core.str(self__.val)].join(""), cljs.core.PersistentVector.EMPTY) : cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword("db.type", "boolean", "db.type/boolean", -645454270)) ? cljs.core.truth_(edit_mode) ? om.core.build.call(null, 
        trace.core.boolean_edit, self__.val_holder) : om_tools.dom.element.call(null, React.DOM.span, [cljs.core.str(self__.val)].join(""), cljs.core.PersistentVector.EMPTY) : cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079)) ? cljs.core.truth_(edit_mode) ? om.core.build.call(null, trace.core.enum_edit, self__.val_holder, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 
        1, [new cljs.core.Keyword(null, "tns", "tns", 1887890274), [cljs.core.str(cljs.core.namespace.call(null, self__.key)), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, self__.key))].join("")], null)], null)) : om_tools.dom.element.call(null, React.DOM.span, cljs.core.name.call(null, self__.val), cljs.core.PersistentVector.EMPTY) : cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword("db.type", "string", "db.type/string", 1432572808)) ? cljs.core.truth_(edit_mode) ? om.core.build.call(null, 
        trace.core.text_edit, self__.val_holder) : om_tools.dom.element.call(null, React.DOM.span, [cljs.core.str(self__.val)].join(""), cljs.core.PersistentVector.EMPTY) : cljs.core._EQ_.call(null, self__.type, new cljs.core.Keyword("db.type", "instant", "db.type/instant", -1024769248)) ? om_tools.dom.element.call(null, React.DOM.span, trace.core.format_local.call(null, self__.val), cljs.core.PersistentVector.EMPTY) : om_tools.dom.element.call(null, React.DOM.span, [cljs.core.str(self__.val)].join(""), 
        cljs.core.PersistentVector.EMPTY)], null))), cljs.core.truth_(function() {
          var and__4296__auto__ = txnData;
          if (cljs.core.truth_(and__4296__auto__)) {
            return cljs.core.not.call(null, self__.comp_QMARK_);
          } else {
            return and__4296__auto__;
          }
        }()) ? om.core.build.call(null, trace.core.txn_view, self__.val_holder, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), self__.key, new cljs.core.Keyword(null, "entid", "entid", 1720688982), self__.entid], null)], null)) : null], null)));
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.t10755.getBasis = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 18, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp?", "comp?", 3424353, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "map__10753", "map__10753", 2054922918, null), new cljs.core.Symbol(null, "p__10745", "p__10745", 1271785127, null), new cljs.core.Symbol(null, "p__10746", "p__10746", 123675817, null), new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), 
        new cljs.core.Symbol(null, "val-holder", "val-holder", -416139702, null), new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "item-view", "item-view", 590940078, null), new cljs.core.Symbol(null, "added", "added", -596784081, null), new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "txn", "txn", 1171326738, null), new cljs.core.Symbol(null, "map__10754", "map__10754", -177749581, null), new cljs.core.Symbol(null, "val", 
        "val", 1769233139, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "class", "class", -390430469, null), new cljs.core.Symbol(null, "entid", "entid", -933746787, null), new cljs.core.Symbol(null, "meta10756", "meta10756", 1723274999, null)], null);
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.t10755.cljs$lang$type = true;
    trace.core.t10755.cljs$lang$ctorStr = "trace.core/t10755";
    trace.core.t10755.cljs$lang$ctorPrWriter = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10755");
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
    trace.core.__GT_t10755 = function(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_) {
      return function trace$core$item_view_$___GT_t10755(comp_QMARK___$1, owner__$1, map__10753__$2, p__10745__$1, p__10746__$1, remove__$1, val_holder__$1, key__$1, item_view__$1, added__$1, edit__$1, txn__$1, map__10754__$2, val__$1, type__$1, class$__$1, entid__$1, meta10756) {
        return new trace.core.t10755(comp_QMARK___$1, owner__$1, map__10753__$2, p__10745__$1, p__10746__$1, remove__$1, val_holder__$1, key__$1, item_view__$1, added__$1, edit__$1, txn__$1, map__10754__$2, val__$1, type__$1, class$__$1, entid__$1, meta10756);
      };
    }(map__10753, map__10753__$1, val_holder, val, edit, txn, remove, added, map__10754, map__10754__$1, key, type, entid, class$, comp_QMARK_);
  }
  return new trace.core.t10755(comp_QMARK_, owner, map__10753__$1, p__10745, p__10746, remove, val_holder, key, trace$core$item_view, added, edit, txn, map__10754__$1, val, type, class$, entid, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.list_view = function trace$core$list_view(data, owner, p__10760) {
  var map__10777 = p__10760;
  var map__10777__$1 = cljs.core.seq_QMARK_.call(null, map__10777) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10777) : map__10777;
  var entid = cljs.core.get.call(null, map__10777__$1, new cljs.core.Keyword(null, "entid", "entid", 1720688982));
  if (typeof trace.core.t10778 !== "undefined") {
  } else {
    trace.core.t10778 = function(list_view, data, owner, p__10760, map__10777, entid, meta10779) {
      this.list_view = list_view;
      this.data = data;
      this.owner = owner;
      this.p__10760 = p__10760;
      this.map__10777 = map__10777;
      this.entid = entid;
      this.meta10779 = meta10779;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10778.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10777, map__10777__$1, entid) {
      return function(_10780, meta10779__$1) {
        var self__ = this;
        var _10780__$1 = this;
        return new trace.core.t10778(self__.list_view, self__.data, self__.owner, self__.p__10760, self__.map__10777, self__.entid, meta10779__$1);
      };
    }(map__10777, map__10777__$1, entid);
    trace.core.t10778.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10777, map__10777__$1, entid) {
      return function(_10780) {
        var self__ = this;
        var _10780__$1 = this;
        return self__.meta10779;
      };
    }(map__10777, map__10777__$1, entid);
    trace.core.t10778.prototype.om$core$IRender$ = true;
    trace.core.t10778.prototype.om$core$IRender$render$arity$1 = function(map__10777, map__10777__$1, entid) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var mode = om.core.observe.call(null, self__.owner, trace.core.mode.call(null));
        var vcnt = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(self__.data);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            return cljs.core.count.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(self__.data));
          }
        }();
        return cljs.core.apply.call(null, React.DOM.span, {"className":"values-holder"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.button, {"onClick":om_tools.dom.format_opts.call(null, function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
          return function(___$2) {
            om.core.transact_BANG_.call(null, self__.data, new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), cljs.core.not);
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.data))) && cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.data)))) {
              return trace.utils.edn_xhr.call(null, [cljs.core.str("/attr2/"), cljs.core.str(self__.entid), cljs.core.str("/"), cljs.core.str((new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data))].join(""), function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                return function(resp) {
                  var txn_map = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                    var iter__5062__auto__ = function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                      return function trace$core$list_view_$_iter__10781(s__10782) {
                        return new cljs.core.LazySeq(null, function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                          return function() {
                            var s__10782__$1 = s__10782;
                            while (true) {
                              var temp__4425__auto__ = cljs.core.seq.call(null, s__10782__$1);
                              if (temp__4425__auto__) {
                                var s__10782__$2 = temp__4425__auto__;
                                if (cljs.core.chunked_seq_QMARK_.call(null, s__10782__$2)) {
                                  var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10782__$2);
                                  var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                                  var b__10784 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                                  if (function() {
                                    var i__10783 = 0;
                                    while (true) {
                                      if (i__10783 < size__5061__auto__) {
                                        var t = cljs.core._nth.call(null, c__5060__auto__, i__10783);
                                        cljs.core.chunk_append.call(null, b__10784, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null));
                                        var G__10793 = i__10783 + 1;
                                        i__10783 = G__10793;
                                        continue;
                                      } else {
                                        return true;
                                      }
                                      break;
                                    }
                                  }()) {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10784), trace$core$list_view_$_iter__10781.call(null, cljs.core.chunk_rest.call(null, s__10782__$2)));
                                  } else {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10784), null);
                                  }
                                } else {
                                  var t = cljs.core.first.call(null, s__10782__$2);
                                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null), trace$core$list_view_$_iter__10781.call(null, cljs.core.rest.call(null, s__10782__$2)));
                                }
                              } else {
                                return null;
                              }
                              break;
                            }
                          };
                        }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid), null, null);
                      };
                    }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid);
                    return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(resp));
                  }());
                  om.core.transact_BANG_.call(null, trace.core.txns.call(null), function(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                    return function(p1__10759_SHARP_) {
                      return cljs.core.merge.call(null, p1__10759_SHARP_, txn_map);
                    };
                  }(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid));
                  om.core.update_BANG_.call(null, self__.data, new cljs.core.Keyword(null, "values", "values", 372645556), cljs.core.vec.call(null, function() {
                    var iter__5062__auto__ = function(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                      return function trace$core$list_view_$_iter__10785(s__10786) {
                        return new cljs.core.LazySeq(null, function(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                          return function() {
                            var s__10786__$1 = s__10786;
                            while (true) {
                              var temp__4425__auto__ = cljs.core.seq.call(null, s__10786__$1);
                              if (temp__4425__auto__) {
                                var s__10786__$2 = temp__4425__auto__;
                                if (cljs.core.chunked_seq_QMARK_.call(null, s__10786__$2)) {
                                  var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10786__$2);
                                  var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                                  var b__10788 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                                  if (function() {
                                    var i__10787 = 0;
                                    while (true) {
                                      if (i__10787 < size__5061__auto__) {
                                        var v = cljs.core._nth.call(null, c__5060__auto__, i__10787);
                                        cljs.core.chunk_append.call(null, b__10788, cljs.core.assoc.call(null, v, new cljs.core.Keyword(null, "txn", "txn", -469204789), (new cljs.core.Keyword(null, "txn", "txn", -469204789)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(resp)) ? trace.core.props__GT_state.call(null, (new cljs.core.Keyword(null, "val", 
                                        "val", 128701612)).cljs$core$IFn$_invoke$arity$1(v)) : (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(v)));
                                        var G__10794 = i__10787 + 1;
                                        i__10787 = G__10794;
                                        continue;
                                      } else {
                                        return true;
                                      }
                                      break;
                                    }
                                  }()) {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10788), trace$core$list_view_$_iter__10785.call(null, cljs.core.chunk_rest.call(null, s__10786__$2)));
                                  } else {
                                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10788), null);
                                  }
                                } else {
                                  var v = cljs.core.first.call(null, s__10786__$2);
                                  return cljs.core.cons.call(null, cljs.core.assoc.call(null, v, new cljs.core.Keyword(null, "txn", "txn", -469204789), (new cljs.core.Keyword(null, "txn", "txn", -469204789)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "val", "val", 128701612), cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(resp)) ? trace.core.props__GT_state.call(null, (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(v)) : 
                                  (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(v)), trace$core$list_view_$_iter__10785.call(null, cljs.core.rest.call(null, s__10786__$2)));
                                }
                              } else {
                                return null;
                              }
                              break;
                            }
                          };
                        }(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid), null, null);
                      };
                    }(txn_map, mode, vcnt, ___$1, map__10777, map__10777__$1, entid);
                    return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(resp));
                  }()));
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, mode)))) {
                    return trace.core.fetch_missing_txns.call(null, om.core.root_cursor.call(null, trace.core.app_state));
                  } else {
                    return null;
                  }
                };
              }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid));
            } else {
              return null;
            }
          };
        }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid)), "className":"collapse-button", "style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, vcnt > 1))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? "+" : "-"], null))), cljs.core.truth_((new cljs.core.Keyword(null, "collapsed", 
        "collapsed", -628494523)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(vcnt), cljs.core.str(" nodes")].join("")], null))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? React.DOM.img({"src":"/img/spinner_24.gif"}) : cljs.core.apply.call(null, 
        React.DOM.div, {"className":"values-list"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var iter__5062__auto__ = function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
            return function trace$core$list_view_$_iter__10789(s__10790) {
              return new cljs.core.LazySeq(null, function(mode, vcnt, ___$1, map__10777, map__10777__$1, entid) {
                return function() {
                  var s__10790__$1 = s__10790;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__10790__$1);
                    if (temp__4425__auto__) {
                      var s__10790__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10790__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10790__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__10792 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__10791 = 0;
                          while (true) {
                            if (i__10791 < size__5061__auto__) {
                              var v = cljs.core._nth.call(null, c__5060__auto__, i__10791);
                              cljs.core.chunk_append.call(null, b__10792, om.core.build.call(null, trace.core.item_view, v, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, 
                              "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "comp?", "comp?", -1637107174), (new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "entid", "entid", 1720688982), self__.entid], 
                              null)], null)));
                              var G__10795 = i__10791 + 1;
                              i__10791 = G__10795;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10792), trace$core$list_view_$_iter__10789.call(null, cljs.core.chunk_rest.call(null, s__10790__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10792), null);
                        }
                      } else {
                        var v = cljs.core.first.call(null, s__10790__$2);
                        return cljs.core.cons.call(null, om.core.build.call(null, trace.core.item_view, v, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword(null, "type", "type", 
                        1174270348)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword(null, "class", "class", -2030961996)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "comp?", "comp?", -1637107174), (new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(self__.data), new cljs.core.Keyword(null, "entid", "entid", 1720688982), self__.entid], null)], null)), trace$core$list_view_$_iter__10789.call(null, 
                        cljs.core.rest.call(null, s__10790__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid), null, null);
            };
          }(mode, vcnt, ___$1, map__10777, map__10777__$1, entid);
          return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(self__.data));
        }()], null)))], null)));
      };
    }(map__10777, map__10777__$1, entid);
    trace.core.t10778.getBasis = function(map__10777, map__10777__$1, entid) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "list-view", "list-view", 1281553626, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10760", "p__10760", -1707873715, null), new cljs.core.Symbol(null, "map__10777", "map__10777", 127213034, null), new cljs.core.Symbol(null, "entid", "entid", -933746787, null), 
        new cljs.core.Symbol(null, "meta10779", "meta10779", -61930651, null)], null);
      };
    }(map__10777, map__10777__$1, entid);
    trace.core.t10778.cljs$lang$type = true;
    trace.core.t10778.cljs$lang$ctorStr = "trace.core/t10778";
    trace.core.t10778.cljs$lang$ctorPrWriter = function(map__10777, map__10777__$1, entid) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10778");
      };
    }(map__10777, map__10777__$1, entid);
    trace.core.__GT_t10778 = function(map__10777, map__10777__$1, entid) {
      return function trace$core$list_view_$___GT_t10778(list_view__$1, data__$1, owner__$1, p__10760__$1, map__10777__$2, entid__$1, meta10779) {
        return new trace.core.t10778(list_view__$1, data__$1, owner__$1, p__10760__$1, map__10777__$2, entid__$1, meta10779);
      };
    }(map__10777, map__10777__$1, entid);
  }
  return new trace.core.t10778(trace$core$list_view, data, owner, p__10760, map__10777__$1, entid, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.dummy_item_STAR_ = function trace$core$dummy_item_STAR_(item) {
  if (cljs.core.truth_((new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(item))) {
    var ident = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item);
    var cns = [cljs.core.str(cljs.core.namespace.call(null, ident)), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, ident))].join("");
    var attrs = cljs.core.mapv.call(null, function(ident, cns) {
      return function(item__$1) {
        return new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item__$1), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(item__$1), new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), false, new cljs.core.Keyword(null, "comp", "comp", 
        1191953630), (new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(item__$1), new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(item__$1), new cljs.core.Keyword(null, "values", "values", 372645556), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [trace$core$dummy_item_STAR_.call(null, item__$1)], 
        null)], null);
      };
    }(ident, cns), cljs.core.get_in.call(null, cljs.core.deref.call(null, trace.core.app_state), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "attrs", "attrs", -2090668713), cns], null)));
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "edit", "edit", -1641834166), attrs], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "edit", "edit", -1641834166), new cljs.core.Keyword(null, "empty", "empty", 767870958)], null);
  }
};
trace.core.dummy_item = function trace$core$dummy_item(item) {
  var dummy = trace.core.dummy_item_STAR_.call(null, item);
  var added = cljs.core.swap_BANG_.call(null, trace.core.added_id, cljs.core.inc);
  if (cljs.core.vector_QMARK_.call(null, (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(dummy)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(dummy))) {
    return cljs.core.assoc_in.call(null, dummy, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "edit", "edit", -1641834166), 0, new cljs.core.Keyword(null, "values", "values", 372645556), 0, new cljs.core.Keyword(null, "added", "added", 2057651688)], null), added);
  } else {
    return cljs.core.assoc.call(null, dummy, new cljs.core.Keyword(null, "added", "added", 2057651688), added);
  }
};
trace.core.add_item = function trace$core$add_item(data, item) {
  return om.core.transact_BANG_.call(null, function() {
    var or__4308__auto__ = (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(data);
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      var or__4308__auto____$1 = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(data);
      if (cljs.core.truth_(or__4308__auto____$1)) {
        return or__4308__auto____$1;
      } else {
        return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(data);
      }
    }
  }(), function(props) {
    var dummy = trace.core.dummy_item.call(null, item);
    var attrs = cljs.core.get_in.call(null, cljs.core.deref.call(null, trace.core.app_state), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), new cljs.core.Keyword(null, "attrs-by-ident", "attrs-by-ident", 1962204233)], null));
    var vec__10802 = cljs.core.keep_indexed.call(null, function(dummy, attrs) {
      return function(p1__10797_SHARP_, p2__10796_SHARP_) {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(p2__10796_SHARP_), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10797_SHARP_, p2__10796_SHARP_], null);
        } else {
          return null;
        }
      };
    }(dummy, attrs), props);
    var vec__10803 = cljs.core.nth.call(null, vec__10802, 0, null);
    var idx = cljs.core.nth.call(null, vec__10803, 0, null);
    var holder = cljs.core.nth.call(null, vec__10803, 1, null);
    if (cljs.core.truth_(holder)) {
      return cljs.core.assoc.call(null, props, idx, cljs.core.assoc.call(null, holder, new cljs.core.Keyword(null, "values", "values", 372645556), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(holder), dummy), new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), false));
    } else {
      return cljs.core.vec.call(null, cljs.core.sort_by.call(null, function(dummy, attrs, vec__10802, vec__10803, idx, holder) {
        return function(p__10804) {
          var map__10805 = p__10804;
          var map__10805__$1 = cljs.core.seq_QMARK_.call(null, map__10805) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10805) : map__10805;
          var key = cljs.core.get.call(null, map__10805__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
          if (cljs.core._EQ_.call(null, cljs.core.name.call(null, key).charAt(0), "_")) {
            return 1E12;
          } else {
            return (new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(attrs.call(null, key));
          }
        };
      }(dummy, attrs, vec__10802, vec__10803, idx, holder), cljs.core.conj.call(null, props, new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "key", "key", -1516042587), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "group", "group", 582596132), function() {
        var temp__4423__auto__ = (new cljs.core.Keyword("pace", "tags", "pace/tags", 1766657910)).cljs$core$IFn$_invoke$arity$1(item);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var tags = temp__4423__auto__;
          return cljs.core.first.call(null, clojure.string.split.call(null, tags, /\s/));
        } else {
          return null;
        }
      }(), new cljs.core.Keyword(null, "type", "type", 1174270348), (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "collapsed", "collapsed", -628494523), false, new cljs.core.Keyword(null, "comp", "comp", 1191953630), (new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "class", "class", -2030961996), (new cljs.core.Keyword("pace", 
      "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(item), new cljs.core.Keyword(null, "values", "values", 372645556), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [dummy], null)], null))));
    }
  });
};
trace.core.add_button = function trace$core$add_button(data, owner) {
  if (typeof trace.core.t10815 !== "undefined") {
  } else {
    trace.core.t10815 = function(add_button, data, owner, meta10816) {
      this.add_button = add_button;
      this.data = data;
      this.owner = owner;
      this.meta10816 = meta10816;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10815.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10817, meta10816__$1) {
      var self__ = this;
      var _10817__$1 = this;
      return new trace.core.t10815(self__.add_button, self__.data, self__.owner, meta10816__$1);
    };
    trace.core.t10815.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10817) {
      var self__ = this;
      var _10817__$1 = this;
      return self__.meta10816;
    };
    trace.core.t10815.prototype.om$core$IInitState$ = true;
    trace.core.t10815.prototype.om$core$IInitState$init_state$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "open", "open", -1763596448), false], null);
    };
    trace.core.t10815.prototype.om$core$IRenderState$ = true;
    trace.core.t10815.prototype.om$core$IRenderState$render_state$arity$2 = function(_, p__10818) {
      var self__ = this;
      var map__10819 = p__10818;
      var map__10819__$1 = cljs.core.seq_QMARK_.call(null, map__10819) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10819) : map__10819;
      var open = cljs.core.get.call(null, map__10819__$1, new cljs.core.Keyword(null, "open", "open", -1763596448));
      var ___$1 = this;
      var schema = om.core.observe.call(null, self__.owner, trace.core.schema.call(null));
      var tns = cljs.core.truth_((new cljs.core.Keyword(null, "ident", "ident", -742346)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.namespace.call(null, cljs.core.first.call(null, (new cljs.core.Keyword(null, "ident", "ident", -742346)).cljs$core$IFn$_invoke$arity$1(self__.data)))], null) : cljs.core.truth_((new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data)) ? 
      cljs.core.conj.call(null, (new cljs.core.Keyword("pace", "use-ns", "pace/use-ns", 1121435533)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "attrs-by-ident", "attrs-by-ident", 1962204233)).cljs$core$IFn$_invoke$arity$1(schema).call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data))), [cljs.core.str(cljs.core.namespace.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data))), 
      cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(self__.data)))].join("")) : null;
      var attrs = cljs.core.mapcat.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(schema), tns);
      var used_props = cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "key", "key", -1516042587), function() {
        var or__4308__auto__ = (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(self__.data);
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          var or__4308__auto____$1 = (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.data);
          if (cljs.core.truth_(or__4308__auto____$1)) {
            return or__4308__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.data);
          }
        }
      }()));
      return cljs.core.apply.call(null, React.DOM.span, {"className":"add-button-holder"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
        return function() {
          return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "open", "open", -1763596448), cljs.core.not.call(null, open));
        };
      }(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open)), "onBlur":om_tools.dom.format_opts.call(null, function(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
        return function(___$2) {
          return setTimeout(function(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
            return function() {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "open", "open", -1763596448), false);
            };
          }(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open), 200);
        };
      }(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open))}, "Add"), cljs.core.truth_(open) ? cljs.core.apply.call(null, React.DOM.div, {"className":"add-list dropdown-menu", "style":{"display":"block"}}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var iter__5062__auto__ = function(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
          return function trace$core$add_button_$_iter__10820(s__10821) {
            return new cljs.core.LazySeq(null, function(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
              return function() {
                var s__10821__$1 = s__10821;
                while (true) {
                  var temp__4425__auto__ = cljs.core.seq.call(null, s__10821__$1);
                  if (temp__4425__auto__) {
                    var s__10821__$2 = temp__4425__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__10821__$2)) {
                      var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10821__$2);
                      var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                      var b__10823 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                      if (function() {
                        var i__10822 = 0;
                        while (true) {
                          if (i__10822 < size__5061__auto__) {
                            var a = cljs.core._nth.call(null, c__5060__auto__, i__10822);
                            cljs.core.chunk_append.call(null, b__10823, cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, cljs.core.truth_(function() {
                              var and__4296__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "cardinality", "db/cardinality", -104975659)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword("db.cardinality", "one", "db.cardinality/one", 1428352190));
                              if (and__4296__auto__) {
                                return used_props.call(null, (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a));
                              } else {
                                return and__4296__auto__;
                              }
                            }()) ? "add-item add-item-disabled" : "add-item"), "onClick":om_tools.dom.format_opts.call(null, function(i__10822, a, c__5060__auto__, size__5061__auto__, b__10823, s__10821__$2, temp__4425__auto__, schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
                              return function(___$2) {
                                om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "open", "open", -1763596448), false);
                                return trace.core.add_item.call(null, self__.data, a);
                              };
                            }(i__10822, a, c__5060__auto__, size__5061__auto__, b__10823, s__10821__$2, temp__4425__auto__, schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str((new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a))].join("")], null))));
                            var G__10824 = i__10822 + 1;
                            i__10822 = G__10824;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10823), trace$core$add_button_$_iter__10820.call(null, cljs.core.chunk_rest.call(null, s__10821__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10823), null);
                      }
                    } else {
                      var a = cljs.core.first.call(null, s__10821__$2);
                      return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.div, {"className":om_tools.dom.format_opts.call(null, cljs.core.truth_(function() {
                        var and__4296__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "cardinality", "db/cardinality", -104975659)).cljs$core$IFn$_invoke$arity$1(a), new cljs.core.Keyword("db.cardinality", "one", "db.cardinality/one", 1428352190));
                        if (and__4296__auto__) {
                          return used_props.call(null, (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a));
                        } else {
                          return and__4296__auto__;
                        }
                      }()) ? "add-item add-item-disabled" : "add-item"), "onClick":om_tools.dom.format_opts.call(null, function(a, s__10821__$2, temp__4425__auto__, schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open) {
                        return function(___$2) {
                          om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "open", "open", -1763596448), false);
                          return trace.core.add_item.call(null, self__.data, a);
                        };
                      }(a, s__10821__$2, temp__4425__auto__, schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str((new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a))].join("")], null))), trace$core$add_button_$_iter__10820.call(null, cljs.core.rest.call(null, s__10821__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open), null, null);
          };
        }(schema, tns, attrs, used_props, ___$1, map__10819, map__10819__$1, open);
        return iter__5062__auto__.call(null, attrs);
      }()], null))) : null], null)));
    };
    trace.core.t10815.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "add-button", "add-button", 1978420884, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10816", "meta10816", 2076296862, null)], null);
    };
    trace.core.t10815.cljs$lang$type = true;
    trace.core.t10815.cljs$lang$ctorStr = "trace.core/t10815";
    trace.core.t10815.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10815");
    };
    trace.core.__GT_t10815 = function trace$core$add_button_$___GT_t10815(add_button__$1, data__$1, owner__$1, meta10816) {
      return new trace.core.t10815(add_button__$1, data__$1, owner__$1, meta10816);
    };
  }
  return new trace.core.t10815(trace$core$add_button, data, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.group_props = function trace$core$group_props(props) {
  var grouped = cljs.core.group_by.call(null, new cljs.core.Keyword(null, "group", "group", 582596132), props);
  var G__10830 = props;
  var vec__10831 = G__10830;
  var prop = cljs.core.nth.call(null, vec__10831, 0, null);
  var props__$1 = cljs.core.nthnext.call(null, vec__10831, 1);
  var group_seq = cljs.core.PersistentVector.EMPTY;
  var grouped__$1 = grouped;
  var G__10830__$1 = G__10830;
  var group_seq__$1 = group_seq;
  while (true) {
    var grouped__$2 = grouped__$1;
    var vec__10832 = G__10830__$1;
    var prop__$1 = cljs.core.nth.call(null, vec__10832, 0, null);
    var props__$2 = cljs.core.nthnext.call(null, vec__10832, 1);
    var group_seq__$2 = group_seq__$1;
    if (cljs.core.truth_(prop__$1)) {
      var g = (new cljs.core.Keyword(null, "group", "group", 582596132)).cljs$core$IFn$_invoke$arity$1(prop__$1);
      var temp__4423__auto__ = grouped__$2.call(null, g);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var gg = temp__4423__auto__;
        var G__10833 = cljs.core.dissoc.call(null, grouped__$2, g);
        var G__10834 = props__$2;
        var G__10835 = cljs.core.conj.call(null, group_seq__$2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [g, gg], null));
        grouped__$1 = G__10833;
        G__10830__$1 = G__10834;
        group_seq__$1 = G__10835;
        continue;
      } else {
        var G__10836 = grouped__$2;
        var G__10837 = props__$2;
        var G__10838 = group_seq__$2;
        grouped__$1 = G__10836;
        G__10830__$1 = G__10837;
        group_seq__$1 = G__10838;
        continue;
      }
    } else {
      return group_seq__$2;
    }
    break;
  }
};
trace.core.tree_view = function trace$core$tree_view(data, owner, p__10839) {
  var map__10868 = p__10839;
  var map__10868__$1 = cljs.core.seq_QMARK_.call(null, map__10868) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10868) : map__10868;
  var primary_ns = cljs.core.get.call(null, map__10868__$1, new cljs.core.Keyword(null, "primary-ns", "primary-ns", 1138992256));
  var group_QMARK_ = cljs.core.get.call(null, map__10868__$1, new cljs.core.Keyword(null, "group?", "group?", -1871629417));
  if (typeof trace.core.t10869 !== "undefined") {
  } else {
    trace.core.t10869 = function(tree_view, data, owner, p__10839, map__10868, primary_ns, group_QMARK_, meta10870) {
      this.tree_view = tree_view;
      this.data = data;
      this.owner = owner;
      this.p__10839 = p__10839;
      this.map__10868 = map__10868;
      this.primary_ns = primary_ns;
      this.group_QMARK_ = group_QMARK_;
      this.meta10870 = meta10870;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10869.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function(_10871, meta10870__$1) {
        var self__ = this;
        var _10871__$1 = this;
        return new trace.core.t10869(self__.tree_view, self__.data, self__.owner, self__.p__10839, self__.map__10868, self__.primary_ns, self__.group_QMARK_, meta10870__$1);
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.t10869.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function(_10871) {
        var self__ = this;
        var _10871__$1 = this;
        return self__.meta10870;
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.t10869.prototype.om$core$IInitState$ = true;
    trace.core.t10869.prototype.om$core$IInitState$init_state$arity$1 = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.PersistentArrayMap.EMPTY;
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.t10869.prototype.om$core$IRenderState$ = true;
    trace.core.t10869.prototype.om$core$IRenderState$render_state$arity$2 = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function(_, state) {
        var self__ = this;
        var ___$1 = this;
        var mode = om.core.observe.call(null, self__.owner, trace.core.mode.call(null));
        var props = function() {
          var or__4308__auto__ = (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(self__.data);
          if (cljs.core.truth_(or__4308__auto__)) {
            return or__4308__auto__;
          } else {
            var or__4308__auto____$1 = (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(self__.data);
            if (cljs.core.truth_(or__4308__auto____$1)) {
              return or__4308__auto____$1;
            } else {
              return (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(self__.data);
            }
          }
        }();
        var grouped_props = cljs.core.truth_(self__.group_QMARK_) ? trace.core.group_props.call(null, props) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, props], null)], null);
        return om_tools.dom.element.call(null, React.DOM.div, cljs.core.truth_((new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1(mode)) ? om.core.build.call(null, trace.core.add_button, self__.data) : null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.table, {"border":"1", "className":"trace-tree table table-striped table-condensed"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.tbody, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var iter__5062__auto__ = function(mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
            return function trace$core$tree_view_$_iter__10872(s__10873) {
              return new cljs.core.LazySeq(null, function(mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                return function() {
                  var s__10873__$1 = s__10873;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__10873__$1);
                    if (temp__4425__auto__) {
                      var s__10873__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10873__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10873__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__10875 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__10874 = 0;
                          while (true) {
                            if (i__10874 < size__5061__auto__) {
                              var vec__10886 = cljs.core._nth.call(null, c__5060__auto__, i__10874);
                              var group_label = cljs.core.nth.call(null, vec__10886, 0, null);
                              var props__$1 = cljs.core.nth.call(null, vec__10886, 1, null);
                              cljs.core.chunk_append.call(null, b__10875, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                                var iter__5062__auto__ = function(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                                  return function trace$core$tree_view_$_iter__10872_$_iter__10887(s__10888) {
                                    return new cljs.core.LazySeq(null, function(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                                      return function() {
                                        var s__10888__$1 = s__10888;
                                        while (true) {
                                          var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10888__$1);
                                          if (temp__4425__auto____$1) {
                                            var s__10888__$2 = temp__4425__auto____$1;
                                            if (cljs.core.chunked_seq_QMARK_.call(null, s__10888__$2)) {
                                              var c__5060__auto____$1 = cljs.core.chunk_first.call(null, s__10888__$2);
                                              var size__5061__auto____$1 = cljs.core.count.call(null, c__5060__auto____$1);
                                              var b__10890 = cljs.core.chunk_buffer.call(null, size__5061__auto____$1);
                                              if (function() {
                                                var i__10889 = 0;
                                                while (true) {
                                                  if (i__10889 < size__5061__auto____$1) {
                                                    var prop = cljs.core._nth.call(null, c__5060__auto____$1, i__10889);
                                                    cljs.core.chunk_append.call(null, b__10890, cljs.core.apply.call(null, React.DOM.tr, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, state.call(null, group_label))))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"className":"prop-name"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 
                                                    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                                      var key = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop);
                                                      if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, key), self__.primary_ns)) {
                                                        return cljs.core.name.call(null, key);
                                                      } else {
                                                        return [cljs.core.str(key)].join("");
                                                      }
                                                    }()], null))), cljs.core.apply.call(null, React.DOM.td, {"className":"prop-val"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, trace.core.list_view, prop, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "opts", "opts", 155075701), 
                                                    new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "entid", "entid", 1720688982), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(self__.data)], null)], null))], null)))], null))));
                                                    var G__10896 = i__10889 + 1;
                                                    i__10889 = G__10896;
                                                    continue;
                                                  } else {
                                                    return true;
                                                  }
                                                  break;
                                                }
                                              }()) {
                                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10890), trace$core$tree_view_$_iter__10872_$_iter__10887.call(null, cljs.core.chunk_rest.call(null, s__10888__$2)));
                                              } else {
                                                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10890), null);
                                              }
                                            } else {
                                              var prop = cljs.core.first.call(null, s__10888__$2);
                                              return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.tr, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, state.call(null, group_label))))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"className":"prop-name"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 
                                              1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                                var key = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop);
                                                if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, key), self__.primary_ns)) {
                                                  return cljs.core.name.call(null, key);
                                                } else {
                                                  return [cljs.core.str(key)].join("");
                                                }
                                              }()], null))), cljs.core.apply.call(null, React.DOM.td, {"className":"prop-val"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, trace.core.list_view, prop, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "opts", "opts", 155075701), 
                                              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "entid", "entid", 1720688982), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(self__.data)], null)], null))], null)))], null))), trace$core$tree_view_$_iter__10872_$_iter__10887.call(null, cljs.core.rest.call(null, s__10888__$2)));
                                            }
                                          } else {
                                            return null;
                                          }
                                          break;
                                        }
                                      };
                                    }(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_), null, null);
                                  };
                                }(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_);
                                return iter__5062__auto__.call(null, props__$1);
                              }()), cljs.core.truth_(group_label) ? cljs.core.apply.call(null, React.DOM.tr, {"style":{"background":"darkgray"}, "onClick":om_tools.dom.format_opts.call(null, function(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                                return function() {
                                  return om.core.update_state_BANG_.call(null, self__.owner, group_label, cljs.core.not);
                                };
                              }(i__10874, vec__10886, group_label, props__$1, c__5060__auto__, size__5061__auto__, b__10875, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"colSpan":2}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
                              [[cljs.core.str("["), cljs.core.str(cljs.core.truth_(state.call(null, group_label)) ? "+" : "-"), cljs.core.str("] "), cljs.core.str(group_label)].join("")], null)))], null))) : null));
                              var G__10897 = i__10874 + 1;
                              i__10874 = G__10897;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10875), trace$core$tree_view_$_iter__10872.call(null, cljs.core.chunk_rest.call(null, s__10873__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10875), null);
                        }
                      } else {
                        var vec__10891 = cljs.core.first.call(null, s__10873__$2);
                        var group_label = cljs.core.nth.call(null, vec__10891, 0, null);
                        var props__$1 = cljs.core.nth.call(null, vec__10891, 1, null);
                        return cljs.core.cons.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
                          var iter__5062__auto__ = function(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                            return function trace$core$tree_view_$_iter__10872_$_iter__10892(s__10893) {
                              return new cljs.core.LazySeq(null, function(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                                return function() {
                                  var s__10893__$1 = s__10893;
                                  while (true) {
                                    var temp__4425__auto____$1 = cljs.core.seq.call(null, s__10893__$1);
                                    if (temp__4425__auto____$1) {
                                      var s__10893__$2 = temp__4425__auto____$1;
                                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10893__$2)) {
                                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10893__$2);
                                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                                        var b__10895 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                                        if (function() {
                                          var i__10894 = 0;
                                          while (true) {
                                            if (i__10894 < size__5061__auto__) {
                                              var prop = cljs.core._nth.call(null, c__5060__auto__, i__10894);
                                              cljs.core.chunk_append.call(null, b__10895, cljs.core.apply.call(null, React.DOM.tr, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, state.call(null, group_label))))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"className":"prop-name"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 
                                              1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                                var key = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop);
                                                if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, key), self__.primary_ns)) {
                                                  return cljs.core.name.call(null, key);
                                                } else {
                                                  return [cljs.core.str(key)].join("");
                                                }
                                              }()], null))), cljs.core.apply.call(null, React.DOM.td, {"className":"prop-val"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, trace.core.list_view, prop, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "opts", "opts", 155075701), 
                                              new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "entid", "entid", 1720688982), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(self__.data)], null)], null))], null)))], null))));
                                              var G__10898 = i__10894 + 1;
                                              i__10894 = G__10898;
                                              continue;
                                            } else {
                                              return true;
                                            }
                                            break;
                                          }
                                        }()) {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10895), trace$core$tree_view_$_iter__10872_$_iter__10892.call(null, cljs.core.chunk_rest.call(null, s__10893__$2)));
                                        } else {
                                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10895), null);
                                        }
                                      } else {
                                        var prop = cljs.core.first.call(null, s__10893__$2);
                                        return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.tr, {"style":om_tools.dom.format_opts.call(null, trace.core.display.call(null, cljs.core.not.call(null, state.call(null, group_label))))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"className":"prop-name"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, 
                                        cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                          var key = (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop);
                                          if (cljs.core._EQ_.call(null, cljs.core.namespace.call(null, key), self__.primary_ns)) {
                                            return cljs.core.name.call(null, key);
                                          } else {
                                            return [cljs.core.str(key)].join("");
                                          }
                                        }()], null))), cljs.core.apply.call(null, React.DOM.td, {"className":"prop-val"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.core.build.call(null, trace.core.list_view, prop, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 
                                        1, [new cljs.core.Keyword(null, "entid", "entid", 1720688982), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(self__.data)], null)], null))], null)))], null))), trace$core$tree_view_$_iter__10872_$_iter__10892.call(null, cljs.core.rest.call(null, s__10893__$2)));
                                      }
                                    } else {
                                      return null;
                                    }
                                    break;
                                  }
                                };
                              }(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_), null, null);
                            };
                          }(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_);
                          return iter__5062__auto__.call(null, props__$1);
                        }()), cljs.core.truth_(group_label) ? cljs.core.apply.call(null, React.DOM.tr, {"style":{"background":"darkgray"}, "onClick":om_tools.dom.format_opts.call(null, function(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_) {
                          return function() {
                            return om.core.update_state_BANG_.call(null, self__.owner, group_label, cljs.core.not);
                          };
                        }(vec__10891, group_label, props__$1, s__10873__$2, temp__4425__auto__, mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.td, {"colSpan":2}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("["), cljs.core.str(cljs.core.truth_(state.call(null, 
                        group_label)) ? "+" : "-"), cljs.core.str("] "), cljs.core.str(group_label)].join("")], null)))], null))) : null), trace$core$tree_view_$_iter__10872.call(null, cljs.core.rest.call(null, s__10873__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_), null, null);
            };
          }(mode, props, grouped_props, ___$1, map__10868, map__10868__$1, primary_ns, group_QMARK_);
          return iter__5062__auto__.call(null, grouped_props);
        }()], null)))], null)))], null));
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.t10869.getBasis = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tree-view", "tree-view", 1258261332, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10839", "p__10839", -1119085309, null), new cljs.core.Symbol(null, "map__10868", "map__10868", -2012601704, null), new cljs.core.Symbol(null, "primary-ns", "primary-ns", -1515443513, 
        null), new cljs.core.Symbol(null, "group?", "group?", -231097890, null), new cljs.core.Symbol(null, "meta10870", "meta10870", -400123586, null)], null);
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.t10869.cljs$lang$type = true;
    trace.core.t10869.cljs$lang$ctorStr = "trace.core/t10869";
    trace.core.t10869.cljs$lang$ctorPrWriter = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10869");
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
    trace.core.__GT_t10869 = function(map__10868, map__10868__$1, primary_ns, group_QMARK_) {
      return function trace$core$tree_view_$___GT_t10869(tree_view__$1, data__$1, owner__$1, p__10839__$1, map__10868__$2, primary_ns__$1, group_QMARK___$1, meta10870) {
        return new trace.core.t10869(tree_view__$1, data__$1, owner__$1, p__10839__$1, map__10868__$2, primary_ns__$1, group_QMARK___$1, meta10870);
      };
    }(map__10868, map__10868__$1, primary_ns, group_QMARK_);
  }
  return new trace.core.t10869(trace$core$tree_view, data, owner, p__10839, map__10868__$1, primary_ns, group_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.pack_id = function trace$core$pack_id(id) {
  if (typeof id === "string") {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "id", "db/id", -1388397098), id], null);
  } else {
    return id;
  }
};
trace.core.gather_txdata = function trace$core$gather_txdata(id, props) {
  return cljs.core.reduce.call(null, function(txlist, prop) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "comp", "comp", 1191953630)).cljs$core$IFn$_invoke$arity$1(prop))) {
      return cljs.core.reduce.call(null, function(txlist__$1, val) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(val))) {
          var t = trace.core.tempid.call(null, new cljs.core.Keyword("db.part", "user", "db.part/user", -546775899));
          var temp__4423__auto__ = cljs.core.seq.call(null, trace$core$gather_txdata.call(null, t, (new cljs.core.Keyword(null, "edit", "edit", -1641834166)).cljs$core$IFn$_invoke$arity$1(val)));
          if (temp__4423__auto__) {
            var comp_tx = temp__4423__auto__;
            return cljs.core.concat.call(null, txlist__$1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), trace.core.pack_id.call(null, id), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop), t], null)], null), comp_tx);
          } else {
            return txlist__$1;
          }
        } else {
          return cljs.core.concat.call(null, txlist__$1, trace$core$gather_txdata.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(val), (new cljs.core.Keyword(null, "val", "val", 128701612)).cljs$core$IFn$_invoke$arity$1(val)));
        }
      }, txlist, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(prop));
    } else {
      return cljs.core.reduce.call(null, function(txlist__$1, p__10902) {
        var map__10903 = p__10902;
        var map__10903__$1 = cljs.core.seq_QMARK_.call(null, map__10903) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10903) : map__10903;
        var edit = cljs.core.get.call(null, map__10903__$1, new cljs.core.Keyword(null, "edit", "edit", -1641834166));
        var val = cljs.core.get.call(null, map__10903__$1, new cljs.core.Keyword(null, "val", "val", 128701612));
        var remove = cljs.core.get.call(null, map__10903__$1, new cljs.core.Keyword(null, "remove", "remove", -131428414));
        var is_edit = !(edit == null) && cljs.core.not_EQ_.call(null, edit, val);
        return cljs.core.concat.call(null, txlist__$1, cljs.core.truth_(function() {
          var and__4296__auto__ = function() {
            var or__4308__auto__ = function() {
              var and__4296__auto__ = is_edit;
              if (and__4296__auto__) {
                return val;
              } else {
                return and__4296__auto__;
              }
            }();
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return remove;
            }
          }();
          if (cljs.core.truth_(and__4296__auto__)) {
            return val;
          } else {
            return and__4296__auto__;
          }
        }()) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "retract", "db/retract", -1549825231), trace.core.pack_id.call(null, id), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop), val], null)], null) : null, is_edit && cljs.core.not.call(null, remove) && cljs.core.not_EQ_.call(null, edit, new cljs.core.Keyword(null, 
        "empty", "empty", 767870958)) ? cljs.core.sequential_QMARK_.call(null, edit) && cljs.core._EQ_.call(null, cljs.core.last.call(null, edit), new cljs.core.Keyword(null, "create", "create", -1301499256)) ? function() {
          var vec__10904 = edit;
          var class$ = cljs.core.nth.call(null, vec__10904, 0, null);
          var new_id = cljs.core.nth.call(null, vec__10904, 1, null);
          var t = trace.core.tempid.call(null, new cljs.core.Keyword("db.part", "user", "db.part/user", -546775899));
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), t, class$, new_id], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), trace.core.pack_id.call(null, id), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop), 
          t], null)], null);
        }() : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("db", "add", "db/add", 235286841), trace.core.pack_id.call(null, id), (new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(prop), edit], null)], null) : null);
      }, txlist, (new cljs.core.Keyword(null, "values", "values", 372645556)).cljs$core$IFn$_invoke$arity$1(prop));
    }
  }, cljs.core.PersistentVector.EMPTY, props);
};
trace.core.edit = function trace$core$edit(app) {
  if (cljs.core.truth_(function() {
    var or__4308__auto__ = (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)));
    if (cljs.core.truth_(or__4308__auto__)) {
      return or__4308__auto__;
    } else {
      return (new cljs.core.Keyword(null, "fetching-schema", "fetching-schema", -2126643381)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)));
    }
  }())) {
    return null;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app)))) {
      return om.core.update_BANG_.call(null, app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "editing", "editing", 1365491601)], null), true);
    } else {
      om.core.update_BANG_.call(null, app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "fetching-schema", "fetching-schema", -2126643381)], null), true);
      return trace.utils.edn_xhr.call(null, "/schema", function(resp) {
        om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "schema", "schema", -1582001791), trace.utils.process_schema.call(null, resp));
        om.core.update_BANG_.call(null, app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "fetching-schema", "fetching-schema", -2126643381)], null), false);
        return om.core.update_BANG_.call(null, app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "editing", "editing", 1365491601)], null), true);
      });
    }
  }
};
trace.core.submit = function trace$core$submit(app) {
  var tx = trace.core.gather_txdata.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)), (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)));
  if (cljs.core.seq.call(null, tx)) {
    trace.utils.edn_xhr_post.call(null, "/transact", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tx", "tx", 466630418), tx], null), function(tx) {
      return function(p__10907) {
        var map__10908 = p__10907;
        var map__10908__$1 = cljs.core.seq_QMARK_.call(null, map__10908) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10908) : map__10908;
        var status = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
        var responseText = cljs.core.get.call(null, map__10908__$1, new cljs.core.Keyword(null, "responseText", "responseText", 1436974212));
        if (cljs.core._EQ_.call(null, status, 200)) {
          om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "err", "err", -2089457205), null);
          return secretary.core.dispatch_BANG_.call(null, window.location.pathname);
        } else {
          return om.core.update_BANG_.call(null, app, new cljs.core.Keyword(null, "err", "err", -2089457205), responseText);
        }
      };
    }(tx));
    return true;
  } else {
    return null;
  }
};
trace.core.cancel = function trace$core$cancel(app) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app))))) {
    secretary.core.dispatch_BANG_.call(null, window.location.pathname);
    return true;
  } else {
    return null;
  }
};
trace.core.trace_title = function trace$core$trace_title(app, owner) {
  if (typeof trace.core.t10912 !== "undefined") {
  } else {
    trace.core.t10912 = function(trace_title, app, owner, meta10913) {
      this.trace_title = trace_title;
      this.app = app;
      this.owner = owner;
      this.meta10913 = meta10913;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10912.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10914, meta10913__$1) {
      var self__ = this;
      var _10914__$1 = this;
      return new trace.core.t10912(self__.trace_title, self__.app, self__.owner, meta10913__$1);
    };
    trace.core.t10912.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10914) {
      var self__ = this;
      var _10914__$1 = this;
      return self__.meta10913;
    };
    trace.core.t10912.prototype.om$core$IRender$ = true;
    trace.core.t10912.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return om_tools.dom.element.call(null, React.DOM.span, [cljs.core.str(function() {
        var or__4308__auto__ = om.core.value.call(null, (new cljs.core.Keyword(null, "ident", "ident", -742346)).cljs$core$IFn$_invoke$arity$1(self__.app));
        if (cljs.core.truth_(or__4308__auto__)) {
          return or__4308__auto__;
        } else {
          return "TrACeView";
        }
      }())].join(""), cljs.core.PersistentVector.EMPTY);
    };
    trace.core.t10912.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "trace-title", "trace-title", 84534080, null), new cljs.core.Symbol(null, "app", "app", 1079569820, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10913", "meta10913", -774060280, null)], null);
    };
    trace.core.t10912.cljs$lang$type = true;
    trace.core.t10912.cljs$lang$ctorStr = "trace.core/t10912";
    trace.core.t10912.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10912");
    };
    trace.core.__GT_t10912 = function trace$core$trace_title_$___GT_t10912(trace_title__$1, app__$1, owner__$1, meta10913) {
      return new trace.core.t10912(trace_title__$1, app__$1, owner__$1, meta10913);
    };
  }
  return new trace.core.t10912(trace$core$trace_title, app, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.trace_load = function trace$core$trace_load(app, c, i) {
  om.core.update_BANG_.call(null, app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "loading", "loading", -737050189)], null), true);
  return trace.utils.edn_xhr.call(null, [cljs.core.str("/raw2/"), cljs.core.str(c), cljs.core.str("/"), cljs.core.str(i), cljs.core.str("?max-in\x3d5\x26max-out\x3d10\x26txns\x3dfalse")].join(""), function(resp) {
    document.title = i;
    if (cljs.core.truth_(resp)) {
      om.core.transact_BANG_.call(null, app, function(app__$1) {
        return cljs.core.assoc.call(null, app__$1, new cljs.core.Keyword(null, "mode", "mode", 654403691), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(app__$1), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "loading", "loading", -737050189), false, new cljs.core.Keyword(null, "editing", "editing", 1365491601), false], null)), new cljs.core.Keyword(null, "error", "error", -978969032), null, new cljs.core.Keyword(null, 
        "props", "props", 453281727), trace.core.props__GT_state.call(null, (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(resp)), new cljs.core.Keyword(null, "txns", "txns", -1492102421), cljs.core.into.call(null, cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(resp), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(app__$1)) ? (new cljs.core.Keyword(null, 
        "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(app__$1) : cljs.core.PersistentArrayMap.EMPTY, function() {
          var iter__5062__auto__ = function trace$core$trace_load_$_iter__10919(s__10920) {
            return new cljs.core.LazySeq(null, function() {
              var s__10920__$1 = s__10920;
              while (true) {
                var temp__4425__auto__ = cljs.core.seq.call(null, s__10920__$1);
                if (temp__4425__auto__) {
                  var s__10920__$2 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, s__10920__$2)) {
                    var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10920__$2);
                    var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                    var b__10922 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                    if (function() {
                      var i__10921 = 0;
                      while (true) {
                        if (i__10921 < size__5061__auto__) {
                          var t = cljs.core._nth.call(null, c__5060__auto__, i__10921);
                          cljs.core.chunk_append.call(null, b__10922, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null));
                          var G__10923 = i__10921 + 1;
                          i__10921 = G__10923;
                          continue;
                        } else {
                          return true;
                        }
                        break;
                      }
                    }()) {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10922), trace$core$trace_load_$_iter__10919.call(null, cljs.core.chunk_rest.call(null, s__10920__$2)));
                    } else {
                      return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10922), null);
                    }
                  } else {
                    var t = cljs.core.first.call(null, s__10920__$2);
                    return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("db", "id", "db/id", -1388397098)).cljs$core$IFn$_invoke$arity$1(t), t], null), trace$core$trace_load_$_iter__10919.call(null, cljs.core.rest.call(null, s__10920__$2)));
                  }
                } else {
                  return null;
                }
                break;
              }
            }, null, null);
          };
          return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "txns", "txns", -1492102421)).cljs$core$IFn$_invoke$arity$1(resp));
        }()), new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(resp), new cljs.core.Keyword(null, "ident", "ident", -742346), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, c, "id"), i], null));
      });
      if (cljs.core.truth_((new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, app))))) {
        return trace.core.fetch_missing_txns.call(null, app);
      } else {
        return null;
      }
    } else {
      return om.core.transact_BANG_.call(null, app, function(app__$1) {
        return cljs.core.assoc.call(null, app__$1, new cljs.core.Keyword(null, "error", "error", -978969032), [cljs.core.str("Couldn't load "), cljs.core.str(i)].join(""), new cljs.core.Keyword(null, "mode", "mode", 654403691), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(app__$1), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "loading", "loading", -737050189), false, new cljs.core.Keyword(null, "editing", 
        "editing", 1365491601), false], null)), new cljs.core.Keyword(null, "props", "props", 453281727), null, new cljs.core.Keyword(null, "txns", "txns", -1492102421), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "id", "id", -1388402092), i, new cljs.core.Keyword(null, "ident", "ident", -742346), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, c, "id"), i], null));
      });
    }
  });
};
trace.core.trace_view = function trace$core$trace_view(app, owner) {
  if (typeof trace.core.t10930 !== "undefined") {
  } else {
    trace.core.t10930 = function(trace_view, app, owner, meta10931) {
      this.trace_view = trace_view;
      this.app = app;
      this.owner = owner;
      this.meta10931 = meta10931;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10930.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10932, meta10931__$1) {
      var self__ = this;
      var _10932__$1 = this;
      return new trace.core.t10930(self__.trace_view, self__.app, self__.owner, meta10931__$1);
    };
    trace.core.t10930.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10932) {
      var self__ = this;
      var _10932__$1 = this;
      return self__.meta10931;
    };
    trace.core.t10930.prototype.om$core$IWillMount$ = true;
    trace.core.t10930.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var action__10312__auto___10936 = function(___$1) {
        return function(params__10313__auto__) {
          if (cljs.core.map_QMARK_.call(null, params__10313__auto__)) {
            var map__10933 = params__10313__auto__;
            var map__10933__$1 = cljs.core.seq_QMARK_.call(null, map__10933) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10933) : map__10933;
            var c = cljs.core.get.call(null, map__10933__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
            var i = cljs.core.get.call(null, map__10933__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
            return trace.core.trace_load.call(null, self__.app, c, i);
          } else {
            if (cljs.core.vector_QMARK_.call(null, params__10313__auto__)) {
              var map__10934 = params__10313__auto__;
              var map__10934__$1 = cljs.core.seq_QMARK_.call(null, map__10934) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10934) : map__10934;
              var c = cljs.core.get.call(null, map__10934__$1, new cljs.core.Keyword(null, "class", "class", -2030961996));
              var i = cljs.core.get.call(null, map__10934__$1, new cljs.core.Keyword(null, "id", "id", -1388402092));
              return trace.core.trace_load.call(null, self__.app, c, i);
            } else {
              return null;
            }
          }
        };
      }(___$1);
      secretary.core.add_route_BANG_.call(null, "/view/:class/:id", action__10312__auto___10936);
      secretary.core.dispatch_BANG_.call(null, window.location.pathname);
      return window.addEventListener("popstate", function(___$1) {
        return function(e) {
          return secretary.core.dispatch_BANG_.call(null, window.location.pathname);
        };
      }(___$1));
    };
    trace.core.t10930.prototype.om$core$IDidMount$ = true;
    trace.core.t10930.prototype.om$core$IDidMount$did_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return window.addEventListener("keydown", function(___$1) {
        return function(ev) {
          var code = ev.keyCode;
          var ctrl = function() {
            var or__4308__auto__ = ev.ctrlKey;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return ev.metaKey;
            }
          }();
          if (cljs.core.truth_(cljs.core.truth_(function() {
            var and__4296__auto__ = ctrl;
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core._EQ_.call(null, code, 83);
            } else {
              return and__4296__auto__;
            }
          }()) ? trace.core.submit.call(null, self__.app) : cljs.core.truth_(function() {
            var and__4296__auto__ = ctrl;
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core._EQ_.call(null, code, 84);
            } else {
              return and__4296__auto__;
            }
          }()) ? function() {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, om.core.transact_BANG_.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)], null), cljs.core.not)))))) {
              trace.core.fetch_missing_txns.call(null, self__.app);
            } else {
            }
            return true;
          }() : cljs.core.truth_(function() {
            var and__4296__auto__ = ctrl;
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core._EQ_.call(null, code, 88);
            } else {
              return and__4296__auto__;
            }
          }()) ? trace.core.cancel.call(null, self__.app) : cljs.core.truth_(function() {
            var and__4296__auto__ = ctrl;
            if (cljs.core.truth_(and__4296__auto__)) {
              return cljs.core._EQ_.call(null, code, 69);
            } else {
              return and__4296__auto__;
            }
          }()) ? trace.core.edit.call(null, self__.app) : null)) {
            ev.preventDefault();
            return ev.stopPropagation();
          } else {
            return null;
          }
        };
      }(___$1), false);
    };
    trace.core.t10930.prototype.om$core$IRender$ = true;
    trace.core.t10930.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, React.DOM.div, {"className":"trace-body"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_((new cljs.core.Keyword(null, "loading", "loading", -737050189)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(self__.app))) ? React.DOM.img({"src":"/img/spinner_192.gif"}) : cljs.core.truth_((new cljs.core.Keyword(null, 
      "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(self__.app)) ? om_tools.dom.element.call(null, React.DOM.p, (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(self__.app), cljs.core.PersistentVector.EMPTY) : om.core.build.call(null, trace.core.tree_view, self__.app, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "group?", 
      "group?", -1871629417), true, new cljs.core.Keyword(null, "primary-ns", "primary-ns", 1138992256), function() {
        var G__10935 = cljs.core.first.call(null, (new cljs.core.Keyword(null, "ident", "ident", -742346)).cljs$core$IFn$_invoke$arity$1(self__.app));
        var G__10935__$1 = G__10935 == null ? null : cljs.core.namespace.call(null, G__10935);
        return G__10935__$1;
      }()], null)], null))], null)));
    };
    trace.core.t10930.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "trace-view", "trace-view", -798424009, null), new cljs.core.Symbol(null, "app", "app", 1079569820, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10931", "meta10931", 1221628379, null)], null);
    };
    trace.core.t10930.cljs$lang$type = true;
    trace.core.t10930.cljs$lang$ctorStr = "trace.core/t10930";
    trace.core.t10930.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10930");
    };
    trace.core.__GT_t10930 = function trace$core$trace_view_$___GT_t10930(trace_view__$1, app__$1, owner__$1, meta10931) {
      return new trace.core.t10930(trace_view__$1, app__$1, owner__$1, meta10931);
    };
  }
  return new trace.core.t10930(trace$core$trace_view, app, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.trace_tools = function trace$core$trace_tools(app, owner) {
  if (typeof trace.core.t10940 !== "undefined") {
  } else {
    trace.core.t10940 = function(trace_tools, app, owner, meta10941) {
      this.trace_tools = trace_tools;
      this.app = app;
      this.owner = owner;
      this.meta10941 = meta10941;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.core.t10940.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10942, meta10941__$1) {
      var self__ = this;
      var _10942__$1 = this;
      return new trace.core.t10940(self__.trace_tools, self__.app, self__.owner, meta10941__$1);
    };
    trace.core.t10940.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10942) {
      var self__ = this;
      var _10942__$1 = this;
      return self__.meta10941;
    };
    trace.core.t10940.prototype.om$core$IRender$ = true;
    trace.core.t10940.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(self__.app);
      return cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.label, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["Timestamps", 
      om.dom.input.call(null, {"type":"checkbox", "checked":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(self__.app))), "onClick":om_tools.dom.format_opts.call(null, function(mode, ___$1) {
        return function(___$2) {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, om.core.transact_BANG_.call(null, self__.app, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "txnData", "txnData", -1917888368)], null), cljs.core.not)))))) {
            return trace.core.fetch_missing_txns.call(null, self__.app);
          } else {
            return null;
          }
        };
      }(mode, ___$1))})], null))), cljs.core.truth_((new cljs.core.Keyword(null, "fetching-schema", "fetching-schema", -2126643381)).cljs$core$IFn$_invoke$arity$1(mode)) ? React.DOM.span(null, "Fetching schema...") : null, cljs.core.truth_((new cljs.core.Keyword(null, "fetching-schema", "fetching-schema", -2126643381)).cljs$core$IFn$_invoke$arity$1(mode)) ? null : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(function() {
        var and__4296__auto__ = trace_logged_in;
        if (cljs.core.truth_(and__4296__auto__)) {
          return cljs.core.not.call(null, (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1(mode));
        } else {
          return and__4296__auto__;
        }
      }()) ? React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(mode, ___$1) {
        return function() {
          return trace.core.edit.call(null, self__.app);
        };
      }(mode, ___$1))}, "Edit") : null, cljs.core.truth_(function() {
        var and__4296__auto__ = trace_logged_in;
        if (cljs.core.truth_(and__4296__auto__)) {
          return (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1(mode);
        } else {
          return and__4296__auto__;
        }
      }()) ? React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(mode, ___$1) {
        return function() {
          return trace.core.submit.call(null, self__.app);
        };
      }(mode, ___$1)), "disabled":om_tools.dom.format_opts.call(null, cljs.core.empty_QMARK_.call(null, trace.core.gather_txdata.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)), (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)))))}, "Save") : null, cljs.core.truth_(function() {
        var and__4296__auto__ = trace_logged_in;
        if (cljs.core.truth_(and__4296__auto__)) {
          return (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1(mode);
        } else {
          return and__4296__auto__;
        }
      }()) ? React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(mode, ___$1) {
        return function() {
          return trace.core.cancel.call(null, self__.app);
        };
      }(mode, ___$1))}, "Cancel") : null], null), cljs.core.apply.call(null, React.DOM.span, {"style":{"color":"red"}}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "err", "err", -2089457205)).cljs$core$IFn$_invoke$arity$1(self__.app)], null)))], null)))], null)));
    };
    trace.core.t10940.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "trace-tools", "trace-tools", -2078627390, null), new cljs.core.Symbol(null, "app", "app", 1079569820, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10941", "meta10941", -1947218120, null)], null);
    };
    trace.core.t10940.cljs$lang$type = true;
    trace.core.t10940.cljs$lang$ctorStr = "trace.core/t10940";
    trace.core.t10940.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.core/t10940");
    };
    trace.core.__GT_t10940 = function trace$core$trace_tools_$___GT_t10940(trace_tools__$1, app__$1, owner__$1, meta10941) {
      return new trace.core.t10940(trace_tools__$1, app__$1, owner__$1, meta10941);
    };
  }
  return new trace.core.t10940(trace$core$trace_tools, app, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.core.init_trace = function trace$core$init_trace() {
  om.core.root.call(null, trace.core.trace_view, trace.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), goog.dom.getElement("tree")], null));
  om.core.root.call(null, trace.core.trace_title, trace.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), goog.dom.getElement("page-title")], null));
  om.core.root.call(null, trace.core.trace_tools, trace.core.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), goog.dom.getElement("header-content")], null));
  return window.addEventListener("beforeunload", function(e) {
    if (cljs.core.truth_(function() {
      var and__4296__auto__ = (new cljs.core.Keyword(null, "editing", "editing", 1365491601)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)));
      if (cljs.core.truth_(and__4296__auto__)) {
        return cljs.core.seq.call(null, trace.core.gather_txdata.call(null, (new cljs.core.Keyword(null, "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state)), (new cljs.core.Keyword(null, "props", "props", 453281727)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.core.app_state))));
      } else {
        return and__4296__auto__;
      }
    }())) {
      e.returnValue = "Currently editing this entity";
      return "Currently editing this entity";
    } else {
      return null;
    }
  });
};
goog.provide("goog.history.EventType");
goog.history.EventType = {NAVIGATE:"navigate"};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return !!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return !!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.async.FreeList");
goog.async.FreeList = goog.defineClass(null, {constructor:function(create, reset, limit) {
  this.limit_ = limit;
  this.create_ = create;
  this.reset_ = reset;
  this.occupants_ = 0;
  this.head_ = null;
}, get:function() {
  var item;
  if (this.occupants_ > 0) {
    this.occupants_--;
    item = this.head_;
    this.head_ = item.next;
    item.next = null;
  } else {
    item = this.create_();
  }
  return item;
}, put:function(item) {
  this.reset_(item);
  if (this.occupants_ < this.limit_) {
    this.occupants_++;
    item.next = this.head_;
    this.head_ = item;
  }
}, occupants:function() {
  return this.occupants_;
}});
goog.provide("goog.async.WorkItem");
goog.provide("goog.async.WorkQueue");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.async.WorkQueue = function() {
  this.workHead_ = null;
  this.workTail_ = null;
};
goog.define("goog.async.WorkQueue.DEFAULT_MAX_UNUSED", 100);
goog.async.WorkQueue.freelist_ = new goog.async.FreeList(function() {
  return new goog.async.WorkItem;
}, function(item) {
  item.reset();
}, goog.async.WorkQueue.DEFAULT_MAX_UNUSED);
goog.async.WorkQueue.prototype.add = function(fn, scope) {
  var item = this.getUnusedItem_();
  item.set(fn, scope);
  if (this.workTail_) {
    this.workTail_.next = item;
    this.workTail_ = item;
  } else {
    goog.asserts.assert(!this.workHead_);
    this.workHead_ = item;
    this.workTail_ = item;
  }
};
goog.async.WorkQueue.prototype.remove = function() {
  var item = null;
  if (this.workHead_) {
    item = this.workHead_;
    this.workHead_ = this.workHead_.next;
    if (!this.workHead_) {
      this.workTail_ = null;
    }
    item.next = null;
  }
  return item;
};
goog.async.WorkQueue.prototype.returnUnused = function(item) {
  goog.async.WorkQueue.freelist_.put(item);
};
goog.async.WorkQueue.prototype.getUnusedItem_ = function() {
  return goog.async.WorkQueue.freelist_.get();
};
goog.async.WorkItem = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.async.WorkItem.prototype.set = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
  this.next = null;
};
goog.async.WorkItem.prototype.reset = function() {
  this.fn = null;
  this.scope = null;
  this.next = null;
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context, opt_useSetImmediate) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate) && (opt_useSetImmediate || !goog.global.Window || !goog.global.Window.prototype || goog.global.Window.prototype.setImmediate != goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener && !goog.labs.userAgent.engine.isPresto()) {
    Channel = function() {
      var iframe = document.createElement(goog.dom.TagName.IFRAME);
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (origin != "*" && e.origin != origin || e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined" && !goog.labs.userAgent.browser.isIE()) {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      if (goog.isDef(head.next)) {
        head = head.next;
        var cb = head.cb;
        head.cb = null;
        cb();
      }
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement(goog.dom.TagName.SCRIPT)) {
    return function(cb) {
      var script = document.createElement(goog.dom.TagName.SCRIPT);
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.WorkQueue");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.add(callback, opt_context);
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = new goog.async.WorkQueue;
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = new goog.async.WorkQueue;
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  var item = null;
  while (item = goog.async.run.workQueue_.remove()) {
    try {
      item.fn.call(item.scope);
    } catch (e) {
      goog.async.throwException(e);
    }
    goog.async.run.workQueue_.returnUnused(item);
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.FreeList");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.callbackEntriesTail_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  if (resolver == goog.Promise.RESOLVE_FAST_PATH_) {
    this.resolve_(goog.Promise.State_.FULFILLED, opt_context);
  } else {
    try {
      var self = this;
      resolver.call(opt_context, function(value) {
        self.resolve_(goog.Promise.State_.FULFILLED, value);
      }, function(reason) {
        if (goog.DEBUG && !(reason instanceof goog.Promise.CancellationError)) {
          try {
            if (reason instanceof Error) {
              throw reason;
            } else {
              throw new Error("Promise rejected.");
            }
          } catch (e) {
          }
        }
        self.resolve_(goog.Promise.State_.REJECTED, reason);
      });
    } catch (e) {
      this.resolve_(goog.Promise.State_.REJECTED, e);
    }
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_ = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.next = null;
  this.always = false;
};
goog.Promise.CallbackEntry_.prototype.reset = function() {
  this.child = null;
  this.onFulfilled = null;
  this.onRejected = null;
  this.context = null;
  this.always = false;
};
goog.define("goog.Promise.DEFAULT_MAX_UNUSED", 100);
goog.Promise.freelist_ = new goog.async.FreeList(function() {
  return new goog.Promise.CallbackEntry_;
}, function(item) {
  item.reset();
}, goog.Promise.DEFAULT_MAX_UNUSED);
goog.Promise.getCallbackEntry_ = function(onFulfilled, onRejected, context) {
  var entry = goog.Promise.freelist_.get();
  entry.onFulfilled = onFulfilled;
  entry.onRejected = onRejected;
  entry.context = context;
  return entry;
};
goog.Promise.returnEntry_ = function(entry) {
  goog.Promise.freelist_.put(entry);
};
goog.Promise.RESOLVE_FAST_PATH_ = function() {
};
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(goog.Promise.RESOLVE_FAST_PATH_, opt_value);
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      goog.Promise.maybeThenVoid_(promise, resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      goog.Promise.maybeThenVoid_(promise, goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.allSettled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toSettle = promises.length;
    var results = [];
    if (!toSettle) {
      resolve(results);
      return;
    }
    var onSettled = function(index, fulfilled, result) {
      toSettle--;
      results[index] = fulfilled ? {fulfilled:true, value:result} : {fulfilled:false, reason:result};
      if (toSettle == 0) {
        resolve(results);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      goog.Promise.maybeThenVoid_(promise, goog.partial(onSettled, i, true), goog.partial(onSettled, i, false));
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      goog.Promise.maybeThenVoid_(promise, onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenVoid = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  this.addCallbackEntry_(goog.Promise.getCallbackEntry_(opt_onFulfilled || goog.nullFunction, opt_onRejected || null, opt_context));
};
goog.Promise.maybeThenVoid_ = function(promise, onFulfilled, onRejected, opt_context) {
  if (promise instanceof goog.Promise) {
    promise.thenVoid(onFulfilled, onRejected, opt_context);
  } else {
    promise.then(onFulfilled, onRejected, opt_context);
  }
};
goog.Promise.prototype.thenAlways = function(onSettled, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var entry = goog.Promise.getCallbackEntry_(onSettled, onSettled, opt_context);
  entry.always = true;
  this.addCallbackEntry_(entry);
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
      this.parent_ = null;
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childEntry = null;
  var beforeChildEntry = null;
  for (var entry = this.callbackEntries_;entry;entry = entry.next) {
    if (!entry.always) {
      childCount++;
      if (entry.child == childPromise) {
        childEntry = entry;
      }
      if (childEntry && childCount > 1) {
        break;
      }
    }
    if (!childEntry) {
      beforeChildEntry = entry;
    }
  }
  if (childEntry) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      if (beforeChildEntry) {
        this.removeEntryAfter_(beforeChildEntry);
      } else {
        this.popEntry_();
      }
      this.executeCallback_(childEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if (!this.hasEntry_() && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  this.queueEntry_(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = goog.Promise.getCallbackEntry_(null, null, null);
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_(callbackEntry);
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      goog.Promise.maybeThenVoid_(x, this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.parent_ = null;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.hasEntry_ = function() {
  return !!this.callbackEntries_;
};
goog.Promise.prototype.queueEntry_ = function(entry) {
  goog.asserts.assert(entry.onFulfilled != null);
  if (this.callbackEntriesTail_) {
    this.callbackEntriesTail_.next = entry;
    this.callbackEntriesTail_ = entry;
  } else {
    this.callbackEntries_ = entry;
    this.callbackEntriesTail_ = entry;
  }
};
goog.Promise.prototype.popEntry_ = function() {
  var entry = null;
  if (this.callbackEntries_) {
    entry = this.callbackEntries_;
    this.callbackEntries_ = entry.next;
    entry.next = null;
  }
  if (!this.callbackEntries_) {
    this.callbackEntriesTail_ = null;
  }
  if (entry != null) {
    goog.asserts.assert(entry.onFulfilled != null);
  }
  return entry;
};
goog.Promise.prototype.removeEntryAfter_ = function(previous) {
  goog.asserts.assert(this.callbackEntries_);
  goog.asserts.assert(previous != null);
  if (previous.next == this.callbackEntriesTail_) {
    this.callbackEntriesTail_ = previous;
  }
  previous.next = previous.next.next;
};
goog.Promise.prototype.executeCallbacks_ = function() {
  var entry = null;
  while (entry = this.popEntry_()) {
    if (goog.Promise.LONG_STACK_TRACES) {
      this.currentStep_++;
    }
    this.executeCallback_(entry, this.state_, this.result_);
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.REJECTED && callbackEntry.onRejected && !callbackEntry.always) {
    this.removeUnhandledRejection_();
  }
  if (callbackEntry.child) {
    callbackEntry.child.parent_ = null;
    goog.Promise.invokeCallback_(callbackEntry, state, result);
  } else {
    try {
      callbackEntry.always ? callbackEntry.onFulfilled.call(callbackEntry.context) : goog.Promise.invokeCallback_(callbackEntry, state, result);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  }
  goog.Promise.returnEntry_(callbackEntry);
};
goog.Promise.invokeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled.call(callbackEntry.context, result);
  } else {
    if (callbackEntry.onRejected) {
      callbackEntry.onRejected.call(callbackEntry.context, result);
    }
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose = goog.abstractMethod;
goog.disposable.IDisposable.prototype.isDisposed = goog.abstractMethod;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.provide("goog.disposeAll");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {
      this.creationStack = (new Error).stack;
    }
    goog.Disposable.instances_[goog.getUid(this)] = this;
  }
  this.disposed_ = this.disposed_;
  this.onDisposeCallbacks_ = this.onDisposeCallbacks_;
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.define("goog.Disposable.MONITORING_MODE", 0);
goog.define("goog.Disposable.INCLUDE_STACK_ON_CREATION", true);
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for (var id in goog.Disposable.instances_) {
    if (goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)]);
    }
  }
  return ret;
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {};
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_;
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if (!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if (goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if (goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid];
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if (this.disposed_) {
    callback.call(opt_scope);
    return;
  }
  if (!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = [];
  }
  this.onDisposeCallbacks_.push(goog.isDef(opt_scope) ? goog.bind(callback, opt_scope) : callback);
};
goog.Disposable.prototype.disposeInternal = function() {
  if (this.onDisposeCallbacks_) {
    while (this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()();
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if (obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed();
  }
  return false;
};
goog.dispose = function(obj) {
  if (obj && typeof obj.dispose == "function") {
    obj.dispose();
  }
};
goog.disposeAll = function(var_args) {
  for (var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if (goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable);
    } else {
      goog.dispose(disposable);
    }
  }
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersionOrHigher("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9b") || goog.userAgent.IE && 
goog.userAgent.isVersionOrHigher("8") || goog.userAgent.OPERA && goog.userAgent.isVersionOrHigher("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersionOrHigher("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersionOrHigher("8") || goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && 
goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.EventId");
goog.events.EventId = function(eventId) {
  this.id = eventId;
};
goog.events.EventId.prototype.toString = function() {
  return this.id;
};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.require("goog.events.EventId");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type instanceof goog.events.EventId ? String(type) : type;
  this.target = opt_target;
  this.currentTarget = this.target;
  this.propagationStopped_ = false;
  this.defaultPrevented = false;
  this.returnValue_ = true;
};
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true;
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false;
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation();
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault();
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.getVendorPrefixedName_ = function(eventName) {
  return goog.userAgent.WEBKIT ? "webkit" + eventName : goog.userAgent.OPERA ? "o" + eventName.toLowerCase() : eventName.toLowerCase();
};
goog.events.EventType = {CLICK:"click", RIGHTCLICK:"rightclick", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", MOUSEENTER:"mouseenter", MOUSELEAVE:"mouseleave", SELECTSTART:"selectstart", WHEEL:"wheel", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", 
CHANGE:"change", RESET:"reset", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONSOLEMESSAGE:"consolemessage", CONTEXTMENU:"contextmenu", DOMCONTENTLOADED:"DOMContentLoaded", ERROR:"error", HELP:"help", LOAD:"load", 
LOSECAPTURE:"losecapture", ORIENTATIONCHANGE:"orientationchange", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", ANIMATIONSTART:goog.events.getVendorPrefixedName_("AnimationStart"), ANIMATIONEND:goog.events.getVendorPrefixedName_("AnimationEnd"), 
ANIMATIONITERATION:goog.events.getVendorPrefixedName_("AnimationIteration"), TRANSITIONEND:goog.events.getVendorPrefixedName_("TransitionEnd"), POINTERDOWN:"pointerdown", POINTERUP:"pointerup", POINTERCANCEL:"pointercancel", POINTERMOVE:"pointermove", POINTEROVER:"pointerover", POINTEROUT:"pointerout", POINTERENTER:"pointerenter", POINTERLEAVE:"pointerleave", GOTPOINTERCAPTURE:"gotpointercapture", LOSTPOINTERCAPTURE:"lostpointercapture", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", 
MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERENTER:"MSPointerEnter", MSPOINTERHOVER:"MSPointerHover", MSPOINTERLEAVE:"MSPointerLeave", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROUT:"MSPointerOut", MSPOINTEROVER:"MSPointerOver", MSPOINTERUP:"MSPointerUp", TEXT:"text", 
TEXTINPUT:"textInput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend", EXIT:"exit", LOADABORT:"loadabort", LOADCOMMIT:"loadcommit", LOADREDIRECT:"loadredirect", LOADSTART:"loadstart", LOADSTOP:"loadstop", RESPONSIVE:"responsive", SIZECHANGED:"sizechanged", UNRESPONSIVE:"unresponsive", VISIBILITYCHANGE:"visibilitychange", STORAGE:"storage", DOMSUBTREEMODIFIED:"DOMSubtreeModified", DOMNODEINSERTED:"DOMNodeInserted", DOMNODEREMOVED:"DOMNodeRemoved", 
DOMNODEREMOVEDFROMDOCUMENT:"DOMNodeRemovedFromDocument", DOMNODEINSERTEDINTODOCUMENT:"DOMNodeInsertedIntoDocument", DOMATTRMODIFIED:"DOMAttrModified", DOMCHARACTERDATAMODIFIED:"DOMCharacterDataModified"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  goog.events.BrowserEvent.base(this, "constructor", opt_e ? opt_e.type : "");
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null;
  this.offsetX = 0;
  this.offsetY = 0;
  this.clientX = 0;
  this.clientY = 0;
  this.screenX = 0;
  this.screenY = 0;
  this.button = 0;
  this.keyCode = 0;
  this.charCode = 0;
  this.ctrlKey = false;
  this.altKey = false;
  this.shiftKey = false;
  this.metaKey = false;
  this.state = null;
  this.platformModifierKey = false;
  this.event_ = null;
  if (opt_e) {
    this.init(opt_e, opt_currentTarget);
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if (relatedTarget) {
    if (goog.userAgent.GECKO) {
      if (!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null;
      }
    }
  } else {
    if (type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement;
    } else {
      if (type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement;
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if (e.defaultPrevented) {
    this.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if (!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if (this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT;
    } else {
      return !!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button]);
    }
  } else {
    return this.event_.button == button;
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey);
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if (this.event_.stopPropagation) {
    this.event_.stopPropagation();
  } else {
    this.event_.cancelBubble = true;
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if (!be.preventDefault) {
    be.returnValue = false;
    if (goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if (be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1;
        }
      } catch (ex) {
      }
    }
  } else {
    be.preventDefault();
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_;
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventId");
goog.events.Listenable = function() {
};
goog.events.Listenable.IMPLEMENTED_BY_PROP = "closure_listenable_" + (Math.random() * 1E6 | 0);
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] = true;
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return !!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.getParentEventTarget;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return ++goog.events.ListenableKey.counter_;
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function(listener, proxy, src, type, capture, opt_handler) {
  if (goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack;
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.key = goog.events.ListenableKey.reserveKey();
  this.callOnce = false;
  this.removed = false;
};
goog.define("goog.events.Listener.ENABLE_MONITORING", false);
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.markAsRemoved = function() {
  this.removed = true;
  this.listener = null;
  this.proxy = null;
  this.src = null;
  this.handler = null;
};
goog.provide("goog.events.ListenerMap");
goog.require("goog.array");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.ListenerMap = function(src) {
  this.src = src;
  this.listeners = {};
  this.typeCount_ = 0;
};
goog.events.ListenerMap.prototype.getTypeCount = function() {
  return this.typeCount_;
};
goog.events.ListenerMap.prototype.getListenerCount = function() {
  var count = 0;
  for (var type in this.listeners) {
    count += this.listeners[type].length;
  }
  return count;
};
goog.events.ListenerMap.prototype.add = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  var listenerArray = this.listeners[typeStr];
  if (!listenerArray) {
    listenerArray = this.listeners[typeStr] = [];
    this.typeCount_++;
  }
  var listenerObj;
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    listenerObj = listenerArray[index];
    if (!callOnce) {
      listenerObj.callOnce = false;
    }
  } else {
    listenerObj = new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
  }
  return listenerObj;
};
goog.events.ListenerMap.prototype.remove = function(type, listener, opt_useCapture, opt_listenerScope) {
  var typeStr = type.toString();
  if (!(typeStr in this.listeners)) {
    return false;
  }
  var listenerArray = this.listeners[typeStr];
  var index = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
  if (index > -1) {
    var listenerObj = listenerArray[index];
    listenerObj.markAsRemoved();
    goog.array.removeAt(listenerArray, index);
    if (listenerArray.length == 0) {
      delete this.listeners[typeStr];
      this.typeCount_--;
    }
    return true;
  }
  return false;
};
goog.events.ListenerMap.prototype.removeByKey = function(listener) {
  var type = listener.type;
  if (!(type in this.listeners)) {
    return false;
  }
  var removed = goog.array.remove(this.listeners[type], listener);
  if (removed) {
    listener.markAsRemoved();
    if (this.listeners[type].length == 0) {
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return removed;
};
goog.events.ListenerMap.prototype.removeAll = function(opt_type) {
  var typeStr = opt_type && opt_type.toString();
  var count = 0;
  for (var type in this.listeners) {
    if (!typeStr || type == typeStr) {
      var listenerArray = this.listeners[type];
      for (var i = 0;i < listenerArray.length;i++) {
        ++count;
        listenerArray[i].markAsRemoved();
      }
      delete this.listeners[type];
      this.typeCount_--;
    }
  }
  return count;
};
goog.events.ListenerMap.prototype.getListeners = function(type, capture) {
  var listenerArray = this.listeners[type.toString()];
  var rv = [];
  if (listenerArray) {
    for (var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if (listenerObj.capture == capture) {
        rv.push(listenerObj);
      }
    }
  }
  return rv;
};
goog.events.ListenerMap.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  var listenerArray = this.listeners[type.toString()];
  var i = -1;
  if (listenerArray) {
    i = goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);
  }
  return i > -1 ? listenerArray[i] : null;
};
goog.events.ListenerMap.prototype.hasListener = function(opt_type, opt_capture) {
  var hasType = goog.isDef(opt_type);
  var typeStr = hasType ? opt_type.toString() : "";
  var hasCapture = goog.isDef(opt_capture);
  return goog.object.some(this.listeners, function(listenerArray, type) {
    for (var i = 0;i < listenerArray.length;++i) {
      if ((!hasType || listenerArray[i].type == typeStr) && (!hasCapture || listenerArray[i].capture == opt_capture)) {
        return true;
      }
    }
    return false;
  });
};
goog.events.ListenerMap.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
  for (var i = 0;i < listenerArray.length;++i) {
    var listenerObj = listenerArray[i];
    if (!listenerObj.removed && listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
      return i;
    }
  }
  return -1;
};
goog.provide("goog.events");
goog.provide("goog.events.CaptureSimulationMode");
goog.provide("goog.events.Key");
goog.provide("goog.events.ListenableType");
goog.require("goog.asserts");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.forwardDeclare("goog.debug.ErrorHandler");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.Key;
goog.events.ListenableType;
goog.events.LISTENER_MAP_PROP_ = "closure_lm_" + (Math.random() * 1E6 | 0);
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.CaptureSimulationMode = {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};
goog.define("goog.events.CAPTURE_SIMULATION_MODE", 2);
goog.events.listenerCountEstimate_ = 0;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listen((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, false, opt_capt, opt_handler);
  }
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if (!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  if (capture && !goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_FAIL) {
      goog.asserts.fail("Can not register capture listener in IE8-.");
      return null;
    } else {
      if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.OFF_AND_SILENT) {
        return null;
      }
    }
  }
  var listenerMap = goog.events.getListenerMap_(src);
  if (!listenerMap) {
    src[goog.events.LISTENER_MAP_PROP_] = listenerMap = new goog.events.ListenerMap(src);
  }
  var listenerObj = listenerMap.add(type, listener, callOnce, opt_capt, opt_handler);
  if (listenerObj.proxy) {
    return listenerObj;
  }
  var proxy = goog.events.getProxy();
  listenerObj.proxy = proxy;
  proxy.src = src;
  proxy.listener = listenerObj;
  if (src.addEventListener) {
    src.addEventListener(type.toString(), proxy, capture);
  } else {
    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);
  }
  goog.events.listenerCountEstimate_++;
  return listenerObj;
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject);
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if (!v) {
      return v;
    }
  };
  return f;
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.listenOnce((type), listener, opt_capt, opt_handler);
  } else {
    return goog.events.listen_((src), (type), listener, true, opt_capt, opt_handler);
  }
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler);
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler);
    }
    return null;
  }
  listener = goog.events.wrapListener(listener);
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), listener, opt_capt, opt_handler);
  }
  if (!src) {
    return false;
  }
  var capture = !!opt_capt;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    var listenerObj = listenerMap.getListener((type), listener, capture, opt_handler);
    if (listenerObj) {
      return goog.events.unlistenByKey(listenerObj);
    }
  }
  return false;
};
goog.events.unlistenByKey = function(key) {
  if (goog.isNumber(key)) {
    return false;
  }
  var listener = (key);
  if (!listener || listener.removed) {
    return false;
  }
  var src = listener.src;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener);
  }
  var type = listener.type;
  var proxy = listener.proxy;
  if (src.removeEventListener) {
    src.removeEventListener(type, proxy, listener.capture);
  } else {
    if (src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy);
    }
  }
  goog.events.listenerCountEstimate_--;
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    listenerMap.removeByKey(listener);
    if (listenerMap.getTypeCount() == 0) {
      listenerMap.src = null;
      src[goog.events.LISTENER_MAP_PROP_] = null;
    }
  } else {
    listener.markAsRemoved();
  }
  return true;
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler);
};
goog.events.removeAll = function(obj, opt_type) {
  if (!obj) {
    return 0;
  }
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.removeAllListeners(opt_type);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  if (!listenerMap) {
    return 0;
  }
  var count = 0;
  var typeStr = opt_type && opt_type.toString();
  for (var type in listenerMap.listeners) {
    if (!typeStr || type == typeStr) {
      var listeners = listenerMap.listeners[type].concat();
      for (var i = 0;i < listeners.length;++i) {
        if (goog.events.unlistenByKey(listeners[i])) {
          ++count;
        }
      }
    }
  }
  return count;
};
goog.events.getListeners = function(obj, type, capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture);
  } else {
    if (!obj) {
      return [];
    }
    var listenerMap = goog.events.getListenerMap_((obj));
    return listenerMap ? listenerMap.getListeners(type, capture) : [];
  }
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  type = (type);
  listener = goog.events.wrapListener(listener);
  var capture = !!opt_capt;
  if (goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener(type, listener, capture, opt_handler);
  }
  if (!src) {
    return null;
  }
  var listenerMap = goog.events.getListenerMap_((src));
  if (listenerMap) {
    return listenerMap.getListener(type, listener, capture, opt_handler);
  }
  return null;
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture);
  }
  var listenerMap = goog.events.getListenerMap_((obj));
  return !!listenerMap && listenerMap.hasListener(opt_type, opt_capture);
};
goog.events.expose = function(e) {
  var str = [];
  for (var key in e) {
    if (e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")");
    } else {
      str.push(key + " \x3d " + e[key]);
    }
  }
  return str.join("\n");
};
goog.events.getOnString_ = function(type) {
  if (type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type];
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type;
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if (goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject);
  }
  return goog.events.fireListeners_(obj, type, capture, eventObject);
};
goog.events.fireListeners_ = function(obj, type, capture, eventObject) {
  var retval = true;
  var listenerMap = goog.events.getListenerMap_((obj));
  if (listenerMap) {
    var listenerArray = listenerMap.listeners[type.toString()];
    if (listenerArray) {
      listenerArray = listenerArray.concat();
      for (var i = 0;i < listenerArray.length;i++) {
        var listener = listenerArray[i];
        if (listener && listener.capture == capture && !listener.removed) {
          var result = goog.events.fireListener(listener, eventObject);
          retval = retval && result !== false;
        }
      }
    }
  }
  return retval;
};
goog.events.fireListener = function(listener, eventObject) {
  var listenerFn = listener.listener;
  var listenerHandler = listener.handler || listener.src;
  if (listener.callOnce) {
    goog.events.unlistenByKey(listener);
  }
  return listenerFn.call(listenerHandler, eventObject);
};
goog.events.getTotalListenerCount = function() {
  return goog.events.listenerCountEstimate_;
};
goog.events.dispatchEvent = function(src, e) {
  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), "Can not use goog.events.dispatchEvent with " + "non-goog.events.Listenable instance.");
  return src.dispatchEvent(e);
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if (listener.removed) {
    return true;
  }
  if (!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var evt = new goog.events.BrowserEvent(ieEvent, this);
    var retval = true;
    if (goog.events.CAPTURE_SIMULATION_MODE == goog.events.CaptureSimulationMode.ON) {
      if (!goog.events.isMarkedIeEvent_(ieEvent)) {
        goog.events.markIeEvent_(ieEvent);
        var ancestors = [];
        for (var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent);
        }
        var type = listener.type;
        for (var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0;i--) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, true, evt);
          retval = retval && result;
        }
        for (var i = 0;!evt.propagationStopped_ && i < ancestors.length;i++) {
          evt.currentTarget = ancestors[i];
          var result = goog.events.fireListeners_(ancestors[i], type, false, evt);
          retval = retval && result;
        }
      }
    } else {
      retval = goog.events.fireListener(listener, evt);
    }
    return retval;
  }
  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if (e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return;
    } catch (ex) {
      useReturnValue = true;
    }
  }
  if (useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true;
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined;
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++;
};
goog.events.getListenerMap_ = function(src) {
  var listenerMap = src[goog.events.LISTENER_MAP_PROP_];
  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener = function(listener) {
  goog.asserts.assert(listener, "Listener can not be null.");
  if (goog.isFunction(listener)) {
    return listener;
  }
  goog.asserts.assert(listener.handleEvent, "An object listener must have handleEvent method.");
  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {
    listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
      return listener.handleEvent(e);
    };
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_];
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.asserts");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.ListenerMap");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  this.eventTargetListeners_ = new goog.events.ListenerMap(this);
  this.actualEventTarget_ = this;
  this.parentEventTarget_ = null;
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.Listenable.addImplementation(goog.events.EventTarget);
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_;
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent;
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  this.assertInitialized_();
  var ancestorsTree, ancestor = this.getParentEventTarget();
  if (ancestor) {
    ancestorsTree = [];
    var ancestorCount = 1;
    for (;ancestor;ancestor = ancestor.getParentEventTarget()) {
      ancestorsTree.push(ancestor);
      goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop");
    }
  }
  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  this.removeAllListeners();
  this.parentEventTarget_ = null;
};
goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
  this.assertInitialized_();
  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);
};
goog.events.EventTarget.prototype.unlistenByKey = function(key) {
  return this.eventTargetListeners_.removeByKey(key);
};
goog.events.EventTarget.prototype.removeAllListeners = function(opt_type) {
  if (!this.eventTargetListeners_) {
    return 0;
  }
  return this.eventTargetListeners_.removeAll(opt_type);
};
goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
  var listenerArray = this.eventTargetListeners_.listeners[String(type)];
  if (!listenerArray) {
    return true;
  }
  listenerArray = listenerArray.concat();
  var rv = true;
  for (var i = 0;i < listenerArray.length;++i) {
    var listener = listenerArray[i];
    if (listener && !listener.removed && listener.capture == capture) {
      var listenerFn = listener.listener;
      var listenerHandler = listener.handler || listener.src;
      if (listener.callOnce) {
        this.unlistenByKey(listener);
      }
      rv = listenerFn.call(listenerHandler, eventObject) !== false && rv;
    }
  }
  return rv && eventObject.returnValue_ != false;
};
goog.events.EventTarget.prototype.getListeners = function(type, capture) {
  return this.eventTargetListeners_.getListeners(String(type), capture);
};
goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);
};
goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
  var id = goog.isDef(opt_type) ? String(opt_type) : undefined;
  return this.eventTargetListeners_.hasListener(id, opt_capture);
};
goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
  this.actualEventTarget_ = target;
};
goog.events.EventTarget.prototype.assertInitialized_ = function() {
  goog.asserts.assert(this.eventTargetListeners_, "Event target is not initialized. Did you call the superclass " + "(goog.events.EventTarget) constructor?");
};
goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
  var type = e.type || (e);
  if (goog.isString(e)) {
    e = new goog.events.Event(e, target);
  } else {
    if (!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, target);
      goog.object.extend(e, oldEvent);
    } else {
      e.target = e.target || target;
    }
  }
  var rv = true, currentTarget;
  if (opt_ancestorsTree) {
    for (var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, true, e) && rv;
    }
  }
  if (!e.propagationStopped_) {
    currentTarget = e.currentTarget = target;
    rv = currentTarget.fireListeners(type, true, e) && rv;
    if (!e.propagationStopped_) {
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  if (opt_ancestorsTree) {
    for (i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
      currentTarget = e.currentTarget = opt_ancestorsTree[i];
      rv = currentTarget.fireListeners(type, false, e) && rv;
    }
  }
  return rv;
};
goog.provide("goog.Timer");
goog.require("goog.Promise");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now();
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.INVALID_TIMEOUT_ID_ = -1;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = .8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_;
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if (this.timer_ && this.enabled) {
    this.stop();
    this.start();
  } else {
    if (this.timer_) {
      this.stop();
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if (this.enabled) {
    var elapsed = goog.now() - this.last_;
    if (elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return;
    }
    if (this.timer_) {
      this.timerObject_.clearTimeout(this.timer_);
      this.timer_ = null;
    }
    this.dispatchTick();
    if (this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now();
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK);
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if (!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now();
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if (this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null;
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_;
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if (goog.isFunction(listener)) {
    if (opt_handler) {
      listener = goog.bind(listener, opt_handler);
    }
  } else {
    if (listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener);
    } else {
      throw Error("Invalid listener argument");
    }
  }
  if (opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return goog.Timer.INVALID_TIMEOUT_ID_;
  } else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0);
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId);
};
goog.Timer.promise = function(delay, opt_result) {
  var timerKey = null;
  return (new goog.Promise(function(resolve, reject) {
    timerKey = goog.Timer.callOnce(function() {
      resolve(opt_result);
    }, delay);
    if (timerKey == goog.Timer.INVALID_TIMEOUT_ID_) {
      reject(new Error("Failed to schedule timer."));
    }
  })).thenCatch(function(error) {
    goog.Timer.clear(timerKey);
    throw error;
  });
};
goog.provide("goog.dom.InputType");
goog.dom.InputType = {BUTTON:"button", CHECKBOX:"checkbox", COLOR:"color", DATE:"date", DATETIME:"datetime", DATETIME_LOCAL:"datetime-local", EMAIL:"email", FILE:"file", HIDDEN:"hidden", IMAGE:"image", MENU:"menu", MONTH:"month", NUMBER:"number", PASSWORD:"password", RADIO:"radio", RANGE:"range", RESET:"reset", SEARCH:"search", SELECT_MULTIPLE:"select-multiple", SELECT_ONE:"select-one", SUBMIT:"submit", TEL:"tel", TEXT:"text", TEXTAREA:"textarea", TIME:"time", URL:"url", WEEK:"week"};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.object");
goog.forwardDeclare("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_scope) {
  goog.Disposable.call(this);
  this.handler_ = opt_scope;
  this.keys_ = {};
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture) {
  return this.listen_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenWithScope = function(src, type, fn, capture, scope) {
  return this.listen_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listen_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (!goog.isArray(type)) {
    if (type) {
      goog.events.EventHandler.typeArray_[0] = type.toString();
    }
    type = goog.events.EventHandler.typeArray_;
  }
  for (var i = 0;i < type.length;i++) {
    var listenerObj = goog.events.listen(src, type[i], opt_fn || this.handleEvent, opt_capture || false, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture) {
  return this.listenOnce_(src, type, opt_fn, opt_capture);
};
goog.events.EventHandler.prototype.listenOnceWithScope = function(src, type, fn, capture, scope) {
  return this.listenOnce_(src, type, fn, capture, scope);
};
goog.events.EventHandler.prototype.listenOnce_ = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.listenOnce_(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listenerObj = goog.events.listenOnce(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (!listenerObj) {
      return this;
    }
    var key = listenerObj.key;
    this.keys_[key] = listenerObj;
  }
  return this;
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt) {
  return this.listenWithWrapper_(src, wrapper, listener, opt_capt);
};
goog.events.EventHandler.prototype.listenWithWrapperAndScope = function(src, wrapper, listener, capture, scope) {
  return this.listenWithWrapper_(src, wrapper, listener, capture, scope);
};
goog.events.EventHandler.prototype.listenWithWrapper_ = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.listen(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  var count = 0;
  for (var key in this.keys_) {
    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {
      count++;
    }
  }
  return count;
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_scope) {
  if (goog.isArray(type)) {
    for (var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_scope);
    }
  } else {
    var listener = goog.events.getListener(src, type, opt_fn || this.handleEvent, opt_capture, opt_scope || this.handler_ || this);
    if (listener) {
      goog.events.unlistenByKey(listener);
      delete this.keys_[listener.key];
    }
  }
  return this;
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_scope) {
  wrapper.unlisten(src, listener, opt_capt, opt_scope || this.handler_ || this, this);
  return this;
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.object.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_ = {};
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll();
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.history.Event");
goog.require("goog.events.Event");
goog.require("goog.history.EventType");
goog.history.Event = function(token, isNavigation) {
  goog.events.Event.call(this, goog.history.EventType.NAVIGATE);
  this.token = token;
  this.isNavigation = isNavigation;
};
goog.inherits(goog.history.Event, goog.events.Event);
goog.provide("goog.html.legacyconversions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.define("goog.html.legacyconversions.ALLOW_LEGACY_CONVERSIONS", true);
goog.html.legacyconversions.safeHtmlFromString = function(html) {
  goog.html.legacyconversions.throwIfConversionsDisallowed();
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, null);
};
goog.html.legacyconversions.safeStyleFromString = function(style) {
  goog.html.legacyconversions.throwIfConversionsDisallowed();
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.legacyconversions.trustedResourceUrlFromString = function(url) {
  goog.html.legacyconversions.throwIfConversionsDisallowed();
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.safeUrlFromString = function(url) {
  goog.html.legacyconversions.throwIfConversionsDisallowed();
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.legacyconversions.reportCallback_ = goog.nullFunction;
goog.html.legacyconversions.setReportCallback = function(callback) {
  goog.html.legacyconversions.reportCallback_ = callback;
};
goog.html.legacyconversions.throwIfConversionsDisallowed = function() {
  if (!goog.html.legacyconversions.ALLOW_LEGACY_CONVERSIONS) {
    throw Error("Error: Legacy conversion from string to goog.html types is disabled");
  }
  goog.html.legacyconversions.reportCallback_();
};
goog.provide("goog.labs.userAgent.device");
goog.require("goog.labs.userAgent.util");
goog.labs.userAgent.device.isMobile = function() {
  return !goog.labs.userAgent.device.isTablet() && (goog.labs.userAgent.util.matchUserAgent("iPod") || goog.labs.userAgent.util.matchUserAgent("iPhone") || goog.labs.userAgent.util.matchUserAgent("Android") || goog.labs.userAgent.util.matchUserAgent("IEMobile"));
};
goog.labs.userAgent.device.isTablet = function() {
  return goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Mobile") || goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.device.isDesktop = function() {
  return !goog.labs.userAgent.device.isMobile() && !goog.labs.userAgent.device.isTablet();
};
goog.provide("goog.memoize");
goog.memoize = function(f, opt_serializer) {
  var serializer = opt_serializer || goog.memoize.simpleSerializer;
  return function() {
    if (goog.memoize.ENABLE_MEMOIZE) {
      var thisOrGlobal = this || goog.global;
      var cache = thisOrGlobal[goog.memoize.CACHE_PROPERTY_] || (thisOrGlobal[goog.memoize.CACHE_PROPERTY_] = {});
      var key = serializer(goog.getUid(f), arguments);
      return cache.hasOwnProperty(key) ? cache[key] : cache[key] = f.apply(this, arguments);
    } else {
      return f.apply(this, arguments);
    }
  };
};
goog.define("goog.memoize.ENABLE_MEMOIZE", true);
goog.memoize.clearCache = function(cacheOwner) {
  cacheOwner[goog.memoize.CACHE_PROPERTY_] = {};
};
goog.memoize.CACHE_PROPERTY_ = "closure_memoize_cache_";
goog.memoize.simpleSerializer = function(functionUid, args) {
  var context = [functionUid];
  for (var i = args.length - 1;i >= 0;--i) {
    context.push(typeof args[i], args[i]);
  }
  return context.join("\x0B");
};
goog.provide("goog.History");
goog.provide("goog.History.Event");
goog.provide("goog.History.EventType");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.InputType");
goog.require("goog.dom.safe");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.history.Event");
goog.require("goog.history.EventType");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.legacyconversions");
goog.require("goog.labs.userAgent.device");
goog.require("goog.memoize");
goog.require("goog.string");
goog.require("goog.string.Const");
goog.require("goog.userAgent");
goog.History = function(opt_invisible, opt_blankPageUrl, opt_input, opt_iframe) {
  goog.events.EventTarget.call(this);
  if (opt_invisible && !opt_blankPageUrl) {
    throw Error("Can't use invisible history without providing a blank page.");
  }
  var input;
  if (opt_input) {
    input = opt_input;
  } else {
    var inputId = "history_state" + goog.History.historyCount_;
    var inputHtml = goog.html.SafeHtml.create("input", {type:goog.dom.InputType.TEXT, name:inputId, id:inputId, style:goog.string.Const.from("display:none")});
    goog.dom.safe.documentWrite(document, inputHtml);
    input = goog.dom.getElement(inputId);
  }
  this.hiddenInput_ = (input);
  this.window_ = opt_input ? goog.dom.getWindow(goog.dom.getOwnerDocument(opt_input)) : window;
  var iframeSrc;
  if (goog.isString(opt_blankPageUrl)) {
    iframeSrc = goog.html.legacyconversions.trustedResourceUrlFromString(opt_blankPageUrl);
  } else {
    iframeSrc = opt_blankPageUrl;
  }
  this.iframeSrc_ = iframeSrc;
  if (goog.userAgent.IE && !opt_blankPageUrl) {
    if (window.location.protocol == "https") {
      this.iframeSrc_ = goog.html.TrustedResourceUrl.fromConstant(goog.string.Const.from("https:///"));
    } else {
      this.iframeSrc_ = goog.html.TrustedResourceUrl.fromConstant(goog.string.Const.from('javascript:""'));
    }
  }
  this.timer_ = new goog.Timer(goog.History.PollingType.NORMAL);
  this.registerDisposable(this.timer_);
  this.userVisible_ = !opt_invisible;
  this.eventHandler_ = new goog.events.EventHandler(this);
  if (opt_invisible || goog.History.LEGACY_IE) {
    var iframe;
    if (opt_iframe) {
      iframe = opt_iframe;
    } else {
      var iframeId = "history_iframe" + goog.History.historyCount_;
      var iframeHtml = goog.html.SafeHtml.createIframe(this.iframeSrc_, null, {id:iframeId, style:goog.string.Const.from("display:none"), sandbox:undefined});
      goog.dom.safe.documentWrite(document, iframeHtml);
      iframe = goog.dom.getElement(iframeId);
    }
    this.iframe_ = (iframe);
    this.unsetIframe_ = true;
  }
  if (goog.History.LEGACY_IE) {
    this.eventHandler_.listen(this.window_, goog.events.EventType.LOAD, this.onDocumentLoaded);
    this.documentLoaded = false;
    this.shouldEnable_ = false;
  }
  if (this.userVisible_) {
    this.setHash_(this.getToken(), true);
  } else {
    this.setIframeToken_(this.hiddenInput_.value);
  }
  goog.History.historyCount_++;
};
goog.inherits(goog.History, goog.events.EventTarget);
goog.History.prototype.enabled_ = false;
goog.History.prototype.longerPolling_ = false;
goog.History.prototype.lastToken_ = null;
goog.History.isOnHashChangeSupported = goog.memoize(function() {
  return goog.userAgent.IE ? goog.userAgent.isDocumentModeOrHigher(8) : "onhashchange" in goog.global;
});
goog.History.LEGACY_IE = goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(8);
goog.History.HASH_ALWAYS_REQUIRED = goog.History.LEGACY_IE;
goog.History.prototype.lockedToken_ = null;
goog.History.prototype.disposeInternal = function() {
  goog.History.superClass_.disposeInternal.call(this);
  this.eventHandler_.dispose();
  this.setEnabled(false);
};
goog.History.prototype.setEnabled = function(enable) {
  if (enable == this.enabled_) {
    return;
  }
  if (goog.History.LEGACY_IE && !this.documentLoaded) {
    this.shouldEnable_ = enable;
    return;
  }
  if (enable) {
    if (goog.userAgent.OPERA) {
      this.eventHandler_.listen(this.window_.document, goog.History.INPUT_EVENTS_, this.operaDefibrillator_);
    } else {
      if (goog.userAgent.GECKO) {
        this.eventHandler_.listen(this.window_, "pageshow", this.onShow_);
      }
    }
    if (goog.History.isOnHashChangeSupported() && this.userVisible_) {
      this.eventHandler_.listen(this.window_, goog.events.EventType.HASHCHANGE, this.onHashChange_);
      this.enabled_ = true;
      this.dispatchEvent(new goog.history.Event(this.getToken(), false));
    } else {
      if (!(goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) || this.documentLoaded) {
        this.eventHandler_.listen(this.timer_, goog.Timer.TICK, goog.bind(this.check_, this, true));
        this.enabled_ = true;
        if (!goog.History.LEGACY_IE) {
          this.lastToken_ = this.getToken();
          this.dispatchEvent(new goog.history.Event(this.getToken(), false));
        }
        this.timer_.start();
      }
    }
  } else {
    this.enabled_ = false;
    this.eventHandler_.removeAll();
    this.timer_.stop();
  }
};
goog.History.prototype.onDocumentLoaded = function() {
  this.documentLoaded = true;
  if (this.hiddenInput_.value) {
    this.setIframeToken_(this.hiddenInput_.value, true);
  }
  this.setEnabled(this.shouldEnable_);
};
goog.History.prototype.onShow_ = function(e) {
  if (e.getBrowserEvent()["persisted"]) {
    this.setEnabled(false);
    this.setEnabled(true);
  }
};
goog.History.prototype.onHashChange_ = function(e) {
  var hash = this.getLocationFragment_(this.window_);
  if (hash != this.lastToken_) {
    this.update_(hash, true);
  }
};
goog.History.prototype.getToken = function() {
  if (this.lockedToken_ != null) {
    return this.lockedToken_;
  } else {
    if (this.userVisible_) {
      return this.getLocationFragment_(this.window_);
    } else {
      return this.getIframeToken_() || "";
    }
  }
};
goog.History.prototype.setToken = function(token, opt_title) {
  this.setHistoryState_(token, false, opt_title);
};
goog.History.prototype.replaceToken = function(token, opt_title) {
  this.setHistoryState_(token, true, opt_title);
};
goog.History.prototype.getLocationFragment_ = function(win) {
  var href = win.location.href;
  var index = href.indexOf("#");
  return index < 0 ? "" : href.substring(index + 1);
};
goog.History.prototype.setHistoryState_ = function(token, replace, opt_title) {
  if (this.getToken() != token) {
    if (this.userVisible_) {
      this.setHash_(token, replace);
      if (!goog.History.isOnHashChangeSupported()) {
        if (goog.userAgent.IE && !goog.labs.userAgent.device.isMobile()) {
          this.setIframeToken_(token, replace, opt_title);
        }
      }
      if (this.enabled_) {
        this.check_(false);
      }
    } else {
      this.setIframeToken_(token, replace);
      this.lockedToken_ = this.lastToken_ = this.hiddenInput_.value = token;
      this.dispatchEvent(new goog.history.Event(token, false));
    }
  }
};
goog.History.prototype.setHash_ = function(token, opt_replace) {
  var loc = this.window_.location;
  var url = loc.href.split("#")[0];
  var hasHash = goog.string.contains(loc.href, "#");
  if (goog.History.HASH_ALWAYS_REQUIRED || hasHash || token) {
    url += "#" + token;
  }
  if (url != loc.href) {
    if (opt_replace) {
      loc.replace(url);
    } else {
      loc.href = url;
    }
  }
};
goog.History.prototype.setIframeToken_ = function(token, opt_replace, opt_title) {
  if (this.unsetIframe_ || token != this.getIframeToken_()) {
    this.unsetIframe_ = false;
    token = goog.string.urlEncode(token);
    if (goog.userAgent.IE) {
      var doc = goog.dom.getFrameContentDocument(this.iframe_);
      doc.open("text/html", opt_replace ? "replace" : undefined);
      var iframeSourceHtml = goog.html.SafeHtml.concat(goog.html.SafeHtml.create("title", {}, opt_title || this.window_.document.title), goog.html.SafeHtml.create("body", {}, token));
      goog.dom.safe.documentWrite(doc, iframeSourceHtml);
      doc.close();
    } else {
      goog.asserts.assertInstanceof(this.iframeSrc_, goog.html.TrustedResourceUrl, "this.iframeSrc_ must be set on calls to setIframeToken_");
      var url = goog.html.TrustedResourceUrl.unwrap((this.iframeSrc_)) + "#" + token;
      var contentWindow = this.iframe_.contentWindow;
      if (contentWindow) {
        if (opt_replace) {
          contentWindow.location.replace(url);
        } else {
          contentWindow.location.href = url;
        }
      }
    }
  }
};
goog.History.prototype.getIframeToken_ = function() {
  if (goog.userAgent.IE) {
    var doc = goog.dom.getFrameContentDocument(this.iframe_);
    return doc.body ? goog.string.urlDecode(doc.body.innerHTML) : null;
  } else {
    var contentWindow = this.iframe_.contentWindow;
    if (contentWindow) {
      var hash;
      try {
        hash = goog.string.urlDecode(this.getLocationFragment_(contentWindow));
      } catch (e) {
        if (!this.longerPolling_) {
          this.setLongerPolling_(true);
        }
        return null;
      }
      if (this.longerPolling_) {
        this.setLongerPolling_(false);
      }
      return hash || null;
    } else {
      return null;
    }
  }
};
goog.History.prototype.check_ = function(isNavigation) {
  if (this.userVisible_) {
    var hash = this.getLocationFragment_(this.window_);
    if (hash != this.lastToken_) {
      this.update_(hash, isNavigation);
    }
  }
  if (!this.userVisible_ || goog.History.LEGACY_IE) {
    var token = this.getIframeToken_() || "";
    if (this.lockedToken_ == null || token == this.lockedToken_) {
      this.lockedToken_ = null;
      if (token != this.lastToken_) {
        this.update_(token, isNavigation);
      }
    }
  }
};
goog.History.prototype.update_ = function(token, isNavigation) {
  this.lastToken_ = this.hiddenInput_.value = token;
  if (this.userVisible_) {
    if (goog.History.LEGACY_IE) {
      this.setIframeToken_(token);
    }
    this.setHash_(token);
  } else {
    this.setIframeToken_(token);
  }
  this.dispatchEvent(new goog.history.Event(this.getToken(), isNavigation));
};
goog.History.prototype.setLongerPolling_ = function(longerPolling) {
  if (this.longerPolling_ != longerPolling) {
    this.timer_.setInterval(longerPolling ? goog.History.PollingType.LONG : goog.History.PollingType.NORMAL);
  }
  this.longerPolling_ = longerPolling;
};
goog.History.prototype.operaDefibrillator_ = function() {
  this.timer_.stop();
  this.timer_.start();
};
goog.History.INPUT_EVENTS_ = [goog.events.EventType.MOUSEDOWN, goog.events.EventType.KEYDOWN, goog.events.EventType.MOUSEMOVE];
goog.History.historyCount_ = 0;
goog.History.PollingType = {NORMAL:150, LONG:1E4};
goog.History.EventType = goog.history.EventType;
goog.History.Event = goog.history.Event;
goog.provide("trace.colonnade");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("secretary.core");
goog.require("om_tools.dom");
goog.require("goog.history.EventType");
goog.require("goog.History");
goog.require("goog.events");
goog.require("om.core");
goog.require("trace.utils");
goog.require("clojure.string");
goog.require("cljs.reader");
cljs.core.enable_console_print_BANG_.call(null);
trace.colonnade.app_state = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
trace.colonnade.schema = function trace$colonnade$schema() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, trace.colonnade.app_state)));
};
trace.colonnade.columns = function trace$colonnade$columns() {
  return om.core.ref_cursor.call(null, (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(om.core.root_cursor.call(null, trace.colonnade.app_state)));
};
trace.colonnade.column_template = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "name", "name", 1843675177), "Column 1", new cljs.core.Keyword(null, "attribute", "attribute", -2074029119), null, new cljs.core.Keyword(null, "from", "from", 1815293044), null, new cljs.core.Keyword(null, "required", "required", 1807647006), true, new cljs.core.Keyword(null, "visible", "visible", -1024216805), true], null);
trace.colonnade.query_seed = cljs.core.atom.call(null, 1);
trace.colonnade.input_text = function trace$colonnade$input_text(data, owner, p__10945) {
  var map__10950 = p__10945;
  var map__10950__$1 = cljs.core.seq_QMARK_.call(null, map__10950) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10950) : map__10950;
  var key = cljs.core.get.call(null, map__10950__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
  if (typeof trace.colonnade.t10951 !== "undefined") {
  } else {
    trace.colonnade.t10951 = function(input_text, data, owner, p__10945, map__10950, key, meta10952) {
      this.input_text = input_text;
      this.data = data;
      this.owner = owner;
      this.p__10945 = p__10945;
      this.map__10950 = map__10950;
      this.key = key;
      this.meta10952 = meta10952;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t10951.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10950, map__10950__$1, key) {
      return function(_10953, meta10952__$1) {
        var self__ = this;
        var _10953__$1 = this;
        return new trace.colonnade.t10951(self__.input_text, self__.data, self__.owner, self__.p__10945, self__.map__10950, self__.key, meta10952__$1);
      };
    }(map__10950, map__10950__$1, key);
    trace.colonnade.t10951.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10950, map__10950__$1, key) {
      return function(_10953) {
        var self__ = this;
        var _10953__$1 = this;
        return self__.meta10952;
      };
    }(map__10950, map__10950__$1, key);
    trace.colonnade.t10951.prototype.om$core$IRender$ = true;
    trace.colonnade.t10951.prototype.om$core$IRender$render$arity$1 = function(map__10950, map__10950__$1, key) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return om.dom.input.call(null, {"type":"text", "className":"form-control", "value":om_tools.dom.format_opts.call(null, self__.key.call(null, self__.data)), "onChange":om_tools.dom.format_opts.call(null, function(___$1, map__10950, map__10950__$1, key) {
          return function(e) {
            return om.core.update_BANG_.call(null, self__.data, self__.key, e.target.value);
          };
        }(___$1, map__10950, map__10950__$1, key))});
      };
    }(map__10950, map__10950__$1, key);
    trace.colonnade.t10951.getBasis = function(map__10950, map__10950__$1, key) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-text", "input-text", 304234413, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10945", "p__10945", -41084958, null), new cljs.core.Symbol(null, "map__10950", "map__10950", -1820980593, null), new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, 
        "meta10952", "meta10952", 1269206064, null)], null);
      };
    }(map__10950, map__10950__$1, key);
    trace.colonnade.t10951.cljs$lang$type = true;
    trace.colonnade.t10951.cljs$lang$ctorStr = "trace.colonnade/t10951";
    trace.colonnade.t10951.cljs$lang$ctorPrWriter = function(map__10950, map__10950__$1, key) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t10951");
      };
    }(map__10950, map__10950__$1, key);
    trace.colonnade.__GT_t10951 = function(map__10950, map__10950__$1, key) {
      return function trace$colonnade$input_text_$___GT_t10951(input_text__$1, data__$1, owner__$1, p__10945__$1, map__10950__$2, key__$1, meta10952) {
        return new trace.colonnade.t10951(input_text__$1, data__$1, owner__$1, p__10945__$1, map__10950__$2, key__$1, meta10952);
      };
    }(map__10950, map__10950__$1, key);
  }
  return new trace.colonnade.t10951(trace$colonnade$input_text, data, owner, p__10945, map__10950__$1, key, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.input_int = function trace$colonnade$input_int(data, owner, p__10954) {
  var map__10959 = p__10954;
  var map__10959__$1 = cljs.core.seq_QMARK_.call(null, map__10959) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10959) : map__10959;
  var key = cljs.core.get.call(null, map__10959__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
  if (typeof trace.colonnade.t10960 !== "undefined") {
  } else {
    trace.colonnade.t10960 = function(input_int, data, owner, p__10954, map__10959, key, meta10961) {
      this.input_int = input_int;
      this.data = data;
      this.owner = owner;
      this.p__10954 = p__10954;
      this.map__10959 = map__10959;
      this.key = key;
      this.meta10961 = meta10961;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t10960.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10959, map__10959__$1, key) {
      return function(_10962, meta10961__$1) {
        var self__ = this;
        var _10962__$1 = this;
        return new trace.colonnade.t10960(self__.input_int, self__.data, self__.owner, self__.p__10954, self__.map__10959, self__.key, meta10961__$1);
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.t10960.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10959, map__10959__$1, key) {
      return function(_10962) {
        var self__ = this;
        var _10962__$1 = this;
        return self__.meta10961;
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.t10960.prototype.om$core$IShouldUpdate$ = true;
    trace.colonnade.t10960.prototype.om$core$IShouldUpdate$should_update$arity$3 = function(map__10959, map__10959__$1, key) {
      return function(_, ___$1, ___$2) {
        var self__ = this;
        var ___$3 = this;
        return true;
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.t10960.prototype.om$core$IRender$ = true;
    trace.colonnade.t10960.prototype.om$core$IRender$render$arity$1 = function(map__10959, map__10959__$1, key) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return om.dom.input.call(null, {"type":"text", "className":"form-control", "value":om_tools.dom.format_opts.call(null, function() {
          var temp__4423__auto__ = self__.key.call(null, self__.data);
          if (cljs.core.truth_(temp__4423__auto__)) {
            var v = temp__4423__auto__;
            return [cljs.core.str(v)].join("");
          } else {
            return null;
          }
        }()), "onChange":om_tools.dom.format_opts.call(null, function(___$1, map__10959, map__10959__$1, key) {
          return function(e) {
            var s = e.target.value;
            var v = cljs.core.empty_QMARK_.call(null, s) ? null : cljs.core.truth_(cljs.core.re_matches.call(null, /\d+/, s)) ? parseInt(s) : self__.key.call(null, cljs.core.deref.call(null, self__.data));
            return om.core.update_BANG_.call(null, self__.data, self__.key, v);
          };
        }(___$1, map__10959, map__10959__$1, key))});
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.t10960.getBasis = function(map__10959, map__10959__$1, key) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-int", "input-int", -1455635759, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10954", "p__10954", -441052043, null), new cljs.core.Symbol(null, "map__10959", "map__10959", 1814546494, null), new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, 
        "meta10961", "meta10961", -1761494288, null)], null);
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.t10960.cljs$lang$type = true;
    trace.colonnade.t10960.cljs$lang$ctorStr = "trace.colonnade/t10960";
    trace.colonnade.t10960.cljs$lang$ctorPrWriter = function(map__10959, map__10959__$1, key) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t10960");
      };
    }(map__10959, map__10959__$1, key);
    trace.colonnade.__GT_t10960 = function(map__10959, map__10959__$1, key) {
      return function trace$colonnade$input_int_$___GT_t10960(input_int__$1, data__$1, owner__$1, p__10954__$1, map__10959__$2, key__$1, meta10961) {
        return new trace.colonnade.t10960(input_int__$1, data__$1, owner__$1, p__10954__$1, map__10959__$2, key__$1, meta10961);
      };
    }(map__10959, map__10959__$1, key);
  }
  return new trace.colonnade.t10960(trace$colonnade$input_int, data, owner, p__10954, map__10959__$1, key, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.input_checkbox = function trace$colonnade$input_checkbox(data, owner, p__10963) {
  var map__10968 = p__10963;
  var map__10968__$1 = cljs.core.seq_QMARK_.call(null, map__10968) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10968) : map__10968;
  var key = cljs.core.get.call(null, map__10968__$1, new cljs.core.Keyword(null, "key", "key", -1516042587));
  if (typeof trace.colonnade.t10969 !== "undefined") {
  } else {
    trace.colonnade.t10969 = function(input_checkbox, data, owner, p__10963, map__10968, key, meta10970) {
      this.input_checkbox = input_checkbox;
      this.data = data;
      this.owner = owner;
      this.p__10963 = p__10963;
      this.map__10968 = map__10968;
      this.key = key;
      this.meta10970 = meta10970;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t10969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__10968, map__10968__$1, key) {
      return function(_10971, meta10970__$1) {
        var self__ = this;
        var _10971__$1 = this;
        return new trace.colonnade.t10969(self__.input_checkbox, self__.data, self__.owner, self__.p__10963, self__.map__10968, self__.key, meta10970__$1);
      };
    }(map__10968, map__10968__$1, key);
    trace.colonnade.t10969.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__10968, map__10968__$1, key) {
      return function(_10971) {
        var self__ = this;
        var _10971__$1 = this;
        return self__.meta10970;
      };
    }(map__10968, map__10968__$1, key);
    trace.colonnade.t10969.prototype.om$core$IRender$ = true;
    trace.colonnade.t10969.prototype.om$core$IRender$render$arity$1 = function(map__10968, map__10968__$1, key) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return om.dom.input.call(null, {"type":"checkbox", "className":"form-control", "checked":om_tools.dom.format_opts.call(null, self__.key.call(null, self__.data)), "onChange":om_tools.dom.format_opts.call(null, function(___$1, map__10968, map__10968__$1, key) {
          return function(e) {
            return om.core.update_BANG_.call(null, self__.data, self__.key, e.target.checked);
          };
        }(___$1, map__10968, map__10968__$1, key))});
      };
    }(map__10968, map__10968__$1, key);
    trace.colonnade.t10969.getBasis = function(map__10968, map__10968__$1, key) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "input-checkbox", "input-checkbox", -297658796, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__10963", "p__10963", -899900059, null), new cljs.core.Symbol(null, "map__10968", "map__10968", 1533272646, null), new cljs.core.Symbol(null, "key", "key", 124488940, 
        null), new cljs.core.Symbol(null, "meta10970", "meta10970", 139169233, null)], null);
      };
    }(map__10968, map__10968__$1, key);
    trace.colonnade.t10969.cljs$lang$type = true;
    trace.colonnade.t10969.cljs$lang$ctorStr = "trace.colonnade/t10969";
    trace.colonnade.t10969.cljs$lang$ctorPrWriter = function(map__10968, map__10968__$1, key) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t10969");
      };
    }(map__10968, map__10968__$1, key);
    trace.colonnade.__GT_t10969 = function(map__10968, map__10968__$1, key) {
      return function trace$colonnade$input_checkbox_$___GT_t10969(input_checkbox__$1, data__$1, owner__$1, p__10963__$1, map__10968__$2, key__$1, meta10970) {
        return new trace.colonnade.t10969(input_checkbox__$1, data__$1, owner__$1, p__10963__$1, map__10968__$2, key__$1, meta10970);
      };
    }(map__10968, map__10968__$1, key);
  }
  return new trace.colonnade.t10969(trace$colonnade$input_checkbox, data, owner, p__10963, map__10968__$1, key, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.class_menu = function trace$colonnade$class_menu(col, owner) {
  if (typeof trace.colonnade.t10979 !== "undefined") {
  } else {
    trace.colonnade.t10979 = function(class_menu, col, owner, meta10980) {
      this.class_menu = class_menu;
      this.col = col;
      this.owner = owner;
      this.meta10980 = meta10980;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t10979.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10981, meta10980__$1) {
      var self__ = this;
      var _10981__$1 = this;
      return new trace.colonnade.t10979(self__.class_menu, self__.col, self__.owner, meta10980__$1);
    };
    trace.colonnade.t10979.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10981) {
      var self__ = this;
      var _10981__$1 = this;
      return self__.meta10980;
    };
    trace.colonnade.t10979.prototype.om$core$IRender$ = true;
    trace.colonnade.t10979.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_((new cljs.core.Keyword(null, "via", "via", -1904457336)).cljs$core$IFn$_invoke$arity$1(self__.col))) {
        return cljs.core.apply.call(null, React.DOM.span, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str((new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(self__.col))].join("")], null)));
      } else {
        var schema = om.core.observe.call(null, self__.owner, trace.colonnade.schema.call(null));
        return cljs.core.apply.call(null, React.DOM.select, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str((new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(self__.col))].join("")), "className":"form-control", "onChange":om_tools.dom.format_opts.call(null, function(schema, ___$1) {
          return function(e) {
            return om.core.update_BANG_.call(null, self__.col, new cljs.core.Keyword(null, "attribute", "attribute", -2074029119), cljs.reader.read_string.call(null, e.target.value));
          };
        }(schema, ___$1))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, null), cljs.core.concat.call(null, function() {
          var iter__5062__auto__ = function(schema, ___$1) {
            return function trace$colonnade$class_menu_$_iter__10982(s__10983) {
              return new cljs.core.LazySeq(null, function(schema, ___$1) {
                return function() {
                  var s__10983__$1 = s__10983;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__10983__$1);
                    if (temp__4425__auto__) {
                      var s__10983__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__10983__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__10983__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__10985 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__10984 = 0;
                          while (true) {
                            if (i__10984 < size__5061__auto__) {
                              var ci = cljs.core._nth.call(null, c__5060__auto__, i__10984);
                              if (cljs.core.not.call(null, (new cljs.core.Keyword("pace", "is-hash", "pace/is-hash", -1636884006)).cljs$core$IFn$_invoke$arity$1(ci))) {
                                cljs.core.chunk_append.call(null, b__10985, cljs.core.apply.call(null, om.dom.option, {"value":(new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ci)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("pace", "identifies-class", "pace/identifies-class", -147283175)).cljs$core$IFn$_invoke$arity$1(ci)], null))));
                                var G__10986 = i__10984 + 1;
                                i__10984 = G__10986;
                                continue;
                              } else {
                                var G__10987 = i__10984 + 1;
                                i__10984 = G__10987;
                                continue;
                              }
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10985), trace$colonnade$class_menu_$_iter__10982.call(null, cljs.core.chunk_rest.call(null, s__10983__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10985), null);
                        }
                      } else {
                        var ci = cljs.core.first.call(null, s__10983__$2);
                        if (cljs.core.not.call(null, (new cljs.core.Keyword("pace", "is-hash", "pace/is-hash", -1636884006)).cljs$core$IFn$_invoke$arity$1(ci))) {
                          return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":(new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ci)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword("pace", "identifies-class", "pace/identifies-class", -147283175)).cljs$core$IFn$_invoke$arity$1(ci)], null))), trace$colonnade$class_menu_$_iter__10982.call(null, 
                          cljs.core.rest.call(null, s__10983__$2)));
                        } else {
                          var G__10988 = cljs.core.rest.call(null, s__10983__$2);
                          s__10983__$1 = G__10988;
                          continue;
                        }
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(schema, ___$1), null, null);
            };
          }(schema, ___$1);
          return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "classes", "classes", 2037804510)).cljs$core$IFn$_invoke$arity$1(schema));
        }())], null)));
      }
    };
    trace.colonnade.t10979.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "class-menu", "class-menu", 1597940660, null), new cljs.core.Symbol(null, "col", "col", -318831557, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta10980", "meta10980", -1370188988, null)], null);
    };
    trace.colonnade.t10979.cljs$lang$type = true;
    trace.colonnade.t10979.cljs$lang$ctorStr = "trace.colonnade/t10979";
    trace.colonnade.t10979.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t10979");
    };
    trace.colonnade.__GT_t10979 = function trace$colonnade$class_menu_$___GT_t10979(class_menu__$1, col__$1, owner__$1, meta10980) {
      return new trace.colonnade.t10979(class_menu__$1, col__$1, owner__$1, meta10980);
    };
  }
  return new trace.colonnade.t10979(trace$colonnade$class_menu, col, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.from_menu = function trace$colonnade$from_menu(col, owner) {
  if (typeof trace.colonnade.t11000 !== "undefined") {
  } else {
    trace.colonnade.t11000 = function(from_menu, col, owner, meta11001) {
      this.from_menu = from_menu;
      this.col = col;
      this.owner = owner;
      this.meta11001 = meta11001;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11000.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11002, meta11001__$1) {
      var self__ = this;
      var _11002__$1 = this;
      return new trace.colonnade.t11000(self__.from_menu, self__.col, self__.owner, meta11001__$1);
    };
    trace.colonnade.t11000.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11002) {
      var self__ = this;
      var _11002__$1 = this;
      return self__.meta11001;
    };
    trace.colonnade.t11000.prototype.om$core$IRender$ = true;
    trace.colonnade.t11000.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var columns = om.core.observe.call(null, self__.owner, trace.colonnade.columns.call(null));
      return cljs.core.apply.call(null, React.DOM.select, {"value":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(self__.col)), "className":"form-control", "onChange":om_tools.dom.format_opts.call(null, function(columns, ___$1) {
        return function(e) {
          var col_name = e.target.value;
          return om.core.update_BANG_.call(null, self__.col, new cljs.core.Keyword(null, "from", "from", 1815293044), col_name);
        };
      }(columns, ___$1))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, null), function() {
        var iter__5062__auto__ = function(columns, ___$1) {
          return function trace$colonnade$from_menu_$_iter__11003(s__11004) {
            return new cljs.core.LazySeq(null, function(columns, ___$1) {
              return function() {
                var s__11004__$1 = s__11004;
                while (true) {
                  var temp__4425__auto__ = cljs.core.seq.call(null, s__11004__$1);
                  if (temp__4425__auto__) {
                    var s__11004__$2 = temp__4425__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11004__$2)) {
                      var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11004__$2);
                      var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                      var b__11006 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                      if (function() {
                        var i__11005 = 0;
                        while (true) {
                          if (i__11005 < size__5061__auto__) {
                            var vec__11009 = cljs.core._nth.call(null, c__5060__auto__, i__11005);
                            var k = cljs.core.nth.call(null, vec__11009, 0, null);
                            var c = cljs.core.nth.call(null, vec__11009, 1, null);
                            if (cljs.core.not_EQ_.call(null, c, self__.col)) {
                              cljs.core.chunk_append.call(null, b__11006, cljs.core.apply.call(null, om.dom.option, {"value":k}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(c)], null))));
                              var G__11011 = i__11005 + 1;
                              i__11005 = G__11011;
                              continue;
                            } else {
                              var G__11012 = i__11005 + 1;
                              i__11005 = G__11012;
                              continue;
                            }
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11006), trace$colonnade$from_menu_$_iter__11003.call(null, cljs.core.chunk_rest.call(null, s__11004__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11006), null);
                      }
                    } else {
                      var vec__11010 = cljs.core.first.call(null, s__11004__$2);
                      var k = cljs.core.nth.call(null, vec__11010, 0, null);
                      var c = cljs.core.nth.call(null, vec__11010, 1, null);
                      if (cljs.core.not_EQ_.call(null, c, self__.col)) {
                        return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":k}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(c)], null))), trace$colonnade$from_menu_$_iter__11003.call(null, cljs.core.rest.call(null, s__11004__$2)));
                      } else {
                        var G__11013 = cljs.core.rest.call(null, s__11004__$2);
                        s__11004__$1 = G__11013;
                        continue;
                      }
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(columns, ___$1), null, null);
          };
        }(columns, ___$1);
        return iter__5062__auto__.call(null, columns);
      }()], null)));
    };
    trace.colonnade.t11000.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "from-menu", "from-menu", -1360532351, null), new cljs.core.Symbol(null, "col", "col", -318831557, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta11001", "meta11001", 657470041, null)], null);
    };
    trace.colonnade.t11000.cljs$lang$type = true;
    trace.colonnade.t11000.cljs$lang$ctorStr = "trace.colonnade/t11000";
    trace.colonnade.t11000.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11000");
    };
    trace.colonnade.__GT_t11000 = function trace$colonnade$from_menu_$___GT_t11000(from_menu__$1, col__$1, owner__$1, meta11001) {
      return new trace.colonnade.t11000(from_menu__$1, col__$1, owner__$1, meta11001);
    };
  }
  return new trace.colonnade.t11000(trace$colonnade$from_menu, col, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.via_menu = function trace$colonnade$via_menu(col, owner) {
  if (typeof trace.colonnade.t11027 !== "undefined") {
  } else {
    trace.colonnade.t11027 = function(via_menu, col, owner, meta11028) {
      this.via_menu = via_menu;
      this.col = col;
      this.owner = owner;
      this.meta11028 = meta11028;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11027.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11029, meta11028__$1) {
      var self__ = this;
      var _11029__$1 = this;
      return new trace.colonnade.t11027(self__.via_menu, self__.col, self__.owner, meta11028__$1);
    };
    trace.colonnade.t11027.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11029) {
      var self__ = this;
      var _11029__$1 = this;
      return self__.meta11028;
    };
    trace.colonnade.t11027.prototype.om$core$IRender$ = true;
    trace.colonnade.t11027.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var schema = (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.colonnade.app_state));
      var columns = om.core.observe.call(null, self__.owner, trace.colonnade.columns.call(null));
      var from = function() {
        var temp__4423__auto__ = (new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(self__.col);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var f = temp__4423__auto__;
          return columns.call(null, f);
        } else {
          return null;
        }
      }();
      var attr = (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(from);
      var nss = cljs.core.truth_(attr) ? cljs.core._EQ_.call(null, cljs.core.name.call(null, attr), "id") ? cljs.core.cons.call(null, cljs.core.namespace.call(null, attr), (new cljs.core.Keyword("pace", "use-ns", "pace/use-ns", 1121435533)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "classes-by-ident", "classes-by-ident", 476699132)).cljs$core$IFn$_invoke$arity$1(schema).call(null, attr))) : cljs.core.cons.call(null, [cljs.core.str(cljs.core.namespace.call(null, attr)), cljs.core.str("."), 
      cljs.core.str(cljs.core.name.call(null, attr))].join(""), (new cljs.core.Keyword("pace", "use-ns", "pace/use-ns", 1121435533)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "attrs-by-ident", "attrs-by-ident", 1962204233)).cljs$core$IFn$_invoke$arity$1(schema).call(null, attr))) : null;
      var ns_attrs = cljs.core.doall.call(null, cljs.core.concat.call(null, cljs.core.mapcat.call(null, (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(schema), nss), function() {
        var temp__4423__auto__ = cljs.core.first.call(null, cljs.core.filter.call(null, function(schema, columns, from, attr, nss, ___$1) {
          return function(p1__11014_SHARP_) {
            return cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(p1__11014_SHARP_), attr);
          };
        }(schema, columns, from, attr, nss, ___$1), (new cljs.core.Keyword(null, "classes", "classes", 2037804510)).cljs$core$IFn$_invoke$arity$1(schema)));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var ci = temp__4423__auto__;
          var iter__5062__auto__ = function(ci, temp__4423__auto__, schema, columns, from, attr, nss, ___$1) {
            return function trace$colonnade$via_menu_$_iter__11030(s__11031) {
              return new cljs.core.LazySeq(null, function(ci, temp__4423__auto__, schema, columns, from, attr, nss, ___$1) {
                return function() {
                  var s__11031__$1 = s__11031;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__11031__$1);
                    if (temp__4425__auto__) {
                      var s__11031__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__11031__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11031__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__11033 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__11032 = 0;
                          while (true) {
                            if (i__11032 < size__5061__auto__) {
                              var x = cljs.core._nth.call(null, c__5060__auto__, i__11032);
                              var xa = (new cljs.core.Keyword("pace.xref", "attribute", "pace.xref/attribute", -487889973)).cljs$core$IFn$_invoke$arity$1(x);
                              cljs.core.chunk_append.call(null, b__11033, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "ident", "db/ident", -737096), cljs.core.keyword.call(null, cljs.core.namespace.call(null, xa), [cljs.core.str("_"), cljs.core.str(cljs.core.name.call(null, xa))].join("")), new cljs.core.Keyword(null, "is-xref", "is-xref", -1974651536), true, new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944), new cljs.core.Keyword("db.type", "ref", "db.type/ref", 
                              -1728373079), new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218), (new cljs.core.Keyword("pace.xref", "obj-ref", "pace.xref/obj-ref", 1900501213)).cljs$core$IFn$_invoke$arity$1(x)], null));
                              var G__11038 = i__11032 + 1;
                              i__11032 = G__11038;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11033), trace$colonnade$via_menu_$_iter__11030.call(null, cljs.core.chunk_rest.call(null, s__11031__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11033), null);
                        }
                      } else {
                        var x = cljs.core.first.call(null, s__11031__$2);
                        var xa = (new cljs.core.Keyword("pace.xref", "attribute", "pace.xref/attribute", -487889973)).cljs$core$IFn$_invoke$arity$1(x);
                        return cljs.core.cons.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword("db", "ident", "db/ident", -737096), cljs.core.keyword.call(null, cljs.core.namespace.call(null, xa), [cljs.core.str("_"), cljs.core.str(cljs.core.name.call(null, xa))].join("")), new cljs.core.Keyword(null, "is-xref", "is-xref", -1974651536), true, new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079), 
                        new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218), (new cljs.core.Keyword("pace.xref", "obj-ref", "pace.xref/obj-ref", 1900501213)).cljs$core$IFn$_invoke$arity$1(x)], null), trace$colonnade$via_menu_$_iter__11030.call(null, cljs.core.rest.call(null, s__11031__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(ci, temp__4423__auto__, schema, columns, from, attr, nss, ___$1), null, null);
            };
          }(ci, temp__4423__auto__, schema, columns, from, attr, nss, ___$1);
          return iter__5062__auto__.call(null, (new cljs.core.Keyword("pace", "xref", "pace/xref", 689967729)).cljs$core$IFn$_invoke$arity$1(ci));
        } else {
          return null;
        }
      }()));
      return cljs.core.apply.call(null, React.DOM.select, {"value":om_tools.dom.format_opts.call(null, (new cljs.core.Keyword(null, "via", "via", -1904457336)).cljs$core$IFn$_invoke$arity$1(self__.col)), "className":"form-control", "onChange":om_tools.dom.format_opts.call(null, function(schema, columns, from, attr, nss, ns_attrs, ___$1) {
        return function(e) {
          var via_name = e.target.value;
          var via = cljs.core.first.call(null, cljs.core.filter.call(null, function(via_name, schema, columns, from, attr, nss, ns_attrs, ___$1) {
            return function(p1__11015_SHARP_) {
              return cljs.core._EQ_.call(null, [cljs.core.str((new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(p1__11015_SHARP_))].join(""), via_name);
            };
          }(via_name, schema, columns, from, attr, nss, ns_attrs, ___$1), ns_attrs));
          om.core.update_BANG_.call(null, self__.col, new cljs.core.Keyword(null, "via", "via", -1904457336), (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(via));
          return om.core.update_BANG_.call(null, self__.col, new cljs.core.Keyword(null, "attribute", "attribute", -2074029119), cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(via), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079)) ? cljs.core.truth_((new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(via)) ? (new cljs.core.Keyword("db", "ident", "db/ident", 
          -737096)).cljs$core$IFn$_invoke$arity$1(via) : cljs.core.truth_((new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(via)) ? (new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(via) : new cljs.core.Keyword(null, "enum", "enum", 1679018432) : (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(via));
        };
      }(schema, columns, from, attr, nss, ns_attrs, ___$1))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, null), function() {
        var iter__5062__auto__ = function(schema, columns, from, attr, nss, ns_attrs, ___$1) {
          return function trace$colonnade$via_menu_$_iter__11034(s__11035) {
            return new cljs.core.LazySeq(null, function(schema, columns, from, attr, nss, ns_attrs, ___$1) {
              return function() {
                var s__11035__$1 = s__11035;
                while (true) {
                  var temp__4425__auto__ = cljs.core.seq.call(null, s__11035__$1);
                  if (temp__4425__auto__) {
                    var s__11035__$2 = temp__4425__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11035__$2)) {
                      var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11035__$2);
                      var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                      var b__11037 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                      if (function() {
                        var i__11036 = 0;
                        while (true) {
                          if (i__11036 < size__5061__auto__) {
                            var a = cljs.core._nth.call(null, c__5060__auto__, i__11036);
                            var i = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a);
                            cljs.core.chunk_append.call(null, b__11037, cljs.core.apply.call(null, om.dom.option, {"value":[cljs.core.str(i)].join("")}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(i)].join("")], null))));
                            var G__11039 = i__11036 + 1;
                            i__11036 = G__11039;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11037), trace$colonnade$via_menu_$_iter__11034.call(null, cljs.core.chunk_rest.call(null, s__11035__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11037), null);
                      }
                    } else {
                      var a = cljs.core.first.call(null, s__11035__$2);
                      var i = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(a);
                      return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":[cljs.core.str(i)].join("")}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(i)].join("")], null))), trace$colonnade$via_menu_$_iter__11034.call(null, cljs.core.rest.call(null, s__11035__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(schema, columns, from, attr, nss, ns_attrs, ___$1), null, null);
          };
        }(schema, columns, from, attr, nss, ns_attrs, ___$1);
        return iter__5062__auto__.call(null, ns_attrs);
      }()], null)));
    };
    trace.colonnade.t11027.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "via-menu", "via-menu", -1730523302, null), new cljs.core.Symbol(null, "col", "col", -318831557, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta11028", "meta11028", 913393019, null)], null);
    };
    trace.colonnade.t11027.cljs$lang$type = true;
    trace.colonnade.t11027.cljs$lang$ctorStr = "trace.colonnade/t11027";
    trace.colonnade.t11027.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11027");
    };
    trace.colonnade.__GT_t11027 = function trace$colonnade$via_menu_$___GT_t11027(via_menu__$1, col__$1, owner__$1, meta11028) {
      return new trace.colonnade.t11027(via_menu__$1, col__$1, owner__$1, meta11028);
    };
  }
  return new trace.colonnade.t11027(trace$colonnade$via_menu, col, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.enum_constraint = function trace$colonnade$enum_constraint(p__11040, owner) {
  var map__11049 = p__11040;
  var map__11049__$1 = cljs.core.seq_QMARK_.call(null, map__11049) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11049) : map__11049;
  var col = map__11049__$1;
  var via = cljs.core.get.call(null, map__11049__$1, new cljs.core.Keyword(null, "via", "via", -1904457336));
  if (typeof trace.colonnade.t11050 !== "undefined") {
  } else {
    trace.colonnade.t11050 = function(enum_constraint, p__11040, owner, map__11049, col, via, meta11051) {
      this.enum_constraint = enum_constraint;
      this.p__11040 = p__11040;
      this.owner = owner;
      this.map__11049 = map__11049;
      this.col = col;
      this.via = via;
      this.meta11051 = meta11051;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11050.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__11049, map__11049__$1, col, via) {
      return function(_11052, meta11051__$1) {
        var self__ = this;
        var _11052__$1 = this;
        return new trace.colonnade.t11050(self__.enum_constraint, self__.p__11040, self__.owner, self__.map__11049, self__.col, self__.via, meta11051__$1);
      };
    }(map__11049, map__11049__$1, col, via);
    trace.colonnade.t11050.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__11049, map__11049__$1, col, via) {
      return function(_11052) {
        var self__ = this;
        var _11052__$1 = this;
        return self__.meta11051;
      };
    }(map__11049, map__11049__$1, col, via);
    trace.colonnade.t11050.prototype.om$core$IRender$ = true;
    trace.colonnade.t11050.prototype.om$core$IRender$render$arity$1 = function(map__11049, map__11049__$1, col, via) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        var schema = om.core.observe.call(null, self__.owner, trace.colonnade.schema.call(null));
        var tns = [cljs.core.str(cljs.core.namespace.call(null, self__.via)), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, self__.via))].join("");
        var enum_values = (new cljs.core.Keyword(null, "attrs", "attrs", -2090668713)).cljs$core$IFn$_invoke$arity$1(schema).call(null, tns);
        return cljs.core.apply.call(null, React.DOM.select, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str((new cljs.core.Keyword(null, "constrain", "constrain", -1167296453)).cljs$core$IFn$_invoke$arity$1(self__.col))].join("")), "className":"form-control", "onChange":om_tools.dom.format_opts.call(null, function(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via) {
          return function(e) {
            return om.core.update_BANG_.call(null, self__.col, new cljs.core.Keyword(null, "constrain", "constrain", -1167296453), cljs.reader.read_string.call(null, e.target.value));
          };
        }(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, null), function() {
          var iter__5062__auto__ = function(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via) {
            return function trace$colonnade$enum_constraint_$_iter__11053(s__11054) {
              return new cljs.core.LazySeq(null, function(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via) {
                return function() {
                  var s__11054__$1 = s__11054;
                  while (true) {
                    var temp__4425__auto__ = cljs.core.seq.call(null, s__11054__$1);
                    if (temp__4425__auto__) {
                      var s__11054__$2 = temp__4425__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, s__11054__$2)) {
                        var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11054__$2);
                        var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                        var b__11056 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                        if (function() {
                          var i__11055 = 0;
                          while (true) {
                            if (i__11055 < size__5061__auto__) {
                              var ev = cljs.core._nth.call(null, c__5060__auto__, i__11055);
                              var id = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ev);
                              cljs.core.chunk_append.call(null, b__11056, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str(id)].join(""))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(id)].join("")], null))));
                              var G__11057 = i__11055 + 1;
                              i__11055 = G__11057;
                              continue;
                            } else {
                              return true;
                            }
                            break;
                          }
                        }()) {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11056), trace$colonnade$enum_constraint_$_iter__11053.call(null, cljs.core.chunk_rest.call(null, s__11054__$2)));
                        } else {
                          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11056), null);
                        }
                      } else {
                        var ev = cljs.core.first.call(null, s__11054__$2);
                        var id = (new cljs.core.Keyword("db", "ident", "db/ident", -737096)).cljs$core$IFn$_invoke$arity$1(ev);
                        return cljs.core.cons.call(null, cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, [cljs.core.str(id)].join(""))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(id)].join("")], null))), trace$colonnade$enum_constraint_$_iter__11053.call(null, cljs.core.rest.call(null, s__11054__$2)));
                      }
                    } else {
                      return null;
                    }
                    break;
                  }
                };
              }(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via), null, null);
            };
          }(schema, tns, enum_values, ___$1, map__11049, map__11049__$1, col, via);
          return iter__5062__auto__.call(null, enum_values);
        }()], null)));
      };
    }(map__11049, map__11049__$1, col, via);
    trace.colonnade.t11050.getBasis = function(map__11049, map__11049__$1, col, via) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "enum-constraint", "enum-constraint", 2080048211, null), new cljs.core.Symbol(null, "p__11040", "p__11040", 601793567, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "map__11049", "map__11049", 668699346, null), new cljs.core.Symbol(null, "col", "col", -318831557, null), new cljs.core.Symbol(null, "via", "via", -263925809, 
        null), new cljs.core.Symbol(null, "meta11051", "meta11051", -1068500003, null)], null);
      };
    }(map__11049, map__11049__$1, col, via);
    trace.colonnade.t11050.cljs$lang$type = true;
    trace.colonnade.t11050.cljs$lang$ctorStr = "trace.colonnade/t11050";
    trace.colonnade.t11050.cljs$lang$ctorPrWriter = function(map__11049, map__11049__$1, col, via) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11050");
      };
    }(map__11049, map__11049__$1, col, via);
    trace.colonnade.__GT_t11050 = function(map__11049, map__11049__$1, col, via) {
      return function trace$colonnade$enum_constraint_$___GT_t11050(enum_constraint__$1, p__11040__$1, owner__$1, map__11049__$2, col__$1, via__$1, meta11051) {
        return new trace.colonnade.t11050(enum_constraint__$1, p__11040__$1, owner__$1, map__11049__$2, col__$1, via__$1, meta11051);
      };
    }(map__11049, map__11049__$1, col, via);
  }
  return new trace.colonnade.t11050(trace$colonnade$enum_constraint, p__11040, owner, map__11049__$1, col, via, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.constraint_editor = function trace$colonnade$constraint_editor(p__11058) {
  var map__11060 = p__11058;
  var map__11060__$1 = cljs.core.seq_QMARK_.call(null, map__11060) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11060) : map__11060;
  var col = map__11060__$1;
  var attribute = cljs.core.get.call(null, map__11060__$1, new cljs.core.Keyword(null, "attribute", "attribute", -2074029119));
  if (attribute == null) {
    return null;
  } else {
    if (cljs.core._EQ_.call(null, attribute, new cljs.core.Keyword("db.type", "string", "db.type/string", 1432572808))) {
      return om.core.build.call(null, trace.colonnade.input_text, col, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "constrain", "constrain", -1167296453)], null)], null));
    } else {
      if (cljs.core._EQ_.call(null, cljs.core.name.call(null, attribute), "id")) {
        return om.core.build.call(null, trace.colonnade.input_text, col, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "constrain", "constrain", -1167296453)], null)], null));
      } else {
        if (cljs.core._EQ_.call(null, attribute, new cljs.core.Keyword(null, "enum", "enum", 1679018432))) {
          return om.core.build.call(null, trace.colonnade.enum_constraint, col);
        } else {
          return null;
        }
      }
    }
  }
};
trace.colonnade.column_def_view = function trace$colonnade$column_def_view(col, owner) {
  if (typeof trace.colonnade.t11067 !== "undefined") {
  } else {
    trace.colonnade.t11067 = function(column_def_view, col, owner, meta11068) {
      this.column_def_view = column_def_view;
      this.col = col;
      this.owner = owner;
      this.meta11068 = meta11068;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11067.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11069, meta11068__$1) {
      var self__ = this;
      var _11069__$1 = this;
      return new trace.colonnade.t11067(self__.column_def_view, self__.col, self__.owner, meta11068__$1);
    };
    trace.colonnade.t11067.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11069) {
      var self__ = this;
      var _11069__$1 = this;
      return self__.meta11068;
    };
    trace.colonnade.t11067.prototype.om$core$IRender$ = true;
    trace.colonnade.t11067.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, React.DOM.div, {"className":"column-holder"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(___$1) {
        return function(ev) {
          ev.preventDefault();
          var cid = cljs.core.some.call(null, function(___$1) {
            return function(p__11070) {
              var vec__11071 = p__11070;
              var k = cljs.core.nth.call(null, vec__11071, 0, null);
              var cd = cljs.core.nth.call(null, vec__11071, 1, null);
              if (cljs.core._EQ_.call(null, cd, cljs.core.deref.call(null, self__.col))) {
                return k;
              } else {
                return null;
              }
            };
          }(___$1), (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.colonnade.app_state)));
          return om.core.transact_BANG_.call(null, om.core.root_cursor.call(null, trace.colonnade.app_state), new cljs.core.Keyword(null, "columns", "columns", 1998437288), function(cid, ___$1) {
            return function(p1__11061_SHARP_) {
              return cljs.core.dissoc.call(null, p1__11061_SHARP_, cid);
            };
          }(cid, ___$1));
        };
      }(___$1)), "className":"remove"}, "x"), cljs.core.apply.call(null, React.DOM.form, {"className":"form-inline"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "Name: "), om.core.build.call(null, trace.colonnade.input_text, self__.col, 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "name", "name", 1843675177)], null)], null))], null))), cljs.core.not.call(null, (new cljs.core.Keyword(null, "root", "root", -448657453)).cljs$core$IFn$_invoke$arity$1(self__.col)) ? cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, 
      new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "From: "), om.core.build.call(null, trace.colonnade.from_menu, self__.col), React.DOM.label(null, "Via: "), om.core.build.call(null, trace.colonnade.via_menu, self__.col)], null))) : null, cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, 
      "Class: "), om.core.build.call(null, trace.colonnade.class_menu, self__.col)], null))), React.DOM.br(null), cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "Required: "), om.core.build.call(null, trace.colonnade.input_checkbox, self__.col, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "required", "required", 1807647006)], null)], null))], null))), cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "Visible: "), om.core.build.call(null, trace.colonnade.input_checkbox, self__.col, new cljs.core.PersistentArrayMap(null, 
      1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "visible", "visible", -1024216805)], null)], null))], null))), cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "Constrain: "), trace.colonnade.constraint_editor.call(null, 
      self__.col)], null))), cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.label, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["In txn:", om.core.build.call(null, trace.colonnade.input_text, self__.col, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
      "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "in-txn", "in-txn", -1193350495)], null)], null))], null)))], null)))], null)))], null)));
    };
    trace.colonnade.t11067.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "column-def-view", "column-def-view", -210345183, null), new cljs.core.Symbol(null, "col", "col", -318831557, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta11068", "meta11068", 1956610580, null)], null);
    };
    trace.colonnade.t11067.cljs$lang$type = true;
    trace.colonnade.t11067.cljs$lang$ctorStr = "trace.colonnade/t11067";
    trace.colonnade.t11067.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11067");
    };
    trace.colonnade.__GT_t11067 = function trace$colonnade$column_def_view_$___GT_t11067(column_def_view__$1, col__$1, owner__$1, meta11068) {
      return new trace.colonnade.t11067(column_def_view__$1, col__$1, owner__$1, meta11068);
    };
  }
  return new trace.colonnade.t11067(trace$colonnade$column_def_view, col, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.get_query = function trace$colonnade$get_query(columns, schema) {
  return cljs.core.reduce.call(null, function(p__11078, p__11079) {
    var map__11080 = p__11078;
    var map__11080__$1 = cljs.core.seq_QMARK_.call(null, map__11080) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11080) : map__11080;
    var find = cljs.core.get.call(null, map__11080__$1, new cljs.core.Keyword(null, "find", "find", 496279456));
    var where = cljs.core.get.call(null, map__11080__$1, new cljs.core.Keyword(null, "where", "where", -2044795965));
    var rules = cljs.core.get.call(null, map__11080__$1, new cljs.core.Keyword(null, "rules", "rules", 1198912366));
    var vec__11081 = p__11079;
    var k = cljs.core.nth.call(null, vec__11081, 0, null);
    var col = cljs.core.nth.call(null, vec__11081, 1, null);
    var via = (new cljs.core.Keyword(null, "via", "via", -1904457336)).cljs$core$IFn$_invoke$arity$1(col);
    var via_xref = cljs.core.truth_(via) ? cljs.core._EQ_.call(null, cljs.core.name.call(null, via).indexOf("_"), 0) ? cljs.core.keyword.call(null, cljs.core.namespace.call(null, via), cljs.core.name.call(null, via).substring(1)) : null : null;
    var vs = (new cljs.core.Keyword(null, "attrs-by-ident", "attrs-by-ident", 1962204233)).cljs$core$IFn$_invoke$arity$1(schema).call(null, via);
    var attr = (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 496279456), trace.utils.conj_if.call(null, find, cljs.core.truth_(function() {
      var and__4296__auto__ = (new cljs.core.Keyword(null, "visible", "visible", -1024216805)).cljs$core$IFn$_invoke$arity$1(col);
      if (cljs.core.truth_(and__4296__auto__)) {
        return attr;
      } else {
        return and__4296__auto__;
      }
    }()) ? cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(vs), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079)) && (new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(vs) == null && cljs.core.not.call(null, (new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(vs)) ? cljs.core.symbol.call(null, [cljs.core.str("?"), 
    cljs.core.str(k), cljs.core.str("-ident")].join("")) : cljs.core._EQ_.call(null, cljs.core.name.call(null, attr), "id") ? cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-id")].join("")) : cljs.core.truth_((new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(vs)) ? cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 1, 5, 
    cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*", "*", 345799209, null)], null)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))), new cljs.core.Symbol(null, "pull", "pull", 779986722, null)) : cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")) : null), new cljs.core.Keyword(null, "where", "where", -2044795965), cljs.core.concat.call(null, where, function() {
      var temp__4423__auto__ = (new cljs.core.Keyword(null, "in-txn", "in-txn", -1193350495)).cljs$core$IFn$_invoke$arity$1(col);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var txn = temp__4423__auto__;
        var txn__$1 = parseInt(txn);
        if (cljs.core.not.call(null, isNaN(txn__$1))) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, parseInt(txn__$1)), new cljs.core.Symbol(null, "?log", "?log", -2106076034, null)), new cljs.core.Symbol("web.trace", "in-transaction", "web.trace/in-transaction", -1504384382, null)), new cljs.core.PersistentVector(null, 
          2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), new cljs.core.Symbol(null, "...", "...", -1926939749, null)], null)], null)], null);
        } else {
          return null;
        }
      } else {
        return null;
      }
    }(), cljs.core.truth_(via) ? cljs.core.truth_((new cljs.core.Keyword(null, "required", "required", 1807647006)).cljs$core$IFn$_invoke$arity$1(col)) ? cljs.core.truth_(via_xref) ? cljs.core._EQ_.call(null, cljs.core.count.call(null, clojure.string.split.call(null, cljs.core.namespace.call(null, via_xref), /\./)), 2) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, 
    [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-holder")].join("")), via_xref, cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str((new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(col))].join(""))], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), function() {
      var vec__11082 = clojure.string.split.call(null, cljs.core.namespace.call(null, via_xref), /\./);
      var x = cljs.core.nth.call(null, vec__11082, 0, null);
      var y = cljs.core.nth.call(null, vec__11082, 1, null);
      return cljs.core.keyword.call(null, x, y);
    }(), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-holder")].join(""))], null)], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), via_xref, cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str((new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(col))].join(""))], 
    null)], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str((new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(col))].join("")), via, cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))], null)], null) : cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", 
    "cardinality", "db/cardinality", -104975659)).cljs$core$IFn$_invoke$arity$1(vs), new cljs.core.Keyword("db.cardinality", "one", "db.cardinality/one", 1428352190)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
    "none", "none", 1333468478)), cljs.core.symbol.call(null, via)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str((new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(col))].join(""))), new cljs.core.Symbol(null, "$", "$", -1580747756, null)), new cljs.core.Symbol(null, "get-else", "get-else", 1312024065, null)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))], null)], null) : new cljs.core.PersistentVector(null, 1, 
    5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str((new cljs.core.Keyword(null, "from", "from", 1815293044)).cljs$core$IFn$_invoke$arity$1(col))].join(""))), cljs.core.symbol.call(null, [cljs.core.str("maybe-"), cljs.core.str(k)].join("")))], null) : null, cljs.core.truth_(function() {
      var and__4296__auto__ = attr;
      if (cljs.core.truth_(and__4296__auto__)) {
        return cljs.core._EQ_.call(null, cljs.core.name.call(null, attr), "id");
      } else {
        return and__4296__auto__;
      }
    }()) ? cljs.core.truth_((new cljs.core.Keyword(null, "required", "required", 1807647006)).cljs$core$IFn$_invoke$arity$1(col)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), attr, cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-id")].join(""))], null)], null) : new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "none", "none", 1333468478)), attr), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))), new cljs.core.Symbol(null, "$", "$", -1580747756, null)), new cljs.core.Symbol(null, 
    "get-else", "get-else", 1312024065, null)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-id")].join(""))], null)], null) : null, cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(vs), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079)) && (new cljs.core.Keyword("pace", "obj-ref", "pace/obj-ref", 262677218)).cljs$core$IFn$_invoke$arity$1(vs) == null && cljs.core.not.call(null, 
    (new cljs.core.Keyword("db", "isComponent", "db/isComponent", 423352398)).cljs$core$IFn$_invoke$arity$1(vs)) ? cljs.core.truth_((new cljs.core.Keyword(null, "required", "required", 1807647006)).cljs$core$IFn$_invoke$arity$1(col)) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), new cljs.core.Keyword("db", 
    "ident", "db/ident", -737096), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-ident")].join(""))], null)], null) : new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
    "none", "none", 1333468478)), new cljs.core.Keyword("db", "ident", "db/ident", -737096)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))), new cljs.core.Symbol(null, "$", "$", -1580747756, null)), new cljs.core.Symbol(null, "get-else", "get-else", 1312024065, null)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-ident")].join(""))], null)], null) : null, function() {
      var temp__4423__auto__ = (new cljs.core.Keyword(null, "constrain", "constrain", -1167296453)).cljs$core$IFn$_invoke$arity$1(col);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var con = temp__4423__auto__;
        if (typeof con === "string") {
          if (!cljs.core.empty_QMARK_.call(null, con)) {
            var cleaned_con = clojure.string.replace.call(null, con, /[\[\].*+?{}()]/, function(con, temp__4423__auto__, via, via_xref, vs, attr, map__11080, map__11080__$1, find, where, rules, vec__11081, k, col) {
              return function(p) {
                if (cljs.core._EQ_.call(null, p, "*")) {
                  return ".*";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(p)].join("");
                }
              };
            }(con, temp__4423__auto__, via, via_xref, vs, attr, map__11080, map__11080__$1, find, where, rules, vec__11081, k, col));
            if (cleaned_con.indexOf(".*") >= 0) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, [cljs.core.str("(?i)"), cljs.core.str(cleaned_con)].join("")), new cljs.core.Symbol(null, "re-pattern", "re-pattern", 1047705161, null)), cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-regex")].join(""))], 
              null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, cljs.core.name.call(null, attr), "id") ? cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-id")].join("")) : cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))), cljs.core.symbol.call(null, [cljs.core.str("?"), 
              cljs.core.str(k), cljs.core.str("-regex")].join(""))), new cljs.core.Symbol(null, "re-matches", "re-matches", -1865705768, null))], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, con), new cljs.core.Symbol(null, "ground", "ground", -1460862835, null)), cljs.core._EQ_.call(null, cljs.core.name.call(null, attr), "id") ? cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k), cljs.core.str("-id")].join("")) : 
              cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join(""))], null)], null);
            }
          } else {
            return null;
          }
        } else {
          if (con instanceof cljs.core.Keyword) {
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(k)].join("")), new cljs.core.Keyword("db", "ident", "db/ident", -737096), con], null)], null);
          } else {
            return null;
          }
        }
      } else {
        return null;
      }
    }()), new cljs.core.Keyword(null, "rules", "rules", 1198912366), cljs.core.concat.call(null, rules, cljs.core.truth_(function() {
      var and__4296__auto__ = via;
      if (cljs.core.truth_(and__4296__auto__)) {
        return cljs.core.not.call(null, (new cljs.core.Keyword(null, "required", "required", 1807647006)).cljs$core$IFn$_invoke$arity$1(col));
      } else {
        return and__4296__auto__;
      }
    }()) ? cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "cardinality", "db/cardinality", -104975659)).cljs$core$IFn$_invoke$arity$1(vs), new cljs.core.Keyword("db.cardinality", "many", "db.cardinality/many", 772806234)) ? function() {
      var rule = cljs.core.symbol.call(null, [cljs.core.str("maybe-"), cljs.core.str(k)].join(""));
      var _QMARK_a = cljs.core.symbol.call(null, "?a");
      var _QMARK_b = cljs.core.symbol.call(null, "?b");
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_a, via, _QMARK_b], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_a, via, new cljs.core.Symbol(null, "_", "_", -1201019570, null)], null)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, (new cljs.core.Keyword("db", "valueType", "db/valueType", 1827971944)).cljs$core$IFn$_invoke$arity$1(vs), new cljs.core.Keyword("db.type", "ref", "db.type/ref", -1728373079)) ? -1 : new cljs.core.Keyword(null, "none", "none", 1333468478)), new cljs.core.Symbol(null, "ground", "ground", -1460862835, null)), _QMARK_b], null)], null)], null);
    }() : cljs.core.truth_(via_xref) ? cljs.core._EQ_.call(null, cljs.core.count.call(null, clojure.string.split.call(null, cljs.core.namespace.call(null, via_xref), /\./)), 2) ? function() {
      var vec__11083 = clojure.string.split.call(null, cljs.core.namespace.call(null, via_xref), /\./);
      var x = cljs.core.nth.call(null, vec__11083, 0, null);
      var y = cljs.core.nth.call(null, vec__11083, 1, null);
      var rule = cljs.core.symbol.call(null, [cljs.core.str("maybe-"), cljs.core.str(k)].join(""));
      var _QMARK_a = cljs.core.symbol.call(null, "?a");
      var _QMARK_b = cljs.core.symbol.call(null, "?b");
      var _QMARK_h = cljs.core.symbol.call(null, "?h");
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_h, via_xref, _QMARK_a], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [_QMARK_b, cljs.core.keyword.call(null, x, y), _QMARK_h], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, 
      null), via_xref, _QMARK_a], null)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, -1), new cljs.core.Symbol(null, "ground", "ground", -1460862835, null)), _QMARK_b], null)], null)], null);
    }() : function() {
      var rule = cljs.core.symbol.call(null, [cljs.core.str("maybe-"), cljs.core.str(k)].join(""));
      var _QMARK_a = cljs.core.symbol.call(null, "?a");
      var _QMARK_b = cljs.core.symbol.call(null, "?b");
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [_QMARK_b, via_xref, _QMARK_a], null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, _QMARK_b), _QMARK_a), rule), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "_", "_", -1201019570, null), via_xref, _QMARK_a], null)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, -1), new cljs.core.Symbol(null, "ground", "ground", -1460862835, null)), _QMARK_b], null)], null)], null);
    }() : null : null)], null);
  }, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "find", "find", 496279456), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "where", "where", -2044795965), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "rules", "rules", 1198912366), cljs.core.PersistentVector.EMPTY], null), columns);
};
trace.colonnade.query_list = function trace$colonnade$query_list(q) {
  return cljs.core.vec.call(null, cljs.core.seq.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(q)) ? cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "find", "find", 496279456)], null), (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.Symbol(null, "$", "$", -1580747756, null), new cljs.core.Symbol(null, "?log", "?log", -2106076034, null), new cljs.core.Symbol(null, "%", "%", -950237169, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "where", "where", -2044795965)], null), (new cljs.core.Keyword(null, "where", "where", -2044795965)).cljs$core$IFn$_invoke$arity$1(q)) : cljs.core.concat.call(null, 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "find", "find", 496279456)], null), (new cljs.core.Keyword(null, "find", "find", 496279456)).cljs$core$IFn$_invoke$arity$1(q), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "in", "in", -1531184865), new cljs.core.Symbol(null, "$", "$", -1580747756, null), new cljs.core.Symbol(null, "?log", "?log", -2106076034, null)], null), 
  new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "where", "where", -2044795965)], null), (new cljs.core.Keyword(null, "where", "where", -2044795965)).cljs$core$IFn$_invoke$arity$1(q)));
};
trace.colonnade.query_view = function trace$colonnade$query_view(app, owner) {
  if (typeof trace.colonnade.t11087 !== "undefined") {
  } else {
    trace.colonnade.t11087 = function(query_view, app, owner, meta11088) {
      this.query_view = query_view;
      this.app = app;
      this.owner = owner;
      this.meta11088 = meta11088;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11087.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11089, meta11088__$1) {
      var self__ = this;
      var _11089__$1 = this;
      return new trace.colonnade.t11087(self__.query_view, self__.app, self__.owner, meta11088__$1);
    };
    trace.colonnade.t11087.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11089) {
      var self__ = this;
      var _11089__$1 = this;
      return self__.meta11088;
    };
    trace.colonnade.t11087.prototype.om$core$IRender$ = true;
    trace.colonnade.t11087.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      var q = trace.colonnade.get_query.call(null, (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(self__.app), (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(self__.app));
      return cljs.core.apply.call(null, React.DOM.pre, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.pr_str.call(null, trace.colonnade.query_list.call(null, q)), cljs.core.seq.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(q)) ? [cljs.core.str("\nwith rules:\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.vec.call(null, (new cljs.core.Keyword(null, "rules", 
      "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(q))))].join("") : null], null)));
    };
    trace.colonnade.t11087.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "query-view", "query-view", -811959603, null), new cljs.core.Symbol(null, "app", "app", 1079569820, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta11088", "meta11088", 1431573571, null)], null);
    };
    trace.colonnade.t11087.cljs$lang$type = true;
    trace.colonnade.t11087.cljs$lang$ctorStr = "trace.colonnade/t11087";
    trace.colonnade.t11087.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11087");
    };
    trace.colonnade.__GT_t11087 = function trace$colonnade$query_view_$___GT_t11087(query_view__$1, app__$1, owner__$1, meta11088) {
      return new trace.colonnade.t11087(query_view__$1, app__$1, owner__$1, meta11088);
    };
  }
  return new trace.colonnade.t11087(trace$colonnade$query_view, app, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.results_view = function trace$colonnade$results_view(results, owner, p__11090) {
  var map__11107 = p__11090;
  var map__11107__$1 = cljs.core.seq_QMARK_.call(null, map__11107) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11107) : map__11107;
  var columns = cljs.core.get.call(null, map__11107__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  if (typeof trace.colonnade.t11108 !== "undefined") {
  } else {
    trace.colonnade.t11108 = function(results_view, results, owner, p__11090, map__11107, columns, meta11109) {
      this.results_view = results_view;
      this.results = results;
      this.owner = owner;
      this.p__11090 = p__11090;
      this.map__11107 = map__11107;
      this.columns = columns;
      this.meta11109 = meta11109;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11108.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__11107, map__11107__$1, columns) {
      return function(_11110, meta11109__$1) {
        var self__ = this;
        var _11110__$1 = this;
        return new trace.colonnade.t11108(self__.results_view, self__.results, self__.owner, self__.p__11090, self__.map__11107, self__.columns, meta11109__$1);
      };
    }(map__11107, map__11107__$1, columns);
    trace.colonnade.t11108.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__11107, map__11107__$1, columns) {
      return function(_11110) {
        var self__ = this;
        var _11110__$1 = this;
        return self__.meta11109;
      };
    }(map__11107, map__11107__$1, columns);
    trace.colonnade.t11108.prototype.om$core$IRender$ = true;
    trace.colonnade.t11108.prototype.om$core$IRender$render$arity$1 = function(map__11107, map__11107__$1, columns) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var vizcols = cljs.core.filter.call(null, new cljs.core.Keyword(null, "visible", "visible", -1024216805), function() {
            var iter__5062__auto__ = function(___$1, map__11107, map__11107__$1, columns) {
              return function trace$colonnade$results_view_$_iter__11111(s__11112) {
                return new cljs.core.LazySeq(null, function(___$1, map__11107, map__11107__$1, columns) {
                  return function() {
                    var s__11112__$1 = s__11112;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__11112__$1);
                      if (temp__4425__auto__) {
                        var s__11112__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__11112__$2)) {
                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11112__$2);
                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                          var b__11114 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                          if (function() {
                            var i__11113 = 0;
                            while (true) {
                              if (i__11113 < size__5061__auto__) {
                                var vec__11117 = cljs.core._nth.call(null, c__5060__auto__, i__11113);
                                var cid = cljs.core.nth.call(null, vec__11117, 0, null);
                                var col = cljs.core.nth.call(null, vec__11117, 1, null);
                                cljs.core.chunk_append.call(null, b__11114, col);
                                var G__11123 = i__11113 + 1;
                                i__11113 = G__11123;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11114), trace$colonnade$results_view_$_iter__11111.call(null, cljs.core.chunk_rest.call(null, s__11112__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11114), null);
                          }
                        } else {
                          var vec__11118 = cljs.core.first.call(null, s__11112__$2);
                          var cid = cljs.core.nth.call(null, vec__11118, 0, null);
                          var col = cljs.core.nth.call(null, vec__11118, 1, null);
                          return cljs.core.cons.call(null, col, trace$colonnade$results_view_$_iter__11111.call(null, cljs.core.rest.call(null, s__11112__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(___$1, map__11107, map__11107__$1, columns), null, null);
              };
            }(___$1, map__11107, map__11107__$1, columns);
            return iter__5062__auto__.call(null, function() {
              var or__4308__auto__ = self__.columns;
              if (cljs.core.truth_(or__4308__auto__)) {
                return or__4308__auto__;
              } else {
                return (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(self__.results);
              }
            }());
          }());
          return cljs.core.apply.call(null, React.DOM.table, {"className":"table table-striped"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.thead, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.tr, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [cljs.core.map.call(null, function(vizcols, ___$1, map__11107, map__11107__$1, columns) {
            return function(col) {
              return cljs.core.apply.call(null, React.DOM.td, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(col)], null)));
            };
          }(vizcols, ___$1, map__11107, map__11107__$1, columns), vizcols)], null)))], null))), cljs.core.apply.call(null, React.DOM.tbody, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var iter__5062__auto__ = function(vizcols, ___$1, map__11107, map__11107__$1, columns) {
              return function trace$colonnade$results_view_$_iter__11119(s__11120) {
                return new cljs.core.LazySeq(null, function(vizcols, ___$1, map__11107, map__11107__$1, columns) {
                  return function() {
                    var s__11120__$1 = s__11120;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__11120__$1);
                      if (temp__4425__auto__) {
                        var s__11120__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__11120__$2)) {
                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11120__$2);
                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                          var b__11122 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                          if (function() {
                            var i__11121 = 0;
                            while (true) {
                              if (i__11121 < size__5061__auto__) {
                                var r = cljs.core._nth.call(null, c__5060__auto__, i__11121);
                                cljs.core.chunk_append.call(null, b__11122, cljs.core.apply.call(null, React.DOM.tr, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.call(null, function(i__11121, r, c__5060__auto__, size__5061__auto__, b__11122, s__11120__$2, temp__4425__auto__, vizcols, ___$1, map__11107, map__11107__$1, columns) {
                                  return function(c, col) {
                                    return cljs.core.apply.call(null, React.DOM.td, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_EQ_.call(null, c, new cljs.core.Keyword(null, "none", "none", 1333468478)) ? cljs.core._EQ_.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col)), "id") ? cljs.core.apply.call(null, React.DOM.a, {"href":om_tools.dom.format_opts.call(null, 
                                    [cljs.core.str("/view/"), cljs.core.str(cljs.core.namespace.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col))), cljs.core.str("/"), cljs.core.str(c)].join("")), "target":"_blank"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null))) : [cljs.core.str(c)].join("") : null], null)));
                                  };
                                }(i__11121, r, c__5060__auto__, size__5061__auto__, b__11122, s__11120__$2, temp__4425__auto__, vizcols, ___$1, map__11107, map__11107__$1, columns), r, vizcols)], null))));
                                var G__11124 = i__11121 + 1;
                                i__11121 = G__11124;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11122), trace$colonnade$results_view_$_iter__11119.call(null, cljs.core.chunk_rest.call(null, s__11120__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11122), null);
                          }
                        } else {
                          var r = cljs.core.first.call(null, s__11120__$2);
                          return cljs.core.cons.call(null, cljs.core.apply.call(null, React.DOM.tr, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.call(null, function(r, s__11120__$2, temp__4425__auto__, vizcols, ___$1, map__11107, map__11107__$1, columns) {
                            return function(c, col) {
                              return cljs.core.apply.call(null, React.DOM.td, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_EQ_.call(null, c, new cljs.core.Keyword(null, "none", "none", 1333468478)) ? cljs.core._EQ_.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col)), "id") ? cljs.core.apply.call(null, React.DOM.a, {"href":om_tools.dom.format_opts.call(null, 
                              [cljs.core.str("/view/"), cljs.core.str(cljs.core.namespace.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col))), cljs.core.str("/"), cljs.core.str(c)].join("")), "target":"_blank"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [c], null))) : [cljs.core.str(c)].join("") : null], null)));
                            };
                          }(r, s__11120__$2, temp__4425__auto__, vizcols, ___$1, map__11107, map__11107__$1, columns), r, vizcols)], null))), trace$colonnade$results_view_$_iter__11119.call(null, cljs.core.rest.call(null, s__11120__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(vizcols, ___$1, map__11107, map__11107__$1, columns), null, null);
              };
            }(vizcols, ___$1, map__11107, map__11107__$1, columns);
            return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "results", "results", -1134170113)).cljs$core$IFn$_invoke$arity$1(self__.results));
          }()], null)))], null)));
        }()], null)));
      };
    }(map__11107, map__11107__$1, columns);
    trace.colonnade.t11108.getBasis = function(map__11107, map__11107__$1, columns) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "results-view", "results-view", -196417820, null), new cljs.core.Symbol(null, "results", "results", 506361414, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "p__11090", "p__11090", -756532731, null), new cljs.core.Symbol(null, "map__11107", "map__11107", -799129084, null), new cljs.core.Symbol(null, "columns", "columns", -655998481, 
        null), new cljs.core.Symbol(null, "meta11109", "meta11109", -1144252441, null)], null);
      };
    }(map__11107, map__11107__$1, columns);
    trace.colonnade.t11108.cljs$lang$type = true;
    trace.colonnade.t11108.cljs$lang$ctorStr = "trace.colonnade/t11108";
    trace.colonnade.t11108.cljs$lang$ctorPrWriter = function(map__11107, map__11107__$1, columns) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11108");
      };
    }(map__11107, map__11107__$1, columns);
    trace.colonnade.__GT_t11108 = function(map__11107, map__11107__$1, columns) {
      return function trace$colonnade$results_view_$___GT_t11108(results_view__$1, results__$1, owner__$1, p__11090__$1, map__11107__$2, columns__$1, meta11109) {
        return new trace.colonnade.t11108(results_view__$1, results__$1, owner__$1, p__11090__$1, map__11107__$2, columns__$1, meta11109);
      };
    }(map__11107, map__11107__$1, columns);
  }
  return new trace.colonnade.t11108(trace$colonnade$results_view, results, owner, p__11090, map__11107__$1, columns, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.query_runner = function trace$colonnade$query_runner(p__11129, owner) {
  var map__11152 = p__11129;
  var map__11152__$1 = cljs.core.seq_QMARK_.call(null, map__11152) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11152) : map__11152;
  var query = cljs.core.get.call(null, map__11152__$1, new cljs.core.Keyword(null, "query", "query", -1288509510));
  var columns = cljs.core.get.call(null, map__11152__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
  var run_query = function(map__11152, map__11152__$1, query, columns) {
    return function trace$colonnade$query_runner_$_run_query(offset, page_size) {
      if (cljs.core.truth_(om.core.get_state.call(null, owner, new cljs.core.Keyword(null, "running", "running", 1554969103)))) {
        return null;
      } else {
        om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "running", "running", 1554969103), true);
        return trace.utils.edn_xhr_post.call(null, "/colonnade/query", new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "query", "query", -1288509510), trace.colonnade.query_list.call(null, query), new cljs.core.Keyword(null, "log", "log", -1595516004), true, new cljs.core.Keyword(null, "rules", "rules", 1198912366), cljs.core.vec.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(query)), new cljs.core.Keyword(null, "timeout", 
        "timeout", -318625318), (new cljs.core.Keyword(null, "timeout", "timeout", -318625318)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, trace.colonnade.app_state)), new cljs.core.Keyword(null, "drop-rows", "drop-rows", 360553133), offset, new cljs.core.Keyword(null, "max-rows", "max-rows", -2131113613), page_size], null), function(map__11152, map__11152__$1, query, columns) {
          return function(p__11159) {
            var map__11160 = p__11159;
            var map__11160__$1 = cljs.core.seq_QMARK_.call(null, map__11160) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11160) : map__11160;
            var status = cljs.core.get.call(null, map__11160__$1, new cljs.core.Keyword(null, "status", "status", -1997798413));
            var results = cljs.core.get.call(null, map__11160__$1, new cljs.core.Keyword(null, "results", "results", -1134170113));
            var response_text = cljs.core.get.call(null, map__11160__$1, new cljs.core.Keyword(null, "responseText", "responseText", 1436974212));
            om.core.set_state_BANG_.call(null, owner, new cljs.core.Keyword(null, "running", "running", 1554969103), false);
            if (cljs.core.truth_(function() {
              var and__4296__auto__ = results;
              if (cljs.core.truth_(and__4296__auto__)) {
                return 199 < status && status < 300;
              } else {
                return and__4296__auto__;
              }
            }())) {
              return om.core.update_state_BANG_.call(null, owner, function(map__11160, map__11160__$1, status, results, response_text, map__11152, map__11152__$1, query, columns) {
                return function(p1__11125_SHARP_) {
                  return cljs.core.assoc.call(null, p1__11125_SHARP_, new cljs.core.Keyword(null, "results", "results", -1134170113), results, new cljs.core.Keyword(null, "error", "error", -978969032), null, new cljs.core.Keyword(null, "page-size", "page-size", 223836073), (new cljs.core.Keyword(null, "max-rows", "max-rows", -2131113613)).cljs$core$IFn$_invoke$arity$1(results), new cljs.core.Keyword(null, "offset", "offset", 296498311), (new cljs.core.Keyword(null, "drop-rows", "drop-rows", 360553133)).cljs$core$IFn$_invoke$arity$1(results));
                };
              }(map__11160, map__11160__$1, status, results, response_text, map__11152, map__11152__$1, query, columns));
            } else {
              return om.core.update_state_BANG_.call(null, owner, function(map__11160, map__11160__$1, status, results, response_text, map__11152, map__11152__$1, query, columns) {
                return function(p1__11126_SHARP_) {
                  return cljs.core.assoc.call(null, p1__11126_SHARP_, new cljs.core.Keyword(null, "error", "error", -978969032), cljs.core.truth_(cljs.core.re_find.call(null, /TimeoutException/, response_text)) ? "Query timed out, consider retrying with longer timeout?" : [cljs.core.str("Error "), cljs.core.str(status)].join(""), new cljs.core.Keyword(null, "results", "results", -1134170113), null);
                };
              }(map__11160, map__11160__$1, status, results, response_text, map__11152, map__11152__$1, query, columns));
            }
          };
        }(map__11152, map__11152__$1, query, columns));
      }
    };
  }(map__11152, map__11152__$1, query, columns);
  if (typeof trace.colonnade.t11161 !== "undefined") {
  } else {
    trace.colonnade.t11161 = function(query_runner, p__11129, owner, map__11152, query, columns, run_query, meta11162) {
      this.query_runner = query_runner;
      this.p__11129 = p__11129;
      this.owner = owner;
      this.map__11152 = map__11152;
      this.query = query;
      this.columns = columns;
      this.run_query = run_query;
      this.meta11162 = meta11162;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11161.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(map__11152, map__11152__$1, query, columns) {
      return function(_11163, meta11162__$1) {
        var self__ = this;
        var _11163__$1 = this;
        return new trace.colonnade.t11161(self__.query_runner, self__.p__11129, self__.owner, self__.map__11152, self__.query, self__.columns, self__.run_query, meta11162__$1);
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.prototype.cljs$core$IMeta$_meta$arity$1 = function(map__11152, map__11152__$1, query, columns) {
      return function(_11163) {
        var self__ = this;
        var _11163__$1 = this;
        return self__.meta11162;
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.prototype.om$core$IInitState$ = true;
    trace.colonnade.t11161.prototype.om$core$IInitState$init_state$arity$1 = function(map__11152, map__11152__$1, query, columns) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "results", "results", -1134170113), null, new cljs.core.Keyword(null, "error", "error", -978969032), null, new cljs.core.Keyword(null, "count", "count", 2139924085), null, new cljs.core.Keyword(null, "page-size", "page-size", 223836073), 100, new cljs.core.Keyword(null, "offset", "offset", 296498311), 0, new cljs.core.Keyword(null, "show-export", "show-export", -1187594353), false, new cljs.core.Keyword(null, "export-format", 
        "export-format", 979385120), "csv", new cljs.core.Keyword(null, "keyset-column", "keyset-column", -631344901), "col1"], null);
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.prototype.om$core$IWillMount$ = true;
    trace.colonnade.t11161.prototype.om$core$IWillMount$will_mount$arity$1 = function(map__11152, map__11152__$1, query, columns) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.run_query.call(null, 0, 100);
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.prototype.om$core$IRenderState$ = true;
    trace.colonnade.t11161.prototype.om$core$IRenderState$render_state$arity$2 = function(map__11152, map__11152__$1, query, columns) {
      return function(_, p__11164) {
        var self__ = this;
        var map__11165 = p__11164;
        var map__11165__$1 = cljs.core.seq_QMARK_.call(null, map__11165) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11165) : map__11165;
        var running = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "running", "running", 1554969103));
        var results = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "results", "results", -1134170113));
        var error = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "error", "error", -978969032));
        var page_size = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "page-size", "page-size", 223836073));
        var offset = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "offset", "offset", 296498311));
        var show_export = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "show-export", "show-export", -1187594353));
        var export_format = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "export-format", "export-format", 979385120));
        var keyset_column = cljs.core.get.call(null, map__11165__$1, new cljs.core.Keyword(null, "keyset-column", "keyset-column", -631344901));
        var ___$1 = this;
        return om_tools.dom.element.call(null, React.DOM.div, om_tools.dom.element.call(null, React.DOM.h2, cljs.core.truth_(running) ? "Running" : "Results", cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(error) ? om_tools.dom.element.call(null, React.DOM.div, error, cljs.core.PersistentVector.EMPTY) : null, cljs.core.truth_(running) ? React.DOM.img({"src":"img/spinner_192.gif"}) : cljs.core.truth_(results) ? 
        function() {
          var export_keyset = (new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, ["keyset", null, "acets", null, "ace", null], null), null)).call(null, export_format);
          var back_disabled = cljs.core.truth_(function() {
            var or__4308__auto__ = running;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return offset < 1;
            }
          }()) ? "yes" : null;
          var fwd_disabled = cljs.core.truth_(function() {
            var or__4308__auto__ = running;
            if (cljs.core.truth_(or__4308__auto__)) {
              return or__4308__auto__;
            } else {
              return offset + page_size >= (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(results);
            }
          }()) ? "yes" : null;
          return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, om.core.build.call(null, trace.colonnade.results_view, results, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "columns", "columns", 1998437288), self__.columns], null)], null))), om_tools.dom.element.call(null, React.DOM.div, cljs.core.apply.call(null, React.DOM.button, 
          {"onClick":om_tools.dom.format_opts.call(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function() {
              return self__.run_query.call(null, 0, page_size);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns)), "disabled":om_tools.dom.format_opts.call(null, back_disabled)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-fast-backward"})], null))), new cljs.core.PersistentVector(null, 9, 5, 
          cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.button, {"onClick":om_tools.dom.format_opts.call(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function() {
              return self__.run_query.call(null, function() {
                var x__4620__auto__ = 0;
                var y__4621__auto__ = offset - page_size;
                return x__4620__auto__ > y__4621__auto__ ? x__4620__auto__ : y__4621__auto__;
              }(), page_size);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns)), "disabled":om_tools.dom.format_opts.call(null, back_disabled)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-backward"})], null))), "Showing ", offset + 1, "..", offset + cljs.core.count.call(null, 
          (new cljs.core.Keyword(null, "results", "results", -1134170113)).cljs$core$IFn$_invoke$arity$1(results)), " of ", (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(results), cljs.core.apply.call(null, React.DOM.button, {"onClick":om_tools.dom.format_opts.call(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, 
          map__11152__$1, query, columns) {
            return function() {
              return self__.run_query.call(null, offset + page_size, page_size);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns)), "disabled":om_tools.dom.format_opts.call(null, fwd_disabled)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-forward"})], null))), cljs.core.apply.call(null, React.DOM.button, {"onClick":om_tools.dom.format_opts.call(null, 
          function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function() {
              return self__.run_query.call(null, page_size * cljs.core.quot.call(null, (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(results) - 1, page_size), page_size);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns)), "disabled":om_tools.dom.format_opts.call(null, fwd_disabled)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.i({"className":"fa fa-fast-forward"})], null)))], null))), cljs.core.apply.call(null, React.DOM.div, 
          {"className":"panel panel-default"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.div({"className":"panel-heading", "onClick":om_tools.dom.format_opts.call(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function() {
              return om.core.update_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "show-export", "show-export", -1187594353), cljs.core.not);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns))}, "Export"), cljs.core.apply.call(null, React.DOM.div, {"className":"panel-body", "style":{"display":om_tools.dom.format_opts.call(null, cljs.core.truth_(show_export) ? "block" : "none")}}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
          [cljs.core.apply.call(null, React.DOM.form, {"action":"/colonnade/query", "method":"POST", "encType":"multipart/form-data"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.input.call(null, {"type":"hidden", "name":"__anti-forgery-token", "value":om_tools.dom.format_opts.call(null, trace_token)}), om.dom.input.call(null, {"type":"hidden", "name":"columns", "value":om_tools.dom.format_opts.call(null, cljs.core.pr_str.call(null, 
          self__.columns))}), om.dom.input.call(null, {"type":"hidden", "name":"query", "value":om_tools.dom.format_opts.call(null, cljs.core.pr_str.call(null, trace.colonnade.query_list.call(null, cljs.core.truth_(export_keyset) ? cljs.core.assoc.call(null, self__.query, new cljs.core.Keyword(null, "find", "find", 496279456), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, [cljs.core.str("?"), cljs.core.str(keyset_column), cljs.core.str("-id")].join(""))], 
          null)) : self__.query)))}), om.dom.input.call(null, {"type":"hidden", "name":"rules", "value":om_tools.dom.format_opts.call(null, [cljs.core.str(cljs.core.vec.call(null, (new cljs.core.Keyword(null, "rules", "rules", 1198912366)).cljs$core$IFn$_invoke$arity$1(self__.query)))].join(""))}), om.dom.input.call(null, {"type":"hidden", "name":"log", "value":"true"}), cljs.core.apply.call(null, React.DOM.select, {"name":"format", "value":om_tools.dom.format_opts.call(null, export_format), "onChange":om_tools.dom.format_opts.call(null, 
          function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function(p1__11127_SHARP_) {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "export-format", "export-format", 979385120), p1__11127_SHARP_.target.value);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [om.dom.option.call(null, {"value":"csv"}, "CSV"), om.dom.option.call(null, {"value":"keyset"}, ".ace keyset"), om.dom.option.call(null, {"value":"ace"}, ".ace dump"), 
          om.dom.option.call(null, {"value":"acets"}, ".ace with timestamps")], null))), cljs.core.apply.call(null, React.DOM.select, {"name":"keyset-column", "value":om_tools.dom.format_opts.call(null, keyset_column), "style":{"display":om_tools.dom.format_opts.call(null, cljs.core.truth_(export_keyset) ? "inline" : "none")}, "onChange":om_tools.dom.format_opts.call(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, 
          show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
            return function(p1__11128_SHARP_) {
              return om.core.set_state_BANG_.call(null, self__.owner, new cljs.core.Keyword(null, "keyset-column", "keyset-column", -631344901), p1__11128_SHARP_.target.value);
            };
          }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns))}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
            var iter__5062__auto__ = function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
              return function trace$colonnade$query_runner_$_iter__11166(s__11167) {
                return new cljs.core.LazySeq(null, function(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns) {
                  return function() {
                    var s__11167__$1 = s__11167;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__11167__$1);
                      if (temp__4425__auto__) {
                        var s__11167__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__11167__$2)) {
                          var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11167__$2);
                          var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                          var b__11169 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                          if (function() {
                            var i__11168 = 0;
                            while (true) {
                              if (i__11168 < size__5061__auto__) {
                                var vec__11172 = cljs.core._nth.call(null, c__5060__auto__, i__11168);
                                var id = cljs.core.nth.call(null, vec__11172, 0, null);
                                var col = cljs.core.nth.call(null, vec__11172, 1, null);
                                cljs.core.chunk_append.call(null, b__11169, cljs.core._EQ_.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col)), "id") ? cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, id)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(col)], 
                                null))) : null);
                                var G__11174 = i__11168 + 1;
                                i__11168 = G__11174;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11169), trace$colonnade$query_runner_$_iter__11166.call(null, cljs.core.chunk_rest.call(null, s__11167__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11169), null);
                          }
                        } else {
                          var vec__11173 = cljs.core.first.call(null, s__11167__$2);
                          var id = cljs.core.nth.call(null, vec__11173, 0, null);
                          var col = cljs.core.nth.call(null, vec__11173, 1, null);
                          return cljs.core.cons.call(null, cljs.core._EQ_.call(null, cljs.core.name.call(null, (new cljs.core.Keyword(null, "attribute", "attribute", -2074029119)).cljs$core$IFn$_invoke$arity$1(col)), "id") ? cljs.core.apply.call(null, om.dom.option, {"value":om_tools.dom.format_opts.call(null, id)}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(col)], 
                          null))) : null, trace$colonnade$query_runner_$_iter__11166.call(null, cljs.core.rest.call(null, s__11167__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns), null, null);
              };
            }(export_keyset, back_disabled, fwd_disabled, ___$1, map__11165, map__11165__$1, running, results, error, page_size, offset, show_export, export_format, keyset_column, map__11152, map__11152__$1, query, columns);
            return iter__5062__auto__.call(null, self__.columns);
          }()], null))), om.dom.input.call(null, {"type":"submit"})], null)))], null)))], null))));
        }() : null], null));
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.getBasis = function(map__11152, map__11152__$1, query, columns) {
      return function() {
        return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "query-runner", "query-runner", 2001161127, null), new cljs.core.Symbol(null, "p__11129", "p__11129", -1827292118, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "map__11152", "map__11152", 1378412967, null), new cljs.core.Symbol(null, "query", "query", 352022017, null), new cljs.core.Symbol(null, "columns", "columns", -655998481, 
        null), new cljs.core.Symbol(null, "run-query", "run-query", -194083325, null), new cljs.core.Symbol(null, "meta11162", "meta11162", -1226847265, null)], null);
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.t11161.cljs$lang$type = true;
    trace.colonnade.t11161.cljs$lang$ctorStr = "trace.colonnade/t11161";
    trace.colonnade.t11161.cljs$lang$ctorPrWriter = function(map__11152, map__11152__$1, query, columns) {
      return function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
        return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11161");
      };
    }(map__11152, map__11152__$1, query, columns);
    trace.colonnade.__GT_t11161 = function(map__11152, map__11152__$1, query, columns) {
      return function trace$colonnade$query_runner_$___GT_t11161(query_runner__$1, p__11129__$1, owner__$1, map__11152__$2, query__$1, columns__$1, run_query__$1, meta11162) {
        return new trace.colonnade.t11161(query_runner__$1, p__11129__$1, owner__$1, map__11152__$2, query__$1, columns__$1, run_query__$1, meta11162);
      };
    }(map__11152, map__11152__$1, query, columns);
  }
  return new trace.colonnade.t11161(trace$colonnade$query_runner, p__11129, owner, map__11152__$1, query, columns, run_query, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.colonnade_view = function trace$colonnade$colonnade_view(app, owner) {
  if (typeof trace.colonnade.t11190 !== "undefined") {
  } else {
    trace.colonnade.t11190 = function(colonnade_view, app, owner, meta11191) {
      this.colonnade_view = colonnade_view;
      this.app = app;
      this.owner = owner;
      this.meta11191 = meta11191;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    trace.colonnade.t11190.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11192, meta11191__$1) {
      var self__ = this;
      var _11192__$1 = this;
      return new trace.colonnade.t11190(self__.colonnade_view, self__.app, self__.owner, meta11191__$1);
    };
    trace.colonnade.t11190.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11192) {
      var self__ = this;
      var _11192__$1 = this;
      return self__.meta11191;
    };
    trace.colonnade.t11190.prototype.om$core$IWillMount$ = true;
    trace.colonnade.t11190.prototype.om$core$IWillMount$will_mount$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return trace.utils.edn_xhr.call(null, "/schema", function(___$1) {
        return function(resp) {
          return om.core.update_BANG_.call(null, self__.app, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "schema", "schema", -1582001791), trace.utils.process_schema.call(null, resp), new cljs.core.Keyword(null, "timeout", "timeout", -318625318), 5E3, new cljs.core.Keyword(null, "col-seed", "col-seed", -1529862651), 1, new cljs.core.Keyword(null, "columns", "columns", 1998437288), new cljs.core.PersistentArrayMap(null, 1, ["col1", cljs.core.assoc.call(null, trace.colonnade.column_template, 
          new cljs.core.Keyword(null, "root", "root", -448657453), true)], null)], null));
        };
      }(___$1));
    };
    trace.colonnade.t11190.prototype.om$core$IRender$ = true;
    trace.colonnade.t11190.prototype.om$core$IRender$render$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not.call(null, (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(self__.app)) ? React.DOM.h2(null, "Loading schema...") : cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [cljs.core.apply.call(null, React.DOM.div, null, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        var iter__5062__auto__ = function(___$1) {
          return function trace$colonnade$colonnade_view_$_iter__11193(s__11194) {
            return new cljs.core.LazySeq(null, function(___$1) {
              return function() {
                var s__11194__$1 = s__11194;
                while (true) {
                  var temp__4425__auto__ = cljs.core.seq.call(null, s__11194__$1);
                  if (temp__4425__auto__) {
                    var s__11194__$2 = temp__4425__auto__;
                    if (cljs.core.chunked_seq_QMARK_.call(null, s__11194__$2)) {
                      var c__5060__auto__ = cljs.core.chunk_first.call(null, s__11194__$2);
                      var size__5061__auto__ = cljs.core.count.call(null, c__5060__auto__);
                      var b__11196 = cljs.core.chunk_buffer.call(null, size__5061__auto__);
                      if (function() {
                        var i__11195 = 0;
                        while (true) {
                          if (i__11195 < size__5061__auto__) {
                            var vec__11199 = cljs.core._nth.call(null, c__5060__auto__, i__11195);
                            var k = cljs.core.nth.call(null, vec__11199, 0, null);
                            var col = cljs.core.nth.call(null, vec__11199, 1, null);
                            cljs.core.chunk_append.call(null, b__11196, om.core.build.call(null, trace.colonnade.column_def_view, col));
                            var G__11205 = i__11195 + 1;
                            i__11195 = G__11205;
                            continue;
                          } else {
                            return true;
                          }
                          break;
                        }
                      }()) {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11196), trace$colonnade$colonnade_view_$_iter__11193.call(null, cljs.core.chunk_rest.call(null, s__11194__$2)));
                      } else {
                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11196), null);
                      }
                    } else {
                      var vec__11200 = cljs.core.first.call(null, s__11194__$2);
                      var k = cljs.core.nth.call(null, vec__11200, 0, null);
                      var col = cljs.core.nth.call(null, vec__11200, 1, null);
                      return cljs.core.cons.call(null, om.core.build.call(null, trace.colonnade.column_def_view, col), trace$colonnade$colonnade_view_$_iter__11193.call(null, cljs.core.rest.call(null, s__11194__$2)));
                    }
                  } else {
                    return null;
                  }
                  break;
                }
              };
            }(___$1), null, null);
          };
        }(___$1);
        return iter__5062__auto__.call(null, (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(self__.app));
      }()], null))), React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(___$1) {
        return function() {
          return om.core.transact_BANG_.call(null, self__.app, function(___$1) {
            return function(p__11201) {
              var map__11202 = p__11201;
              var map__11202__$1 = cljs.core.seq_QMARK_.call(null, map__11202) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11202) : map__11202;
              var app__$1 = map__11202__$1;
              var col_seed = cljs.core.get.call(null, map__11202__$1, new cljs.core.Keyword(null, "col-seed", "col-seed", -1529862651));
              return cljs.core.assoc.call(null, app__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288), new cljs.core.PersistentArrayMap(null, 1, ["col1", cljs.core.assoc.call(null, trace.colonnade.column_template, new cljs.core.Keyword(null, "root", "root", -448657453), true)], null), new cljs.core.Keyword(null, "col-seed", "col-seed", -1529862651), 1);
            };
          }(___$1));
        };
      }(___$1)), "style":{"float":"right"}}, "Clear query"), React.DOM.button({"onClick":om_tools.dom.format_opts.call(null, function(___$1) {
        return function() {
          return om.core.transact_BANG_.call(null, self__.app, function(___$1) {
            return function(p__11203) {
              var map__11204 = p__11203;
              var map__11204__$1 = cljs.core.seq_QMARK_.call(null, map__11204) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11204) : map__11204;
              var app__$1 = map__11204__$1;
              var columns = cljs.core.get.call(null, map__11204__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288));
              var col_seed = cljs.core.get.call(null, map__11204__$1, new cljs.core.Keyword(null, "col-seed", "col-seed", -1529862651));
              var cid = col_seed + 1;
              return cljs.core.assoc.call(null, app__$1, new cljs.core.Keyword(null, "columns", "columns", 1998437288), cljs.core.assoc.call(null, columns, [cljs.core.str("col"), cljs.core.str(cid)].join(""), cljs.core.assoc.call(null, trace.colonnade.column_template, new cljs.core.Keyword(null, "name", "name", 1843675177), [cljs.core.str("Column "), cljs.core.str(cid)].join(""), new cljs.core.Keyword(null, "from", "from", 1815293044), "col1")), new cljs.core.Keyword(null, "col-seed", "col-seed", 
              -1529862651), cid);
            };
          }(___$1));
        };
      }(___$1))}, "New column"), React.DOM.button({"disabled":om_tools.dom.format_opts.call(null, cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "queryStatus", "queryStatus", 68619346)).cljs$core$IFn$_invoke$arity$1(self__.app), new cljs.core.Keyword(null, "running", "running", 1554969103))), "onClick":om_tools.dom.format_opts.call(null, function(___$1) {
        return function(___$2) {
          var cols = (new cljs.core.Keyword(null, "columns", "columns", 1998437288)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app));
          var schema = (new cljs.core.Keyword(null, "schema", "schema", -1582001791)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.app));
          var q = trace.colonnade.get_query.call(null, cols, schema);
          return om.core.update_BANG_.call(null, self__.app, new cljs.core.Keyword(null, "runner", "runner", 1945441304), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "query", "query", -1288509510), q, new cljs.core.Keyword(null, "qid", "qid", 528505110), [cljs.core.str("query"), cljs.core.str(cljs.core.swap_BANG_.call(null, trace.colonnade.query_seed, cljs.core.inc))].join(""), new cljs.core.Keyword(null, "columns", "columns", 1998437288), cols], null));
        };
      }(___$1))}, "Run query"), cljs.core.apply.call(null, React.DOM.form, {"className":"form-inline"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.call(null, React.DOM.div, {"className":"form-group"}, cljs.core.flatten.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [React.DOM.label(null, "Timeout (ms): "), om.core.build.call(null, trace.colonnade.input_int, self__.app, 
      new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "opts", "opts", 155075701), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "timeout", "timeout", -318625318)], null)], null))], null)))], null))), React.DOM.h2(null, "Query"), om.core.build.call(null, trace.colonnade.query_view, self__.app), function() {
        var temp__4423__auto__ = (new cljs.core.Keyword(null, "runner", "runner", 1945441304)).cljs$core$IFn$_invoke$arity$1(self__.app);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var runner = temp__4423__auto__;
          return om.core.build.call(null, trace.colonnade.query_runner, runner, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), new cljs.core.Keyword(null, "qid", "qid", 528505110)], null));
        } else {
          return null;
        }
      }()], null)))], null)));
    };
    trace.colonnade.t11190.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "colonnade-view", "colonnade-view", -950207541, null), new cljs.core.Symbol(null, "app", "app", 1079569820, null), new cljs.core.Symbol(null, "owner", "owner", 1247919588, null), new cljs.core.Symbol(null, "meta11191", "meta11191", 1279950958, null)], null);
    };
    trace.colonnade.t11190.cljs$lang$type = true;
    trace.colonnade.t11190.cljs$lang$ctorStr = "trace.colonnade/t11190";
    trace.colonnade.t11190.cljs$lang$ctorPrWriter = function(this__4887__auto__, writer__4888__auto__, opt__4889__auto__) {
      return cljs.core._write.call(null, writer__4888__auto__, "trace.colonnade/t11190");
    };
    trace.colonnade.__GT_t11190 = function trace$colonnade$colonnade_view_$___GT_t11190(colonnade_view__$1, app__$1, owner__$1, meta11191) {
      return new trace.colonnade.t11190(colonnade_view__$1, app__$1, owner__$1, meta11191);
    };
  }
  return new trace.colonnade.t11190(trace$colonnade$colonnade_view, app, owner, cljs.core.PersistentArrayMap.EMPTY);
};
trace.colonnade.init_coll = function trace$colonnade$init_coll() {
  return om.core.root.call(null, trace.colonnade.colonnade_view, trace.colonnade.app_state, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "target", "target", 253001721), goog.dom.getElement("table-maker")], null));
};

//# sourceMappingURL=main.js.map